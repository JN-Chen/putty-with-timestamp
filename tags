!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
ABORT	contrib/cygtermd/telnet.c	40;"	d	file:
ABORT	telnet.c	36;"	d	file:
ABOUT_TO	terminal.h	/^	NO_SELECTION, ABOUT_TO, DRAGGING, SELECTED$/;"	e	enum:terminal_tag::__anon111
ACLOCAL	Makefile	/^ACLOCAL = ${SHELL} \/media\/B\/cjn\/putty-0.70\/missing aclocal-1.15$/;"	m
ACLOCAL_M4	Makefile	/^ACLOCAL_M4 = $(top_srcdir)\/aclocal.m4$/;"	m
ACTIVE	contrib/cygtermd/telnet.c	/^	REQUESTED, ACTIVE, INACTIVE, REALLY_INACTIVE$/;"	e	enum:Opt::__anon12	file:
ACTIVE	telnet.c	/^	REQUESTED, ACTIVE, INACTIVE, REALLY_INACTIVE$/;"	e	enum:Opt::__anon105	file:
ADDRTYPE_IPV4	putty.h	/^    ADDRTYPE_UNSPEC, ADDRTYPE_IPV4, ADDRTYPE_IPV6, ADDRTYPE_NAME$/;"	e	enum:__anon65
ADDRTYPE_IPV6	putty.h	/^    ADDRTYPE_UNSPEC, ADDRTYPE_IPV4, ADDRTYPE_IPV6, ADDRTYPE_NAME$/;"	e	enum:__anon65
ADDRTYPE_NAME	putty.h	/^    ADDRTYPE_UNSPEC, ADDRTYPE_IPV4, ADDRTYPE_IPV6, ADDRTYPE_NAME$/;"	e	enum:__anon65
ADDRTYPE_UNSPEC	putty.h	/^    ADDRTYPE_UNSPEC, ADDRTYPE_IPV4, ADDRTYPE_IPV6, ADDRTYPE_NAME$/;"	e	enum:__anon65
ADDTOBUF	telnet.c	539;"	d	file:
ADD_ROUND_KEY_4	sshaes.c	654;"	d	file:
ADD_ROUND_KEY_6	sshaes.c	656;"	d	file:
ADD_ROUND_KEY_8	sshaes.c	659;"	d	file:
ADD_SPECIALS	ssh.c	11639;"	d	file:
ADD_SPECIALS	ssh.c	11697;"	d	file:
AESContext	sshaes.c	/^struct AESContext {$/;"	s	file:
AESContext	sshaes.c	/^typedef struct AESContext AESContext;$/;"	t	typeref:struct:AESContext	file:
AGENT_COPYDATA_ID	windows/winpgnt.c	37;"	d	file:
AGENT_COPYDATA_ID	windows/winpgntc.c	16;"	d	file:
AGENT_MAX_MSGLEN	pageant.h	13;"	d
AL	minibidi.c	/^    AL,$/;"	e	enum:__anon37	file:
AMTAR	Makefile	/^AMTAR = $${TAR-tar}$/;"	m
AM_CFLAGS	Makefile	/^AM_CFLAGS = $(GTK_CFLAGS) $(COMPAT) $(XFLAGS) $(WARNINGOPTS)$/;"	m
AM_CPPFLAGS	Makefile	/^AM_CPPFLAGS = -I$(srcdir)\/.\/ -I$(srcdir)\/charset\/ -I$(srcdir)\/windows\/ \\$/;"	m
AM_DEFAULT_VERBOSITY	Makefile	/^AM_DEFAULT_VERBOSITY = 1$/;"	m
AM_RECURSIVE_TARGETS	Makefile	/^AM_RECURSIVE_TARGETS = cscope$/;"	m
AM_V_AR	Makefile	/^AM_V_AR = $(am__v_AR_$(V))$/;"	m
AM_V_CC	Makefile	/^AM_V_CC = $(am__v_CC_$(V))$/;"	m
AM_V_CCLD	Makefile	/^AM_V_CCLD = $(am__v_CCLD_$(V))$/;"	m
AM_V_GEN	Makefile	/^AM_V_GEN = $(am__v_GEN_$(V))$/;"	m
AM_V_P	Makefile	/^AM_V_P = $(am__v_P_$(V))$/;"	m
AM_V_at	Makefile	/^AM_V_at = $(am__v_at_$(V))$/;"	m
AM_V_lt	Makefile	/^AM_V_lt = $(am__v_lt_$(V))$/;"	m
AN	minibidi.c	/^    AN,$/;"	e	enum:__anon37	file:
ANSI	terminal.h	178;"	d
ANSI_QUE	terminal.h	179;"	d
AO	contrib/cygtermd/telnet.c	34;"	d	file:
AO	telnet.c	30;"	d	file:
APIEXTRA	ssh.h	74;"	d
APIEXTRA	ssh.h	76;"	d
APPNAME	windows/winpgnt.c	50;"	d	file:
AR	Makefile	/^AR = ar$/;"	m
ARFLAGS	Makefile	/^ARFLAGS = cru$/;"	m
ARGS_MAX	terminal.h	172;"	d
ARG_DEFAULT	terminal.h	173;"	d
ARG_INT	unix/gtkfont.c	299;"	d	file:
ARG_INT	unix/gtkfont.c	308;"	d	file:
ARG_STR	unix/gtkfont.c	297;"	d	file:
ARG_STR	unix/gtkfont.c	306;"	d	file:
ASN1_CLASS_APPLICATION	import.c	163;"	d	file:
ASN1_CLASS_CONTEXT_SPECIFIC	import.c	164;"	d	file:
ASN1_CLASS_MASK	import.c	166;"	d	file:
ASN1_CLASS_PRIVATE	import.c	165;"	d	file:
ASN1_CLASS_UNIVERSAL	import.c	162;"	d	file:
ASN1_CONSTRUCTED	import.c	169;"	d	file:
ASN1_LEN	sshrsa.c	813;"	d	file:
ASSERT	unix/gtkcomm.c	49;"	d	file:
ATOFFSET	dialog.h	9;"	d
ATTR_BGMASK	putty.h	114;"	d
ATTR_BGSHIFT	putty.h	117;"	d
ATTR_BLINK	putty.h	112;"	d
ATTR_BOLD	putty.h	109;"	d
ATTR_COLOURS	putty.h	115;"	d
ATTR_DEFAULT	putty.h	140;"	d
ATTR_DEFBG	putty.h	139;"	d
ATTR_DEFFG	putty.h	138;"	d
ATTR_FGMASK	putty.h	113;"	d
ATTR_FGSHIFT	putty.h	116;"	d
ATTR_INVALID	putty.h	80;"	d
ATTR_NARROW	putty.h	107;"	d
ATTR_REVERSE	putty.h	111;"	d
ATTR_UNDER	putty.h	110;"	d
ATTR_WIDE	putty.h	108;"	d
AUTO	putty.h	/^    FORCE_ON, FORCE_OFF, AUTO$/;"	e	enum:__anon53
AUTOCONF	Makefile	/^AUTOCONF = ${SHELL} \/media\/B\/cjn\/putty-0.70\/missing autoconf$/;"	m
AUTOHEADER	Makefile	/^AUTOHEADER = ${SHELL} \/media\/B\/cjn\/putty-0.70\/missing autoheader$/;"	m
AUTOMAKE	Makefile	/^AUTOMAKE = ${SHELL} \/media\/B\/cjn\/putty-0.70\/missing automake-1.15$/;"	m
AUTOMAKE_OPTIONS	Makefile	/^AUTOMAKE_OPTIONS = subdir-objects$/;"	m
AWK	Makefile	/^AWK = gawk$/;"	m
AYT	contrib/cygtermd/telnet.c	33;"	d	file:
AYT	telnet.c	29;"	d	file:
AbortList	windows/winjump.c	/^    HRESULT ( __stdcall *AbortList )($/;"	m	struct:ICustomDestinationListVtbl	file:
AboutProc	windows/windlg.c	/^static INT_PTR CALLBACK AboutProc(HWND hwnd, UINT msg,$/;"	f	file:
AboutProc	windows/winpgen.c	/^static INT_PTR CALLBACK AboutProc(HWND hwnd, UINT msg,$/;"	f	file:
AboutProc	windows/winpgnt.c	/^static INT_PTR CALLBACK AboutProc(HWND hwnd, UINT msg,$/;"	f	file:
Actual_Socket	unix/uxnet.c	/^typedef struct Socket_tag *Actual_Socket;$/;"	t	typeref:struct:Socket_tag	file:
Actual_Socket	windows/winnet.c	/^typedef struct Socket_tag *Actual_Socket;$/;"	t	typeref:struct:Socket_tag	file:
AddFromArray	windows/winjump.c	/^    HRESULT ( __stdcall *AddFromArray )($/;"	m	struct:IObjectCollectionVtbl	file:
AddObject	windows/winjump.c	/^    HRESULT ( __stdcall *AddObject )($/;"	m	struct:IObjectCollectionVtbl	file:
AddRef	windows/winjump.c	/^    ULONG ( __stdcall *AddRef )($/;"	m	struct:ICustomDestinationListVtbl	file:
AddRef	windows/winjump.c	/^    ULONG ( __stdcall *AddRef )($/;"	m	struct:IObjectArrayVtbl	file:
AddRef	windows/winjump.c	/^    ULONG ( __stdcall *AddRef )($/;"	m	struct:IObjectCollectionVtbl	file:
AddRef	windows/winjump.c	/^    ULONG ( __stdcall *AddRef )($/;"	m	struct:IPropertyStoreVtbl	file:
AddRef	windows/winjump.c	/^    ULONG ( __stdcall *AddRef )($/;"	m	struct:IShellLinkVtbl	file:
AddTrayIcon	windows/winpgnt.c	/^static BOOL AddTrayIcon(HWND hwnd)$/;"	f	file:
AddUserTasks	windows/winjump.c	/^    HRESULT ( __stdcall *AddUserTasks )($/;"	m	struct:ICustomDestinationListVtbl	file:
AppendCategory	windows/winjump.c	/^    HRESULT ( __stdcall *AppendCategory )($/;"	m	struct:ICustomDestinationListVtbl	file:
AppendKnownCategory	windows/winjump.c	/^    HRESULT ( __stdcall *AppendKnownCategory )($/;"	m	struct:ICustomDestinationListVtbl	file:
ArcfourContext	ssharcf.c	/^} ArcfourContext;$/;"	t	typeref:struct:__anon72	file:
B	minibidi.c	/^    B,$/;"	e	enum:__anon37	file:
B	ssh.h	/^    struct ec_point B;$/;"	m	struct:ec_ecurve	typeref:struct:ec_ecurve::ec_point
BADCHARS	doc/Makefile	/^BADCHARS=$(findstring :,$(SVNVERSION))$(findstring S,$(SVNVERSION))$/;"	m
BASE64_TOINT	sshpubk.c	18;"	d	file:
BELL_DEFAULT	putty.h	/^    BELL_DISABLED, BELL_DEFAULT, BELL_VISUAL, BELL_WAVEFILE, BELL_PCSPEAKER$/;"	e	enum:__anon58
BELL_DISABLED	putty.h	/^    BELL_DISABLED, BELL_DEFAULT, BELL_VISUAL, BELL_WAVEFILE, BELL_PCSPEAKER$/;"	e	enum:__anon58
BELL_PCSPEAKER	putty.h	/^    BELL_DISABLED, BELL_DEFAULT, BELL_VISUAL, BELL_WAVEFILE, BELL_PCSPEAKER$/;"	e	enum:__anon58
BELL_VISUAL	putty.h	/^    BELL_DISABLED, BELL_DEFAULT, BELL_VISUAL, BELL_WAVEFILE, BELL_PCSPEAKER$/;"	e	enum:__anon58
BELL_WAVEFILE	putty.h	/^    BELL_DISABLED, BELL_DEFAULT, BELL_VISUAL, BELL_WAVEFILE, BELL_PCSPEAKER$/;"	e	enum:__anon58
BIGNUM_INTERNAL	sshbn.c	16;"	d	file:
BIGNUM_INT_BITS	sshbn.h	122;"	d
BIGNUM_INT_BITS	sshbn.h	130;"	d
BIGNUM_INT_BITS	sshbn.h	142;"	d
BIGNUM_INT_BITS	sshbn.h	158;"	d
BIGNUM_INT_BITS	sshbn.h	67;"	d
BIGNUM_INT_BITS	sshbn.h	88;"	d
BIGNUM_INT_BYTES	sshbn.h	167;"	d
BIGNUM_INT_MASK	sshbn.h	169;"	d
BIGNUM_TOP_BIT	sshbn.h	168;"	d
BINARY_VERSION	version.h	5;"	d
BIND_GSS_FN	unix/uxgss.c	142;"	d	file:
BIND_GSS_FN	unix/uxgss.c	154;"	d	file:
BIND_GSS_FN	unix/uxgss.c	38;"	d	file:
BIND_GSS_FN	unix/uxgss.c	50;"	d	file:
BIND_GSS_FN	windows/wingss.c	136;"	d	file:
BIND_GSS_FN	windows/wingss.c	148;"	d	file:
BIND_GSS_FN	windows/wingss.c	216;"	d	file:
BIND_GSS_FN	windows/wingss.c	228;"	d	file:
BLKSIZE	sshmd5.c	116;"	d	file:
BLKSIZE	sshsh256.c	94;"	d	file:
BLKSIZE	sshsh512.c	11;"	d	file:
BN	minibidi.c	/^    BN,$/;"	e	enum:__anon37	file:
BOLD_FONT	windows/window.c	/^    BOLD_NONE, BOLD_SHADOW, BOLD_FONT$/;"	e	enum:__anon136	file:
BOLD_NONE	windows/window.c	/^    BOLD_NONE, BOLD_SHADOW, BOLD_FONT$/;"	e	enum:__anon136	file:
BOLD_SHADOW	windows/window.c	/^    BOLD_NONE, BOLD_SHADOW, BOLD_FONT$/;"	e	enum:__anon136	file:
BOXFLAGS	windows/winstuff.h	88;"	d
BOXRESULT	windows/winstuff.h	89;"	d
BREAK	contrib/cygtermd/telnet.c	36;"	d	file:
BREAK	telnet.c	32;"	d	file:
BROKEN_PIPE_ERROR_CODE	unix/unix.h	73;"	d
BROKEN_PIPE_ERROR_CODE	windows/winstuff.h	112;"	d
BSD_PTYS	uxconfig.h	132;"	d
BSD_VALUE	contrib/cygtermd/telnet.c	108;"	d	file:
BSD_VALUE	telnet.c	104;"	d	file:
BSD_VAR	contrib/cygtermd/telnet.c	107;"	d	file:
BSD_VAR	telnet.c	103;"	d	file:
BUF	contrib/cygtermd/main.c	29;"	d	file:
BUFCHAIN_TYPEDEF	misc.h	75;"	d
BUFCHAIN_TYPEDEF	network.h	234;"	d
BUFFER_GRANULE	contrib/cygtermd/sel.c	24;"	d	file:
BUFFER_MIN_GRANULE	misc.c	640;"	d	file:
BUG_CHOKES_ON_RSA	ssh.c	73;"	d	file:
BUG_CHOKES_ON_SSH1_IGNORE	ssh.c	70;"	d	file:
BUG_CHOKES_ON_SSH2_IGNORE	ssh.c	79;"	d	file:
BUG_CHOKES_ON_WINADJ	ssh.c	80;"	d	file:
BUG_NEEDS_SSH1_PLAIN_PASSWORD	ssh.c	72;"	d	file:
BUG_SENDS_LATE_REQUEST_REPLY	ssh.c	81;"	d	file:
BUG_SSH2_DERIVEKEY	ssh.c	75;"	d	file:
BUG_SSH2_HMAC	ssh.c	71;"	d	file:
BUG_SSH2_MAXPKT	ssh.c	78;"	d	file:
BUG_SSH2_OLDGEX	ssh.c	82;"	d	file:
BUG_SSH2_PK_SESSIONID	ssh.c	77;"	d	file:
BUG_SSH2_REKEY	ssh.c	76;"	d	file:
BUG_SSH2_RSA_PADDING	ssh.c	74;"	d	file:
BUILD	sshsh512.c	30;"	d	file:
BUILDINFO_GTK	unix/unix.h	35;"	d
BUILDINFO_GTK	unix/unix.h	40;"	d
BUILDINFO_GTK	unix/unix.h	45;"	d
BUILDINFO_PLATFORM	unix/unix.h	54;"	d
BUILDINFO_PLATFORM	windows/winstuff.h	30;"	d
BUILDINFO_PLATFORM_CLI	unix/unix.h	52;"	d
BUILDINFO_PLATFORM_GTK	unix/unix.h	34;"	d
BUILDINFO_PLATFORM_GTK	unix/unix.h	39;"	d
BUILDINFO_PLATFORM_GTK	unix/unix.h	44;"	d
BUSY_CPU	putty.h	/^    BUSY_CPU	    \/* Locally busy (e.g. crypto); user interaction suspended *\/$/;"	e	enum:__anon68
BUSY_NOT	putty.h	/^    BUSY_NOT,	    \/* Not busy, all user interaction OK *\/$/;"	e	enum:__anon68
BUSY_WAITING	putty.h	/^    BUSY_WAITING,   \/* Waiting for something; local event loops still running$/;"	e	enum:__anon68
BYTE	unix/unix.h	108;"	d
B_IND_DISABLED	putty.h	/^    B_IND_DISABLED, B_IND_FLASH, B_IND_STEADY$/;"	e	enum:__anon59
B_IND_FLASH	putty.h	/^    B_IND_DISABLED, B_IND_FLASH, B_IND_STEADY$/;"	e	enum:__anon59
B_IND_STEADY	putty.h	/^    B_IND_DISABLED, B_IND_FLASH, B_IND_STEADY$/;"	e	enum:__anon59
Backend	network.h	/^typedef struct backend_tag Backend;$/;"	t	typeref:struct:backend_tag
Backend	putty.h	/^typedef struct backend_tag Backend;$/;"	t	typeref:struct:backend_tag
Backend	windows/winstuff.h	/^typedef struct backend_tag Backend;$/;"	t	typeref:struct:backend_tag
BeginList	windows/winjump.c	/^    HRESULT ( __stdcall *BeginList )($/;"	m	struct:ICustomDestinationListVtbl	file:
Bignum	ssh.h	/^typedef void *Bignum;$/;"	t
Bignum	sshbn.c	/^typedef BignumInt *Bignum;$/;"	t	file:
BignumADC	sshbn.h	180;"	d
BignumADC	sshbn.h	89;"	d
BignumCarry	sshbn.h	/^  typedef BignumInt BignumCarry;$/;"	t
BignumCarry	sshbn.h	/^  typedef unsigned char BignumCarry; \/* the type _addcarry_u64 likes to use *\/$/;"	t
BignumInt	sshbn.h	/^  typedef unsigned __int64 BignumInt;$/;"	t
BignumInt	sshbn.h	/^  typedef unsigned int BignumInt;$/;"	t
BignumInt	sshbn.h	/^  typedef unsigned long long BignumInt;$/;"	t
BignumInt	sshbn.h	/^  typedef unsigned short BignumInt;$/;"	t
BignumMUL	sshbn.h	190;"	d
BignumMUL	sshbn.h	95;"	d
BignumMULADD	sshbn.h	101;"	d
BignumMULADD	sshbn.h	199;"	d
BignumMULADD2	sshbn.h	108;"	d
BignumMULADD2	sshbn.h	209;"	d
BlankInputLine	contrib/kh2reg.py	/^class BlankInputLine(Exception):$/;"	c
BlowfishContext	sshblowf.c	/^struct BlowfishContext {$/;"	s	file:
BlowfishContext	sshblowf.h	/^typedef struct BlowfishContext BlowfishContext;$/;"	t	typeref:struct:BlowfishContext
CAT	unix/gtkcomm.c	48;"	d	file:
CAT2	unix/gtkcomm.c	47;"	d	file:
CBLINK_DELAY	terminal.c	53;"	d	file:
CC	Makefile	/^CC = gcc$/;"	m
CCDEPMODE	Makefile	/^CCDEPMODE = depmode=gcc3$/;"	m
CCLD	Makefile	/^CCLD = $(CC)$/;"	m
CFLAGS	Makefile	/^CFLAGS = -g -O2$/;"	m
CHAN_AGENT	ssh.c	/^    CHAN_AGENT,$/;"	e	enum:__anon77	file:
CHAN_MAINSESSION	ssh.c	/^    CHAN_MAINSESSION,$/;"	e	enum:__anon77	file:
CHAN_SHARING	ssh.c	/^    CHAN_SHARING,$/;"	e	enum:__anon77	file:
CHAN_SOCKDATA	ssh.c	/^    CHAN_SOCKDATA,$/;"	e	enum:__anon77	file:
CHAN_X11	ssh.c	/^    CHAN_X11,$/;"	e	enum:__anon77	file:
CHAN_ZOMBIE	ssh.c	/^    CHAN_ZOMBIE$/;"	e	enum:__anon77	file:
CHAPTERS	doc/Makefile	/^CHAPTERS := $(SITE) copy blurb intro gs using config pscp psftp plink$/;"	m
CHARAT	sshzlib.c	198;"	d	file:
CHECKBAUD	unix/uxser.c	178;"	d	file:
CHECKBAUD	unix/uxser.c	80;"	d	file:
CHECKBOXHEIGHT	windows/winctrls.c	32;"	d	file:
CHECKBOX_INVERT	config.c	46;"	d	file:
CHECKBOX_INVERT	putty.h	1336;"	d
CHECK_CTX	windows/winutils.c	108;"	d	file:
CHECK_CTX	windows/winutils.c	98;"	d	file:
CHECK_HYPOTHESIS	ssh.c	8631;"	d	file:
CHECK_HYPOTHESIS	ssh.c	8645;"	d	file:
CICONS	icons/Makefile	/^CICONS = xpmputty.c xpmpucfg.c xpmpterm.c xpmptcfg.c$/;"	m
CIPHER_3DES	putty.h	/^    CIPHER_3DES,$/;"	e	enum:__anon52
CIPHER_AES	putty.h	/^    CIPHER_AES,			       \/* (SSH-2 only) *\/$/;"	e	enum:__anon52
CIPHER_ARCFOUR	putty.h	/^    CIPHER_ARCFOUR,$/;"	e	enum:__anon52
CIPHER_BLOWFISH	putty.h	/^    CIPHER_BLOWFISH,$/;"	e	enum:__anon52
CIPHER_CHACHA20	putty.h	/^    CIPHER_CHACHA20,$/;"	e	enum:__anon52
CIPHER_DES	putty.h	/^    CIPHER_DES,$/;"	e	enum:__anon52
CIPHER_MAX	putty.h	/^    CIPHER_MAX			       \/* no. ciphers (inc warn) *\/$/;"	e	enum:__anon52
CIPHER_WARN	putty.h	/^    CIPHER_WARN,		       \/* pseudo 'cipher' *\/$/;"	e	enum:__anon52
CLAMP	terminal.c	3522;"	d	file:
CLEARTYPE_QUALITY	windows/winstuff.h	47;"	d
CLOSES_RCVD_CLOSE	ssh.c	537;"	d	file:
CLOSES_RCVD_EOF	ssh.c	536;"	d	file:
CLOSES_SENT_CLOSE	ssh.c	535;"	d	file:
CLOSES_SENT_EOF	ssh.c	534;"	d	file:
CLSID_DestinationList	windows/winjump.c	/^static const CLSID CLSID_DestinationList = {$/;"	v	file:
CLSID_EnumerableObjectCollection	windows/winjump.c	/^static const CLSID CLSID_EnumerableObjectCollection = {$/;"	v	file:
CLSID_ShellLink	windows/winjump.c	/^static const CLSID CLSID_ShellLink = {$/;"	v	file:
CL_ANSI	terminal.c	39;"	d	file:
CL_ANSIMIN	terminal.c	29;"	d	file:
CL_OTHER	terminal.c	40;"	d	file:
CL_SCOANSI	terminal.c	38;"	d	file:
CL_VT100	terminal.c	30;"	d	file:
CL_VT100AVO	terminal.c	31;"	d	file:
CL_VT102	terminal.c	32;"	d	file:
CL_VT220	terminal.c	33;"	d	file:
CL_VT320	terminal.c	34;"	d	file:
CL_VT340TEXT	terminal.c	37;"	d	file:
CL_VT420	terminal.c	35;"	d	file:
CL_VT510	terminal.c	36;"	d	file:
CMP	sshcrcda.c	48;"	d	file:
COLUMNS	unix/gtkcols.h	18;"	d
COLUMNS_CLASS	unix/gtkcols.h	19;"	d
COLUMNS_H	unix/gtkcols.h	8;"	d
COLUMN_FIELD	dialog.h	78;"	d
COLUMN_SPAN	dialog.h	80;"	d
COLUMN_START	dialog.h	79;"	d
COMBOHEIGHT	windows/winctrls.c	37;"	d	file:
COMPILE	Makefile	/^COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \\$/;"	m
COMPILE_MULTIMON_STUBS	windows/window.c	18;"	d	file:
COMPTR	windows/winjump.c	360;"	d	file:
CONFIG_CLEAN_FILES	Makefile	/^CONFIG_CLEAN_FILES =$/;"	m
CONFIG_CLEAN_VPATH_FILES	Makefile	/^CONFIG_CLEAN_VPATH_FILES =$/;"	m
CONFIG_HEADER	Makefile	/^CONFIG_HEADER = uxconfig.h$/;"	m
CONFIG_OPTIONS	putty.h	/^enum config_primary_key { CONFIG_OPTIONS(CONF_ENUM_DEF) N_CONFIG_OPTIONS };$/;"	e	enum:config_primary_key
CONFIG_OPTIONS	putty.h	682;"	d
CONF_ENUM_DEF	putty.h	916;"	d
CONF_ENUM_DEF	putty.h	918;"	d
CONF_SUBKEYTYPE_DEF	conf.c	22;"	d	file:
CONF_VALUETYPE_DEF	conf.c	24;"	d	file:
CONNSHARE_MUTEX_PREFIX	windows/winshare.c	37;"	d	file:
CONNSHARE_PIPE_PREFIX	windows/winshare.c	36;"	d	file:
CONNSHARE_SOCKETDIR_PREFIX	unix/uxshare.c	23;"	d	file:
CPP	Makefile	/^CPP = gcc -E$/;"	m
CPPFLAGS	Makefile	/^CPPFLAGS = $/;"	m
CP_UTF8	putty.h	1169;"	d
CP_UTF8	unix/unix.h	209;"	d
CR	contrib/cygtermd/telnet.c	112;"	d	file:
CR	telnet.c	108;"	d	file:
CREATE	ssh.c	/^    enum { DESTROY, KEEP, CREATE } status;$/;"	e	enum:ssh_portfwd::__anon81	file:
CRYPTPROTECTMEMORY_BLOCK_SIZE	windows/winshare.c	29;"	d	file:
CRYPTPROTECTMEMORY_CROSS_PROCESS	windows/winshare.c	32;"	d	file:
CS	minibidi.c	/^    CS,$/;"	e	enum:__anon37	file:
CSCOPE	Makefile	/^CSCOPE = cscope$/;"	m
CSET_ACP	putty.h	84;"	d
CSET_ASCII	putty.h	87;"	d
CSET_GBCHR	putty.h	90;"	d
CSET_LINEDRW	putty.h	88;"	d
CSET_MASK	putty.h	91;"	d
CSET_OEMCP	putty.h	83;"	d
CSET_OF	terminal.c	94;"	d	file:
CSET_SCOACS	putty.h	89;"	d
CSIDL_APPDATA	windows/winstore.c	15;"	d	file:
CSIDL_LOCAL_APPDATA	windows/winstore.c	18;"	d	file:
CS_CP1250	charset/charset.h	/^    CS_CP1250,$/;"	e	enum:__anon3
CS_CP1251	charset/charset.h	/^    CS_CP1251,$/;"	e	enum:__anon3
CS_CP1252	charset/charset.h	/^    CS_CP1252,$/;"	e	enum:__anon3
CS_CP1253	charset/charset.h	/^    CS_CP1253,$/;"	e	enum:__anon3
CS_CP1254	charset/charset.h	/^    CS_CP1254,$/;"	e	enum:__anon3
CS_CP1255	charset/charset.h	/^    CS_CP1255,$/;"	e	enum:__anon3
CS_CP1256	charset/charset.h	/^    CS_CP1256,$/;"	e	enum:__anon3
CS_CP1257	charset/charset.h	/^    CS_CP1257,$/;"	e	enum:__anon3
CS_CP1258	charset/charset.h	/^    CS_CP1258,$/;"	e	enum:__anon3
CS_CP437	charset/charset.h	/^    CS_CP437,$/;"	e	enum:__anon3
CS_CP850	charset/charset.h	/^    CS_CP850,$/;"	e	enum:__anon3
CS_CP852	charset/charset.h	/^    CS_CP852,$/;"	e	enum:__anon3
CS_CP866	charset/charset.h	/^    CS_CP866,$/;"	e	enum:__anon3
CS_DEC_MCS	charset/charset.h	/^    CS_DEC_MCS,$/;"	e	enum:__anon3
CS_HP_ROMAN8	charset/charset.h	/^    CS_HP_ROMAN8,$/;"	e	enum:__anon3
CS_ISO8859_1	charset/charset.h	/^    CS_ISO8859_1,$/;"	e	enum:__anon3
CS_ISO8859_10	charset/charset.h	/^    CS_ISO8859_10,$/;"	e	enum:__anon3
CS_ISO8859_11	charset/charset.h	/^    CS_ISO8859_11,$/;"	e	enum:__anon3
CS_ISO8859_13	charset/charset.h	/^    CS_ISO8859_13,$/;"	e	enum:__anon3
CS_ISO8859_14	charset/charset.h	/^    CS_ISO8859_14,$/;"	e	enum:__anon3
CS_ISO8859_15	charset/charset.h	/^    CS_ISO8859_15,$/;"	e	enum:__anon3
CS_ISO8859_16	charset/charset.h	/^    CS_ISO8859_16,$/;"	e	enum:__anon3
CS_ISO8859_1_X11	charset/charset.h	/^    CS_ISO8859_1_X11,		       \/* X font encoding with VT100 glyphs *\/$/;"	e	enum:__anon3
CS_ISO8859_2	charset/charset.h	/^    CS_ISO8859_2,$/;"	e	enum:__anon3
CS_ISO8859_3	charset/charset.h	/^    CS_ISO8859_3,$/;"	e	enum:__anon3
CS_ISO8859_4	charset/charset.h	/^    CS_ISO8859_4,$/;"	e	enum:__anon3
CS_ISO8859_5	charset/charset.h	/^    CS_ISO8859_5,$/;"	e	enum:__anon3
CS_ISO8859_6	charset/charset.h	/^    CS_ISO8859_6,$/;"	e	enum:__anon3
CS_ISO8859_7	charset/charset.h	/^    CS_ISO8859_7,$/;"	e	enum:__anon3
CS_ISO8859_8	charset/charset.h	/^    CS_ISO8859_8,$/;"	e	enum:__anon3
CS_ISO8859_9	charset/charset.h	/^    CS_ISO8859_9,$/;"	e	enum:__anon3
CS_KOI8_R	charset/charset.h	/^    CS_KOI8_R,$/;"	e	enum:__anon3
CS_KOI8_U	charset/charset.h	/^    CS_KOI8_U,$/;"	e	enum:__anon3
CS_MAC_CENTEURO	charset/charset.h	/^    CS_MAC_CENTEURO,$/;"	e	enum:__anon3
CS_MAC_CROATIAN	charset/charset.h	/^    CS_MAC_CROATIAN,$/;"	e	enum:__anon3
CS_MAC_CROATIAN_OLD	charset/charset.h	/^    CS_MAC_CROATIAN_OLD,$/;"	e	enum:__anon3
CS_MAC_CYRILLIC	charset/charset.h	/^    CS_MAC_CYRILLIC,$/;"	e	enum:__anon3
CS_MAC_CYRILLIC_OLD	charset/charset.h	/^    CS_MAC_CYRILLIC_OLD,$/;"	e	enum:__anon3
CS_MAC_DINGBATS	charset/charset.h	/^    CS_MAC_DINGBATS,$/;"	e	enum:__anon3
CS_MAC_GREEK	charset/charset.h	/^    CS_MAC_GREEK,$/;"	e	enum:__anon3
CS_MAC_GREEK_OLD	charset/charset.h	/^    CS_MAC_GREEK_OLD,$/;"	e	enum:__anon3
CS_MAC_ICELAND	charset/charset.h	/^    CS_MAC_ICELAND,$/;"	e	enum:__anon3
CS_MAC_ICELAND_OLD	charset/charset.h	/^    CS_MAC_ICELAND_OLD,$/;"	e	enum:__anon3
CS_MAC_ROMAN	charset/charset.h	/^    CS_MAC_ROMAN,$/;"	e	enum:__anon3
CS_MAC_ROMANIAN	charset/charset.h	/^    CS_MAC_ROMANIAN,$/;"	e	enum:__anon3
CS_MAC_ROMANIAN_OLD	charset/charset.h	/^    CS_MAC_ROMANIAN_OLD,$/;"	e	enum:__anon3
CS_MAC_ROMAN_OLD	charset/charset.h	/^    CS_MAC_ROMAN_OLD,$/;"	e	enum:__anon3
CS_MAC_SYMBOL	charset/charset.h	/^    CS_MAC_SYMBOL,$/;"	e	enum:__anon3
CS_MAC_THAI	charset/charset.h	/^    CS_MAC_THAI,$/;"	e	enum:__anon3
CS_MAC_TURKISH	charset/charset.h	/^    CS_MAC_TURKISH,$/;"	e	enum:__anon3
CS_MAC_UKRAINE	charset/charset.h	/^    CS_MAC_UKRAINE,$/;"	e	enum:__anon3
CS_MAC_VT100	charset/charset.h	/^    CS_MAC_VT100,$/;"	e	enum:__anon3
CS_MAC_VT100_OLD	charset/charset.h	/^    CS_MAC_VT100_OLD,$/;"	e	enum:__anon3
CS_NONE	charset/charset.h	/^    CS_NONE,			       \/* used for reporting errors, etc *\/$/;"	e	enum:__anon3
CS_UTF8	charset/charset.h	/^    CS_UTF8$/;"	e	enum:__anon3
CS_VISCII	charset/charset.h	/^    CS_VISCII,$/;"	e	enum:__anon3
CTAGS	Makefile	/^CTAGS = ctags$/;"	m
CTRL	ldisc.c	77;"	d	file:
CTRL_BUTTON	dialog.h	/^    CTRL_BUTTON,		       \/* simple push button (no label) *\/$/;"	e	enum:__anon15
CTRL_CHECKBOX	dialog.h	/^    CTRL_CHECKBOX,		       \/* checkbox (contains own label) *\/$/;"	e	enum:__anon15
CTRL_COLUMNS	dialog.h	/^    CTRL_COLUMNS,		       \/* divide window into columns *\/$/;"	e	enum:__anon15
CTRL_EDITBOX	dialog.h	/^    CTRL_EDITBOX,		       \/* label plus edit box *\/$/;"	e	enum:__anon15
CTRL_FILESELECT	dialog.h	/^    CTRL_FILESELECT,		       \/* label plus filename selector *\/$/;"	e	enum:__anon15
CTRL_FONTSELECT	dialog.h	/^    CTRL_FONTSELECT,		       \/* label plus font selector *\/$/;"	e	enum:__anon15
CTRL_LISTBOX	dialog.h	/^    CTRL_LISTBOX,		       \/* label plus list box *\/$/;"	e	enum:__anon15
CTRL_RADIO	dialog.h	/^    CTRL_RADIO,			       \/* label plus radio buttons *\/$/;"	e	enum:__anon15
CTRL_TABDELAY	dialog.h	/^    CTRL_TABDELAY		       \/* see `tabdelay' below *\/$/;"	e	enum:__anon15
CTRL_TEXT	dialog.h	/^    CTRL_TEXT,			       \/* just a static line of text *\/$/;"	e	enum:__anon15
CTXMENU	windows/window.c	/^enum { SYSMENU, CTXMENU };$/;"	e	enum:__anon135	file:
CURSORBLINK	unix/unix.h	105;"	d
CURSORBLINK	windows/winstuff.h	189;"	d
CYGPATH_W	Makefile	/^CYGPATH_W = echo$/;"	m
Ch	sshsh256.c	15;"	d	file:
Ch	sshsh512.c	38;"	d	file:
Clear	windows/winjump.c	/^    HRESULT ( __stdcall *Clear )($/;"	m	struct:IObjectCollectionVtbl	file:
CodegenTarget	contrib/make1305.py	/^class CodegenTarget(object):$/;"	c
Columns	unix/gtkcols.h	/^typedef struct Columns_tag Columns;$/;"	t	typeref:struct:Columns_tag
ColumnsChild	unix/gtkcols.h	/^typedef struct ColumnsChild_tag ColumnsChild;$/;"	t	typeref:struct:ColumnsChild_tag
ColumnsChild_tag	unix/gtkcols.h	/^struct ColumnsChild_tag {$/;"	s
ColumnsClass	unix/gtkcols.h	/^typedef struct ColumnsClass_tag ColumnsClass;$/;"	t	typeref:struct:ColumnsClass_tag
ColumnsClass_tag	unix/gtkcols.h	/^struct ColumnsClass_tag {$/;"	s
Columns_tag	unix/gtkcols.h	/^struct Columns_tag {$/;"	s
Commit	windows/winjump.c	/^    HRESULT ( __stdcall *Commit )($/;"	m	struct:IPropertyStoreVtbl	file:
CommitList	windows/winjump.c	/^    HRESULT ( __stdcall *CommitList )($/;"	m	struct:ICustomDestinationListVtbl	file:
Conf	network.h	/^typedef struct conf_tag Conf;$/;"	t	typeref:struct:conf_tag
Conf	putty.h	/^typedef struct conf_tag Conf;$/;"	t	typeref:struct:conf_tag
Conf	windows/winstuff.h	/^typedef struct conf_tag Conf;$/;"	t	typeref:struct:conf_tag
Context	unix/unix.h	/^typedef void *Context;                 \/* FIXME: probably needs changing *\/$/;"	t
Context	windows/winstuff.h	/^typedef HDC Context;$/;"	t
D0	sshaes.c	/^static const word32 D0[256] = {$/;"	v	file:
D1	sshaes.c	/^static const word32 D1[256] = {$/;"	v	file:
D2	sshaes.c	/^static const word32 D2[256] = {$/;"	v	file:
D3	sshaes.c	/^static const word32 D3[256] = {$/;"	v	file:
DATTR_MASK	putty.h	68;"	d
DATTR_STARTRUN	putty.h	64;"	d
DECL_WINDOWS_FUNCTION	windows/winstuff.h	133;"	d
DEFAULT_CLIPBOARD	unix/unix.h	32;"	d
DEFAULT_CODEPAGE	unix/unix.h	208;"	d
DEFAULT_CODEPAGE	windows/winstuff.h	192;"	d
DEFAULT_CURVE_INDEX	windows/winpgen.c	26;"	d	file:
DEFAULT_GTK_FONT	unix/unix.h	261;"	d
DEFAULT_GTK_FONT	unix/unix.h	263;"	d
DEFAULT_INCLUDES	Makefile	/^DEFAULT_INCLUDES = -I.$/;"	m
DEFAULT_KEY_BITS	windows/winpgen.c	25;"	d	file:
DEFAULT_RSADSA_BITS	cmdgen.c	228;"	d	file:
DEFINE_BIGNUMDBLINT	sshbn.h	123;"	d
DEFINE_BIGNUMDBLINT	sshbn.h	131;"	d
DEFINE_BIGNUMDBLINT	sshbn.h	143;"	d
DEFINE_BIGNUMDBLINT	sshbn.h	159;"	d
DEFINE_BIGNUMDBLINT	sshbn.h	68;"	d
DEFINE_INTORPTR_FNS	dialog.c	11;"	d	file:
DEFINE_PLUG_METHOD_MACROS	be_misc.c	8;"	d	file:
DEFINE_PLUG_METHOD_MACROS	cproxy.c	12;"	d	file:
DEFINE_PLUG_METHOD_MACROS	errsock.c	8;"	d	file:
DEFINE_PLUG_METHOD_MACROS	nocproxy.c	11;"	d	file:
DEFINE_PLUG_METHOD_MACROS	proxy.c	12;"	d	file:
DEFINE_PLUG_METHOD_MACROS	unix/uxnet.c	22;"	d	file:
DEFINE_PLUG_METHOD_MACROS	unix/uxproxy.c	12;"	d	file:
DEFINE_PLUG_METHOD_MACROS	unix/uxshare.c	16;"	d	file:
DEFINE_PLUG_METHOD_MACROS	windows/winhsock.c	10;"	d	file:
DEFINE_PLUG_METHOD_MACROS	windows/winnet.c	14;"	d	file:
DEFINE_PLUG_METHOD_MACROS	windows/winnpc.c	8;"	d	file:
DEFINE_PLUG_METHOD_MACROS	windows/winnps.c	8;"	d	file:
DEFINE_PLUG_METHOD_MACROS	windows/winproxy.c	10;"	d	file:
DEFINE_PLUG_METHOD_MACROS	windows/winshare.c	10;"	d	file:
DEFS	Makefile	/^DEFS = -DHAVE_CONFIG_H$/;"	m
DEL	windows/winstore.c	/^enum { DEL, OPEN_R, OPEN_W };$/;"	e	enum:__anon133	file:
DEPDIR	Makefile	/^DEPDIR = .deps$/;"	m
DESContext	sshdes.c	/^} DESContext;$/;"	t	typeref:struct:__anon88	file:
DESTROY	ssh.c	/^    enum { DESTROY, KEEP, CREATE } status;$/;"	e	enum:ssh_portfwd::__anon81	file:
DF_END	windows/winstuff.h	90;"	d
DH_MAX_SIZE	ssh.c	85;"	d	file:
DH_MIN_SIZE	ssh.c	84;"	d	file:
DIRECT_CHAR	putty.h	93;"	d
DIRECT_FONT	putty.h	94;"	d
DISTFILES	Makefile	/^DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)$/;"	m
DIST_ARCHIVES	Makefile	/^DIST_ARCHIVES = $(distdir).tar.gz$/;"	m
DIST_COMMON	Makefile	/^DIST_COMMON = $(srcdir)\/Makefile.am $(top_srcdir)\/configure \\$/;"	m
DIST_SOURCES	Makefile	/^DIST_SOURCES = $(libversion_a_SOURCES) $(cgtest_SOURCES) \\$/;"	m
DIST_TARGETS	Makefile	/^DIST_TARGETS = dist-gzip$/;"	m
DLGWIDTH	windows/winctrls.c	29;"	d	file:
DLL_DIRECTORY_COOKIE	windows/winstuff.h	/^typedef PVOID DLL_DIRECTORY_COOKIE;$/;"	t
DM	contrib/cygtermd/telnet.c	37;"	d	file:
DM	telnet.c	33;"	d	file:
DO	contrib/cygtermd/telnet.c	24;"	d	file:
DO	telnet.c	20;"	d	file:
DONE_TYPEDEFS	network.h	17;"	d
DONE_TYPEDEFS	putty.h	20;"	d
DONE_TYPEDEFS	windows/winstuff.h	164;"	d
DONT	contrib/cygtermd/telnet.c	23;"	d	file:
DONT	telnet.c	19;"	d	file:
DO_CTRLS	terminal.h	/^	DO_CTRLS,$/;"	e	enum:terminal_tag::__anon110
DO_STR	sshpubk.c	1370;"	d	file:
DO_STR	sshpubk.c	799;"	d	file:
DRAGGING	terminal.h	/^	NO_SELECTION, ABOUT_TO, DRAGGING, SELECTED$/;"	e	enum:terminal_tag::__anon111
DRAWTYPE_CAIRO	unix/gtkfont.h	/^        DRAWTYPE_CAIRO,$/;"	e	enum:unifont_drawctx::__anon126
DRAWTYPE_DEFAULT	unix/gtkfont.h	90;"	d
DRAWTYPE_DEFAULT	unix/gtkfont.h	93;"	d
DRAWTYPE_GDK	unix/gtkfont.h	/^        DRAWTYPE_GDK,$/;"	e	enum:unifont_drawctx::__anon126
DRAWTYPE_NTYPES	unix/gtkfont.h	/^        DRAWTYPE_NTYPES$/;"	e	enum:unifont_drawctx::__anon126
DRAW_DEFAULT_CAIRO	unix/gtkfont.h	89;"	d
DRAW_DEFAULT_GDK	unix/gtkfont.h	92;"	d
DRAW_TEXT_CAIRO	unix/gtkfont.h	29;"	d
DRAW_TEXT_GDK	unix/gtkfont.h	26;"	d
DSA	windows/winpgen.c	/^typedef enum {RSA, DSA, ECDSA, ED25519} keytype;$/;"	e	enum:__anon139	file:
DWLP_MSGRESULT	windows/winstuff.h	80;"	d
DWLP_MSGRESULT	windows/winstuff.h	81;"	d
DeleteList	windows/winjump.c	/^    HRESULT ( __stdcall *DeleteList )($/;"	m	struct:ICustomDestinationListVtbl	file:
DirHandle	psftp.h	/^typedef struct DirHandle DirHandle;$/;"	t	typeref:struct:DirHandle
DirHandle	unix/uxsftp.c	/^struct DirHandle {$/;"	s	file:
DirHandle	windows/winsftp.c	/^struct DirHandle {$/;"	s	file:
E0	sshaes.c	/^static const word32 E0[256] = {$/;"	v	file:
E1	sshaes.c	/^static const word32 E1[256] = {$/;"	v	file:
E2	sshaes.c	/^static const word32 E2[256] = {$/;"	v	file:
E3	sshaes.c	/^static const word32 E3[256] = {$/;"	v	file:
EATBITS	sshzlib.c	1050;"	d	file:
EC	contrib/cygtermd/telnet.c	32;"	d	file:
EC	telnet.c	28;"	d	file:
ECDSA	windows/winpgen.c	/^typedef enum {RSA, DSA, ECDSA, ED25519} keytype;$/;"	e	enum:__anon139	file:
ECHOING	ldisc.c	16;"	d	file:
ECHO_C	Makefile	/^ECHO_C = $/;"	m
ECHO_N	Makefile	/^ECHO_N = -n$/;"	m
ECHO_T	Makefile	/^ECHO_T = $/;"	m
EC_EDWARDS	ssh.h	/^    enum { EC_WEIERSTRASS, EC_MONTGOMERY, EC_EDWARDS } type;$/;"	e	enum:ec_curve::__anon90
EC_MONTGOMERY	ssh.h	/^    enum { EC_WEIERSTRASS, EC_MONTGOMERY, EC_EDWARDS } type;$/;"	e	enum:ec_curve::__anon90
EC_WEIERSTRASS	ssh.h	/^    enum { EC_WEIERSTRASS, EC_MONTGOMERY, EC_EDWARDS } type;$/;"	e	enum:ec_curve::__anon90
ED25519	windows/winpgen.c	/^typedef enum {RSA, DSA, ECDSA, ED25519} keytype;$/;"	e	enum:__anon139	file:
EDITHEIGHT	windows/winctrls.c	34;"	d	file:
EDITING	ldisc.c	20;"	d	file:
EGREP	Makefile	/^EGREP = \/usr\/bin\/grep -E$/;"	m
EL	contrib/cygtermd/telnet.c	31;"	d	file:
EL	telnet.c	27;"	d	file:
EMPTY_WINDOW_TITLE	terminal.c	/^const char *EMPTY_WINDOW_TITLE = "";$/;"	v
EN	minibidi.c	/^    EN,$/;"	e	enum:__anon37	file:
ENC	sshdss.c	462;"	d	file:
ENC	sshrsa.c	756;"	d	file:
ENSURE	proxy.c	1298;"	d	file:
ENSURE	proxy.c	1507;"	d	file:
ENUM_CHARSET	charset/slookup.c	10;"	d	file:
ENUM_CHARSET	charset/slookup.c	14;"	d	file:
ENUM_CHARSET	charset/slookup.c	16;"	d	file:
ENUM_CHARSET	charset/slookup.c	8;"	d	file:
ENUM_CHARSETS	charset/enum.c	16;"	d	file:
ENUM_CHARSETS	charset/enum.c	19;"	d	file:
EOF_NO	unix/uxnet.c	/^    enum { EOF_NO, EOF_PENDING, EOF_SENT } outgoingeof;$/;"	e	enum:Socket_tag::__anon119	file:
EOF_NO	unix/uxplink.c	/^enum { EOF_NO, EOF_PENDING, EOF_SENT } outgoingeof;$/;"	e	enum:__anon130	file:
EOF_NO	unix/uxproxy.c	/^    enum { EOF_NO, EOF_PENDING, EOF_SENT } outgoingeof;$/;"	e	enum:Socket_localproxy_tag::__anon121	file:
EOF_NO	windows/winhandl.c	/^    enum { EOF_NO, EOF_PENDING, EOF_SENT } outgoingeof;$/;"	e	enum:handle_output::__anon147	file:
EOF_NO	windows/winnet.c	/^    enum { EOF_NO, EOF_PENDING, EOF_SENT } outgoingeof;$/;"	e	enum:Socket_tag::__anon145	file:
EOF_PENDING	unix/uxnet.c	/^    enum { EOF_NO, EOF_PENDING, EOF_SENT } outgoingeof;$/;"	e	enum:Socket_tag::__anon119	file:
EOF_PENDING	unix/uxplink.c	/^enum { EOF_NO, EOF_PENDING, EOF_SENT } outgoingeof;$/;"	e	enum:__anon130	file:
EOF_PENDING	unix/uxproxy.c	/^    enum { EOF_NO, EOF_PENDING, EOF_SENT } outgoingeof;$/;"	e	enum:Socket_localproxy_tag::__anon121	file:
EOF_PENDING	windows/winhandl.c	/^    enum { EOF_NO, EOF_PENDING, EOF_SENT } outgoingeof;$/;"	e	enum:handle_output::__anon147	file:
EOF_PENDING	windows/winnet.c	/^    enum { EOF_NO, EOF_PENDING, EOF_SENT } outgoingeof;$/;"	e	enum:Socket_tag::__anon145	file:
EOF_SENT	unix/uxnet.c	/^    enum { EOF_NO, EOF_PENDING, EOF_SENT } outgoingeof;$/;"	e	enum:Socket_tag::__anon119	file:
EOF_SENT	unix/uxplink.c	/^enum { EOF_NO, EOF_PENDING, EOF_SENT } outgoingeof;$/;"	e	enum:__anon130	file:
EOF_SENT	unix/uxproxy.c	/^    enum { EOF_NO, EOF_PENDING, EOF_SENT } outgoingeof;$/;"	e	enum:Socket_localproxy_tag::__anon121	file:
EOF_SENT	windows/winhandl.c	/^    enum { EOF_NO, EOF_PENDING, EOF_SENT } outgoingeof;$/;"	e	enum:handle_output::__anon147	file:
EOF_SENT	windows/winnet.c	/^    enum { EOF_NO, EOF_PENDING, EOF_SENT } outgoingeof;$/;"	e	enum:Socket_tag::__anon145	file:
EOR	contrib/cygtermd/telnet.c	39;"	d	file:
EOR	telnet.c	35;"	d	file:
ERROR	charset/internal.h	12;"	d
ES	minibidi.c	/^    ES,$/;"	e	enum:__anon37	file:
ET	minibidi.c	/^    ET,$/;"	e	enum:__anon37	file:
ETAGS	Makefile	/^ETAGS = etags$/;"	m
EVENT_ACTION	dialog.h	/^    EVENT_ACTION,$/;"	e	enum:__anon17
EVENT_CALLBACK	dialog.h	/^    EVENT_CALLBACK$/;"	e	enum:__anon17
EVENT_REFRESH	dialog.h	/^    EVENT_REFRESH,$/;"	e	enum:__anon17
EVENT_SELCHANGE	dialog.h	/^    EVENT_SELCHANGE,$/;"	e	enum:__anon17
EVENT_VALCHANGE	dialog.h	/^    EVENT_VALCHANGE,$/;"	e	enum:__anon17
EXEEXT	Makefile	/^EXEEXT = $/;"	m
EXPECTS_ARG	unix/gtkmain.c	317;"	d	file:
EXTRACT	sshsh512.c	31;"	d	file:
EnableSizeTip	windows/sizetip.c	/^void EnableSizeTip(int bEnable)$/;"	f
Error_Socket	errsock.c	/^typedef struct Socket_error_tag *Error_Socket;$/;"	t	typeref:struct:Socket_error_tag	file:
F	sshblowf.c	233;"	d	file:
F	sshmd5.c	12;"	d	file:
FALSE	contrib/cygtermd/telnet.c	16;"	d	file:
FALSE	misc.h	15;"	d
FALSE	portfwd.c	12;"	d	file:
FALSE	raw.c	12;"	d	file:
FALSE	rlogin.c	13;"	d	file:
FALSE	ssh.c	23;"	d	file:
FALSE	sshzlib.c	65;"	d	file:
FALSE	telnet.c	12;"	d	file:
FALSE	unix/uxpty.c	33;"	d	file:
FANOUT	unix/osxlaunch.c	87;"	d	file:
FD_SET_MAX	unix/unix.h	242;"	d
FILE_TYPE_DIRECTORY	psftp.h	/^    FILE_TYPE_NONEXISTENT, FILE_TYPE_FILE, FILE_TYPE_DIRECTORY, FILE_TYPE_WEIRD$/;"	e	enum:__anon43
FILE_TYPE_FILE	psftp.h	/^    FILE_TYPE_NONEXISTENT, FILE_TYPE_FILE, FILE_TYPE_DIRECTORY, FILE_TYPE_WEIRD$/;"	e	enum:__anon43
FILE_TYPE_NONEXISTENT	psftp.h	/^    FILE_TYPE_NONEXISTENT, FILE_TYPE_FILE, FILE_TYPE_DIRECTORY, FILE_TYPE_WEIRD$/;"	e	enum:__anon43
FILE_TYPE_WEIRD	psftp.h	/^    FILE_TYPE_NONEXISTENT, FILE_TYPE_FILE, FILE_TYPE_DIRECTORY, FILE_TYPE_WEIRD$/;"	e	enum:__anon43
FILTER_DYNLIB_FILES	unix/unix.h	89;"	d
FILTER_DYNLIB_FILES	windows/winstuff.h	281;"	d
FILTER_KEY_FILES	unix/unix.h	88;"	d
FILTER_KEY_FILES	windows/winstuff.h	277;"	d
FILTER_WAVE_FILES	windows/winstuff.h	279;"	d
FIRST	windows/window.c	1414;"	d	file:
FIRST	windows/window.c	1432;"	d	file:
FIXME_PTY_H	contrib/cygtermd/pty.h	6;"	d
FIXME_SEL_H	contrib/cygtermd/sel.h	8;"	d
FIXME_TELNET_H	contrib/cygtermd/telnet.h	6;"	d
FLAG_INTERACTIVE	putty.h	513;"	d
FLAG_STDERR	putty.h	512;"	d
FLAG_STDERR_TTY	unix/unix.h	120;"	d
FLAG_SYNCAGENT	windows/winstuff.h	587;"	d
FLAG_UPDATING_COMBO_LIST	unix/gtkdlg.c	97;"	d	file:
FLAG_UPDATING_LISTBOX	unix/gtkdlg.c	98;"	d	file:
FLAG_VERBOSE	putty.h	511;"	d
FLIPPED_SIZE	unix/gtkfont.c	1241;"	d	file:
FLIPPED_SIZE	unix/gtkfont.c	1262;"	d	file:
FMT_INT	unix/gtkfont.c	298;"	d	file:
FMT_INT	unix/gtkfont.c	307;"	d	file:
FMT_STR	unix/gtkfont.c	296;"	d	file:
FMT_STR	unix/gtkfont.c	305;"	d	file:
FNLEN	unix/uxstore.c	24;"	d	file:
FNLEN	unix/uxstore.c	26;"	d	file:
FONTFLAG_CLIENTSIDE	unix/gtkfont.c	60;"	d	file:
FONTFLAG_NONMONOSPACED	unix/gtkfont.c	63;"	d	file:
FONTFLAG_SERVERALIAS	unix/gtkfont.c	62;"	d	file:
FONTFLAG_SERVERSIDE	unix/gtkfont.c	61;"	d	file:
FONTFLAG_SORT_MASK	unix/gtkfont.c	65;"	d	file:
FONT_BOLD	windows/window.c	171;"	d	file:
FONT_BOLDUND	windows/window.c	173;"	d	file:
FONT_HIGH	windows/window.c	175;"	d	file:
FONT_MAXNO	windows/window.c	183;"	d	file:
FONT_NARROW	windows/window.c	176;"	d	file:
FONT_NORMAL	windows/window.c	170;"	d	file:
FONT_OEM	windows/window.c	178;"	d	file:
FONT_OEMBOLD	windows/window.c	179;"	d	file:
FONT_OEMBOLDUND	windows/window.c	181;"	d	file:
FONT_OEMUND	windows/window.c	180;"	d	file:
FONT_QUALITY	windows/winstuff.h	49;"	d
FONT_SHIFT	windows/window.c	184;"	d	file:
FONT_UNDERLINE	windows/window.c	172;"	d	file:
FONT_WIDE	windows/window.c	174;"	d	file:
FORCE_OFF	putty.h	/^    FORCE_ON, FORCE_OFF, AUTO$/;"	e	enum:__anon53
FORCE_ON	putty.h	/^    FORCE_ON, FORCE_OFF, AUTO$/;"	e	enum:__anon53
FOUND_COMPILER	misc.c	1169;"	d	file:
FOUND_COMPILER	misc.c	1178;"	d	file:
FP	sshdes.c	516;"	d	file:
FQ_ANTIALIASED	putty.h	/^    FQ_DEFAULT, FQ_ANTIALIASED, FQ_NONANTIALIASED, FQ_CLEARTYPE$/;"	e	enum:__anon62
FQ_CLEARTYPE	putty.h	/^    FQ_DEFAULT, FQ_ANTIALIASED, FQ_NONANTIALIASED, FQ_CLEARTYPE$/;"	e	enum:__anon62
FQ_DEFAULT	putty.h	/^    FQ_DEFAULT, FQ_ANTIALIASED, FQ_NONANTIALIASED, FQ_CLEARTYPE$/;"	e	enum:__anon62
FQ_NONANTIALIASED	putty.h	/^    FQ_DEFAULT, FQ_ANTIALIASED, FQ_NONANTIALIASED, FQ_CLEARTYPE$/;"	e	enum:__anon62
FREEZING	windows/winhsock.c	/^        FREEZING,  \/* have been set to frozen but winhandl is still reading *\/$/;"	e	enum:Socket_handle_tag::__anon143	file:
FROM_CURRENT	psftp.h	/^enum { FROM_START, FROM_CURRENT, FROM_END };$/;"	e	enum:__anon42
FROM_END	psftp.h	/^enum { FROM_START, FROM_CURRENT, FROM_END };$/;"	e	enum:__anon42
FROM_START	psftp.h	/^enum { FROM_START, FROM_CURRENT, FROM_END };$/;"	e	enum:__anon42
FROM_SURROGATES	putty.h	1550;"	d
FROZEN	windows/winhsock.c	/^        FROZEN,    \/* really frozen - winhandl has been throttled *\/$/;"	e	enum:Socket_handle_tag::__anon143	file:
FUNKY_LINUX	putty.h	/^    FUNKY_LINUX,$/;"	e	enum:__anon61
FUNKY_SCO	putty.h	/^    FUNKY_SCO$/;"	e	enum:__anon61
FUNKY_TILDE	putty.h	/^    FUNKY_TILDE,$/;"	e	enum:__anon61
FUNKY_VT100P	putty.h	/^    FUNKY_VT100P,$/;"	e	enum:__anon61
FUNKY_VT400	putty.h	/^    FUNKY_VT400,$/;"	e	enum:__anon61
FUNKY_XTERM	putty.h	/^    FUNKY_XTERM,$/;"	e	enum:__anon61
Filename	misc.h	/^typedef struct Filename Filename;$/;"	t	typeref:struct:Filename
Filename	unix/unix.h	/^struct Filename {$/;"	s
Filename	windows/winstuff.h	/^struct Filename {$/;"	s
FontSpec	misc.h	/^typedef struct FontSpec FontSpec;$/;"	t	typeref:struct:FontSpec
FontSpec	unix/unix.h	/^struct FontSpec {$/;"	s
FontSpec	windows/winstuff.h	/^struct FontSpec {$/;"	s
Fprime	sshblowf.c	232;"	d	file:
G	ssh.h	/^    struct ec_point G;$/;"	m	struct:ec_mcurve	typeref:struct:ec_mcurve::ec_point
G	ssh.h	/^    struct ec_point G;$/;"	m	struct:ec_wcurve	typeref:struct:ec_wcurve::ec_point
G	sshdh.c	/^static const unsigned char G[] = { 2 };$/;"	v	file:
G	sshmd5.c	13;"	d	file:
GA	contrib/cygtermd/telnet.c	30;"	d	file:
GA	telnet.c	26;"	d	file:
GAPBETWEEN	windows/winctrls.c	25;"	d	file:
GAPWITHIN	windows/winctrls.c	26;"	d	file:
GAPXBOX	windows/winctrls.c	27;"	d	file:
GAPYBOX	windows/winctrls.c	28;"	d	file:
GCLP_HCURSOR	windows/winstuff.h	72;"	d
GDK_DISPLAY_XDISPLAY	unix/gtkcompat.h	84;"	d
GDK_DRAWABLE_XID	unix/gtkfont.c	601;"	d	file:
GDK_DRAWABLE_XID	unix/gtkfont.c	603;"	d	file:
GDK_GRAB_SUCCESS	unix/gtkcompat.h	38;"	d
GDK_KEY_Alt_L	unix/gtkcompat.h	96;"	d
GDK_KEY_Alt_R	unix/gtkcompat.h	97;"	d
GDK_KEY_BackSpace	unix/gtkcompat.h	98;"	d
GDK_KEY_Begin	unix/gtkcompat.h	99;"	d
GDK_KEY_Break	unix/gtkcompat.h	100;"	d
GDK_KEY_Delete	unix/gtkcompat.h	101;"	d
GDK_KEY_Down	unix/gtkcompat.h	102;"	d
GDK_KEY_End	unix/gtkcompat.h	103;"	d
GDK_KEY_Escape	unix/gtkcompat.h	104;"	d
GDK_KEY_F1	unix/gtkcompat.h	115;"	d
GDK_KEY_F10	unix/gtkcompat.h	105;"	d
GDK_KEY_F11	unix/gtkcompat.h	106;"	d
GDK_KEY_F12	unix/gtkcompat.h	107;"	d
GDK_KEY_F13	unix/gtkcompat.h	108;"	d
GDK_KEY_F14	unix/gtkcompat.h	109;"	d
GDK_KEY_F15	unix/gtkcompat.h	110;"	d
GDK_KEY_F16	unix/gtkcompat.h	111;"	d
GDK_KEY_F17	unix/gtkcompat.h	112;"	d
GDK_KEY_F18	unix/gtkcompat.h	113;"	d
GDK_KEY_F19	unix/gtkcompat.h	114;"	d
GDK_KEY_F2	unix/gtkcompat.h	117;"	d
GDK_KEY_F20	unix/gtkcompat.h	116;"	d
GDK_KEY_F3	unix/gtkcompat.h	118;"	d
GDK_KEY_F4	unix/gtkcompat.h	119;"	d
GDK_KEY_F5	unix/gtkcompat.h	120;"	d
GDK_KEY_F6	unix/gtkcompat.h	121;"	d
GDK_KEY_F7	unix/gtkcompat.h	122;"	d
GDK_KEY_F8	unix/gtkcompat.h	123;"	d
GDK_KEY_F9	unix/gtkcompat.h	124;"	d
GDK_KEY_Home	unix/gtkcompat.h	125;"	d
GDK_KEY_ISO_Left_Tab	unix/gtkcompat.h	127;"	d
GDK_KEY_Insert	unix/gtkcompat.h	126;"	d
GDK_KEY_KP_0	unix/gtkcompat.h	128;"	d
GDK_KEY_KP_1	unix/gtkcompat.h	129;"	d
GDK_KEY_KP_2	unix/gtkcompat.h	130;"	d
GDK_KEY_KP_3	unix/gtkcompat.h	131;"	d
GDK_KEY_KP_4	unix/gtkcompat.h	132;"	d
GDK_KEY_KP_5	unix/gtkcompat.h	133;"	d
GDK_KEY_KP_6	unix/gtkcompat.h	134;"	d
GDK_KEY_KP_7	unix/gtkcompat.h	135;"	d
GDK_KEY_KP_8	unix/gtkcompat.h	136;"	d
GDK_KEY_KP_9	unix/gtkcompat.h	137;"	d
GDK_KEY_KP_Add	unix/gtkcompat.h	138;"	d
GDK_KEY_KP_Begin	unix/gtkcompat.h	139;"	d
GDK_KEY_KP_Decimal	unix/gtkcompat.h	140;"	d
GDK_KEY_KP_Delete	unix/gtkcompat.h	141;"	d
GDK_KEY_KP_Divide	unix/gtkcompat.h	142;"	d
GDK_KEY_KP_Down	unix/gtkcompat.h	143;"	d
GDK_KEY_KP_End	unix/gtkcompat.h	144;"	d
GDK_KEY_KP_Enter	unix/gtkcompat.h	145;"	d
GDK_KEY_KP_Home	unix/gtkcompat.h	146;"	d
GDK_KEY_KP_Insert	unix/gtkcompat.h	147;"	d
GDK_KEY_KP_Left	unix/gtkcompat.h	148;"	d
GDK_KEY_KP_Multiply	unix/gtkcompat.h	149;"	d
GDK_KEY_KP_Page_Down	unix/gtkcompat.h	150;"	d
GDK_KEY_KP_Page_Up	unix/gtkcompat.h	151;"	d
GDK_KEY_KP_Right	unix/gtkcompat.h	152;"	d
GDK_KEY_KP_Subtract	unix/gtkcompat.h	153;"	d
GDK_KEY_KP_Up	unix/gtkcompat.h	154;"	d
GDK_KEY_Left	unix/gtkcompat.h	155;"	d
GDK_KEY_Meta_L	unix/gtkcompat.h	156;"	d
GDK_KEY_Meta_R	unix/gtkcompat.h	157;"	d
GDK_KEY_Num_Lock	unix/gtkcompat.h	158;"	d
GDK_KEY_Page_Down	unix/gtkcompat.h	159;"	d
GDK_KEY_Page_Up	unix/gtkcompat.h	160;"	d
GDK_KEY_Return	unix/gtkcompat.h	161;"	d
GDK_KEY_Right	unix/gtkcompat.h	162;"	d
GDK_KEY_Tab	unix/gtkcompat.h	163;"	d
GDK_KEY_Up	unix/gtkcompat.h	164;"	d
GDK_KEY_greater	unix/gtkcompat.h	165;"	d
GDK_KEY_less	unix/gtkcompat.h	166;"	d
GDK_WINDOW_XID	unix/gtkcompat.h	40;"	d
GET	x11fwd.c	494;"	d	file:
GET	x11fwd.c	510;"	d	file:
GETTICKCOUNT	unix/unix.h	103;"	d
GETTICKCOUNT	windows/winstuff.h	188;"	d
GET_16BIT	x11fwd.c	14;"	d	file:
GET_16BIT_LSB_FIRST	misc.h	171;"	d
GET_16BIT_MSB_FIRST	misc.h	195;"	d
GET_32BIT	misc.h	185;"	d
GET_32BIT_LSB_FIRST	misc.h	159;"	d
GET_32BIT_MSB_FIRST	misc.h	179;"	d
GET_BOOL	unix/uxplink.c	224;"	d	file:
GET_BOOL	unix/uxplink.c	376;"	d	file:
GET_CHAR	unix/uxplink.c	219;"	d	file:
GET_CHAR	unix/uxplink.c	375;"	d	file:
GET_PERMISSIONS	sftp.h	98;"	d
GET_WINDOWS_FUNCTION	windows/winstuff.h	142;"	d
GET_WINDOWS_FUNCTION_NO_TYPECHECK	windows/winstuff.h	146;"	d
GET_WINDOWS_FUNCTION_PP	windows/winstuff.h	138;"	d
GLOBAL	putty.h	13;"	d
GLOBAL	putty.h	15;"	d
GLOBAL	windows/winstuff.h	157;"	d
GLOBAL	windows/winstuff.h	159;"	d
GLOBREQ_CANCEL_TCPIP_FORWARD	sshshare.c	/^    GLOBREQ_CANCEL_TCPIP_FORWARD$/;"	e	enum:__anon101	file:
GLOBREQ_TCPIP_FORWARD	sshshare.c	/^    GLOBREQ_TCPIP_FORWARD,$/;"	e	enum:__anon101	file:
GOTDISTSYM	sshzlib.c	/^	INBLK, GOTLENSYM, GOTLEN, GOTDISTSYM,$/;"	e	enum:zlib_decompress_ctx::__anon103	file:
GOTLEN	sshzlib.c	/^	INBLK, GOTLENSYM, GOTLEN, GOTDISTSYM,$/;"	e	enum:zlib_decompress_ctx::__anon103	file:
GOTLENSYM	sshzlib.c	/^	INBLK, GOTLENSYM, GOTLEN, GOTDISTSYM,$/;"	e	enum:zlib_decompress_ctx::__anon103	file:
GObject	unix/gtkcompat.h	20;"	d
GPOINTER_TO_LONG	unix/gtkcomm.c	54;"	d	file:
GPOINTER_TO_LONG	unix/gtkcomm.c	58;"	d	file:
GREP	Makefile	/^GREP = \/usr\/bin\/grep$/;"	m
GSS_CALLING_ERROR	pgssapi.h	136;"	d
GSS_CC	pgssapi.h	225;"	d
GSS_CC	windows/winstuff.h	204;"	d
GSS_C_ACCEPT	pgssapi.h	77;"	d
GSS_C_AF_APPLETALK	pgssapi.h	100;"	d
GSS_C_AF_BSC	pgssapi.h	101;"	d
GSS_C_AF_CCITT	pgssapi.h	94;"	d
GSS_C_AF_CHAOS	pgssapi.h	89;"	d
GSS_C_AF_DATAKIT	pgssapi.h	93;"	d
GSS_C_AF_DECnet	pgssapi.h	96;"	d
GSS_C_AF_DLI	pgssapi.h	97;"	d
GSS_C_AF_DSS	pgssapi.h	102;"	d
GSS_C_AF_ECMA	pgssapi.h	92;"	d
GSS_C_AF_HYLINK	pgssapi.h	99;"	d
GSS_C_AF_IMPLINK	pgssapi.h	87;"	d
GSS_C_AF_INET	pgssapi.h	86;"	d
GSS_C_AF_LAT	pgssapi.h	98;"	d
GSS_C_AF_LOCAL	pgssapi.h	85;"	d
GSS_C_AF_NBS	pgssapi.h	91;"	d
GSS_C_AF_NS	pgssapi.h	90;"	d
GSS_C_AF_NULLADDR	pgssapi.h	106;"	d
GSS_C_AF_OSI	pgssapi.h	103;"	d
GSS_C_AF_PUP	pgssapi.h	88;"	d
GSS_C_AF_SNA	pgssapi.h	95;"	d
GSS_C_AF_UNSPEC	pgssapi.h	84;"	d
GSS_C_AF_X25	pgssapi.h	104;"	d
GSS_C_ANON_FLAG	pgssapi.h	70;"	d
GSS_C_BOTH	pgssapi.h	75;"	d
GSS_C_CALLING_ERROR_MASK	pgssapi.h	126;"	d
GSS_C_CALLING_ERROR_OFFSET	pgssapi.h	122;"	d
GSS_C_CONF_FLAG	pgssapi.h	68;"	d
GSS_C_DELEG_FLAG	pgssapi.h	64;"	d
GSS_C_EMPTY_BUFFER	pgssapi.h	116;"	d
GSS_C_GSS_CODE	pgssapi.h	80;"	d
GSS_C_INITIATE	pgssapi.h	76;"	d
GSS_C_INTEG_FLAG	pgssapi.h	69;"	d
GSS_C_MECH_CODE	pgssapi.h	81;"	d
GSS_C_MUTUAL_FLAG	pgssapi.h	65;"	d
GSS_C_NO_BUFFER	pgssapi.h	110;"	d
GSS_C_NO_CHANNEL_BINDINGS	pgssapi.h	115;"	d
GSS_C_NO_CONTEXT	pgssapi.h	113;"	d
GSS_C_NO_CREDENTIAL	pgssapi.h	114;"	d
GSS_C_NO_NAME	pgssapi.h	109;"	d
GSS_C_NO_OID	pgssapi.h	111;"	d
GSS_C_NO_OID_SET	pgssapi.h	112;"	d
GSS_C_NT_ANONYMOUS	pgssapi.c	/^const_gss_OID GSS_C_NT_ANONYMOUS           = oids+5;$/;"	v
GSS_C_NT_EXPORT_NAME	pgssapi.c	/^const_gss_OID GSS_C_NT_EXPORT_NAME         = oids+6;$/;"	v
GSS_C_NT_HOSTBASED_SERVICE	pgssapi.c	/^const_gss_OID GSS_C_NT_HOSTBASED_SERVICE   = oids+4;$/;"	v
GSS_C_NT_HOSTBASED_SERVICE_X	pgssapi.c	/^const_gss_OID GSS_C_NT_HOSTBASED_SERVICE_X = oids+3;$/;"	v
GSS_C_NT_MACHINE_UID_NAME	pgssapi.c	/^const_gss_OID GSS_C_NT_MACHINE_UID_NAME    = oids+1;$/;"	v
GSS_C_NT_STRING_UID_NAME	pgssapi.c	/^const_gss_OID GSS_C_NT_STRING_UID_NAME     = oids+2;$/;"	v
GSS_C_NT_USER_NAME	pgssapi.c	/^const_gss_OID GSS_C_NT_USER_NAME           = oids+0;$/;"	v
GSS_C_PROT_READY_FLAG	pgssapi.h	71;"	d
GSS_C_REPLAY_FLAG	pgssapi.h	66;"	d
GSS_C_ROUTINE_ERROR_MASK	pgssapi.h	127;"	d
GSS_C_ROUTINE_ERROR_OFFSET	pgssapi.h	123;"	d
GSS_C_SEQUENCE_FLAG	pgssapi.h	67;"	d
GSS_C_SUPPLEMENTARY_MASK	pgssapi.h	128;"	d
GSS_C_SUPPLEMENTARY_OFFSET	pgssapi.h	125;"	d
GSS_C_TRANS_FLAG	pgssapi.h	72;"	d
GSS_ERROR	pgssapi.h	142;"	d
GSS_MECH_KRB5	pgssapi.c	/^const gss_OID GSS_MECH_KRB5 = &gss_mech_krb5_desc;$/;"	v
GSS_ROUTINE_ERROR	pgssapi.h	138;"	d
GSS_SUPPLEMENTARY_INFO	pgssapi.h	140;"	d
GSS_S_BAD_BINDINGS	pgssapi.h	163;"	d
GSS_S_BAD_MECH	pgssapi.h	157;"	d
GSS_S_BAD_MIC	pgssapi.h	169;"	d
GSS_S_BAD_NAME	pgssapi.h	159;"	d
GSS_S_BAD_NAMETYPE	pgssapi.h	161;"	d
GSS_S_BAD_QOP	pgssapi.h	184;"	d
GSS_S_BAD_SIG	pgssapi.h	167;"	d
GSS_S_BAD_STATUS	pgssapi.h	165;"	d
GSS_S_CALL_BAD_STRUCTURE	pgssapi.h	153;"	d
GSS_S_CALL_INACCESSIBLE_READ	pgssapi.h	149;"	d
GSS_S_CALL_INACCESSIBLE_WRITE	pgssapi.h	151;"	d
GSS_S_COMPLETE	pgssapi.h	119;"	d
GSS_S_CONTEXT_EXPIRED	pgssapi.h	180;"	d
GSS_S_CONTINUE_NEEDED	pgssapi.h	196;"	d
GSS_S_CREDENTIALS_EXPIRED	pgssapi.h	178;"	d
GSS_S_DEFECTIVE_CREDENTIAL	pgssapi.h	176;"	d
GSS_S_DEFECTIVE_TOKEN	pgssapi.h	174;"	d
GSS_S_DUPLICATE_ELEMENT	pgssapi.h	190;"	d
GSS_S_DUPLICATE_TOKEN	pgssapi.h	198;"	d
GSS_S_FAILURE	pgssapi.h	182;"	d
GSS_S_GAP_TOKEN	pgssapi.h	204;"	d
GSS_S_NAME_NOT_MN	pgssapi.h	192;"	d
GSS_S_NO_CONTEXT	pgssapi.h	172;"	d
GSS_S_NO_CRED	pgssapi.h	170;"	d
GSS_S_OLD_TOKEN	pgssapi.h	200;"	d
GSS_S_UNAUTHORIZED	pgssapi.h	186;"	d
GSS_S_UNAVAILABLE	pgssapi.h	188;"	d
GSS_S_UNSEQ_TOKEN	pgssapi.h	202;"	d
GTK1_CONFIG	Makefile	/^GTK1_CONFIG = $/;"	m
GTK_CFLAGS	Makefile	/^GTK_CFLAGS = -pthread -I\/usr\/include\/gtk-3.0 -I\/usr\/include\/at-spi2-atk\/2.0 -I\/usr\/include\/at-spi-2.0 -I\/usr\/include\/dbus-1.0 -I\/usr\/lib64\/dbus-1.0\/include -I\/usr\/include\/gtk-3.0 -I\/usr\/include\/gio-unix-2.0\/ -I\/usr\/include\/cairo -I\/usr\/include\/pango-1.0 -I\/usr\/include\/harfbuzz -I\/usr\/include\/pango-1.0 -I\/usr\/include\/atk-1.0 -I\/usr\/include\/cairo -I\/usr\/include\/pixman-1 -I\/usr\/include\/freetype2 -I\/usr\/include\/libpng16 -I\/usr\/include\/freetype2 -I\/usr\/include\/libdrm -I\/usr\/include\/libpng16 -I\/usr\/include\/gdk-pixbuf-2.0 -I\/usr\/include\/libpng16 -I\/usr\/include\/glib-2.0 -I\/usr\/lib64\/glib-2.0\/include $/;"	m
GTK_LIBS	Makefile	/^GTK_LIBS = -lX11 -lgtk-3 -lgdk-3 -lpangocairo-1.0 -lpango-1.0 -latk-1.0 -lcairo-gobject -lcairo -lgdk_pixbuf-2.0 -lgio-2.0 -lgobject-2.0 -lglib-2.0 $/;"	m
GType	unix/gtkcompat.h	19;"	d
GWLP_USERDATA	windows/winstuff.h	78;"	d
GWLP_USERDATA	windows/winstuff.h	79;"	d
GZIP_ENV	Makefile	/^GZIP_ENV = --best$/;"	m
G_CALLBACK	unix/gtkcompat.h	21;"	d
G_OBJECT	unix/gtkcompat.h	22;"	d
G_TYPE_CHECK_CLASS_CAST	unix/gtkcompat.h	26;"	d
G_TYPE_CHECK_CLASS_TYPE	unix/gtkcompat.h	25;"	d
G_TYPE_CHECK_INSTANCE_CAST	unix/gtkcompat.h	24;"	d
G_TYPE_CHECK_INSTANCE_TYPE	unix/gtkcompat.h	23;"	d
GenericMainDlgProc	windows/windlg.c	/^static INT_PTR CALLBACK GenericMainDlgProc(HWND hwnd, UINT msg,$/;"	f	file:
GetArguments	windows/winjump.c	/^    HRESULT ( __stdcall *GetArguments )($/;"	m	struct:IShellLinkVtbl	file:
GetAt	windows/winjump.c	/^    HRESULT ( __stdcall *GetAt )($/;"	m	struct:IObjectArrayVtbl	file:
GetAt	windows/winjump.c	/^    HRESULT ( __stdcall *GetAt )($/;"	m	struct:IObjectCollectionVtbl	file:
GetAt	windows/winjump.c	/^    HRESULT ( __stdcall *GetAt )($/;"	m	struct:IPropertyStoreVtbl	file:
GetClassLongPtr	windows/winstuff.h	68;"	d
GetClassLongPtr	windows/winstuff.h	69;"	d
GetCount	windows/winjump.c	/^    HRESULT ( __stdcall *GetCount )($/;"	m	struct:IObjectArrayVtbl	file:
GetCount	windows/winjump.c	/^    HRESULT ( __stdcall *GetCount )($/;"	m	struct:IObjectCollectionVtbl	file:
GetCount	windows/winjump.c	/^    HRESULT ( __stdcall *GetCount )($/;"	m	struct:IPropertyStoreVtbl	file:
GetDescription	windows/winjump.c	/^    HRESULT ( __stdcall *GetDescription )($/;"	m	struct:IShellLinkVtbl	file:
GetDlgItemText_alloc	windows/winutils.c	/^char *GetDlgItemText_alloc(HWND hwnd, int id)$/;"	f
GetHotkey	windows/winjump.c	/^    HRESULT ( __stdcall *GetHotkey )($/;"	m	struct:IShellLinkVtbl	file:
GetIDList	windows/winjump.c	/^    HRESULT ( __stdcall *GetIDList )($/;"	m	struct:IShellLinkVtbl	file:
GetIconLocation	windows/winjump.c	/^    HRESULT ( __stdcall *GetIconLocation )($/;"	m	struct:IShellLinkVtbl	file:
GetPath	windows/winjump.c	/^    HRESULT ( __stdcall *GetPath )($/;"	m	struct:IShellLinkVtbl	file:
GetRemovedDestinations	windows/winjump.c	/^    HRESULT ( __stdcall *GetRemovedDestinations )($/;"	m	struct:ICustomDestinationListVtbl	file:
GetShowCmd	windows/winjump.c	/^    HRESULT ( __stdcall *GetShowCmd )($/;"	m	struct:IShellLinkVtbl	file:
GetValue	windows/winjump.c	/^    HRESULT ( __stdcall *GetValue )($/;"	m	struct:IPropertyStoreVtbl	file:
GetWindowLongPtr	windows/winstuff.h	74;"	d
GetWindowLongPtr	windows/winstuff.h	75;"	d
GetWorkingDirectory	windows/winjump.c	/^    HRESULT ( __stdcall *GetWorkingDirectory )($/;"	m	struct:IShellLinkVtbl	file:
H	sshmd5.c	14;"	d	file:
HALIBUT	doc/Makefile	/^HALIBUT = halibut$/;"	m
HANDLE_FLAG_IGNOREEOF	windows/winstuff.h	557;"	d
HANDLE_FLAG_OVERLAPPED	windows/winstuff.h	556;"	d
HANDLE_FLAG_UNITBUFFER	windows/winstuff.h	558;"	d
HASH	sshcrcda.c	46;"	d	file:
HASHCHARS	sshzlib.c	104;"	d	file:
HASHINPUT	sshrand.c	32;"	d	file:
HASHMAX	sshzlib.c	102;"	d	file:
HASHSIZE	sshrand.c	33;"	d	file:
HASH_ENTRYSIZE	sshcrcda.c	37;"	d	file:
HASH_FACTOR	sshcrcda.c	38;"	d	file:
HASH_IV	sshcrcda.c	41;"	d	file:
HASH_MINBLOCKS	sshcrcda.c	43;"	d	file:
HASH_MINSIZE	sshcrcda.c	36;"	d	file:
HASH_UNUSED	sshcrcda.c	40;"	d	file:
HASH_UNUSEDCHAR	sshcrcda.c	39;"	d	file:
HAVE_CLOCK_GETTIME	uxconfig.h	5;"	d
HAVE_DECL_CLOCK_MONOTONIC	uxconfig.h	9;"	d
HAVE_GETADDRINFO	uxconfig.h	12;"	d
HAVE_INTTYPES_H	uxconfig.h	18;"	d
HAVE_LIBX11	uxconfig.h	21;"	d
HAVE_MEMORY_H	uxconfig.h	24;"	d
HAVE_NO_SETRESUID	uxconfig.h	123;"	d
HAVE_NO_STRSIGNAL	uxconfig.h	126;"	d
HAVE_NO_SYS_SELECT_H	uxconfig.h	135;"	d
HAVE_PANGO_FONT_FAMILY_IS_MONOSPACE	uxconfig.h	27;"	d
HAVE_PANGO_FONT_MAP_LIST_FAMILIES	uxconfig.h	30;"	d
HAVE_POSIX_OPENPT	uxconfig.h	33;"	d
HAVE_PTSNAME	uxconfig.h	36;"	d
HAVE_PUTUTLINE	unix/uxpty.c	66;"	d	file:
HAVE_SETRESUID	uxconfig.h	39;"	d
HAVE_SO_PEERCRED	uxconfig.h	42;"	d
HAVE_STDINT_H	uxconfig.h	45;"	d
HAVE_STDLIB_H	uxconfig.h	48;"	d
HAVE_STRINGS_H	uxconfig.h	51;"	d
HAVE_STRING_H	uxconfig.h	54;"	d
HAVE_STRSIGNAL	uxconfig.h	57;"	d
HAVE_SYS_SELECT_H	uxconfig.h	60;"	d
HAVE_SYS_STAT_H	uxconfig.h	63;"	d
HAVE_SYS_TYPES_H	uxconfig.h	66;"	d
HAVE_UNISTD_H	uxconfig.h	69;"	d
HAVE_UPDWTMPX	uxconfig.h	72;"	d
HAVE_UTMPX_H	uxconfig.h	75;"	d
HELPCTX	unix/unix.h	87;"	d
HELPCTX	windows/winhelp.h	15;"	d
HELPCTXID	windows/winhelp.h	183;"	d
HIGH_SURROGATE_END	putty.h	1528;"	d
HIGH_SURROGATE_OF	putty.h	1546;"	d
HIGH_SURROGATE_START	putty.h	1527;"	d
HK_DSA	putty.h	/^    HK_DSA,$/;"	e	enum:__anon51
HK_ECDSA	putty.h	/^    HK_ECDSA,$/;"	e	enum:__anon51
HK_ED25519	putty.h	/^    HK_ED25519,$/;"	e	enum:__anon51
HK_MAX	putty.h	/^    HK_MAX$/;"	e	enum:__anon51
HK_RSA	putty.h	/^    HK_RSA,$/;"	e	enum:__anon51
HK_WARN	putty.h	/^    HK_WARN,$/;"	e	enum:__anon51
HOST_BOX_TITLE	config.c	15;"	d	file:
HT_FOREIGN	windows/winhandl.c	/^typedef enum { HT_INPUT, HT_OUTPUT, HT_FOREIGN } HandleType;$/;"	e	enum:__anon146	file:
HT_INPUT	windows/winhandl.c	/^typedef enum { HT_INPUT, HT_OUTPUT, HT_FOREIGN } HandleType;$/;"	e	enum:__anon146	file:
HT_OUTPUT	windows/winhandl.c	/^typedef enum { HT_INPUT, HT_OUTPUT, HT_FOREIGN } HandleType;$/;"	e	enum:__anon146	file:
HandleType	windows/winhandl.c	/^typedef enum { HT_INPUT, HT_OUTPUT, HT_FOREIGN } HandleType;$/;"	t	typeref:enum:__anon146	file:
Handle_Socket	windows/winhsock.c	/^typedef struct Socket_handle_tag *Handle_Socket;$/;"	t	typeref:struct:Socket_handle_tag	file:
HashEntry	sshzlib.c	/^struct HashEntry {$/;"	s	file:
I	dialog.h	/^PREFIX intorptr I(int i) { intorptr ret; ret.i = i; return ret; }$/;"	f
I	sshmd5.c	15;"	d	file:
IAC	contrib/cygtermd/telnet.c	22;"	d	file:
IAC	telnet.c	18;"	d	file:
ICNS	icons/Makefile	/^ICNS = PuTTY.icns Pterm.icns$/;"	m
ICONS	icons/Makefile	/^ICONS = putty puttycfg puttygen pscp pageant pterm ptermcfg puttyins$/;"	m
ICON_BIG	windows/windlg.c	26;"	d	file:
ICON_BIG	windows/winpgen.c	20;"	d	file:
ICOS	icons/Makefile	/^ICOS = putty.ico puttygen.ico pscp.ico pageant.ico pageants.ico puttycfg.ico \\$/;"	m
ICustomDestinationList	windows/winjump.c	/^typedef struct ICustomDestinationList$/;"	s	file:
ICustomDestinationList	windows/winjump.c	/^} ICustomDestinationList;$/;"	t	typeref:struct:ICustomDestinationList	file:
ICustomDestinationListVtbl	windows/winjump.c	/^typedef struct ICustomDestinationListVtbl {$/;"	s	file:
ICustomDestinationListVtbl	windows/winjump.c	/^} ICustomDestinationListVtbl;$/;"	t	typeref:struct:ICustomDestinationListVtbl	file:
IDA_ICON	windows/win_res.h	20;"	d
IDA_LICENCE	windows/win_res.h	22;"	d
IDA_TEXT	windows/win_res.h	21;"	d
IDA_WEB	windows/win_res.h	23;"	d
IDCX_ABOUT	windows/windlg.c	/^    IDCX_ABOUT = IDC_ABOUT,$/;"	e	enum:__anon150	file:
IDCX_PANELBASE	windows/windlg.c	/^    IDCX_PANELBASE = IDCX_STDBASE + 32$/;"	e	enum:__anon150	file:
IDCX_STDBASE	windows/windlg.c	/^    IDCX_STDBASE,$/;"	e	enum:__anon150	file:
IDCX_TREEVIEW	windows/windlg.c	/^    IDCX_TREEVIEW,$/;"	e	enum:__anon150	file:
IDCX_TVSTATIC	windows/windlg.c	/^    IDCX_TVSTATIC,$/;"	e	enum:__anon150	file:
IDC_ABOUT	windows/win_res.h	30;"	d
IDC_ABOUT	windows/winpgen.c	/^    IDC_ABOUT,$/;"	e	enum:__anon142	file:
IDC_BITS	windows/winpgen.c	/^    IDC_BITSSTATIC, IDC_BITS,$/;"	e	enum:__anon142	file:
IDC_BITSSTATIC	windows/winpgen.c	/^    IDC_BITSSTATIC, IDC_BITS,$/;"	e	enum:__anon142	file:
IDC_BOX_ACTIONS	windows/winpgen.c	/^    IDC_BOX_ACTIONS,$/;"	e	enum:__anon142	file:
IDC_BOX_KEY	windows/winpgen.c	/^    IDC_BOX_KEY,$/;"	e	enum:__anon142	file:
IDC_BOX_PARAMS	windows/winpgen.c	/^    IDC_BOX_PARAMS,$/;"	e	enum:__anon142	file:
IDC_COMMENTEDIT	windows/winpgen.c	/^    IDC_COMMENTSTATIC, IDC_COMMENTEDIT,$/;"	e	enum:__anon142	file:
IDC_COMMENTSTATIC	windows/winpgen.c	/^    IDC_COMMENTSTATIC, IDC_COMMENTEDIT,$/;"	e	enum:__anon142	file:
IDC_CURVE	windows/winpgen.c	/^    IDC_CURVESTATIC, IDC_CURVE,$/;"	e	enum:__anon142	file:
IDC_CURVESTATIC	windows/winpgen.c	/^    IDC_CURVESTATIC, IDC_CURVE,$/;"	e	enum:__anon142	file:
IDC_EXPORT_OPENSSH_AUTO	windows/winpgen.c	/^    IDC_EXPORT_OPENSSH_AUTO, IDC_EXPORT_OPENSSH_NEW,$/;"	e	enum:__anon142	file:
IDC_EXPORT_OPENSSH_NEW	windows/winpgen.c	/^    IDC_EXPORT_OPENSSH_AUTO, IDC_EXPORT_OPENSSH_NEW,$/;"	e	enum:__anon142	file:
IDC_EXPORT_SSHCOM	windows/winpgen.c	/^    IDC_EXPORT_SSHCOM$/;"	e	enum:__anon142	file:
IDC_FINGERPRINT	windows/winpgen.c	/^    IDC_FPSTATIC, IDC_FINGERPRINT,$/;"	e	enum:__anon142	file:
IDC_FPSTATIC	windows/winpgen.c	/^    IDC_FPSTATIC, IDC_FINGERPRINT,$/;"	e	enum:__anon142	file:
IDC_GENERATE	windows/winpgen.c	/^    IDC_GENSTATIC, IDC_GENERATE,$/;"	e	enum:__anon142	file:
IDC_GENERATING	windows/winpgen.c	/^    IDC_GENERATING,$/;"	e	enum:__anon142	file:
IDC_GENSTATIC	windows/winpgen.c	/^    IDC_GENSTATIC, IDC_GENERATE,$/;"	e	enum:__anon142	file:
IDC_GIVEHELP	windows/winpgen.c	/^    IDC_GIVEHELP,$/;"	e	enum:__anon142	file:
IDC_HELPBTN	windows/win_res.h	29;"	d
IDC_IMPORT	windows/winpgen.c	/^    IDC_IMPORT,$/;"	e	enum:__anon142	file:
IDC_KEYDISPLAY	windows/winpgen.c	/^    IDC_PKSTATIC, IDC_KEYDISPLAY,$/;"	e	enum:__anon142	file:
IDC_KEYSSH1	windows/winpgen.c	/^    IDC_TYPESTATIC, IDC_KEYSSH1, IDC_KEYSSH2RSA, IDC_KEYSSH2DSA,$/;"	e	enum:__anon142	file:
IDC_KEYSSH2DSA	windows/winpgen.c	/^    IDC_TYPESTATIC, IDC_KEYSSH1, IDC_KEYSSH2RSA, IDC_KEYSSH2DSA,$/;"	e	enum:__anon142	file:
IDC_KEYSSH2ECDSA	windows/winpgen.c	/^    IDC_KEYSSH2ECDSA, IDC_KEYSSH2ED25519,$/;"	e	enum:__anon142	file:
IDC_KEYSSH2ED25519	windows/winpgen.c	/^    IDC_KEYSSH2ECDSA, IDC_KEYSSH2ED25519,$/;"	e	enum:__anon142	file:
IDC_KEYSSH2RSA	windows/winpgen.c	/^    IDC_TYPESTATIC, IDC_KEYSSH1, IDC_KEYSSH2RSA, IDC_KEYSSH2DSA,$/;"	e	enum:__anon142	file:
IDC_LOAD	windows/winpgen.c	/^    IDC_LOADSTATIC, IDC_LOAD,$/;"	e	enum:__anon142	file:
IDC_LOADSTATIC	windows/winpgen.c	/^    IDC_LOADSTATIC, IDC_LOAD,$/;"	e	enum:__anon142	file:
IDC_NOKEY	windows/winpgen.c	/^    IDC_NOKEY,$/;"	e	enum:__anon142	file:
IDC_NOTHINGSTATIC	windows/winpgen.c	/^    IDC_NOTHINGSTATIC,$/;"	e	enum:__anon142	file:
IDC_PASSPHRASE1EDIT	windows/winpgen.c	/^    IDC_PASSPHRASE1STATIC, IDC_PASSPHRASE1EDIT,$/;"	e	enum:__anon142	file:
IDC_PASSPHRASE1STATIC	windows/winpgen.c	/^    IDC_PASSPHRASE1STATIC, IDC_PASSPHRASE1EDIT,$/;"	e	enum:__anon142	file:
IDC_PASSPHRASE2EDIT	windows/winpgen.c	/^    IDC_PASSPHRASE2STATIC, IDC_PASSPHRASE2EDIT,$/;"	e	enum:__anon142	file:
IDC_PASSPHRASE2STATIC	windows/winpgen.c	/^    IDC_PASSPHRASE2STATIC, IDC_PASSPHRASE2EDIT,$/;"	e	enum:__anon142	file:
IDC_PKSTATIC	windows/winpgen.c	/^    IDC_PKSTATIC, IDC_KEYDISPLAY,$/;"	e	enum:__anon142	file:
IDC_PROGRESS	windows/winpgen.c	/^    IDC_PROGRESS,$/;"	e	enum:__anon142	file:
IDC_QUIT	windows/winpgen.c	/^    IDC_QUIT,$/;"	e	enum:__anon142	file:
IDC_SAVE	windows/winpgen.c	/^    IDC_SAVESTATIC, IDC_SAVE, IDC_SAVEPUB,$/;"	e	enum:__anon142	file:
IDC_SAVEPUB	windows/winpgen.c	/^    IDC_SAVESTATIC, IDC_SAVE, IDC_SAVEPUB,$/;"	e	enum:__anon142	file:
IDC_SAVESTATIC	windows/winpgen.c	/^    IDC_SAVESTATIC, IDC_SAVE, IDC_SAVEPUB,$/;"	e	enum:__anon142	file:
IDC_TAB	windows/win_res.h	25;"	d
IDC_TABLIST	windows/win_res.h	28;"	d
IDC_TABSTATIC1	windows/win_res.h	26;"	d
IDC_TABSTATIC2	windows/win_res.h	27;"	d
IDC_TITLE	windows/winpgen.c	/^    IDC_TITLE,$/;"	e	enum:__anon142	file:
IDC_TYPESTATIC	windows/winpgen.c	/^    IDC_TYPESTATIC, IDC_KEYSSH1, IDC_KEYSSH2RSA, IDC_KEYSSH2DSA,$/;"	e	enum:__anon142	file:
IDD_ABOUTBOX	windows/win_res.h	13;"	d
IDD_LICENCEBOX	windows/win_res.h	15;"	d
IDD_LOGBOX	windows/win_res.h	12;"	d
IDD_MAINBOX	windows/win_res.h	11;"	d
IDD_RECONF	windows/win_res.h	14;"	d
IDI_CFGICON	windows/win_res.h	9;"	d
IDI_MAINICON	windows/win_res.h	8;"	d
IDI_MAINICON	windows/winpgnt.c	31;"	d	file:
IDI_TRAYICON	windows/winpgnt.c	32;"	d	file:
IDM_ABOUT	windows/window.c	50;"	d	file:
IDM_ABOUT	windows/winpgnt.c	48;"	d	file:
IDM_ADDKEY	windows/winpgnt.c	46;"	d	file:
IDM_CLOSE	windows/winpgnt.c	44;"	d	file:
IDM_CLRSB	windows/window.c	47;"	d	file:
IDM_COPYALL	windows/window.c	52;"	d	file:
IDM_DUPSESS	windows/window.c	44;"	d	file:
IDM_FULLSCREEN	windows/window.c	53;"	d	file:
IDM_HELP	windows/window.c	49;"	d	file:
IDM_HELP	windows/winpgnt.c	47;"	d	file:
IDM_NEWSESS	windows/window.c	43;"	d	file:
IDM_PASTE	windows/window.c	54;"	d	file:
IDM_PUTTY	windows/winpgnt.c	64;"	d	file:
IDM_RECONF	windows/window.c	46;"	d	file:
IDM_RESET	windows/window.c	48;"	d	file:
IDM_RESTART	windows/window.c	45;"	d	file:
IDM_SAVEDSESS	windows/window.c	51;"	d	file:
IDM_SAVED_MAX	windows/window.c	61;"	d	file:
IDM_SAVED_MIN	windows/window.c	60;"	d	file:
IDM_SESSIONS_BASE	windows/winpgnt.c	65;"	d	file:
IDM_SESSIONS_MAX	windows/winpgnt.c	66;"	d	file:
IDM_SHOWLOG	windows/window.c	42;"	d	file:
IDM_SPECIALSEP	windows/window.c	55;"	d	file:
IDM_SPECIAL_MAX	windows/window.c	58;"	d	file:
IDM_SPECIAL_MIN	windows/window.c	57;"	d	file:
IDM_VIEWKEYS	windows/winpgnt.c	45;"	d	file:
IDN_COPY	windows/win_res.h	18;"	d
IDN_LIST	windows/win_res.h	17;"	d
IID_ICustomDestinationList	windows/winjump.c	/^static const IID IID_ICustomDestinationList = {$/;"	v	file:
IID_IObjectArray	windows/winjump.c	/^static const IID IID_IObjectArray = {$/;"	v	file:
IID_IObjectCollection	windows/winjump.c	/^static const IID IID_IObjectCollection = {$/;"	v	file:
IID_IPropertyStore	windows/winjump.c	/^static const IID IID_IPropertyStore = {$/;"	v	file:
IID_IShellLink	windows/winjump.c	/^static const IID IID_IShellLink = {$/;"	v	file:
IID_IShellLink	windows/winjump.c	49;"	d	file:
INACTIVE	contrib/cygtermd/telnet.c	/^	REQUESTED, ACTIVE, INACTIVE, REALLY_INACTIVE$/;"	e	enum:Opt::__anon12	file:
INACTIVE	telnet.c	/^	REQUESTED, ACTIVE, INACTIVE, REALLY_INACTIVE$/;"	e	enum:Opt::__anon105	file:
INBLK	sshzlib.c	/^	INBLK, GOTLENSYM, GOTLEN, GOTDISTSYM,$/;"	e	enum:zlib_decompress_ctx::__anon103	file:
INDEX_DIR	unix/uxstore.c	/^    INDEX_DIR, INDEX_HOSTKEYS, INDEX_HOSTKEYS_TMP, INDEX_RANDSEED,$/;"	e	enum:__anon122	file:
INDEX_HOSTKEYS	unix/uxstore.c	/^    INDEX_DIR, INDEX_HOSTKEYS, INDEX_HOSTKEYS_TMP, INDEX_RANDSEED,$/;"	e	enum:__anon122	file:
INDEX_HOSTKEYS_TMP	unix/uxstore.c	/^    INDEX_DIR, INDEX_HOSTKEYS, INDEX_HOSTKEYS_TMP, INDEX_RANDSEED,$/;"	e	enum:__anon122	file:
INDEX_RANDSEED	unix/uxstore.c	/^    INDEX_DIR, INDEX_HOSTKEYS, INDEX_HOSTKEYS_TMP, INDEX_RANDSEED,$/;"	e	enum:__anon122	file:
INDEX_SESSION	unix/uxstore.c	/^    INDEX_SESSIONDIR, INDEX_SESSION,$/;"	e	enum:__anon122	file:
INDEX_SESSIONDIR	unix/uxstore.c	/^    INDEX_SESSIONDIR, INDEX_SESSION,$/;"	e	enum:__anon122	file:
INIT	sshsh512.c	29;"	d	file:
INITFUNC	sshcrc.c	94;"	d	file:
INLINE	sshccp.c	36;"	d	file:
INPUTS	doc/Makefile	/^INPUTS = $(patsubst %,%.but,$(CHAPTERS))$/;"	m
INSITEM	windows/windlg.c	324;"	d	file:
INSTALL	Makefile	/^INSTALL = \/usr\/bin\/install -c$/;"	m
INSTALL_DATA	Makefile	/^INSTALL_DATA = ${INSTALL} -m 644$/;"	m
INSTALL_HEADER	Makefile	/^INSTALL_HEADER = $(INSTALL_DATA)$/;"	m
INSTALL_PROGRAM	Makefile	/^INSTALL_PROGRAM = ${INSTALL}$/;"	m
INSTALL_SCRIPT	Makefile	/^INSTALL_SCRIPT = ${INSTALL}$/;"	m
INSTALL_STRIP_PROGRAM	Makefile	/^INSTALL_STRIP_PROGRAM = $(install_sh) -c -s$/;"	m
INT_FIELD	unix/gtkfont.c	247;"	d	file:
INT_FIELD	unix/gtkfont.c	250;"	d	file:
INVALID	sshzlib.c	115;"	d	file:
IObjectArray	windows/winjump.c	/^typedef struct IObjectArray$/;"	s	file:
IObjectArray	windows/winjump.c	/^} IObjectArray;$/;"	t	typeref:struct:IObjectArray	file:
IObjectArrayVtbl	windows/winjump.c	/^typedef struct IObjectArrayVtbl$/;"	s	file:
IObjectArrayVtbl	windows/winjump.c	/^} IObjectArrayVtbl;$/;"	t	typeref:struct:IObjectArrayVtbl	file:
IObjectCollection	windows/winjump.c	/^typedef struct IObjectCollection$/;"	s	file:
IObjectCollection	windows/winjump.c	/^} IObjectCollection;$/;"	t	typeref:struct:IObjectCollection	file:
IObjectCollectionVtbl	windows/winjump.c	/^typedef struct IObjectCollectionVtbl$/;"	s	file:
IObjectCollectionVtbl	windows/winjump.c	/^} IObjectCollectionVtbl;$/;"	t	typeref:struct:IObjectCollectionVtbl	file:
IP	contrib/cygtermd/telnet.c	35;"	d	file:
IP	sshdes.c	508;"	d	file:
IP	telnet.c	31;"	d	file:
IP	unix/uxnet.c	/^    enum { UNRESOLVED, UNIX, IP } superfamily;$/;"	e	enum:SockAddr_tag::__anon120	file:
IPropertyStore	windows/winjump.c	/^typedef struct IPropertyStore$/;"	s	file:
IPropertyStore	windows/winjump.c	/^} IPropertyStore;$/;"	t	typeref:struct:IPropertyStore	file:
IPropertyStoreVtbl	windows/winjump.c	/^typedef struct IPropertyStoreVtbl$/;"	s	file:
IPropertyStoreVtbl	windows/winjump.c	/^} IPropertyStoreVtbl;$/;"	t	typeref:struct:IPropertyStoreVtbl	file:
IS_COLUMNS	unix/gtkcols.h	21;"	d
IS_COLUMNS_CLASS	unix/gtkcols.h	22;"	d
IS_HIGH_SURROGATE	putty.h	1535;"	d
IS_HIGH_VARSEL	windows/window.c	222;"	d	file:
IS_LOW_SURROGATE	putty.h	1537;"	d
IS_LOW_VARSEL	windows/window.c	224;"	d	file:
IS_SPACE_CHR	terminal.c	88;"	d	file:
IS_SURROGATE	putty.h	1544;"	d
IS_SURROGATE_PAIR	putty.h	1539;"	d
IShellLink	windows/winjump.c	/^typedef struct IShellLink$/;"	s	file:
IShellLink	windows/winjump.c	/^} IShellLink;$/;"	t	typeref:struct:IShellLink	file:
IShellLinkVtbl	windows/winjump.c	/^typedef struct IShellLinkVtbl$/;"	s	file:
IShellLinkVtbl	windows/winjump.c	/^} IShellLinkVtbl;$/;"	t	typeref:struct:IShellLinkVtbl	file:
Index	doc/IndexPage.html	/^<h1><a name="Index"><\/a>Index<\/h1><p>$/;"	a
JUMPLISTREG_ERROR_INVALID_PARAMETER	windows/winstuff.h	178;"	d
JUMPLISTREG_ERROR_INVALID_VALUE	windows/winstuff.h	182;"	d
JUMPLISTREG_ERROR_KEYOPENCREATE_FAILURE	windows/winstuff.h	179;"	d
JUMPLISTREG_ERROR_VALUEREAD_FAILURE	windows/winstuff.h	180;"	d
JUMPLISTREG_ERROR_VALUEWRITE_FAILURE	windows/winstuff.h	181;"	d
JUMPLISTREG_OK	windows/winstuff.h	177;"	d
JUMPLIST_SUPPORTED	windows/winstuff.h	597;"	d
JUST_USE_GTK_CLIPBOARD_UTF8	unix/unix.h	31;"	d
KARATSUBA_THRESHOLD	sshbn.c	129;"	d	file:
KCTRL	ldisc.c	78;"	d	file:
KEEP	ssh.c	/^    enum { DESTROY, KEEP, CREATE } status;$/;"	e	enum:ssh_portfwd::__anon81	file:
KEXTYPE_DH	ssh.h	/^    enum { KEXTYPE_DH, KEXTYPE_RSA, KEXTYPE_ECDH } main_type;$/;"	e	enum:ssh_kex::__anon96
KEXTYPE_ECDH	ssh.h	/^    enum { KEXTYPE_DH, KEXTYPE_RSA, KEXTYPE_ECDH } main_type;$/;"	e	enum:ssh_kex::__anon96
KEXTYPE_RSA	ssh.h	/^    enum { KEXTYPE_DH, KEXTYPE_RSA, KEXTYPE_ECDH } main_type;$/;"	e	enum:ssh_kex::__anon96
KEX_DHGEX	putty.h	/^    KEX_DHGEX,$/;"	e	enum:__anon50
KEX_DHGROUP1	putty.h	/^    KEX_DHGROUP1,$/;"	e	enum:__anon50
KEX_DHGROUP14	putty.h	/^    KEX_DHGROUP14,$/;"	e	enum:__anon50
KEX_ECDH	putty.h	/^    KEX_ECDH,$/;"	e	enum:__anon50
KEX_MAX	putty.h	/^    KEX_MAX$/;"	e	enum:__anon50
KEX_RSA	putty.h	/^    KEX_RSA,$/;"	e	enum:__anon50
KEX_WARN	putty.h	/^    KEX_WARN,$/;"	e	enum:__anon50
KEYACT_AGENT_LOAD	unix/uxpgnt.c	/^    KEYACT_AGENT_LOAD,$/;"	e	enum:__anon124	file:
KEYACT_CLIENT_ADD	unix/uxpgnt.c	/^    KEYACT_CLIENT_ADD,$/;"	e	enum:__anon124	file:
KEYACT_CLIENT_DEL	unix/uxpgnt.c	/^    KEYACT_CLIENT_DEL,$/;"	e	enum:__anon124	file:
KEYACT_CLIENT_DEL_ALL	unix/uxpgnt.c	/^    KEYACT_CLIENT_DEL_ALL,$/;"	e	enum:__anon124	file:
KEYACT_CLIENT_LIST	unix/uxpgnt.c	/^    KEYACT_CLIENT_LIST,$/;"	e	enum:__anon124	file:
KEYACT_CLIENT_PUBLIC	unix/uxpgnt.c	/^    KEYACT_CLIENT_PUBLIC$/;"	e	enum:__anon124	file:
KEYACT_CLIENT_PUBLIC_OPENSSH	unix/uxpgnt.c	/^    KEYACT_CLIENT_PUBLIC_OPENSSH,$/;"	e	enum:__anon124	file:
KEY_PRESSED	unix/gtkwin.c	627;"	d	file:
KeyFormatError	contrib/kh2reg.py	/^class KeyFormatError(Exception):$/;"	c
KeyListProc	windows/winpgnt.c	/^static INT_PTR CALLBACK KeyListProc(HWND hwnd, UINT msg,$/;"	f	file:
Key_Sym	putty.h	/^} Key_Sym;$/;"	t	typeref:enum:__anon48
L	minibidi.c	/^    L,$/;"	e	enum:__anon37	file:
LAST	windows/window.c	1415;"	d	file:
LAST	windows/window.c	1433;"	d	file:
LASTLOG_FILE	unix/uxpty.c	50;"	d	file:
LASTLOG_FILE	unix/uxpty.c	52;"	d	file:
LASTWORD	sshaes.c	673;"	d	file:
LASTWORD	sshaes.c	792;"	d	file:
LASTWORD	sshaes.c	802;"	d	file:
LASTWORD	sshaes.c	921;"	d	file:
LATTR_BOT	putty.h	73;"	d
LATTR_MODE	putty.h	74;"	d
LATTR_NORM	putty.h	70;"	d
LATTR_TOP	putty.h	72;"	d
LATTR_WIDE	putty.h	71;"	d
LATTR_WRAPPED	putty.h	75;"	d
LATTR_WRAPPED2	putty.h	76;"	d
LDFLAGS	Makefile	/^LDFLAGS = $/;"	m
LD_ECHO	putty.h	/^    LD_ECHO			       \/* local echo *\/$/;"	e	enum:__anon55
LD_EDIT	putty.h	/^    LD_EDIT,			       \/* local line editing *\/$/;"	e	enum:__anon55
LEXICOGRAPHIC	terminal.h	/^	LEXICOGRAPHIC, RECTANGULAR$/;"	e	enum:terminal_tag::__anon112
LF	contrib/cygtermd/telnet.c	113;"	d	file:
LF	telnet.c	109;"	d	file:
LGTYP_ASCII	putty.h	165;"	d
LGTYP_DEBUG	putty.h	166;"	d
LGTYP_NONE	putty.h	164;"	d
LGTYP_PACKETS	putty.h	167;"	d
LGTYP_SSHRAW	putty.h	168;"	d
LGXF_APN	putty.h	162;"	d
LGXF_ASK	putty.h	163;"	d
LGXF_OVR	putty.h	161;"	d
LIBOBJS	Makefile	/^LIBOBJS = $/;"	m
LIBRARIES	Makefile	/^LIBRARIES = $(noinst_LIBRARIES)$/;"	m
LIBS	Makefile	/^LIBS = -ldl $/;"	m
LICENCE_TEXT	licence.h	8;"	d
LIFE_DEBUG	unix/uxpgnt.c	/^    LIFE_UNSPEC, LIFE_X11, LIFE_TTY, LIFE_DEBUG, LIFE_PERM, LIFE_EXEC$/;"	e	enum:__anon125	file:
LIFE_EXEC	unix/uxpgnt.c	/^    LIFE_UNSPEC, LIFE_X11, LIFE_TTY, LIFE_DEBUG, LIFE_PERM, LIFE_EXEC$/;"	e	enum:__anon125	file:
LIFE_PERM	unix/uxpgnt.c	/^    LIFE_UNSPEC, LIFE_X11, LIFE_TTY, LIFE_DEBUG, LIFE_PERM, LIFE_EXEC$/;"	e	enum:__anon125	file:
LIFE_TTY	unix/uxpgnt.c	/^    LIFE_UNSPEC, LIFE_X11, LIFE_TTY, LIFE_DEBUG, LIFE_PERM, LIFE_EXEC$/;"	e	enum:__anon125	file:
LIFE_UNSPEC	unix/uxpgnt.c	/^    LIFE_UNSPEC, LIFE_X11, LIFE_TTY, LIFE_DEBUG, LIFE_PERM, LIFE_EXEC$/;"	e	enum:__anon125	file:
LIFE_X11	unix/uxpgnt.c	/^    LIFE_UNSPEC, LIFE_X11, LIFE_TTY, LIFE_DEBUG, LIFE_PERM, LIFE_EXEC$/;"	e	enum:__anon125	file:
LINK	Makefile	/^LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@$/;"	m
LISTHEIGHT	windows/winctrls.c	35;"	d	file:
LISTINCREMENT	windows/winctrls.c	36;"	d	file:
LMASK	minibidi.c	28;"	d	file:
LOAD_LIBRARY_SEARCH_DLL_LOAD_DIR	windows/winstuff.h	534;"	d
LOAD_LIBRARY_SEARCH_SYSTEM32	windows/winstuff.h	528;"	d
LOAD_LIBRARY_SEARCH_USER_DIRS	windows/winstuff.h	531;"	d
LOG	tree234.c	35;"	d	file:
LOG	tree234.c	44;"	d	file:
LONG_PTR	windows/winstuff.h	84;"	d
LONG_PTR	windows/winstuff.h	85;"	d
LONG_TO_GPOINTER	unix/gtkcomm.c	53;"	d	file:
LONG_TO_GPOINTER	unix/gtkcomm.c	57;"	d	file:
LOW_SURROGATE_END	putty.h	1530;"	d
LOW_SURROGATE_OF	putty.h	1548;"	d
LOW_SURROGATE_START	putty.h	1529;"	d
LRE	minibidi.c	/^    LRE,$/;"	e	enum:__anon37	file:
LRO	minibidi.c	/^    LRO,$/;"	e	enum:__anon37	file:
LTLIBOBJS	Makefile	/^LTLIBOBJS = $/;"	m
LZ77Context	sshzlib.c	/^struct LZ77Context {$/;"	s	file:
LZ77InternalContext	sshzlib.c	/^struct LZ77InternalContext {$/;"	s	file:
L_CLOSED	logging.c	/^    enum { L_CLOSED, L_OPENING, L_OPEN, L_ERROR } state;$/;"	e	enum:LogContext::__anon36	file:
L_ERROR	logging.c	/^    enum { L_CLOSED, L_OPENING, L_OPEN, L_ERROR } state;$/;"	e	enum:LogContext::__anon36	file:
L_OPEN	logging.c	/^    enum { L_CLOSED, L_OPENING, L_OPEN, L_ERROR } state;$/;"	e	enum:LogContext::__anon36	file:
L_OPENING	logging.c	/^    enum { L_CLOSED, L_OPENING, L_OPEN, L_ERROR } state;$/;"	e	enum:LogContext::__anon36	file:
Ldisc	ldisc.h	/^} *Ldisc;$/;"	t	typeref:struct:ldisc_tag
LicenceProc	windows/windlg.c	/^static INT_PTR CALLBACK LicenceProc(HWND hwnd, UINT msg,$/;"	f	file:
LicenceProc	windows/winpgen.c	/^static INT_PTR CALLBACK LicenceProc(HWND hwnd, UINT msg,$/;"	f	file:
LicenceProc	windows/winpgnt.c	/^static INT_PTR CALLBACK LicenceProc(HWND hwnd, UINT msg,$/;"	f	file:
Local_Proxy_Socket	unix/uxproxy.c	/^typedef struct Socket_localproxy_tag * Local_Proxy_Socket;$/;"	t	typeref:struct:Socket_localproxy_tag	file:
LogContext	logging.c	/^struct LogContext {$/;"	s	file:
LogProc	windows/windlg.c	/^static INT_PTR CALLBACK LogProc(HWND hwnd, UINT msg,$/;"	f	file:
MAKEINFO	Makefile	/^MAKEINFO = ${SHELL} \/media\/B\/cjn\/putty-0.70\/missing makeinfo$/;"	m
MAKEWORD	sshaes.c	669;"	d	file:
MAKEWORD	sshaes.c	791;"	d	file:
MAKEWORD	sshaes.c	798;"	d	file:
MAKEWORD	sshaes.c	920;"	d	file:
MANPAGES	doc/Makefile	/^MANPAGES = putty.1 puttygen.1 plink.1 pscp.1 psftp.1 puttytel.1 pterm.1 \\$/;"	m
MANS	Makefile	/^MANS = $(man1_MANS)$/;"	m
MAXCODELEN	sshzlib.c	826;"	d	file:
MAXKEXLIST	ssh.c	6289;"	d	file:
MAXMATCH	sshzlib.c	103;"	d	file:
MAXPHASE	windows/winpgen.c	67;"	d	file:
MAXSYMS	sshzlib.c	827;"	d	file:
MAX_BACKLOG	windows/winhandl.c	44;"	d	file:
MAX_JUMPLIST_ITEMS	windows/winjump.c	25;"	d	file:
MAX_NB	sshaes.c	37;"	d	file:
MAX_NK	sshaes.c	36;"	d	file:
MAX_NR	sshaes.c	35;"	d	file:
MAX_SCP_BUFSIZE	pscp.c	61;"	d	file:
MAX_SHORTCUTS_PER_CTRL	windows/winstuff.h	437;"	d
MAX_STDIN_BACKLOG	unix/uxplink.c	26;"	d	file:
MAY_REFER_TO_GTK_IN_HEADERS	unix/gtkapp.c	124;"	d	file:
MAY_REFER_TO_GTK_IN_HEADERS	unix/gtkcomm.c	32;"	d	file:
MAY_REFER_TO_GTK_IN_HEADERS	unix/gtkdlg.c	15;"	d	file:
MAY_REFER_TO_GTK_IN_HEADERS	unix/gtkfont.c	21;"	d	file:
MAY_REFER_TO_GTK_IN_HEADERS	unix/gtkmain.c	31;"	d	file:
MAY_REFER_TO_GTK_IN_HEADERS	unix/gtkwin.c	32;"	d	file:
MA_2CLK	putty.h	/^    MA_NOTHING, MA_CLICK, MA_2CLK, MA_3CLK, MA_DRAG, MA_RELEASE$/;"	e	enum:__anon47
MA_3CLK	putty.h	/^    MA_NOTHING, MA_CLICK, MA_2CLK, MA_3CLK, MA_DRAG, MA_RELEASE$/;"	e	enum:__anon47
MA_CLICK	putty.h	/^    MA_NOTHING, MA_CLICK, MA_2CLK, MA_3CLK, MA_DRAG, MA_RELEASE$/;"	e	enum:__anon47
MA_DRAG	putty.h	/^    MA_NOTHING, MA_CLICK, MA_2CLK, MA_3CLK, MA_DRAG, MA_RELEASE$/;"	e	enum:__anon47
MA_NOTHING	putty.h	/^    MA_NOTHING, MA_CLICK, MA_2CLK, MA_3CLK, MA_DRAG, MA_RELEASE$/;"	e	enum:__anon47
MA_RELEASE	putty.h	/^    MA_NOTHING, MA_CLICK, MA_2CLK, MA_3CLK, MA_DRAG, MA_RELEASE$/;"	e	enum:__anon47
MBT_EXTEND	putty.h	/^    MBT_SELECT, MBT_EXTEND, MBT_PASTE, \/* `cooked' button designations *\/$/;"	e	enum:__anon46
MBT_LEFT	putty.h	/^    MBT_LEFT, MBT_MIDDLE, MBT_RIGHT,   \/* `raw' button designations *\/$/;"	e	enum:__anon46
MBT_MIDDLE	putty.h	/^    MBT_LEFT, MBT_MIDDLE, MBT_RIGHT,   \/* `raw' button designations *\/$/;"	e	enum:__anon46
MBT_NOTHING	putty.h	/^    MBT_NOTHING,$/;"	e	enum:__anon46
MBT_PASTE	putty.h	/^    MBT_SELECT, MBT_EXTEND, MBT_PASTE, \/* `cooked' button designations *\/$/;"	e	enum:__anon46
MBT_RIGHT	putty.h	/^    MBT_LEFT, MBT_MIDDLE, MBT_RIGHT,   \/* `raw' button designations *\/$/;"	e	enum:__anon46
MBT_SELECT	putty.h	/^    MBT_SELECT, MBT_EXTEND, MBT_PASTE, \/* `cooked' button designations *\/$/;"	e	enum:__anon46
MBT_WHEEL_DOWN	putty.h	/^    MBT_WHEEL_UP, MBT_WHEEL_DOWN       \/* mouse wheel *\/$/;"	e	enum:__anon46
MBT_WHEEL_UP	putty.h	/^    MBT_WHEEL_UP, MBT_WHEEL_DOWN       \/* mouse wheel *\/$/;"	e	enum:__anon46
MD5Context	ssh.h	/^struct MD5Context {$/;"	s
MD5Final	sshmd5.c	/^void MD5Final(unsigned char output[16], struct MD5Context *s)$/;"	f
MD5Init	sshmd5.c	/^void MD5Init(struct MD5Context *s)$/;"	f
MD5Simple	sshmd5.c	/^void MD5Simple(void const *p, unsigned len, unsigned char output[16])$/;"	f
MD5Update	sshmd5.c	/^void MD5Update(struct MD5Context *s, unsigned char const *p, unsigned len)$/;"	f
MD5_Block	sshmd5.c	/^static void MD5_Block(MD5_Core_State * s, uint32 * block)$/;"	f	file:
MD5_Core_Init	sshmd5.c	/^static void MD5_Core_Init(MD5_Core_State * s)$/;"	f	file:
MD5_Core_State	ssh.h	/^} MD5_Core_State;$/;"	t	typeref:struct:__anon92
MENU_SAVED_MAX	windows/window.c	64;"	d	file:
MENU_SAVED_STEP	windows/window.c	62;"	d	file:
META_MANUAL_MASK	unix/unix.h	30;"	d
MKDIR_P	Makefile	/^MKDIR_P = \/usr\/bin\/mkdir -p$/;"	m
MKMAN	doc/Makefile	/^MKMAN = $(HALIBUT) --man=$@ mancfg.but $<$/;"	m
MKMENUITEM	unix/gtkwin.c	4576;"	d	file:
MKMENUITEM	unix/gtkwin.c	4633;"	d	file:
MKSEP	unix/gtkwin.c	4592;"	d	file:
MKSEP	unix/gtkwin.c	4635;"	d	file:
MKSUBMENU	unix/gtkwin.c	4585;"	d	file:
MKSUBMENU	unix/gtkwin.c	4634;"	d	file:
MODE	icons/Makefile	/^MODE = # override to -it on command line for opaque testing$/;"	m
MONOPAMS	icons/Makefile	/^MONOPAMS = $(foreach I,$(ICONS),$(foreach S,$(SIZES),$(I)-$(S)-mono.pam))$/;"	m
MONOPNGS	icons/Makefile	/^MONOPNGS = $(patsubst %.pam,%.png,$(MONOPAMS))$/;"	m
MOVEWORD	sshaes.c	663;"	d	file:
MULTICLICK_ONLY_EVENT	unix/unix.h	82;"	d
MULTICLICK_ONLY_EVENT	windows/winstuff.h	251;"	d
MainDlgProc	windows/winpgen.c	/^static INT_PTR CALLBACK MainDlgProc(HWND hwnd, UINT msg,$/;"	f	file:
MainDlgState	windows/winpgen.c	/^struct MainDlgState {$/;"	s	file:
Maj	sshsh256.c	16;"	d	file:
Maj	sshsh512.c	39;"	d	file:
Match	sshzlib.c	/^struct Match {$/;"	s	file:
Mouse_Action	putty.h	/^} Mouse_Action;$/;"	t	typeref:enum:__anon47
Mouse_Button	putty.h	/^} Mouse_Button;$/;"	t	typeref:enum:__anon46
Multiprecision	contrib/make1305.py	/^class Multiprecision(object):$/;"	c
NALLCOLOURS	unix/gtkwin.c	51;"	d	file:
NALLCOLOURS	windows/window.c	199;"	d	file:
NCFGCOLOURS	putty.h	920;"	d
NCFGCOLOURS	windows/window.c	197;"	d	file:
NEED_DECLARATION_OF_SELECT	windows/winnet.c	15;"	d	file:
NEED_DECLARATION_OF_SELECT	windows/winsftp.c	8;"	d	file:
NEXTCOLOURS	unix/gtkwin.c	50;"	d	file:
NEXTCOLOURS	windows/window.c	198;"	d	file:
NOISE_REGULAR_INTERVAL	sshrand.c	10;"	d	file:
NOP	contrib/cygtermd/telnet.c	38;"	d	file:
NOP	telnet.c	34;"	d	file:
NORMAL_INSTALL	Makefile	/^NORMAL_INSTALL = :$/;"	m
NORMAL_UNINSTALL	Makefile	/^NORMAL_UNINSTALL = :$/;"	m
NOT_X_WINDOWS	unix/unix.h	25;"	d
NO_BACKING_PIXMAPS	unix/gtkfont.h	46;"	d
NO_GSSAPI	uxconfig.h	144;"	d
NO_GSSAPI	uxconfig.h	148;"	d
NO_IPV6	uxconfig.h	120;"	d
NO_MULTIMON	windows/window.c	14;"	d	file:
NO_PTY_PRE_INIT	unix/unix.h	26;"	d
NO_SECUREZEROMEMORY	windows/winstuff.h	93;"	d
NO_SELECTION	terminal.h	/^	NO_SELECTION, ABOUT_TO, DRAGGING, SELECTED$/;"	e	enum:terminal_tag::__anon111
NO_SHORTCUT	dialog.h	26;"	d
NPRIMES	sshprime.c	828;"	d	file:
NPRIORITIES	cmdline.c	31;"	d	file:
NROFF	Makefile	/^NROFF = nroff$/;"	m
NSM	minibidi.c	/^    NSM,$/;"	e	enum:__anon37	file:
NSTR	tree234.c	1325;"	d	file:
NUL	contrib/cygtermd/telnet.c	114;"	d	file:
NUL	telnet.c	110;"	d	file:
NULLTOEMPTY	misc.h	206;"	d
NUM_OPTS	contrib/cygtermd/telnet.c	/^    NUM_OPTS$/;"	e	enum:__anon13	file:
NUM_OPTS	telnet.c	/^    NUM_OPTS$/;"	e	enum:__anon106	file:
NWORDS	sshccp.c	183;"	d	file:
N_CONFIG_OPTIONS	putty.h	/^enum config_primary_key { CONFIG_OPTIONS(CONF_ENUM_DEF) N_CONFIG_OPTIONS };$/;"	e	enum:config_primary_key
N_DRAWING_AREAS	unix/gtkask.c	23;"	d	file:
Named_Pipe_Server_Socket	windows/winnps.c	/^typedef struct Socket_named_pipe_server_tag *Named_Pipe_Server_Socket;$/;"	t	typeref:struct:Socket_named_pipe_server_tag	file:
Nb	sshaes.c	/^    int Nb, Nr;$/;"	m	struct:AESContext	file:
Nr	sshaes.c	/^    int Nb, Nr;$/;"	m	struct:AESContext	file:
NullDlgProc	windows/windlg.c	/^static INT_PTR CALLBACK NullDlgProc(HWND hwnd, UINT msg,$/;"	f	file:
OBJEXT	Makefile	/^OBJEXT = o$/;"	m
OISL	minibidi.c	30;"	d	file:
OISR	minibidi.c	31;"	d	file:
OMASK	minibidi.c	29;"	d	file:
OMIT_UTMP	uxconfig.h	129;"	d
OM_uint32	pgssapi.h	/^typedef uint32 OM_uint32;$/;"	t
ON	minibidi.c	/^    ON$/;"	e	enum:__anon37	file:
ONE	sshcrcda.c	/^uchar ONE[4] = { 1, 0, 0, 0 };$/;"	v
ON_E_AES256CBC	import.c	/^    ON_E_NONE, ON_E_AES256CBC$/;"	e	enum:__anon31	file:
ON_E_NONE	import.c	/^    ON_E_NONE, ON_E_AES256CBC$/;"	e	enum:__anon31	file:
ON_K_BCRYPT	import.c	/^    ON_K_NONE, ON_K_BCRYPT$/;"	e	enum:__anon32	file:
ON_K_NONE	import.c	/^    ON_K_NONE, ON_K_BCRYPT$/;"	e	enum:__anon32	file:
OPEN	sshshare.c	/^    OPEN,$/;"	e	enum:__anon100	file:
OPEN_R	windows/winstore.c	/^enum { DEL, OPEN_R, OPEN_W };$/;"	e	enum:__anon133	file:
OPEN_W	windows/winstore.c	/^enum { DEL, OPEN_R, OPEN_W };$/;"	e	enum:__anon133	file:
OPTIMISE_IS_SCROLL	putty.h	653;"	d
OPTINDEX_ECHO	contrib/cygtermd/telnet.c	/^    OPTINDEX_ECHO,$/;"	e	enum:__anon13	file:
OPTINDEX_ECHO	telnet.c	/^    OPTINDEX_ECHO,$/;"	e	enum:__anon106	file:
OPTINDEX_NAWS	contrib/cygtermd/telnet.c	/^    OPTINDEX_NAWS,$/;"	e	enum:__anon13	file:
OPTINDEX_NAWS	telnet.c	/^    OPTINDEX_NAWS,$/;"	e	enum:__anon106	file:
OPTINDEX_NENV	contrib/cygtermd/telnet.c	/^    OPTINDEX_NENV,$/;"	e	enum:__anon13	file:
OPTINDEX_NENV	telnet.c	/^    OPTINDEX_NENV,$/;"	e	enum:__anon106	file:
OPTINDEX_OENV	contrib/cygtermd/telnet.c	/^    OPTINDEX_OENV,$/;"	e	enum:__anon13	file:
OPTINDEX_OENV	telnet.c	/^    OPTINDEX_OENV,$/;"	e	enum:__anon106	file:
OPTINDEX_THEY_BIN	contrib/cygtermd/telnet.c	/^    OPTINDEX_THEY_BIN,$/;"	e	enum:__anon13	file:
OPTINDEX_THEY_BIN	telnet.c	/^    OPTINDEX_THEY_BIN,$/;"	e	enum:__anon106	file:
OPTINDEX_THEY_SGA	contrib/cygtermd/telnet.c	/^    OPTINDEX_THEY_SGA,$/;"	e	enum:__anon13	file:
OPTINDEX_THEY_SGA	telnet.c	/^    OPTINDEX_THEY_SGA,$/;"	e	enum:__anon106	file:
OPTINDEX_TSPEED	contrib/cygtermd/telnet.c	/^    OPTINDEX_TSPEED,$/;"	e	enum:__anon13	file:
OPTINDEX_TSPEED	telnet.c	/^    OPTINDEX_TSPEED,$/;"	e	enum:__anon106	file:
OPTINDEX_TTYPE	contrib/cygtermd/telnet.c	/^    OPTINDEX_TTYPE,$/;"	e	enum:__anon13	file:
OPTINDEX_TTYPE	telnet.c	/^    OPTINDEX_TTYPE,$/;"	e	enum:__anon106	file:
OPTINDEX_WE_BIN	contrib/cygtermd/telnet.c	/^    OPTINDEX_WE_BIN,$/;"	e	enum:__anon13	file:
OPTINDEX_WE_BIN	telnet.c	/^    OPTINDEX_WE_BIN,$/;"	e	enum:__anon106	file:
OPTINDEX_WE_SGA	contrib/cygtermd/telnet.c	/^    OPTINDEX_WE_SGA,$/;"	e	enum:__anon13	file:
OPTINDEX_WE_SGA	telnet.c	/^    OPTINDEX_WE_SGA,$/;"	e	enum:__anon106	file:
OP_DSA	import.c	/^    OP_DSA, OP_RSA, OP_ECDSA$/;"	e	enum:__anon29	file:
OP_ECDSA	import.c	/^    OP_DSA, OP_RSA, OP_ECDSA$/;"	e	enum:__anon29	file:
OP_E_3DES	import.c	/^    OP_E_3DES, OP_E_AES$/;"	e	enum:__anon30	file:
OP_E_AES	import.c	/^    OP_E_3DES, OP_E_AES$/;"	e	enum:__anon30	file:
OP_RSA	import.c	/^    OP_DSA, OP_RSA, OP_ECDSA$/;"	e	enum:__anon29	file:
OSC_MAYBE_ST	terminal.h	/^	OSC_STRING, OSC_MAYBE_ST,$/;"	e	enum:terminal_tag::__anon110
OSC_STRING	terminal.h	/^	OSC_STRING, OSC_MAYBE_ST,$/;"	e	enum:terminal_tag::__anon110
OSC_STR_MAX	terminal.h	181;"	d
OSX_META_KEY_CONFIG	unix/unix.h	28;"	d
OUR_V2_BIGWIN	ssh.c	414;"	d	file:
OUR_V2_MAXPKT	ssh.c	415;"	d	file:
OUR_V2_PACKETLIMIT	ssh.c	416;"	d	file:
OUR_V2_WINSIZE	ssh.c	413;"	d	file:
OUTSIDEBLK	sshzlib.c	/^	START, OUTSIDEBLK,$/;"	e	enum:zlib_decompress_ctx::__anon103	file:
One	sshbn.c	/^Bignum Zero = bnZero, One = bnOne, Ten = bnTen;$/;"	v
Opt	contrib/cygtermd/telnet.c	/^struct Opt {$/;"	s	file:
Opt	telnet.c	/^struct Opt {$/;"	s	file:
Outbuf	sshzlib.c	/^struct Outbuf {$/;"	s	file:
P	dialog.h	/^PREFIX intorptr P(void *p) { intorptr ret; ret.p = p; return ret; }$/;"	f
P	sshblowf.c	/^    word32 S0[256], S1[256], S2[256], S3[256], P[18];$/;"	m	struct:BlowfishContext	file:
P1	sshdh.c	/^static const unsigned char P1[] = {$/;"	v	file:
P14	sshdh.c	/^static const unsigned char P14[] = {$/;"	v	file:
PACKAGE	Makefile	/^PACKAGE = putty$/;"	m
PACKAGE	uxconfig.h	87;"	d
PACKAGE_BUGREPORT	Makefile	/^PACKAGE_BUGREPORT = $/;"	m
PACKAGE_BUGREPORT	uxconfig.h	90;"	d
PACKAGE_NAME	Makefile	/^PACKAGE_NAME = putty$/;"	m
PACKAGE_NAME	uxconfig.h	93;"	d
PACKAGE_STRING	Makefile	/^PACKAGE_STRING = putty 0.70$/;"	m
PACKAGE_STRING	uxconfig.h	96;"	d
PACKAGE_TARNAME	Makefile	/^PACKAGE_TARNAME = putty$/;"	m
PACKAGE_TARNAME	uxconfig.h	99;"	d
PACKAGE_URL	Makefile	/^PACKAGE_URL = $/;"	m
PACKAGE_URL	uxconfig.h	102;"	d
PACKAGE_VERSION	Makefile	/^PACKAGE_VERSION = 0.70$/;"	m
PACKAGE_VERSION	uxconfig.h	105;"	d
PAGEANT_ACTION_FAILURE	pageant.h	/^    PAGEANT_ACTION_FAILURE,  \/* failure; *retstr is error message *\/$/;"	e	enum:__anon41
PAGEANT_ACTION_NEED_PP	pageant.h	/^    PAGEANT_ACTION_NEED_PP   \/* need passphrase: *retstr is key comment *\/$/;"	e	enum:__anon41
PAGEANT_ACTION_OK	pageant.h	/^    PAGEANT_ACTION_OK,       \/* success; no further action needed *\/$/;"	e	enum:__anon41
PAGEANT_DIR_PREFIX	unix/uxpgnt.c	156;"	d	file:
PAGESIZE	windows/winmisc.c	326;"	d	file:
PAMS	icons/Makefile	/^PAMS = $(foreach I,$(ICONS),$(foreach S,$(SIZES),$(I)-$(S).pam))$/;"	m
PANGO_DUMMY_SIZE	unix/gtkfont.c	1766;"	d	file:
PANGO_PRE_1POINT4	uxconfig.h	138;"	d
PANGO_PRE_1POINT6	unix/gtkfont.c	1288;"	d	file:
PANGO_PRE_1POINT6	uxconfig.h	141;"	d
PATH_SEPARATOR	Makefile	/^PATH_SEPARATOR = :$/;"	m
PDF	minibidi.c	/^    PDF,$/;"	e	enum:__anon37	file:
PGP_DSA_MASTER_KEY_FP	putty.h	38;"	d
PGP_MASTER_KEY_FP	putty.h	34;"	d
PGP_RSA_MASTER_KEY_FP	putty.h	36;"	d
PKEY_Title	windows/winjump.c	/^static const PROPERTYKEY PKEY_Title = {$/;"	v	file:
PKF_CAPSLOCK	putty.h	219;"	d
PKF_NUMLOCK	putty.h	220;"	d
PKF_REPEAT	putty.h	221;"	d
PKG_CONFIG	Makefile	/^PKG_CONFIG = \/usr\/bin\/pkg-config$/;"	m
PKG_CONFIG_LIBDIR	Makefile	/^PKG_CONFIG_LIBDIR = $/;"	m
PKG_CONFIG_PATH	Makefile	/^PKG_CONFIG_PATH = $/;"	m
PKM_ALT	putty.h	216;"	d
PKM_CONTROL	putty.h	214;"	d
PKM_META	putty.h	215;"	d
PKM_SHIFT	putty.h	213;"	d
PKTLOG_BLANK	putty.h	/^enum { PKTLOG_EMIT, PKTLOG_BLANK, PKTLOG_OMIT };$/;"	e	enum:__anon70
PKTLOG_EMIT	putty.h	/^enum { PKTLOG_EMIT, PKTLOG_BLANK, PKTLOG_OMIT };$/;"	e	enum:__anon70
PKTLOG_OMIT	putty.h	/^enum { PKTLOG_EMIT, PKTLOG_BLANK, PKTLOG_OMIT };$/;"	e	enum:__anon70
PKT_BIGNUM	ssh.c	/^    PKT_END, PKT_INT, PKT_CHAR, PKT_DATA, PKT_STR, PKT_BIGNUM,$/;"	e	enum:__anon76	file:
PKT_CHAR	ssh.c	/^    PKT_END, PKT_INT, PKT_CHAR, PKT_DATA, PKT_STR, PKT_BIGNUM,$/;"	e	enum:__anon76	file:
PKT_DATA	ssh.c	/^    PKT_END, PKT_INT, PKT_CHAR, PKT_DATA, PKT_STR, PKT_BIGNUM,$/;"	e	enum:__anon76	file:
PKT_END	ssh.c	/^    PKT_END, PKT_INT, PKT_CHAR, PKT_DATA, PKT_STR, PKT_BIGNUM,$/;"	e	enum:__anon76	file:
PKT_INCOMING	putty.h	/^enum { PKT_INCOMING, PKT_OUTGOING };$/;"	e	enum:__anon69
PKT_INT	ssh.c	/^    PKT_END, PKT_INT, PKT_CHAR, PKT_DATA, PKT_STR, PKT_BIGNUM,$/;"	e	enum:__anon76	file:
PKT_OUTGOING	putty.h	/^enum { PKT_INCOMING, PKT_OUTGOING };$/;"	e	enum:__anon69
PKT_STR	ssh.c	/^    PKT_END, PKT_INT, PKT_CHAR, PKT_DATA, PKT_STR, PKT_BIGNUM,$/;"	e	enum:__anon76	file:
PK_BACKSPACE	putty.h	/^    PK_ESCAPE, PK_TAB, PK_BACKSPACE, PK_RETURN, PK_COMPOSE,$/;"	e	enum:__anon48
PK_COMPOSE	putty.h	/^    PK_ESCAPE, PK_TAB, PK_BACKSPACE, PK_RETURN, PK_COMPOSE,$/;"	e	enum:__anon48
PK_DELETE	putty.h	/^    PK_HOME, PK_INSERT, PK_DELETE, PK_END, PK_PAGEUP, PK_PAGEDOWN,$/;"	e	enum:__anon48
PK_DOWN	putty.h	/^    PK_UP, PK_DOWN, PK_RIGHT, PK_LEFT, PK_REST,$/;"	e	enum:__anon48
PK_END	putty.h	/^    PK_HOME, PK_INSERT, PK_DELETE, PK_END, PK_PAGEUP, PK_PAGEDOWN,$/;"	e	enum:__anon48
PK_ESCAPE	putty.h	/^    PK_ESCAPE, PK_TAB, PK_BACKSPACE, PK_RETURN, PK_COMPOSE,$/;"	e	enum:__anon48
PK_F1	putty.h	/^    PK_F1,  PK_F2,  PK_F3,  PK_F4,  PK_F5,$/;"	e	enum:__anon48
PK_F10	putty.h	/^    PK_F6,  PK_F7,  PK_F8,  PK_F9,  PK_F10,$/;"	e	enum:__anon48
PK_F11	putty.h	/^    PK_F11, PK_F12, PK_F13, PK_F14, PK_F15,$/;"	e	enum:__anon48
PK_F12	putty.h	/^    PK_F11, PK_F12, PK_F13, PK_F14, PK_F15,$/;"	e	enum:__anon48
PK_F13	putty.h	/^    PK_F11, PK_F12, PK_F13, PK_F14, PK_F15,$/;"	e	enum:__anon48
PK_F14	putty.h	/^    PK_F11, PK_F12, PK_F13, PK_F14, PK_F15,$/;"	e	enum:__anon48
PK_F15	putty.h	/^    PK_F11, PK_F12, PK_F13, PK_F14, PK_F15,$/;"	e	enum:__anon48
PK_F16	putty.h	/^    PK_F16, PK_F17, PK_F18, PK_F19, PK_F20,$/;"	e	enum:__anon48
PK_F17	putty.h	/^    PK_F16, PK_F17, PK_F18, PK_F19, PK_F20,$/;"	e	enum:__anon48
PK_F18	putty.h	/^    PK_F16, PK_F17, PK_F18, PK_F19, PK_F20,$/;"	e	enum:__anon48
PK_F19	putty.h	/^    PK_F16, PK_F17, PK_F18, PK_F19, PK_F20,$/;"	e	enum:__anon48
PK_F2	putty.h	/^    PK_F1,  PK_F2,  PK_F3,  PK_F4,  PK_F5,$/;"	e	enum:__anon48
PK_F20	putty.h	/^    PK_F16, PK_F17, PK_F18, PK_F19, PK_F20,$/;"	e	enum:__anon48
PK_F3	putty.h	/^    PK_F1,  PK_F2,  PK_F3,  PK_F4,  PK_F5,$/;"	e	enum:__anon48
PK_F4	putty.h	/^    PK_F1,  PK_F2,  PK_F3,  PK_F4,  PK_F5,$/;"	e	enum:__anon48
PK_F5	putty.h	/^    PK_F1,  PK_F2,  PK_F3,  PK_F4,  PK_F5,$/;"	e	enum:__anon48
PK_F6	putty.h	/^    PK_F6,  PK_F7,  PK_F8,  PK_F9,  PK_F10,$/;"	e	enum:__anon48
PK_F7	putty.h	/^    PK_F6,  PK_F7,  PK_F8,  PK_F9,  PK_F10,$/;"	e	enum:__anon48
PK_F8	putty.h	/^    PK_F6,  PK_F7,  PK_F8,  PK_F9,  PK_F10,$/;"	e	enum:__anon48
PK_F9	putty.h	/^    PK_F6,  PK_F7,  PK_F8,  PK_F9,  PK_F10,$/;"	e	enum:__anon48
PK_HOME	putty.h	/^    PK_HOME, PK_INSERT, PK_DELETE, PK_END, PK_PAGEUP, PK_PAGEDOWN,$/;"	e	enum:__anon48
PK_INSERT	putty.h	/^    PK_HOME, PK_INSERT, PK_DELETE, PK_END, PK_PAGEUP, PK_PAGEDOWN,$/;"	e	enum:__anon48
PK_ISCURSOR	putty.h	248;"	d
PK_ISEDITING	putty.h	247;"	d
PK_ISFKEY	putty.h	250;"	d
PK_ISKEYPAD	putty.h	249;"	d
PK_KP0	putty.h	/^    PK_KP0, PK_KP1, PK_KP2, PK_KP3, PK_KP4,	\/*  4   5   6   ,  *\/$/;"	e	enum:__anon48
PK_KP1	putty.h	/^    PK_KP0, PK_KP1, PK_KP2, PK_KP3, PK_KP4,	\/*  4   5   6   ,  *\/$/;"	e	enum:__anon48
PK_KP2	putty.h	/^    PK_KP0, PK_KP1, PK_KP2, PK_KP3, PK_KP4,	\/*  4   5   6   ,  *\/$/;"	e	enum:__anon48
PK_KP3	putty.h	/^    PK_KP0, PK_KP1, PK_KP2, PK_KP3, PK_KP4,	\/*  4   5   6   ,  *\/$/;"	e	enum:__anon48
PK_KP4	putty.h	/^    PK_KP0, PK_KP1, PK_KP2, PK_KP3, PK_KP4,	\/*  4   5   6   ,  *\/$/;"	e	enum:__anon48
PK_KP5	putty.h	/^    PK_KP5, PK_KP6, PK_KP7, PK_KP8, PK_KP9,	\/*  1   2   3  en- *\/$/;"	e	enum:__anon48
PK_KP6	putty.h	/^    PK_KP5, PK_KP6, PK_KP7, PK_KP8, PK_KP9,	\/*  1   2   3  en- *\/$/;"	e	enum:__anon48
PK_KP7	putty.h	/^    PK_KP5, PK_KP6, PK_KP7, PK_KP8, PK_KP9,	\/*  1   2   3  en- *\/$/;"	e	enum:__anon48
PK_KP8	putty.h	/^    PK_KP5, PK_KP6, PK_KP7, PK_KP8, PK_KP9,	\/*  1   2   3  en- *\/$/;"	e	enum:__anon48
PK_KP9	putty.h	/^    PK_KP5, PK_KP6, PK_KP7, PK_KP8, PK_KP9,	\/*  1   2   3  en- *\/$/;"	e	enum:__anon48
PK_KPBIGPLUS	putty.h	/^    PK_KPBIGPLUS, PK_KPENTER,			\/*    0     .  ter *\/$/;"	e	enum:__anon48
PK_KPCOMMA	putty.h	/^    PK_KPCOMMA, PK_KPMINUS, PK_KPDECIMAL,	\/*  7   8   9   -  *\/$/;"	e	enum:__anon48
PK_KPDECIMAL	putty.h	/^    PK_KPCOMMA, PK_KPMINUS, PK_KPDECIMAL,	\/*  7   8   9   -  *\/$/;"	e	enum:__anon48
PK_KPENTER	putty.h	/^    PK_KPBIGPLUS, PK_KPENTER,			\/*    0     .  ter *\/$/;"	e	enum:__anon48
PK_KPMINUS	putty.h	/^    PK_KPCOMMA, PK_KPMINUS, PK_KPDECIMAL,	\/*  7   8   9   -  *\/$/;"	e	enum:__anon48
PK_LEFT	putty.h	/^    PK_UP, PK_DOWN, PK_RIGHT, PK_LEFT, PK_REST,$/;"	e	enum:__anon48
PK_NULL	putty.h	/^    PK_NULL,		\/* No symbol for this key *\/$/;"	e	enum:__anon48
PK_PAGEDOWN	putty.h	/^    PK_HOME, PK_INSERT, PK_DELETE, PK_END, PK_PAGEUP, PK_PAGEDOWN,$/;"	e	enum:__anon48
PK_PAGEUP	putty.h	/^    PK_HOME, PK_INSERT, PK_DELETE, PK_END, PK_PAGEUP, PK_PAGEDOWN,$/;"	e	enum:__anon48
PK_PAUSE	putty.h	/^    PK_PAUSE$/;"	e	enum:__anon48
PK_PF1	putty.h	/^    PK_PF1, PK_PF2, PK_PF3, PK_PF4,		\/* PF1 PF2 PF3 PF4 *\/$/;"	e	enum:__anon48
PK_PF2	putty.h	/^    PK_PF1, PK_PF2, PK_PF3, PK_PF4,		\/* PF1 PF2 PF3 PF4 *\/$/;"	e	enum:__anon48
PK_PF3	putty.h	/^    PK_PF1, PK_PF2, PK_PF3, PK_PF4,		\/* PF1 PF2 PF3 PF4 *\/$/;"	e	enum:__anon48
PK_PF4	putty.h	/^    PK_PF1, PK_PF2, PK_PF3, PK_PF4,		\/* PF1 PF2 PF3 PF4 *\/$/;"	e	enum:__anon48
PK_REST	putty.h	/^    PK_UP, PK_DOWN, PK_RIGHT, PK_LEFT, PK_REST,$/;"	e	enum:__anon48
PK_RETURN	putty.h	/^    PK_ESCAPE, PK_TAB, PK_BACKSPACE, PK_RETURN, PK_COMPOSE,$/;"	e	enum:__anon48
PK_RIGHT	putty.h	/^    PK_UP, PK_DOWN, PK_RIGHT, PK_LEFT, PK_REST,$/;"	e	enum:__anon48
PK_TAB	putty.h	/^    PK_ESCAPE, PK_TAB, PK_BACKSPACE, PK_RETURN, PK_COMPOSE,$/;"	e	enum:__anon48
PK_UP	putty.h	/^    PK_UP, PK_DOWN, PK_RIGHT, PK_LEFT, PK_REST,$/;"	e	enum:__anon48
PLATFORM_HAS_SMEMCLR	windows/winstuff.h	97;"	d
PLATFORM_IS_UTF16	windows/winstuff.h	55;"	d
PNGS	icons/Makefile	/^PNGS = $(patsubst %.pam,%.png,$(PAMS))$/;"	m
POLY	sshcrc.c	91;"	d	file:
POOLSIZE	sshrand.c	34;"	d	file:
PORT_BOX_TITLE	config.c	16;"	d	file:
POST_INSTALL	Makefile	/^POST_INSTALL = :$/;"	m
POST_UNINSTALL	Makefile	/^POST_UNINSTALL = :$/;"	m
PREFIX	dialog.h	61;"	d
PREFIX	dialog.h	63;"	d
PREFIX	dialog.h	67;"	d
PRE_INSTALL	Makefile	/^PRE_INSTALL = :$/;"	m
PRE_UNINSTALL	Makefile	/^PRE_UNINSTALL = :$/;"	m
PRINTER_DISABLED_STRING	config.c	13;"	d	file:
PRINTER_DISABLED_STRING	windows/windlg.c	50;"	d	file:
PROGBARHEIGHT	windows/winctrls.c	39;"	d	file:
PROGFN_EXP_PHASE	ssh.h	806;"	d
PROGFN_INITIALISE	ssh.h	804;"	d
PROGFN_LIN_PHASE	ssh.h	805;"	d
PROGFN_PHASE_EXTENT	ssh.h	807;"	d
PROGFN_PROGRESS	ssh.h	809;"	d
PROGFN_READY	ssh.h	808;"	d
PROGRAMS	Makefile	/^PROGRAMS = $(bin_PROGRAMS) $(noinst_PROGRAMS)$/;"	m
PROGRESSRANGE	windows/winpgen.c	66;"	d	file:
PROPERTYKEY	windows/winjump.c	/^} PROPERTYKEY;$/;"	t	typeref:struct:_tagpropertykey	file:
PROPERTYKEY_DEFINED	windows/winjump.c	33;"	d	file:
PROT_RAW	putty.h	/^    PROT_RAW, PROT_TELNET, PROT_RLOGIN, PROT_SSH,$/;"	e	enum:__anon57
PROT_RLOGIN	putty.h	/^    PROT_RAW, PROT_TELNET, PROT_RLOGIN, PROT_SSH,$/;"	e	enum:__anon57
PROT_SERIAL	putty.h	/^    PROT_SERIAL$/;"	e	enum:__anon57
PROT_SSH	putty.h	/^    PROT_RAW, PROT_TELNET, PROT_RLOGIN, PROT_SSH,$/;"	e	enum:__anon57
PROT_TELNET	putty.h	/^    PROT_RAW, PROT_TELNET, PROT_RLOGIN, PROT_SSH,$/;"	e	enum:__anon57
PROXY_CHANGE_ACCEPTING	proxy.h	52;"	d
PROXY_CHANGE_CLOSING	proxy.h	49;"	d
PROXY_CHANGE_NEW	proxy.h	48;"	d
PROXY_CHANGE_RECEIVE	proxy.h	51;"	d
PROXY_CHANGE_SENT	proxy.h	50;"	d
PROXY_CMD	putty.h	/^    PROXY_HTTP, PROXY_TELNET, PROXY_CMD, PROXY_FUZZ$/;"	e	enum:__anon54
PROXY_ERROR_GENERAL	proxy.h	13;"	d
PROXY_ERROR_UNEXPECTED	proxy.h	14;"	d
PROXY_FUZZ	putty.h	/^    PROXY_HTTP, PROXY_TELNET, PROXY_CMD, PROXY_FUZZ$/;"	e	enum:__anon54
PROXY_HTTP	putty.h	/^    PROXY_HTTP, PROXY_TELNET, PROXY_CMD, PROXY_FUZZ$/;"	e	enum:__anon54
PROXY_NONE	putty.h	/^    PROXY_NONE, PROXY_SOCKS4, PROXY_SOCKS5,$/;"	e	enum:__anon54
PROXY_SOCKS4	putty.h	/^    PROXY_NONE, PROXY_SOCKS4, PROXY_SOCKS5,$/;"	e	enum:__anon54
PROXY_SOCKS5	putty.h	/^    PROXY_NONE, PROXY_SOCKS4, PROXY_SOCKS5,$/;"	e	enum:__anon54
PROXY_STATE_ACTIVE	proxy.h	36;"	d
PROXY_STATE_NEW	proxy.h	35;"	d
PROXY_TELNET	putty.h	/^    PROXY_HTTP, PROXY_TELNET, PROXY_CMD, PROXY_FUZZ$/;"	e	enum:__anon54
PSCP_SEND_BLOCK	pscp.c	1729;"	d	file:
PUSHBTNHEIGHT	windows/winctrls.c	38;"	d	file:
PUTTY_CHM_FILE	windows/winstuff.h	185;"	d
PUTTY_DEFAULT	windows/winpgnt.c	68;"	d	file:
PUTTY_DO_GLOBALS	cmdgen.c	5;"	d	file:
PUTTY_DO_GLOBALS	fuzzterm.c	5;"	d	file:
PUTTY_DO_GLOBALS	pscp.c	22;"	d	file:
PUTTY_DO_GLOBALS	psftp.c	11;"	d	file:
PUTTY_DO_GLOBALS	unix/gtkdlg.c	30;"	d	file:
PUTTY_DO_GLOBALS	unix/gtkwin.c	30;"	d	file:
PUTTY_DO_GLOBALS	unix/uxpgnt.c	17;"	d	file:
PUTTY_DO_GLOBALS	unix/uxplink.c	21;"	d	file:
PUTTY_DO_GLOBALS	windows/window.c	21;"	d	file:
PUTTY_DO_GLOBALS	windows/winpgen.c	10;"	d	file:
PUTTY_DO_GLOBALS	windows/winpgnt.c	11;"	d	file:
PUTTY_DO_GLOBALS	windows/winplink.c	10;"	d	file:
PUTTY_GTKFONT_H	unix/gtkfont.h	8;"	d
PUTTY_GTKMISC_H	unix/gtkmisc.h	6;"	d
PUTTY_HELP_CONTENTS	windows/winstuff.h	186;"	d
PUTTY_HELP_FILE	windows/winstuff.h	184;"	d
PUTTY_INT64_H	int64.h	6;"	d
PUTTY_LDISC_H	ldisc.h	9;"	d
PUTTY_MISC_H	misc.h	6;"	d
PUTTY_NETWORK_H	network.h	14;"	d
PUTTY_PGSSAPI_H	pgssapi.h	2;"	d
PUTTY_PROXY_H	proxy.h	11;"	d
PUTTY_PSFTP_H	psftp.h	9;"	d
PUTTY_PUTTYMEM_H	puttymem.h	6;"	d
PUTTY_PUTTYPS_H	puttyps.h	6;"	d
PUTTY_PUTTY_H	putty.h	2;"	d
PUTTY_RCSTUFF_H	windows/rcstuff.h	6;"	d
PUTTY_REGKEY	windows/winpgnt.c	67;"	d	file:
PUTTY_REG_GPARENT	windows/winstuff.h	173;"	d
PUTTY_REG_GPARENT_CHILD	windows/winstuff.h	174;"	d
PUTTY_REG_PARENT	windows/winstuff.h	171;"	d
PUTTY_REG_PARENT_CHILD	windows/winstuff.h	172;"	d
PUTTY_REG_POS	windows/winstuff.h	170;"	d
PUTTY_SSHGSSC_H	sshgssc.h	2;"	d
PUTTY_SSHGSS_H	sshgss.h	2;"	d
PUTTY_STORAGE_H	storage.h	7;"	d
PUTTY_TERMINAL_H	terminal.h	10;"	d
PUTTY_UINT32_DEFINED	ssh.h	194;"	d
PUTTY_UINT32_DEFINED	unix/unix.h	76;"	d
PUTTY_UINT32_DEFINED	windows/winstuff.h	198;"	d
PUTTY_UNIX_H	unix/unix.h	2;"	d
PUTTY_WINSTUFF_H	windows/winstuff.h	6;"	d
PUTTY_WIN_RES_H	windows/win_res.h	6;"	d
PUT_16BIT	x11fwd.c	17;"	d	file:
PUT_16BIT_LSB_FIRST	misc.h	175;"	d
PUT_16BIT_MSB_FIRST	misc.h	199;"	d
PUT_32BIT	misc.h	193;"	d
PUT_32BIT_LSB_FIRST	misc.h	165;"	d
PUT_32BIT_MSB_FIRST	misc.h	187;"	d
PUT_PERMISSIONS	sftp.h	93;"	d
Packet	ssh.c	/^struct Packet {$/;"	s	file:
PassphraseProc	windows/winpgen.c	/^static INT_PTR CALLBACK PassphraseProc(HWND hwnd, UINT msg,$/;"	f	file:
PassphraseProc	windows/winpgnt.c	/^static INT_PTR CALLBACK PassphraseProc(HWND hwnd, UINT msg,$/;"	f	file:
PassphraseProcStruct	windows/winpgen.c	/^struct PassphraseProcStruct {$/;"	s	file:
PassphraseProcStruct	windows/winpgnt.c	/^struct PassphraseProcStruct {$/;"	s	file:
Pinger	putty.h	/^typedef struct pinger_tag *Pinger;$/;"	t	typeref:struct:pinger_tag
Pkt_ACtx	ssh.c	/^} Pkt_ACtx;$/;"	t	typeref:enum:__anon74	file:
Pkt_KCtx	ssh.c	/^} Pkt_KCtx;$/;"	t	typeref:enum:__anon73	file:
Plug	network.h	/^typedef struct plug_function_table **Plug;$/;"	t	typeref:struct:plug_function_table
Plug_proxy_tag	proxy.h	/^struct Plug_proxy_tag {$/;"	s
PortForwarding	portfwd.c	/^struct PortForwarding {$/;"	s	file:
PortListener	portfwd.c	/^struct PortListener {$/;"	s	file:
PropVariantInit	windows/winjump.c	46;"	d	file:
Proxy_Plug	proxy.h	/^typedef struct Plug_proxy_tag * Proxy_Plug;$/;"	t	typeref:struct:Plug_proxy_tag
Proxy_Socket	proxy.h	/^typedef struct Socket_proxy_tag * Proxy_Socket;$/;"	t	typeref:struct:Socket_proxy_tag
Pty	unix/uxpty.c	/^typedef struct pty_tag *Pty;$/;"	t	typeref:struct:pty_tag	file:
QueryInterface	windows/winjump.c	/^    HRESULT ( __stdcall *QueryInterface ) ($/;"	m	struct:ICustomDestinationListVtbl	file:
QueryInterface	windows/winjump.c	/^    HRESULT ( __stdcall *QueryInterface )($/;"	m	struct:IObjectArrayVtbl	file:
QueryInterface	windows/winjump.c	/^    HRESULT ( __stdcall *QueryInterface )($/;"	m	struct:IObjectCollectionVtbl	file:
QueryInterface	windows/winjump.c	/^    HRESULT ( __stdcall *QueryInterface )($/;"	m	struct:IPropertyStoreVtbl	file:
QueryInterface	windows/winjump.c	/^    HRESULT ( __stdcall *QueryInterface )($/;"	m	struct:IShellLinkVtbl	file:
R	minibidi.c	/^    R,$/;"	e	enum:__anon37	file:
RADIOHEIGHT	windows/winctrls.c	33;"	d	file:
RANLIB	Makefile	/^RANLIB = ranlib$/;"	m
RAW_MAX_BACKLOG	raw.c	18;"	d	file:
RCVD_CLOSE	sshshare.c	/^    RCVD_CLOSE,$/;"	e	enum:__anon100	file:
REALLY_INACTIVE	contrib/cygtermd/telnet.c	/^	REQUESTED, ACTIVE, INACTIVE, REALLY_INACTIVE$/;"	e	enum:Opt::__anon12	file:
REALLY_INACTIVE	telnet.c	/^	REQUESTED, ACTIVE, INACTIVE, REALLY_INACTIVE$/;"	e	enum:Opt::__anon105	file:
RECTANGULAR	terminal.h	/^	LEXICOGRAPHIC, RECTANGULAR$/;"	e	enum:terminal_tag::__anon112
REFPROPVARIANT	windows/winjump.c	/^typedef PROPVARIANT *REFPROPVARIANT;$/;"	t	file:
REL234_EQ	tree234.h	/^    REL234_EQ, REL234_LT, REL234_LE, REL234_GT, REL234_GE$/;"	e	enum:__anon115
REL234_GE	tree234.h	/^    REL234_EQ, REL234_LT, REL234_LE, REL234_GT, REL234_GE$/;"	e	enum:__anon115
REL234_GT	tree234.h	/^    REL234_EQ, REL234_LT, REL234_LE, REL234_GT, REL234_GE$/;"	e	enum:__anon115
REL234_LE	tree234.h	/^    REL234_EQ, REL234_LT, REL234_LE, REL234_GT, REL234_GE$/;"	e	enum:__anon115
REL234_LT	tree234.h	/^    REL234_EQ, REL234_LT, REL234_LE, REL234_GT, REL234_GE$/;"	e	enum:__anon115
RELEASE	version.h	2;"	d
REQUESTED	contrib/cygtermd/telnet.c	/^	REQUESTED, ACTIVE, INACTIVE, REALLY_INACTIVE$/;"	e	enum:Opt::__anon12	file:
REQUESTED	telnet.c	/^	REQUESTED, ACTIVE, INACTIVE, REALLY_INACTIVE$/;"	e	enum:Opt::__anon105	file:
REQUEST_ID_OFFSET	sftp.c	258;"	d	file:
RESIZE_DISABLED	putty.h	/^    RESIZE_TERM, RESIZE_DISABLED, RESIZE_FONT, RESIZE_EITHER$/;"	e	enum:__anon60
RESIZE_EITHER	putty.h	/^    RESIZE_TERM, RESIZE_DISABLED, RESIZE_FONT, RESIZE_EITHER$/;"	e	enum:__anon60
RESIZE_FONT	putty.h	/^    RESIZE_TERM, RESIZE_DISABLED, RESIZE_FONT, RESIZE_EITHER$/;"	e	enum:__anon60
RESIZE_TERM	putty.h	/^    RESIZE_TERM, RESIZE_DISABLED, RESIZE_FONT, RESIZE_EITHER$/;"	e	enum:__anon60
RETURN	cmdline.c	156;"	d	file:
RFC_VALUE	contrib/cygtermd/telnet.c	110;"	d	file:
RFC_VALUE	telnet.c	106;"	d	file:
RFC_VAR	contrib/cygtermd/telnet.c	109;"	d	file:
RFC_VAR	telnet.c	105;"	d	file:
RFile	psftp.h	/^typedef struct RFile RFile;$/;"	t	typeref:struct:RFile
RFile	unix/uxsftp.c	/^struct RFile {$/;"	s	file:
RFile	windows/winsftp.c	/^struct RFile {$/;"	s	file:
RLE	minibidi.c	/^    RLE,$/;"	e	enum:__anon37	file:
RLO	minibidi.c	/^    RLO,$/;"	e	enum:__anon37	file:
RLOGIN_MAX_BACKLOG	rlogin.c	19;"	d	file:
ROUND	sshblowf.c	234;"	d	file:
ROUND	sshsh256.c	69;"	d	file:
ROUND	sshsh512.c	148;"	d	file:
RSA	windows/winpgen.c	/^typedef enum {RSA, DSA, ECDSA, ED25519} keytype;$/;"	e	enum:__anon139	file:
RSAKey	ssh.h	/^struct RSAKey {$/;"	s
RSA_EXPONENT	sshrsag.c	9;"	d	file:
RT_MANIFEST	windows/rcstuff.h	30;"	d
RandPool	sshrand.c	/^struct RandPool {$/;"	s	file:
Raw	raw.c	/^} *Raw;$/;"	t	typeref:struct:raw_backend_data	file:
Release	windows/winjump.c	/^    ULONG ( __stdcall *Release )($/;"	m	struct:ICustomDestinationListVtbl	file:
Release	windows/winjump.c	/^    ULONG ( __stdcall *Release )($/;"	m	struct:IObjectArrayVtbl	file:
Release	windows/winjump.c	/^    ULONG ( __stdcall *Release )($/;"	m	struct:IObjectCollectionVtbl	file:
Release	windows/winjump.c	/^    ULONG ( __stdcall *Release )($/;"	m	struct:IPropertyStoreVtbl	file:
Release	windows/winjump.c	/^    ULONG ( __stdcall *Release )($/;"	m	struct:IShellLinkVtbl	file:
RemoveObjectAt	windows/winjump.c	/^    HRESULT ( __stdcall *RemoveObjectAt )($/;"	m	struct:IObjectCollectionVtbl	file:
Resolve	windows/winjump.c	/^    HRESULT ( __stdcall *Resolve )($/;"	m	struct:IShellLinkVtbl	file:
Rlogin	rlogin.c	/^} *Rlogin;$/;"	t	typeref:struct:rlogin_tag	file:
S	minibidi.c	/^    S,$/;"	e	enum:__anon37	file:
S0	sshblowf.c	/^    word32 S0[256], S1[256], S2[256], S3[256], P[18];$/;"	m	struct:BlowfishContext	file:
S1	sshblowf.c	/^    word32 S0[256], S1[256], S2[256], S3[256], P[18];$/;"	m	struct:BlowfishContext	file:
S2	sshblowf.c	/^    word32 S0[256], S1[256], S2[256], S3[256], P[18];$/;"	m	struct:BlowfishContext	file:
S3	sshblowf.c	/^    word32 S0[256], S1[256], S2[256], S3[256], P[18];$/;"	m	struct:BlowfishContext	file:
SALT_FILENAME	unix/uxshare.c	24;"	d	file:
SALT_SIZE	unix/uxshare.c	25;"	d	file:
SAVEABLE	cmdline.c	79;"	d	file:
SB	contrib/cygtermd/telnet.c	27;"	d	file:
SB	telnet.c	23;"	d	file:
SB_DELTA	contrib/cygtermd/telnet.c	204;"	d	file:
SB_DELTA	telnet.c	214;"	d	file:
SC	minibidi.c	/^    SC  \/* Join-Causing, like U+0640 (TATWEEL) *\/$/;"	e	enum:__anon38	file:
SCP_SINK_DIR	pscp.c	1168;"	d	file:
SCP_SINK_ENDDIR	pscp.c	1169;"	d	file:
SCP_SINK_FILE	pscp.c	1167;"	d	file:
SCP_SINK_RETRY	pscp.c	1170;"	d	file:
SCRIPTS	Makefile	/^SCRIPTS = $(noinst_SCRIPTS)$/;"	m
SCROLL_INCREMENT_LINES	unix/gtkwin.c	1765;"	d	file:
SD	minibidi.c	/^    SD, \/* Dual-Joining, ie has Isolated, Final, Initial, Medial *\/$/;"	e	enum:__anon38	file:
SE	contrib/cygtermd/telnet.c	28;"	d	file:
SE	telnet.c	24;"	d	file:
SECOND_PASS_ONLY	unix/gtkmain.c	325;"	d	file:
SECURITY_WIN32	windows/wingss.c	5;"	d	file:
SECURITY_WIN32	windows/winmisc.c	9;"	d	file:
SEENCR	contrib/cygtermd/telnet.c	/^	    SEENSB, SUBNEGOT, SUBNEG_IAC, SEENCR$/;"	e	enum:telnet_tag::__anon14	file:
SEENCR	telnet.c	/^	    SEENSB, SUBNEGOT, SUBNEG_IAC, SEENCR$/;"	e	enum:telnet_tag::__anon107	file:
SEENDO	contrib/cygtermd/telnet.c	/^	TOP_LEVEL, SEENIAC, SEENWILL, SEENWONT, SEENDO, SEENDONT,$/;"	e	enum:telnet_tag::__anon14	file:
SEENDO	telnet.c	/^	TOP_LEVEL, SEENIAC, SEENWILL, SEENWONT, SEENDO, SEENDONT,$/;"	e	enum:telnet_tag::__anon107	file:
SEENDONT	contrib/cygtermd/telnet.c	/^	TOP_LEVEL, SEENIAC, SEENWILL, SEENWONT, SEENDO, SEENDONT,$/;"	e	enum:telnet_tag::__anon14	file:
SEENDONT	telnet.c	/^	TOP_LEVEL, SEENIAC, SEENWILL, SEENWONT, SEENDO, SEENDONT,$/;"	e	enum:telnet_tag::__anon107	file:
SEENIAC	contrib/cygtermd/telnet.c	/^	TOP_LEVEL, SEENIAC, SEENWILL, SEENWONT, SEENDO, SEENDONT,$/;"	e	enum:telnet_tag::__anon14	file:
SEENIAC	telnet.c	/^	TOP_LEVEL, SEENIAC, SEENWILL, SEENWONT, SEENDO, SEENDONT,$/;"	e	enum:telnet_tag::__anon107	file:
SEENSB	contrib/cygtermd/telnet.c	/^	    SEENSB, SUBNEGOT, SUBNEG_IAC, SEENCR$/;"	e	enum:telnet_tag::__anon14	file:
SEENSB	telnet.c	/^	    SEENSB, SUBNEGOT, SUBNEG_IAC, SEENCR$/;"	e	enum:telnet_tag::__anon107	file:
SEENWILL	contrib/cygtermd/telnet.c	/^	TOP_LEVEL, SEENIAC, SEENWILL, SEENWONT, SEENDO, SEENDONT,$/;"	e	enum:telnet_tag::__anon14	file:
SEENWILL	telnet.c	/^	TOP_LEVEL, SEENIAC, SEENWILL, SEENWONT, SEENDO, SEENDONT,$/;"	e	enum:telnet_tag::__anon107	file:
SEENWONT	contrib/cygtermd/telnet.c	/^	TOP_LEVEL, SEENIAC, SEENWILL, SEENWONT, SEENDO, SEENDONT,$/;"	e	enum:telnet_tag::__anon14	file:
SEENWONT	telnet.c	/^	TOP_LEVEL, SEENIAC, SEENWILL, SEENWONT, SEENDO, SEENDONT,$/;"	e	enum:telnet_tag::__anon107	file:
SEEN_CSI	terminal.h	/^	SEEN_CSI,$/;"	e	enum:terminal_tag::__anon110
SEEN_ESC	terminal.h	/^	SEEN_ESC,$/;"	e	enum:terminal_tag::__anon110
SEEN_OSC	terminal.h	/^	SEEN_OSC,$/;"	e	enum:terminal_tag::__anon110
SEEN_OSC_P	terminal.h	/^	SEEN_OSC_P,$/;"	e	enum:terminal_tag::__anon110
SEEN_OSC_W	terminal.h	/^	SEEN_OSC_W,$/;"	e	enum:terminal_tag::__anon110
SELECTED	terminal.h	/^	NO_SELECTION, ABOUT_TO, DRAGGING, SELECTED$/;"	e	enum:terminal_tag::__anon111
SELECTION_NUL_TERMINATED	unix/unix.h	94;"	d
SELECTION_NUL_TERMINATED	windows/winstuff.h	256;"	d
SEL_NL	unix/unix.h	99;"	d
SEL_NL	windows/winstuff.h	261;"	d
SENT_CLOSE	sshshare.c	/^    SENT_CLOSE,$/;"	e	enum:__anon100	file:
SERIAL_MAX_BACKLOG	unix/uxser.c	18;"	d	file:
SERIAL_MAX_BACKLOG	windows/winser.c	11;"	d	file:
SER_FLOW_DSRDTR	putty.h	/^    SER_FLOW_NONE, SER_FLOW_XONXOFF, SER_FLOW_RTSCTS, SER_FLOW_DSRDTR$/;"	e	enum:__anon64
SER_FLOW_NONE	putty.h	/^    SER_FLOW_NONE, SER_FLOW_XONXOFF, SER_FLOW_RTSCTS, SER_FLOW_DSRDTR$/;"	e	enum:__anon64
SER_FLOW_RTSCTS	putty.h	/^    SER_FLOW_NONE, SER_FLOW_XONXOFF, SER_FLOW_RTSCTS, SER_FLOW_DSRDTR$/;"	e	enum:__anon64
SER_FLOW_XONXOFF	putty.h	/^    SER_FLOW_NONE, SER_FLOW_XONXOFF, SER_FLOW_RTSCTS, SER_FLOW_DSRDTR$/;"	e	enum:__anon64
SER_PAR_EVEN	putty.h	/^    SER_PAR_NONE, SER_PAR_ODD, SER_PAR_EVEN, SER_PAR_MARK, SER_PAR_SPACE$/;"	e	enum:__anon63
SER_PAR_MARK	putty.h	/^    SER_PAR_NONE, SER_PAR_ODD, SER_PAR_EVEN, SER_PAR_MARK, SER_PAR_SPACE$/;"	e	enum:__anon63
SER_PAR_NONE	putty.h	/^    SER_PAR_NONE, SER_PAR_ODD, SER_PAR_EVEN, SER_PAR_MARK, SER_PAR_SPACE$/;"	e	enum:__anon63
SER_PAR_ODD	putty.h	/^    SER_PAR_NONE, SER_PAR_ODD, SER_PAR_EVEN, SER_PAR_MARK, SER_PAR_SPACE$/;"	e	enum:__anon63
SER_PAR_SPACE	putty.h	/^    SER_PAR_NONE, SER_PAR_ODD, SER_PAR_EVEN, SER_PAR_MARK, SER_PAR_SPACE$/;"	e	enum:__anon63
SETBAUD	unix/uxser.c	179;"	d	file:
SETBAUD	unix/uxser.c	79;"	d	file:
SETID_CMD	Makefile	/^SETID_CMD = $/;"	m
SETID_MODE	Makefile	/^SETID_MODE = $/;"	m
SET_MAKE	Makefile	/^SET_MAKE = $/;"	m
SET_NONBLOCK_VIA_OPENPT	unix/unix.h	27;"	d
SFINAL	minibidi.c	45;"	d	file:
SFTP_PROTO_VERSION	sftp.h	56;"	d
SHA256_Block	sshsh256.c	/^void SHA256_Block(SHA256_State *s, uint32 *block) {$/;"	f
SHA256_Bytes	sshsh256.c	/^void SHA256_Bytes(SHA256_State *s, const void *p, int len) {$/;"	f
SHA256_Core_Init	sshsh256.c	/^void SHA256_Core_Init(SHA256_State *s) {$/;"	f
SHA256_Final	sshsh256.c	/^void SHA256_Final(SHA256_State *s, unsigned char *digest) {$/;"	f
SHA256_Init	sshsh256.c	/^void SHA256_Init(SHA256_State *s) {$/;"	f
SHA256_Simple	sshsh256.c	/^void SHA256_Simple(const void *p, int len, unsigned char *output) {$/;"	f
SHA256_State	ssh.h	/^} SHA256_State;$/;"	t	typeref:struct:__anon94
SHA384_Bytes	ssh.h	297;"	d
SHA384_Core_Init	sshsh512.c	/^static void SHA384_Core_Init(SHA512_State *s) {$/;"	f	file:
SHA384_Final	sshsh512.c	/^void SHA384_Final(SHA512_State *s, unsigned char *digest) {$/;"	f
SHA384_Init	sshsh512.c	/^void SHA384_Init(SHA512_State *s) {$/;"	f
SHA384_Simple	sshsh512.c	/^void SHA384_Simple(const void *p, int len, unsigned char *output) {$/;"	f
SHA384_State	ssh.h	291;"	d
SHA512_Block	sshsh512.c	/^static void SHA512_Block(SHA512_State *s, uint64 *block) {$/;"	f	file:
SHA512_Bytes	sshsh512.c	/^void SHA512_Bytes(SHA512_State *s, const void *p, int len) {$/;"	f
SHA512_Core_Init	sshsh512.c	/^static void SHA512_Core_Init(SHA512_State *s) {$/;"	f	file:
SHA512_Final	sshsh512.c	/^void SHA512_Final(SHA512_State *s, unsigned char *digest) {$/;"	f
SHA512_Init	sshsh512.c	/^void SHA512_Init(SHA512_State *s) {$/;"	f
SHA512_Simple	sshsh512.c	/^void SHA512_Simple(const void *p, int len, unsigned char *output) {$/;"	f
SHA512_State	ssh.h	/^} SHA512_State;$/;"	t	typeref:struct:__anon95
SHAPE_FIRST	minibidi.c	105;"	d	file:
SHAPE_LAST	minibidi.c	106;"	d	file:
SHARE_DOWNSTREAM	ssh.h	/^enum { SHARE_NONE, SHARE_DOWNSTREAM, SHARE_UPSTREAM };$/;"	e	enum:__anon99
SHARE_NONE	ssh.h	/^enum { SHARE_NONE, SHARE_DOWNSTREAM, SHARE_UPSTREAM };$/;"	e	enum:__anon99
SHARE_UPSTREAM	ssh.h	/^enum { SHARE_NONE, SHARE_DOWNSTREAM, SHARE_UPSTREAM };$/;"	e	enum:__anon99
SHATransform	sshsha.c	/^void SHATransform(word32 * digest, word32 * block)$/;"	f
SHA_Bytes	sshsha.c	/^void SHA_Bytes(SHA_State * s, const void *p, int len)$/;"	f
SHA_Core_Init	sshsha.c	/^static void SHA_Core_Init(uint32 h[5])$/;"	f	file:
SHA_Final	sshsha.c	/^void SHA_Final(SHA_State * s, unsigned char *output)$/;"	f
SHA_Init	sshsha.c	/^void SHA_Init(SHA_State * s)$/;"	f
SHA_Simple	sshsha.c	/^void SHA_Simple(const void *p, int len, unsigned char *output)$/;"	f
SHA_State	ssh.h	/^} SHA_State;$/;"	t	typeref:struct:__anon93
SHELL	Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL_AUTO	unix/uxpgnt.c	/^static enum { SHELL_AUTO, SHELL_SH, SHELL_CSH } shell_type = SHELL_AUTO;$/;"	e	enum:__anon123	file:
SHELL_CSH	unix/uxpgnt.c	/^static enum { SHELL_AUTO, SHELL_SH, SHELL_CSH } shell_type = SHELL_AUTO;$/;"	e	enum:__anon123	file:
SHELL_SH	unix/uxpgnt.c	/^static enum { SHELL_AUTO, SHELL_SH, SHELL_CSH } shell_type = SHELL_AUTO;$/;"	e	enum:__anon123	file:
SHORTCUT_EMPTY	unix/gtkdlg.c	/^    SHORTCUT_EMPTY,		       \/* no shortcut on this key *\/$/;"	e	enum:__anon117	file:
SHORTCUT_FOCUS	unix/gtkdlg.c	/^    SHORTCUT_FOCUS,		       \/* focus the supplied widget *\/$/;"	e	enum:__anon117	file:
SHORTCUT_TREE	unix/gtkdlg.c	/^    SHORTCUT_TREE,		       \/* focus a tree item *\/$/;"	e	enum:__anon117	file:
SHORTCUT_UCTRL	unix/gtkdlg.c	/^    SHORTCUT_UCTRL,		       \/* do something sane with uctrl *\/$/;"	e	enum:__anon117	file:
SHORTCUT_UCTRL_DOWN	unix/gtkdlg.c	/^    SHORTCUT_UCTRL_DOWN,	       \/* uctrl is a draglist, move Down *\/$/;"	e	enum:__anon117	file:
SHORTCUT_UCTRL_UP	unix/gtkdlg.c	/^    SHORTCUT_UCTRL_UP,		       \/* uctrl is a draglist, move Up *\/$/;"	e	enum:__anon117	file:
SHORT_COPYRIGHT_DETAILS	licence.h	19;"	d
SINITIAL	minibidi.c	46;"	d	file:
SISOLATED	minibidi.c	44;"	d	file:
SIZES	icons/Makefile	/^SIZES = 16 32 48 128$/;"	m
SL	minibidi.c	/^    SL, \/* Left-Joining, doesn't exist in U+0600 - U+06FF *\/$/;"	e	enum:__anon38	file:
SMEDIAL	minibidi.c	47;"	d	file:
SM_CHAR	terminal.h	/^	SM_CHAR, SM_WORD, SM_LINE$/;"	e	enum:terminal_tag::__anon113
SM_LINE	terminal.h	/^	SM_CHAR, SM_WORD, SM_LINE$/;"	e	enum:terminal_tag::__anon113
SM_WORD	terminal.h	/^	SM_CHAR, SM_WORD, SM_LINE$/;"	e	enum:terminal_tag::__anon113
SOCKADDR_FAMILY	unix/uxnet.c	124;"	d	file:
SOCKADDR_FAMILY	unix/uxnet.c	131;"	d	file:
SOCKADDR_FAMILY	windows/winnet.c	112;"	d	file:
SOCKADDR_FAMILY	windows/winnet.c	116;"	d	file:
SOURCES	Makefile	/^SOURCES = $(libversion_a_SOURCES) $(cgtest_SOURCES) \\$/;"	m
SOURCE_COMMIT	version.h	6;"	d
SPboxes	sshdes.c	/^static const word32 SPboxes[8][64] = {$/;"	v	file:
SR	minibidi.c	/^    SR, \/* Right-Joining, ie has Isolated, Final *\/$/;"	e	enum:__anon38	file:
SSH1_AGENTC_ADD_RSA_IDENTITY	ssh.h	970;"	d
SSH1_AGENTC_REMOVE_ALL_RSA_IDENTITIES	ssh.h	972;"	d
SSH1_AGENTC_REMOVE_RSA_IDENTITY	ssh.h	971;"	d
SSH1_AGENTC_REQUEST_RSA_IDENTITIES	ssh.h	966;"	d
SSH1_AGENTC_RSA_CHALLENGE	ssh.h	968;"	d
SSH1_AGENT_RSA_IDENTITIES_ANSWER	ssh.h	967;"	d
SSH1_AGENT_RSA_RESPONSE	ssh.h	969;"	d
SSH1_AUTH_CCARD	ssh.h	903;"	d
SSH1_AUTH_PASSWORD	ssh.h	900;"	d
SSH1_AUTH_RHOSTS	ssh.h	898;"	d
SSH1_AUTH_RHOSTS_RSA	ssh.h	901;"	d
SSH1_AUTH_RSA	ssh.h	899;"	d
SSH1_AUTH_TIS	ssh.h	902;"	d
SSH1_BUFFER_LIMIT	ssh.c	411;"	d	file:
SSH1_CMSG_AGENT_REQUEST_FORWARDING	ssh.h	883;"	d
SSH1_CMSG_AUTH_CCARD	ssh.h	894;"	d
SSH1_CMSG_AUTH_CCARD_RESPONSE	ssh.h	896;"	d
SSH1_CMSG_AUTH_PASSWORD	ssh.h	863;"	d
SSH1_CMSG_AUTH_RHOSTS_RSA	ssh.h	888;"	d
SSH1_CMSG_AUTH_RSA	ssh.h	860;"	d
SSH1_CMSG_AUTH_RSA_RESPONSE	ssh.h	862;"	d
SSH1_CMSG_AUTH_TIS	ssh.h	891;"	d
SSH1_CMSG_AUTH_TIS_RESPONSE	ssh.h	893;"	d
SSH1_CMSG_EOF	ssh.h	873;"	d
SSH1_CMSG_EXEC_CMD	ssh.h	867;"	d
SSH1_CMSG_EXEC_SHELL	ssh.h	866;"	d
SSH1_CMSG_EXIT_CONFIRMATION	ssh.h	886;"	d
SSH1_CMSG_PORT_FORWARD_REQUEST	ssh.h	881;"	d
SSH1_CMSG_REQUEST_COMPRESSION	ssh.h	890;"	d
SSH1_CMSG_REQUEST_PTY	ssh.h	864;"	d
SSH1_CMSG_SESSION_KEY	ssh.h	858;"	d
SSH1_CMSG_STDIN_DATA	ssh.h	870;"	d
SSH1_CMSG_USER	ssh.h	859;"	d
SSH1_CMSG_WINDOW_SIZE	ssh.h	865;"	d
SSH1_CMSG_X11_REQUEST_FORWARDING	ssh.h	887;"	d
SSH1_MSG_CHANNEL_CLOSE	ssh.h	878;"	d
SSH1_MSG_CHANNEL_CLOSE_CONFIRMATION	ssh.h	879;"	d
SSH1_MSG_CHANNEL_DATA	ssh.h	877;"	d
SSH1_MSG_CHANNEL_OPEN_CONFIRMATION	ssh.h	875;"	d
SSH1_MSG_CHANNEL_OPEN_FAILURE	ssh.h	876;"	d
SSH1_MSG_DEBUG	ssh.h	889;"	d
SSH1_MSG_DISCONNECT	ssh.h	856;"	d
SSH1_MSG_IGNORE	ssh.h	885;"	d
SSH1_MSG_PORT_OPEN	ssh.h	882;"	d
SSH1_PROTOFLAGS_SUPPORTED	ssh.h	907;"	d
SSH1_PROTOFLAG_SCREEN_NUMBER	ssh.h	905;"	d
SSH1_SMSG_AGENT_OPEN	ssh.h	884;"	d
SSH1_SMSG_AUTH_CCARD_CHALLENGE	ssh.h	895;"	d
SSH1_SMSG_AUTH_RSA_CHALLENGE	ssh.h	861;"	d
SSH1_SMSG_AUTH_TIS_CHALLENGE	ssh.h	892;"	d
SSH1_SMSG_EXIT_STATUS	ssh.h	874;"	d
SSH1_SMSG_FAILURE	ssh.h	869;"	d
SSH1_SMSG_PUBLIC_KEY	ssh.h	857;"	d
SSH1_SMSG_STDERR_DATA	ssh.h	872;"	d
SSH1_SMSG_STDOUT_DATA	ssh.h	871;"	d
SSH1_SMSG_SUCCESS	ssh.h	868;"	d
SSH1_SMSG_X11_OPEN	ssh.h	880;"	d
SSH1_TTY_OP_ISPEED	ssh.c	158;"	d	file:
SSH1_TTY_OP_OSPEED	ssh.c	159;"	d	file:
SSH2_AGENTC_ADD_IDENTITY	ssh.h	987;"	d
SSH2_AGENTC_REMOVE_ALL_IDENTITIES	ssh.h	989;"	d
SSH2_AGENTC_REMOVE_IDENTITY	ssh.h	988;"	d
SSH2_AGENTC_REQUEST_IDENTITIES	ssh.h	983;"	d
SSH2_AGENTC_SIGN_REQUEST	ssh.h	985;"	d
SSH2_AGENT_IDENTITIES_ANSWER	ssh.h	984;"	d
SSH2_AGENT_SIGN_RESPONSE	ssh.h	986;"	d
SSH2_DISCONNECT_AUTH_CANCELLED_BY_USER	ssh.h	1006;"	d
SSH2_DISCONNECT_BY_APPLICATION	ssh.h	1004;"	d
SSH2_DISCONNECT_COMPRESSION_ERROR	ssh.h	999;"	d
SSH2_DISCONNECT_CONNECTION_LOST	ssh.h	1003;"	d
SSH2_DISCONNECT_HOST_AUTHENTICATION_FAILED	ssh.h	997;"	d
SSH2_DISCONNECT_HOST_KEY_NOT_VERIFIABLE	ssh.h	1002;"	d
SSH2_DISCONNECT_HOST_NOT_ALLOWED_TO_CONNECT	ssh.h	994;"	d
SSH2_DISCONNECT_ILLEGAL_USER_NAME	ssh.h	1008;"	d
SSH2_DISCONNECT_KEY_EXCHANGE_FAILED	ssh.h	996;"	d
SSH2_DISCONNECT_MAC_ERROR	ssh.h	998;"	d
SSH2_DISCONNECT_NO_MORE_AUTH_METHODS_AVAILABLE	ssh.h	1007;"	d
SSH2_DISCONNECT_PROTOCOL_ERROR	ssh.h	995;"	d
SSH2_DISCONNECT_PROTOCOL_VERSION_NOT_SUPPORTED	ssh.h	1001;"	d
SSH2_DISCONNECT_SERVICE_NOT_AVAILABLE	ssh.h	1000;"	d
SSH2_DISCONNECT_TOO_MANY_CONNECTIONS	ssh.h	1005;"	d
SSH2_EXTENDED_DATA_STDERR	ssh.h	1015;"	d
SSH2_GSS_OIDTYPE	sshgss.h	8;"	d
SSH2_KEX_MAX_HASH_LEN	ssh.h	447;"	d
SSH2_MSG_CHANNEL_CLOSE	contrib/encodelib.py	/^SSH2_MSG_CHANNEL_CLOSE = 97$/;"	v
SSH2_MSG_CHANNEL_CLOSE	ssh.h	952;"	d
SSH2_MSG_CHANNEL_DATA	contrib/encodelib.py	/^SSH2_MSG_CHANNEL_DATA = 94$/;"	v
SSH2_MSG_CHANNEL_DATA	ssh.h	949;"	d
SSH2_MSG_CHANNEL_EOF	contrib/encodelib.py	/^SSH2_MSG_CHANNEL_EOF = 96$/;"	v
SSH2_MSG_CHANNEL_EOF	ssh.h	951;"	d
SSH2_MSG_CHANNEL_EXTENDED_DATA	contrib/encodelib.py	/^SSH2_MSG_CHANNEL_EXTENDED_DATA = 95$/;"	v
SSH2_MSG_CHANNEL_EXTENDED_DATA	ssh.h	950;"	d
SSH2_MSG_CHANNEL_FAILURE	contrib/encodelib.py	/^SSH2_MSG_CHANNEL_FAILURE = 100$/;"	v
SSH2_MSG_CHANNEL_FAILURE	ssh.h	955;"	d
SSH2_MSG_CHANNEL_OPEN	contrib/encodelib.py	/^SSH2_MSG_CHANNEL_OPEN = 90$/;"	v
SSH2_MSG_CHANNEL_OPEN	ssh.h	945;"	d
SSH2_MSG_CHANNEL_OPEN_CONFIRMATION	contrib/encodelib.py	/^SSH2_MSG_CHANNEL_OPEN_CONFIRMATION = 91$/;"	v
SSH2_MSG_CHANNEL_OPEN_CONFIRMATION	ssh.h	946;"	d
SSH2_MSG_CHANNEL_OPEN_FAILURE	contrib/encodelib.py	/^SSH2_MSG_CHANNEL_OPEN_FAILURE = 92$/;"	v
SSH2_MSG_CHANNEL_OPEN_FAILURE	ssh.h	947;"	d
SSH2_MSG_CHANNEL_REQUEST	contrib/encodelib.py	/^SSH2_MSG_CHANNEL_REQUEST = 98$/;"	v
SSH2_MSG_CHANNEL_REQUEST	ssh.h	953;"	d
SSH2_MSG_CHANNEL_SUCCESS	contrib/encodelib.py	/^SSH2_MSG_CHANNEL_SUCCESS = 99$/;"	v
SSH2_MSG_CHANNEL_SUCCESS	ssh.h	954;"	d
SSH2_MSG_CHANNEL_WINDOW_ADJUST	contrib/encodelib.py	/^SSH2_MSG_CHANNEL_WINDOW_ADJUST = 93$/;"	v
SSH2_MSG_CHANNEL_WINDOW_ADJUST	ssh.h	948;"	d
SSH2_MSG_DEBUG	contrib/encodelib.py	/^SSH2_MSG_DEBUG = 4$/;"	v
SSH2_MSG_DEBUG	ssh.h	915;"	d
SSH2_MSG_DISCONNECT	contrib/encodelib.py	/^SSH2_MSG_DISCONNECT = 1$/;"	v
SSH2_MSG_DISCONNECT	ssh.h	912;"	d
SSH2_MSG_GLOBAL_REQUEST	contrib/encodelib.py	/^SSH2_MSG_GLOBAL_REQUEST = 80$/;"	v
SSH2_MSG_GLOBAL_REQUEST	ssh.h	942;"	d
SSH2_MSG_IGNORE	contrib/encodelib.py	/^SSH2_MSG_IGNORE = 2$/;"	v
SSH2_MSG_IGNORE	ssh.h	913;"	d
SSH2_MSG_KEXDH_INIT	contrib/encodelib.py	/^SSH2_MSG_KEXDH_INIT = 30$/;"	v
SSH2_MSG_KEXDH_INIT	ssh.h	920;"	d
SSH2_MSG_KEXDH_REPLY	contrib/encodelib.py	/^SSH2_MSG_KEXDH_REPLY = 31$/;"	v
SSH2_MSG_KEXDH_REPLY	ssh.h	921;"	d
SSH2_MSG_KEXINIT	contrib/encodelib.py	/^SSH2_MSG_KEXINIT = 20$/;"	v
SSH2_MSG_KEXINIT	ssh.h	918;"	d
SSH2_MSG_KEXRSA_DONE	contrib/encodelib.py	/^SSH2_MSG_KEXRSA_DONE = 32$/;"	v
SSH2_MSG_KEXRSA_DONE	ssh.h	929;"	d
SSH2_MSG_KEXRSA_PUBKEY	contrib/encodelib.py	/^SSH2_MSG_KEXRSA_PUBKEY = 30$/;"	v
SSH2_MSG_KEXRSA_PUBKEY	ssh.h	927;"	d
SSH2_MSG_KEXRSA_SECRET	contrib/encodelib.py	/^SSH2_MSG_KEXRSA_SECRET = 31$/;"	v
SSH2_MSG_KEXRSA_SECRET	ssh.h	928;"	d
SSH2_MSG_KEX_DH_GEX_GROUP	contrib/encodelib.py	/^SSH2_MSG_KEX_DH_GEX_GROUP = 31$/;"	v
SSH2_MSG_KEX_DH_GEX_GROUP	ssh.h	924;"	d
SSH2_MSG_KEX_DH_GEX_INIT	contrib/encodelib.py	/^SSH2_MSG_KEX_DH_GEX_INIT = 32$/;"	v
SSH2_MSG_KEX_DH_GEX_INIT	ssh.h	925;"	d
SSH2_MSG_KEX_DH_GEX_REPLY	contrib/encodelib.py	/^SSH2_MSG_KEX_DH_GEX_REPLY = 33$/;"	v
SSH2_MSG_KEX_DH_GEX_REPLY	ssh.h	926;"	d
SSH2_MSG_KEX_DH_GEX_REQUEST	contrib/encodelib.py	/^SSH2_MSG_KEX_DH_GEX_REQUEST = 34$/;"	v
SSH2_MSG_KEX_DH_GEX_REQUEST	ssh.h	923;"	d
SSH2_MSG_KEX_DH_GEX_REQUEST_OLD	contrib/encodelib.py	/^SSH2_MSG_KEX_DH_GEX_REQUEST_OLD = 30$/;"	v
SSH2_MSG_KEX_DH_GEX_REQUEST_OLD	ssh.h	922;"	d
SSH2_MSG_KEX_ECDH_INIT	ssh.h	930;"	d
SSH2_MSG_KEX_ECDH_REPLY	ssh.h	931;"	d
SSH2_MSG_KEX_ECMQV_INIT	ssh.h	932;"	d
SSH2_MSG_KEX_ECMQV_REPLY	ssh.h	933;"	d
SSH2_MSG_NEWKEYS	contrib/encodelib.py	/^SSH2_MSG_NEWKEYS = 21$/;"	v
SSH2_MSG_NEWKEYS	ssh.h	919;"	d
SSH2_MSG_REQUEST_FAILURE	contrib/encodelib.py	/^SSH2_MSG_REQUEST_FAILURE = 82$/;"	v
SSH2_MSG_REQUEST_FAILURE	ssh.h	944;"	d
SSH2_MSG_REQUEST_SUCCESS	contrib/encodelib.py	/^SSH2_MSG_REQUEST_SUCCESS = 81$/;"	v
SSH2_MSG_REQUEST_SUCCESS	ssh.h	943;"	d
SSH2_MSG_SERVICE_ACCEPT	contrib/encodelib.py	/^SSH2_MSG_SERVICE_ACCEPT = 6$/;"	v
SSH2_MSG_SERVICE_ACCEPT	ssh.h	917;"	d
SSH2_MSG_SERVICE_REQUEST	contrib/encodelib.py	/^SSH2_MSG_SERVICE_REQUEST = 5$/;"	v
SSH2_MSG_SERVICE_REQUEST	ssh.h	916;"	d
SSH2_MSG_UNIMPLEMENTED	contrib/encodelib.py	/^SSH2_MSG_UNIMPLEMENTED = 3$/;"	v
SSH2_MSG_UNIMPLEMENTED	ssh.h	914;"	d
SSH2_MSG_USERAUTH_BANNER	contrib/encodelib.py	/^SSH2_MSG_USERAUTH_BANNER = 53$/;"	v
SSH2_MSG_USERAUTH_BANNER	ssh.h	937;"	d
SSH2_MSG_USERAUTH_FAILURE	contrib/encodelib.py	/^SSH2_MSG_USERAUTH_FAILURE = 51$/;"	v
SSH2_MSG_USERAUTH_FAILURE	ssh.h	935;"	d
SSH2_MSG_USERAUTH_GSSAPI_ERROR	contrib/encodelib.py	/^SSH2_MSG_USERAUTH_GSSAPI_ERROR = 64$/;"	v
SSH2_MSG_USERAUTH_GSSAPI_ERROR	ssh.h	959;"	d
SSH2_MSG_USERAUTH_GSSAPI_ERRTOK	contrib/encodelib.py	/^SSH2_MSG_USERAUTH_GSSAPI_ERRTOK = 65$/;"	v
SSH2_MSG_USERAUTH_GSSAPI_ERRTOK	ssh.h	960;"	d
SSH2_MSG_USERAUTH_GSSAPI_EXCHANGE_COMPLETE	contrib/encodelib.py	/^SSH2_MSG_USERAUTH_GSSAPI_EXCHANGE_COMPLETE = 63$/;"	v
SSH2_MSG_USERAUTH_GSSAPI_EXCHANGE_COMPLETE	ssh.h	958;"	d
SSH2_MSG_USERAUTH_GSSAPI_MIC	contrib/encodelib.py	/^SSH2_MSG_USERAUTH_GSSAPI_MIC = 66$/;"	v
SSH2_MSG_USERAUTH_GSSAPI_MIC	ssh.h	961;"	d
SSH2_MSG_USERAUTH_GSSAPI_RESPONSE	contrib/encodelib.py	/^SSH2_MSG_USERAUTH_GSSAPI_RESPONSE = 60$/;"	v
SSH2_MSG_USERAUTH_GSSAPI_RESPONSE	ssh.h	956;"	d
SSH2_MSG_USERAUTH_GSSAPI_TOKEN	contrib/encodelib.py	/^SSH2_MSG_USERAUTH_GSSAPI_TOKEN = 61$/;"	v
SSH2_MSG_USERAUTH_GSSAPI_TOKEN	ssh.h	957;"	d
SSH2_MSG_USERAUTH_INFO_REQUEST	contrib/encodelib.py	/^SSH2_MSG_USERAUTH_INFO_REQUEST = 60$/;"	v
SSH2_MSG_USERAUTH_INFO_REQUEST	ssh.h	940;"	d
SSH2_MSG_USERAUTH_INFO_RESPONSE	contrib/encodelib.py	/^SSH2_MSG_USERAUTH_INFO_RESPONSE = 61$/;"	v
SSH2_MSG_USERAUTH_INFO_RESPONSE	ssh.h	941;"	d
SSH2_MSG_USERAUTH_PASSWD_CHANGEREQ	contrib/encodelib.py	/^SSH2_MSG_USERAUTH_PASSWD_CHANGEREQ = 60$/;"	v
SSH2_MSG_USERAUTH_PASSWD_CHANGEREQ	ssh.h	939;"	d
SSH2_MSG_USERAUTH_PK_OK	contrib/encodelib.py	/^SSH2_MSG_USERAUTH_PK_OK = 60$/;"	v
SSH2_MSG_USERAUTH_PK_OK	ssh.h	938;"	d
SSH2_MSG_USERAUTH_REQUEST	contrib/encodelib.py	/^SSH2_MSG_USERAUTH_REQUEST = 50$/;"	v
SSH2_MSG_USERAUTH_REQUEST	ssh.h	934;"	d
SSH2_MSG_USERAUTH_SUCCESS	contrib/encodelib.py	/^SSH2_MSG_USERAUTH_SUCCESS = 52$/;"	v
SSH2_MSG_USERAUTH_SUCCESS	ssh.h	936;"	d
SSH2_OPEN_ADMINISTRATIVELY_PROHIBITED	ssh.h	1010;"	d
SSH2_OPEN_CONNECT_FAILED	ssh.h	1011;"	d
SSH2_OPEN_RESOURCE_SHORTAGE	ssh.h	1013;"	d
SSH2_OPEN_UNKNOWN_CHANNEL_TYPE	ssh.h	1012;"	d
SSH2_PKTCTX_DHGEX	ssh.c	/^    SSH2_PKTCTX_DHGEX,$/;"	e	enum:__anon73	file:
SSH2_PKTCTX_DHGROUP	ssh.c	/^    SSH2_PKTCTX_DHGROUP,$/;"	e	enum:__anon73	file:
SSH2_PKTCTX_ECDHKEX	ssh.c	/^    SSH2_PKTCTX_ECDHKEX,$/;"	e	enum:__anon73	file:
SSH2_PKTCTX_GSSAPI	ssh.c	/^    SSH2_PKTCTX_GSSAPI,$/;"	e	enum:__anon74	file:
SSH2_PKTCTX_KBDINTER	ssh.c	/^    SSH2_PKTCTX_KBDINTER$/;"	e	enum:__anon74	file:
SSH2_PKTCTX_NOAUTH	ssh.c	/^    SSH2_PKTCTX_NOAUTH,$/;"	e	enum:__anon74	file:
SSH2_PKTCTX_NOKEX	ssh.c	/^    SSH2_PKTCTX_NOKEX,$/;"	e	enum:__anon73	file:
SSH2_PKTCTX_PASSWORD	ssh.c	/^    SSH2_PKTCTX_PASSWORD,$/;"	e	enum:__anon74	file:
SSH2_PKTCTX_PUBLICKEY	ssh.c	/^    SSH2_PKTCTX_PUBLICKEY,$/;"	e	enum:__anon74	file:
SSH2_PKTCTX_RSAKEX	ssh.c	/^    SSH2_PKTCTX_RSAKEX$/;"	e	enum:__anon73	file:
SSH2_TTY_OP_ISPEED	ssh.c	160;"	d	file:
SSH2_TTY_OP_OSPEED	ssh.c	161;"	d	file:
SSH2_WRONG_PASSPHRASE	ssh.h	701;"	d
SSHCOM_MAGIC_NUMBER	import.c	1991;"	d	file:
SSHVER	version.h	4;"	d
SSH_AGENT_FAILURE	ssh.h	977;"	d
SSH_AGENT_SUCCESS	ssh.h	978;"	d
SSH_BLOCKSIZE	sshcrcda.c	33;"	d	file:
SSH_CIPHER_3DES	ssh.h	70;"	d
SSH_CIPHER_BLOWFISH	ssh.h	71;"	d
SSH_CIPHER_DES	ssh.h	69;"	d
SSH_CIPHER_IDEA	ssh.h	68;"	d
SSH_CIPHER_IS_CBC	ssh.h	338;"	d
SSH_CIPHER_SEPARATE_LENGTH	ssh.h	339;"	d
SSH_FILEXFER_ATTR_ACMODTIME	sftp.h	46;"	d
SSH_FILEXFER_ATTR_EXTENDED	sftp.h	47;"	d
SSH_FILEXFER_ATTR_PERMISSIONS	sftp.h	45;"	d
SSH_FILEXFER_ATTR_SIZE	sftp.h	43;"	d
SSH_FILEXFER_ATTR_UIDGID	sftp.h	44;"	d
SSH_FXF_APPEND	sftp.h	51;"	d
SSH_FXF_CREAT	sftp.h	52;"	d
SSH_FXF_EXCL	sftp.h	54;"	d
SSH_FXF_READ	sftp.h	49;"	d
SSH_FXF_TRUNC	sftp.h	53;"	d
SSH_FXF_WRITE	sftp.h	50;"	d
SSH_FXP_ATTRS	sftp.h	29;"	d
SSH_FXP_CLOSE	sftp.h	10;"	d
SSH_FXP_DATA	sftp.h	27;"	d
SSH_FXP_EXTENDED	sftp.h	30;"	d
SSH_FXP_EXTENDED_REPLY	sftp.h	31;"	d
SSH_FXP_FSETSTAT	sftp.h	16;"	d
SSH_FXP_FSTAT	sftp.h	14;"	d
SSH_FXP_HANDLE	sftp.h	26;"	d
SSH_FXP_INIT	sftp.h	7;"	d
SSH_FXP_LSTAT	sftp.h	13;"	d
SSH_FXP_MKDIR	sftp.h	20;"	d
SSH_FXP_NAME	sftp.h	28;"	d
SSH_FXP_OPEN	sftp.h	9;"	d
SSH_FXP_OPENDIR	sftp.h	17;"	d
SSH_FXP_READ	sftp.h	11;"	d
SSH_FXP_READDIR	sftp.h	18;"	d
SSH_FXP_REALPATH	sftp.h	22;"	d
SSH_FXP_REMOVE	sftp.h	19;"	d
SSH_FXP_RENAME	sftp.h	24;"	d
SSH_FXP_RMDIR	sftp.h	21;"	d
SSH_FXP_SETSTAT	sftp.h	15;"	d
SSH_FXP_STAT	sftp.h	23;"	d
SSH_FXP_STATUS	sftp.h	25;"	d
SSH_FXP_VERSION	sftp.h	8;"	d
SSH_FXP_WRITE	sftp.h	12;"	d
SSH_FX_BAD_MESSAGE	sftp.h	38;"	d
SSH_FX_CONNECTION_LOST	sftp.h	40;"	d
SSH_FX_EOF	sftp.h	34;"	d
SSH_FX_FAILURE	sftp.h	37;"	d
SSH_FX_NO_CONNECTION	sftp.h	39;"	d
SSH_FX_NO_SUCH_FILE	sftp.h	35;"	d
SSH_FX_OK	sftp.h	33;"	d
SSH_FX_OP_UNSUPPORTED	sftp.h	41;"	d
SSH_FX_PERMISSION_DENIED	sftp.h	36;"	d
SSH_GSS_BAD_HOST_NAME	sshgss.h	/^    SSH_GSS_BAD_HOST_NAME,$/;"	e	enum:Ssh_gss_stat
SSH_GSS_CLEAR_BUF	sshgss.h	21;"	d
SSH_GSS_FAILURE	sshgss.h	/^    SSH_GSS_FAILURE$/;"	e	enum:Ssh_gss_stat
SSH_GSS_NO_MEM	sshgss.h	/^    SSH_GSS_NO_MEM,$/;"	e	enum:Ssh_gss_stat
SSH_GSS_OK	sshgss.h	/^    SSH_GSS_OK = 0,$/;"	e	enum:Ssh_gss_stat
SSH_GSS_S_COMPLETE	sshgss.h	19;"	d
SSH_GSS_S_CONTINUE_NEEDED	sshgss.h	/^    SSH_GSS_S_CONTINUE_NEEDED,$/;"	e	enum:Ssh_gss_stat
SSH_KEYTYPE_OPENSSH_AUTO	ssh.h	/^    SSH_KEYTYPE_OPENSSH_AUTO,$/;"	e	enum:__anon98
SSH_KEYTYPE_OPENSSH_NEW	ssh.h	/^    SSH_KEYTYPE_OPENSSH_NEW,$/;"	e	enum:__anon98
SSH_KEYTYPE_OPENSSH_PEM	ssh.h	/^    SSH_KEYTYPE_OPENSSH_PEM,$/;"	e	enum:__anon98
SSH_KEYTYPE_SSH1	ssh.h	/^    SSH_KEYTYPE_SSH1, SSH_KEYTYPE_SSH2,$/;"	e	enum:__anon98
SSH_KEYTYPE_SSH1_PUBLIC	ssh.h	/^    SSH_KEYTYPE_SSH1_PUBLIC,$/;"	e	enum:__anon98
SSH_KEYTYPE_SSH2	ssh.h	/^    SSH_KEYTYPE_SSH1, SSH_KEYTYPE_SSH2,$/;"	e	enum:__anon98
SSH_KEYTYPE_SSH2_PUBLIC_OPENSSH	ssh.h	/^    SSH_KEYTYPE_SSH2_PUBLIC_OPENSSH$/;"	e	enum:__anon98
SSH_KEYTYPE_SSH2_PUBLIC_RFC4716	ssh.h	/^    SSH_KEYTYPE_SSH2_PUBLIC_RFC4716,$/;"	e	enum:__anon98
SSH_KEYTYPE_SSHCOM	ssh.h	/^    SSH_KEYTYPE_SSHCOM,$/;"	e	enum:__anon98
SSH_KEYTYPE_UNKNOWN	ssh.h	/^    SSH_KEYTYPE_UNKNOWN,$/;"	e	enum:__anon98
SSH_KEYTYPE_UNOPENABLE	ssh.h	/^    SSH_KEYTYPE_UNOPENABLE,$/;"	e	enum:__anon98
SSH_MAXBLOCKS	sshcrcda.c	32;"	d	file:
SSH_MAX_BACKLOG	ssh.c	412;"	d	file:
SSH_SESSION_KEY_LENGTH	sshblowf.c	555;"	d	file:
SSH_STATE_BEFORE_SIZE	ssh.c	/^	SSH_STATE_BEFORE_SIZE,$/;"	e	enum:ssh_tag::__anon82	file:
SSH_STATE_CLOSED	ssh.c	/^	SSH_STATE_CLOSED$/;"	e	enum:ssh_tag::__anon82	file:
SSH_STATE_INTERMED	ssh.c	/^	SSH_STATE_INTERMED,$/;"	e	enum:ssh_tag::__anon82	file:
SSH_STATE_PREPACKET	ssh.c	/^	SSH_STATE_PREPACKET,$/;"	e	enum:ssh_tag::__anon82	file:
SSH_STATE_SESSION	ssh.c	/^	SSH_STATE_SESSION,$/;"	e	enum:ssh_tag::__anon82	file:
SSH_TTY_OP_END	ssh.c	156;"	d	file:
STANDARD_CANCEL_LABEL	unix/gtkcompat.h	176;"	d
STANDARD_CANCEL_LABEL	unix/gtkcompat.h	180;"	d
STANDARD_OK_LABEL	unix/gtkcompat.h	174;"	d
STANDARD_OK_LABEL	unix/gtkcompat.h	178;"	d
STANDARD_OPEN_LABEL	unix/gtkcompat.h	175;"	d
STANDARD_OPEN_LABEL	unix/gtkcompat.h	179;"	d
STANDARD_PREFIX	dialog.h	/^	STANDARD_PREFIX;$/;"	m	struct:control::__anon19
STANDARD_PREFIX	dialog.h	/^	STANDARD_PREFIX;$/;"	m	struct:control::__anon20
STANDARD_PREFIX	dialog.h	/^	STANDARD_PREFIX;$/;"	m	struct:control::__anon21
STANDARD_PREFIX	dialog.h	/^	STANDARD_PREFIX;$/;"	m	struct:control::__anon22
STANDARD_PREFIX	dialog.h	/^	STANDARD_PREFIX;$/;"	m	struct:control::__anon23
STANDARD_PREFIX	dialog.h	/^	STANDARD_PREFIX;$/;"	m	struct:control::__anon24
STANDARD_PREFIX	dialog.h	/^	STANDARD_PREFIX;$/;"	m	struct:control::__anon25
STANDARD_PREFIX	dialog.h	/^	STANDARD_PREFIX;$/;"	m	struct:control::__anon26
STANDARD_PREFIX	dialog.h	/^	STANDARD_PREFIX;$/;"	m	struct:control::__anon27
STANDARD_PREFIX	dialog.h	/^	STANDARD_PREFIX;$/;"	m	struct:control::__anon28
STANDARD_PREFIX	dialog.h	115;"	d
STANDARD_PREFIX	dialog.h	415;"	d
START	sshzlib.c	/^	START, OUTSIDEBLK,$/;"	e	enum:zlib_decompress_ctx::__anon103	file:
START_STEP	unix/uxnet.c	142;"	d	file:
START_STEP	unix/uxnet.c	145;"	d	file:
START_STEP	windows/winnet.c	125;"	d	file:
START_STEP	windows/winnet.c	128;"	d	file:
STATICHEIGHT	windows/winctrls.c	30;"	d	file:
STDC_HEADERS	uxconfig.h	108;"	d
STORE_INT	unix/gtkfont.c	286;"	d	file:
STORE_INT	unix/gtkfont.c	289;"	d	file:
STORE_STR	unix/gtkfont.c	285;"	d	file:
STORE_STR	unix/gtkfont.c	288;"	d	file:
STR	windows/winstuff.h	137;"	d
STR1	windows/winstuff.h	136;"	d
STRIP	Makefile	/^STRIP = $/;"	m
STR_FIELD	unix/gtkfont.c	246;"	d	file:
STR_FIELD	unix/gtkfont.c	249;"	d	file:
STYPE	minibidi.c	42;"	d	file:
SU	minibidi.c	/^    SU, \/* Non-Joining *\/$/;"	e	enum:__anon38	file:
SUBNEGOT	contrib/cygtermd/telnet.c	/^	    SEENSB, SUBNEGOT, SUBNEG_IAC, SEENCR$/;"	e	enum:telnet_tag::__anon14	file:
SUBNEGOT	telnet.c	/^	    SEENSB, SUBNEGOT, SUBNEG_IAC, SEENCR$/;"	e	enum:telnet_tag::__anon107	file:
SUBNEG_IAC	contrib/cygtermd/telnet.c	/^	    SEENSB, SUBNEGOT, SUBNEG_IAC, SEENCR$/;"	e	enum:telnet_tag::__anon14	file:
SUBNEG_IAC	telnet.c	/^	    SEENSB, SUBNEGOT, SUBNEG_IAC, SEENCR$/;"	e	enum:telnet_tag::__anon107	file:
SUSP	contrib/cygtermd/telnet.c	41;"	d	file:
SUSP	telnet.c	37;"	d	file:
SVNVERSION	doc/Makefile	/^SVNVERSION=$(shell test -d .svn && svnversion .)$/;"	m
SYSMENU	windows/window.c	/^enum { SYSMENU, CTXMENU };$/;"	e	enum:__anon135	file:
SaneDialogBox	windows/windlg.c	/^static int SaneDialogBox(HINSTANCE hinst,$/;"	f	file:
SaneEndDialog	windows/windlg.c	/^static void SaneEndDialog(HWND hwnd, int ret)$/;"	f	file:
Sbox	sshaes.c	/^static const unsigned char Sbox[256] = {$/;"	v	file:
Sboxinv	sshaes.c	/^static const unsigned char Sboxinv[256] = {$/;"	v	file:
Serial	unix/uxser.c	/^} *Serial;$/;"	t	typeref:struct:serial_backend_data	file:
Serial	windows/winser.c	/^} *Serial;$/;"	t	typeref:struct:serial_backend_data	file:
SetAppID	windows/winjump.c	/^    HRESULT ( __stdcall *SetAppID )($/;"	m	struct:ICustomDestinationListVtbl	file:
SetArguments	windows/winjump.c	/^    HRESULT ( __stdcall *SetArguments )($/;"	m	struct:IShellLinkVtbl	file:
SetClassLongPtr	windows/winstuff.h	70;"	d
SetClassLongPtr	windows/winstuff.h	71;"	d
SetDescription	windows/winjump.c	/^    HRESULT ( __stdcall *SetDescription )($/;"	m	struct:IShellLinkVtbl	file:
SetHotkey	windows/winjump.c	/^    HRESULT ( __stdcall *SetHotkey )($/;"	m	struct:IShellLinkVtbl	file:
SetIDList	windows/winjump.c	/^    HRESULT ( __stdcall *SetIDList )($/;"	m	struct:IShellLinkVtbl	file:
SetIconLocation	windows/winjump.c	/^    HRESULT ( __stdcall *SetIconLocation )($/;"	m	struct:IShellLinkVtbl	file:
SetPath	windows/winjump.c	/^    HRESULT ( __stdcall *SetPath )($/;"	m	struct:IShellLinkVtbl	file:
SetRelativePath	windows/winjump.c	/^    HRESULT ( __stdcall *SetRelativePath )($/;"	m	struct:IShellLinkVtbl	file:
SetShowCmd	windows/winjump.c	/^    HRESULT ( __stdcall *SetShowCmd )($/;"	m	struct:IShellLinkVtbl	file:
SetValue	windows/winjump.c	/^    HRESULT ( __stdcall *SetValue )($/;"	m	struct:IPropertyStoreVtbl	file:
SetWindowLongPtr	windows/winstuff.h	76;"	d
SetWindowLongPtr	windows/winstuff.h	77;"	d
SetWorkingDirectory	windows/winjump.c	/^    HRESULT ( __stdcall *SetWorkingDirectory )($/;"	m	struct:IShellLinkVtbl	file:
SftpWildcardMatcher	psftp.c	/^typedef struct SftpWildcardMatcher {$/;"	s	file:
SftpWildcardMatcher	psftp.c	/^} SftpWildcardMatcher;$/;"	t	typeref:struct:SftpWildcardMatcher	file:
Shortcut	unix/gtkdlg.c	/^struct Shortcut {$/;"	s	file:
Shortcuts	unix/gtkdlg.c	/^struct Shortcuts {$/;"	s	file:
SizeTipWndProc	windows/sizetip.c	/^static LRESULT CALLBACK SizeTipWndProc(HWND hWnd, UINT nMsg,$/;"	f	file:
SockAddr	network.h	/^typedef struct SockAddr_tag *SockAddr;$/;"	t	typeref:struct:SockAddr_tag
SockAddrStep	unix/uxnet.c	/^typedef struct SockAddrStep_tag SockAddrStep;$/;"	t	typeref:struct:SockAddrStep_tag	file:
SockAddrStep	windows/winnet.c	/^typedef struct SockAddrStep_tag SockAddrStep;$/;"	t	typeref:struct:SockAddrStep_tag	file:
SockAddrStep_tag	unix/uxnet.c	/^struct SockAddrStep_tag {$/;"	s	file:
SockAddrStep_tag	windows/winnet.c	/^struct SockAddrStep_tag {$/;"	s	file:
SockAddr_tag	unix/uxnet.c	/^struct SockAddr_tag {$/;"	s	file:
SockAddr_tag	windows/winnet.c	/^struct SockAddr_tag {$/;"	s	file:
Socket	network.h	/^typedef struct socket_function_table **Socket;$/;"	t	typeref:struct:socket_function_table
Socket_error_tag	errsock.c	/^struct Socket_error_tag {$/;"	s	file:
Socket_handle_tag	windows/winhsock.c	/^struct Socket_handle_tag {$/;"	s	file:
Socket_localproxy_tag	unix/uxproxy.c	/^struct Socket_localproxy_tag {$/;"	s	file:
Socket_named_pipe_server_tag	windows/winnps.c	/^struct Socket_named_pipe_server_tag {$/;"	s	file:
Socket_proxy_tag	proxy.h	/^struct Socket_proxy_tag {$/;"	s
Socket_tag	unix/uxnet.c	/^struct Socket_tag {$/;"	s	file:
Socket_tag	windows/winnet.c	/^struct Socket_tag {$/;"	s	file:
Ssh	ssh.h	/^typedef struct ssh_tag *Ssh;$/;"	t	typeref:struct:ssh_tag
Ssh_gss_buf	sshgss.h	/^typedef gss_buffer_desc Ssh_gss_buf;$/;"	t
Ssh_gss_ctx	sshgss.h	/^typedef void *Ssh_gss_ctx;$/;"	t
Ssh_gss_name	sshgss.h	/^typedef gss_name_t Ssh_gss_name;$/;"	t
Ssh_gss_stat	sshgss.h	/^typedef enum Ssh_gss_stat {$/;"	g
Ssh_gss_stat	sshgss.h	/^} Ssh_gss_stat;$/;"	t	typeref:enum:Ssh_gss_stat
Statement	contrib/make1305.py	/^Statement = namedtuple("Statement", "rvars wvars forms")$/;"	v
TATTR_ACTCURS	putty.h	59;"	d
TATTR_COMBINING	putty.h	62;"	d
TATTR_MASK	putty.h	67;"	d
TATTR_PASCURS	putty.h	60;"	d
TATTR_RIGHTCURS	putty.h	61;"	d
TBLINK_DELAY	terminal.c	52;"	d	file:
TCS_MULTILINE	windows/rcstuff.h	25;"	d
TDATTR_MASK	putty.h	66;"	d
TELNET_MAX_BACKLOG	contrib/cygtermd/telnet.c	202;"	d	file:
TELNET_MAX_BACKLOG	telnet.c	212;"	d	file:
TELOPTS	contrib/cygtermd/telnet.c	/^enum { TELOPTS(telnet_enum) dummy=0 };$/;"	e	enum:__anon11	file:
TELOPTS	contrib/cygtermd/telnet.c	44;"	d	file:
TELOPTS	telnet.c	/^enum { TELOPTS(telnet_enum) dummy=0 };$/;"	e	enum:__anon104	file:
TELOPTS	telnet.c	40;"	d	file:
TELQUAL_INFO	contrib/cygtermd/telnet.c	106;"	d	file:
TELQUAL_INFO	telnet.c	102;"	d	file:
TELQUAL_IS	contrib/cygtermd/telnet.c	104;"	d	file:
TELQUAL_IS	telnet.c	100;"	d	file:
TELQUAL_SEND	contrib/cygtermd/telnet.c	105;"	d	file:
TELQUAL_SEND	telnet.c	101;"	d	file:
TEST1	misc.c	152;"	d	file:
TESTSTR	charset/utf8.c	324;"	d	file:
TEST_CMDGEN	cgtest.c	5;"	d	file:
TEXTVER	version.h	3;"	d
THAWING	windows/winhsock.c	/^        THAWING    \/* we're gradually releasing our remaining data *\/$/;"	e	enum:Socket_handle_tag::__anon143	file:
THROTTLED	ssh.c	/^	    enum { THROTTLED, UNTHROTTLING, UNTHROTTLED } throttle_state;$/;"	e	enum:ssh_channel::__anon78::ssh2_data_channel::__anon79	file:
TICKSPERSEC	unix/unix.h	104;"	d
TICKSPERSEC	windows/winstuff.h	190;"	d
TIME_POSIX_TO_WIN	windows/winsftp.c	76;"	d	file:
TIME_WIN_TO_POSIX	windows/winsftp.c	82;"	d	file:
TIMING_TIMER_ID	windows/window.c	140;"	d	file:
TITLEHEIGHT	windows/winctrls.c	31;"	d	file:
TITLE_EMPTY	putty.h	/^    TITLE_NONE, TITLE_EMPTY, TITLE_REAL$/;"	e	enum:__anon56
TITLE_NONE	putty.h	/^    TITLE_NONE, TITLE_EMPTY, TITLE_REAL$/;"	e	enum:__anon56
TITLE_REAL	putty.h	/^    TITLE_NONE, TITLE_EMPTY, TITLE_REAL$/;"	e	enum:__anon56
TM_PUTTY	terminal.c	49;"	d	file:
TM_SCOANSI	terminal.c	47;"	d	file:
TM_VT100	terminal.c	42;"	d	file:
TM_VT100AVO	terminal.c	43;"	d	file:
TM_VT102	terminal.c	44;"	d	file:
TM_VT220	terminal.c	45;"	d	file:
TM_VTXXX	terminal.c	46;"	d	file:
TOOLTYPE_FILETRANSFER	putty.h	1323;"	d
TOOLTYPE_NONNETWORK	putty.h	1324;"	d
TOPLEVEL	terminal.h	/^	TOPLEVEL,$/;"	e	enum:terminal_tag::__anon110
TOP_LEVEL	contrib/cygtermd/telnet.c	/^	TOP_LEVEL, SEENIAC, SEENWILL, SEENWONT, SEENDO, SEENDONT,$/;"	e	enum:telnet_tag::__anon14	file:
TOP_LEVEL	telnet.c	/^	TOP_LEVEL, SEENIAC, SEENWILL, SEENWONT, SEENDO, SEENDONT,$/;"	e	enum:telnet_tag::__anon107	file:
TO_CHR_X	windows/window.c	2489;"	d	file:
TO_CHR_Y	windows/window.c	2490;"	d	file:
TRANSLATE_SIGNAL	ssh.c	8682;"	d	file:
TRANSLATE_SIGNAL	ssh.c	8724;"	d	file:
TREE234_H	tree234.h	29;"	d
TREESTORE_NUM	unix/gtkdlg.c	/^    TREESTORE_NUM$/;"	e	enum:__anon118	file:
TREESTORE_PARAMS	unix/gtkdlg.c	/^    TREESTORE_PARAMS,$/;"	e	enum:__anon118	file:
TREESTORE_PATH	unix/gtkdlg.c	/^    TREESTORE_PATH,$/;"	e	enum:__anon118	file:
TREES_HDR	sshzlib.c	/^	TREES_HDR, TREES_LENLEN, TREES_LEN, TREES_LENREP,$/;"	e	enum:zlib_decompress_ctx::__anon103	file:
TREES_LEN	sshzlib.c	/^	TREES_HDR, TREES_LENLEN, TREES_LEN, TREES_LENREP,$/;"	e	enum:zlib_decompress_ctx::__anon103	file:
TREES_LENLEN	sshzlib.c	/^	TREES_HDR, TREES_LENLEN, TREES_LEN, TREES_LENREP,$/;"	e	enum:zlib_decompress_ctx::__anon103	file:
TREES_LENREP	sshzlib.c	/^	TREES_HDR, TREES_LENLEN, TREES_LEN, TREES_LENREP,$/;"	e	enum:zlib_decompress_ctx::__anon103	file:
TRUE	contrib/cygtermd/telnet.c	19;"	d	file:
TRUE	misc.h	18;"	d
TRUE	portfwd.c	15;"	d	file:
TRUE	raw.c	15;"	d	file:
TRUE	rlogin.c	16;"	d	file:
TRUE	ssh.c	26;"	d	file:
TRUE	sshzlib.c	66;"	d	file:
TRUE	telnet.c	15;"	d	file:
TRUE	unix/uxpty.c	36;"	d	file:
TRUEPAMS	icons/Makefile	/^TRUEPAMS = $(foreach I,$(ICONS),$(foreach S,$(SIZES),$(I)-$(S)-true.pam))$/;"	m
TRUEPNGS	icons/Makefile	/^TRUEPNGS = $(patsubst %.pam,%.png,$(TRUEPAMS))$/;"	m
TSIZE	terminal.h	98;"	d
TS_ABORT	putty.h	/^    TS_AYT, TS_BRK, TS_SYNCH, TS_EC, TS_EL, TS_GA, TS_NOP, TS_ABORT,$/;"	e	enum:__anon45
TS_AO	putty.h	/^    TS_AO, TS_IP, TS_SUSP, TS_EOR, TS_EOF, TS_LECHO, TS_RECHO, TS_PING,$/;"	e	enum:__anon45
TS_AYT	putty.h	/^    TS_AYT, TS_BRK, TS_SYNCH, TS_EC, TS_EL, TS_GA, TS_NOP, TS_ABORT,$/;"	e	enum:__anon45
TS_BRK	putty.h	/^    TS_AYT, TS_BRK, TS_SYNCH, TS_EC, TS_EL, TS_GA, TS_NOP, TS_ABORT,$/;"	e	enum:__anon45
TS_EC	putty.h	/^    TS_AYT, TS_BRK, TS_SYNCH, TS_EC, TS_EL, TS_GA, TS_NOP, TS_ABORT,$/;"	e	enum:__anon45
TS_EL	putty.h	/^    TS_AYT, TS_BRK, TS_SYNCH, TS_EC, TS_EL, TS_GA, TS_NOP, TS_ABORT,$/;"	e	enum:__anon45
TS_EOF	putty.h	/^    TS_AO, TS_IP, TS_SUSP, TS_EOR, TS_EOF, TS_LECHO, TS_RECHO, TS_PING,$/;"	e	enum:__anon45
TS_EOL	putty.h	/^    TS_EOL,$/;"	e	enum:__anon45
TS_EOR	putty.h	/^    TS_AO, TS_IP, TS_SUSP, TS_EOR, TS_EOF, TS_LECHO, TS_RECHO, TS_PING,$/;"	e	enum:__anon45
TS_EXITMENU	putty.h	/^    TS_EXITMENU,    \/* Exit current submenu or end of specials *\/$/;"	e	enum:__anon45
TS_GA	putty.h	/^    TS_AYT, TS_BRK, TS_SYNCH, TS_EC, TS_EL, TS_GA, TS_NOP, TS_ABORT,$/;"	e	enum:__anon45
TS_IP	putty.h	/^    TS_AO, TS_IP, TS_SUSP, TS_EOR, TS_EOF, TS_LECHO, TS_RECHO, TS_PING,$/;"	e	enum:__anon45
TS_LECHO	putty.h	/^    TS_AO, TS_IP, TS_SUSP, TS_EOR, TS_EOF, TS_LECHO, TS_RECHO, TS_PING,$/;"	e	enum:__anon45
TS_LOCALSTART	putty.h	/^    TS_LOCALSTART$/;"	e	enum:__anon45
TS_NOP	putty.h	/^    TS_AYT, TS_BRK, TS_SYNCH, TS_EC, TS_EL, TS_GA, TS_NOP, TS_ABORT,$/;"	e	enum:__anon45
TS_PING	putty.h	/^    TS_AO, TS_IP, TS_SUSP, TS_EOR, TS_EOF, TS_LECHO, TS_RECHO, TS_PING,$/;"	e	enum:__anon45
TS_RECHO	putty.h	/^    TS_AO, TS_IP, TS_SUSP, TS_EOR, TS_EOF, TS_LECHO, TS_RECHO, TS_PING,$/;"	e	enum:__anon45
TS_REKEY	putty.h	/^    TS_REKEY,$/;"	e	enum:__anon45
TS_SEP	putty.h	/^    TS_SEP,	    \/* Separator *\/$/;"	e	enum:__anon45
TS_SIGABRT	putty.h	/^    TS_SIGABRT, TS_SIGALRM, TS_SIGFPE,  TS_SIGHUP,  TS_SIGILL,$/;"	e	enum:__anon45
TS_SIGALRM	putty.h	/^    TS_SIGABRT, TS_SIGALRM, TS_SIGFPE,  TS_SIGHUP,  TS_SIGILL,$/;"	e	enum:__anon45
TS_SIGFPE	putty.h	/^    TS_SIGABRT, TS_SIGALRM, TS_SIGFPE,  TS_SIGHUP,  TS_SIGILL,$/;"	e	enum:__anon45
TS_SIGHUP	putty.h	/^    TS_SIGABRT, TS_SIGALRM, TS_SIGFPE,  TS_SIGHUP,  TS_SIGILL,$/;"	e	enum:__anon45
TS_SIGILL	putty.h	/^    TS_SIGABRT, TS_SIGALRM, TS_SIGFPE,  TS_SIGHUP,  TS_SIGILL,$/;"	e	enum:__anon45
TS_SIGINT	putty.h	/^    TS_SIGINT,  TS_SIGKILL, TS_SIGPIPE, TS_SIGQUIT, TS_SIGSEGV,$/;"	e	enum:__anon45
TS_SIGKILL	putty.h	/^    TS_SIGINT,  TS_SIGKILL, TS_SIGPIPE, TS_SIGQUIT, TS_SIGSEGV,$/;"	e	enum:__anon45
TS_SIGPIPE	putty.h	/^    TS_SIGINT,  TS_SIGKILL, TS_SIGPIPE, TS_SIGQUIT, TS_SIGSEGV,$/;"	e	enum:__anon45
TS_SIGQUIT	putty.h	/^    TS_SIGINT,  TS_SIGKILL, TS_SIGPIPE, TS_SIGQUIT, TS_SIGSEGV,$/;"	e	enum:__anon45
TS_SIGSEGV	putty.h	/^    TS_SIGINT,  TS_SIGKILL, TS_SIGPIPE, TS_SIGQUIT, TS_SIGSEGV,$/;"	e	enum:__anon45
TS_SIGTERM	putty.h	/^    TS_SIGTERM, TS_SIGUSR1, TS_SIGUSR2,$/;"	e	enum:__anon45
TS_SIGUSR1	putty.h	/^    TS_SIGTERM, TS_SIGUSR1, TS_SIGUSR2,$/;"	e	enum:__anon45
TS_SIGUSR2	putty.h	/^    TS_SIGTERM, TS_SIGUSR1, TS_SIGUSR2,$/;"	e	enum:__anon45
TS_SUBMENU	putty.h	/^    TS_SUBMENU,	    \/* Start a new submenu with specified name *\/$/;"	e	enum:__anon45
TS_SUSP	putty.h	/^    TS_AO, TS_IP, TS_SUSP, TS_EOR, TS_EOF, TS_LECHO, TS_RECHO, TS_PING,$/;"	e	enum:__anon45
TS_SYNCH	putty.h	/^    TS_AYT, TS_BRK, TS_SYNCH, TS_EC, TS_EL, TS_GA, TS_NOP, TS_ABORT,$/;"	e	enum:__anon45
TTYPE	terminal.h	97;"	d
TTY_LIFE_POLL_INTERVAL	unix/uxpgnt.c	288;"	d	file:
TTY_OP_BOOL	ssh.c	/^    enum { TTY_OP_CHAR, TTY_OP_BOOL } type;$/;"	e	enum:ssh_ttymode::__anon75	file:
TTY_OP_CHAR	ssh.c	/^    enum { TTY_OP_CHAR, TTY_OP_BOOL } type;$/;"	e	enum:ssh_ttymode::__anon75	file:
TVINSERTSTRUCT	windows/windlg.c	24;"	d	file:
TVITEM	windows/windlg.c	25;"	d	file:
TYPECHECK	windows/winstuff.h	131;"	d
TYPETONAME	minibidi.c	1989;"	d	file:
TYPETONAME	minibidi.c	2009;"	d	file:
TYPE_COLUMNS	unix/gtkcols.h	17;"	d
TYPE_FILENAME	conf.c	/^typedef enum { TYPE_NONE, TYPE_INT, TYPE_STR, TYPE_FILENAME, TYPE_FONT } Type;$/;"	e	enum:__anon7	file:
TYPE_FONT	conf.c	/^typedef enum { TYPE_NONE, TYPE_INT, TYPE_STR, TYPE_FILENAME, TYPE_FONT } Type;$/;"	e	enum:__anon7	file:
TYPE_INT	conf.c	/^typedef enum { TYPE_NONE, TYPE_INT, TYPE_STR, TYPE_FILENAME, TYPE_FONT } Type;$/;"	e	enum:__anon7	file:
TYPE_NONE	conf.c	/^typedef enum { TYPE_NONE, TYPE_INT, TYPE_STR, TYPE_FILENAME, TYPE_FONT } Type;$/;"	e	enum:__anon7	file:
TYPE_STR	conf.c	/^typedef enum { TYPE_NONE, TYPE_INT, TYPE_STR, TYPE_FILENAME, TYPE_FONT } Type;$/;"	e	enum:__anon7	file:
Telnet	contrib/cygtermd/telnet.h	/^typedef struct telnet_tag *Telnet;$/;"	t	typeref:struct:telnet_tag
Telnet	telnet.c	/^} *Telnet;$/;"	t	typeref:struct:telnet_tag	file:
Telnet_Special	putty.h	/^} Telnet_Special;$/;"	t	typeref:enum:__anon45
Ten	sshbn.c	/^Bignum Zero = bnZero, One = bnOne, Ten = bnTen;$/;"	v
Terminal	network.h	/^typedef struct terminal_tag Terminal;$/;"	t	typeref:struct:terminal_tag
Terminal	putty.h	/^typedef struct terminal_tag Terminal;$/;"	t	typeref:struct:terminal_tag
Terminal	windows/winstuff.h	/^typedef struct terminal_tag Terminal;$/;"	t	typeref:struct:terminal_tag
TranslateKey	windows/window.c	/^static int TranslateKey(UINT message, WPARAM wParam, LPARAM lParam,$/;"	f	file:
Type	conf.c	/^typedef enum { TYPE_NONE, TYPE_INT, TYPE_STR, TYPE_FILENAME, TYPE_FONT } Type;$/;"	t	typeref:enum:__anon7	file:
UCSERR	putty.h	96;"	d
UCSGET	terminal.c	82;"	d	file:
UCSWIDE	putty.h	105;"	d
UMLWRAP_MALLOC_H	contrib/cygtermd/malloc.h	6;"	d
UNACKNOWLEDGED	sshshare.c	/^    UNACKNOWLEDGED$/;"	e	enum:__anon100	file:
UNAVAILABLE_IN	cmdline.c	137;"	d	file:
UNCOMP_DATA	sshzlib.c	/^	UNCOMP_LEN, UNCOMP_NLEN, UNCOMP_DATA$/;"	e	enum:zlib_decompress_ctx::__anon103	file:
UNCOMP_LEN	sshzlib.c	/^	UNCOMP_LEN, UNCOMP_NLEN, UNCOMP_DATA$/;"	e	enum:zlib_decompress_ctx::__anon103	file:
UNCOMP_NLEN	sshzlib.c	/^	UNCOMP_LEN, UNCOMP_NLEN, UNCOMP_DATA$/;"	e	enum:zlib_decompress_ctx::__anon103	file:
UND_FONT	windows/window.c	/^    UND_LINE, UND_FONT$/;"	e	enum:__anon137	file:
UND_LINE	windows/window.c	/^    UND_LINE, UND_FONT$/;"	e	enum:__anon137	file:
UNFROZEN	windows/winhsock.c	/^        UNFROZEN,  \/* reading as normal *\/$/;"	e	enum:Socket_handle_tag::__anon143	file:
UNIX	unix/uxnet.c	/^    enum { UNRESOLVED, UNIX, IP } superfamily;$/;"	e	enum:SockAddr_tag::__anon120	file:
UNRESOLVED	unix/uxnet.c	/^    enum { UNRESOLVED, UNIX, IP } superfamily;$/;"	e	enum:SockAddr_tag::__anon120	file:
UNTHROTTLED	ssh.c	/^	    enum { THROTTLED, UNTHROTTLING, UNTHROTTLED } throttle_state;$/;"	e	enum:ssh_channel::__anon78::ssh2_data_channel::__anon79	file:
UNTHROTTLING	ssh.c	/^	    enum { THROTTLED, UNTHROTTLING, UNTHROTTLED } throttle_state;$/;"	e	enum:ssh_channel::__anon78::ssh2_data_channel::__anon79	file:
UNUSEDARG	charset/internal.h	87;"	d
UPDATE	sshsh512.c	174;"	d	file:
UPDATE_DELAY	terminal.c	51;"	d	file:
USES_VTLINE_HACK	windows/winstuff.h	193;"	d
USE_GTK_FILE_CHOOSER_DIALOG	unix/gtkdlg.c	40;"	d	file:
UnknownKeyType	contrib/kh2reg.py	/^class UnknownKeyType(Exception):$/;"	c
UpdateSizeTip	windows/sizetip.c	/^void UpdateSizeTip(HWND src, int cx, int cy)$/;"	f
VBELL_DELAY	terminal.c	54;"	d	file:
VBELL_TIMEOUT	terminal.h	90;"	d
VERSION	Makefile	/^VERSION = 0.70$/;"	m
VERSION	doc/Makefile	/^VERSION=Built from revision $(patsubst M,,$(SVNVERSION))$/;"	m
VERSION	uxconfig.h	111;"	d
VERSIONIDS	doc/Makefile	/^VERSIONIDS=vids$/;"	m
VERSIONIDS	doc/Makefile	/^VERSIONIDS=vstr$/;"	m
VFT_APP	windows/rcstuff.h	47;"	d
VK_PACKET	windows/window.c	86;"	d	file:
VK_PROCESSKEY	windows/window.c	73;"	d	file:
VOS__WINDOWS32	windows/rcstuff.h	44;"	d
VS_FF_DEBUG	windows/rcstuff.h	35;"	d
VS_FF_PRERELEASE	windows/rcstuff.h	38;"	d
VS_FF_PRIVATEBUILD	windows/rcstuff.h	41;"	d
VT52_BG	terminal.h	/^	VT52_BG$/;"	e	enum:terminal_tag::__anon110
VT52_ESC	terminal.h	/^	VT52_ESC,$/;"	e	enum:terminal_tag::__anon110
VT52_FG	terminal.h	/^	VT52_FG,$/;"	e	enum:terminal_tag::__anon110
VT52_PLUS	terminal.c	27;"	d	file:
VT52_Y1	terminal.h	/^	VT52_Y1,$/;"	e	enum:terminal_tag::__anon110
VT52_Y2	terminal.h	/^	VT52_Y2,$/;"	e	enum:terminal_tag::__anon110
VT_OEMANSI	putty.h	/^    VT_XWINDOWS, VT_OEMANSI, VT_OEMONLY, VT_POORMAN, VT_UNICODE$/;"	e	enum:__anon49
VT_OEMONLY	putty.h	/^    VT_XWINDOWS, VT_OEMANSI, VT_OEMONLY, VT_POORMAN, VT_UNICODE$/;"	e	enum:__anon49
VT_POORMAN	putty.h	/^    VT_XWINDOWS, VT_OEMANSI, VT_OEMONLY, VT_POORMAN, VT_UNICODE$/;"	e	enum:__anon49
VT_UNICODE	putty.h	/^    VT_XWINDOWS, VT_OEMANSI, VT_OEMONLY, VT_POORMAN, VT_UNICODE$/;"	e	enum:__anon49
VT_XWINDOWS	putty.h	/^    VT_XWINDOWS, VT_OEMANSI, VT_OEMONLY, VT_POORMAN, VT_UNICODE$/;"	e	enum:__anon49
WARNINGOPTS	Makefile	/^WARNINGOPTS = -Wall -Werror$/;"	m
WCHAR	unix/unix.h	107;"	d
WCTYPE_FILENAME	psftp.h	/^    WCTYPE_NONEXISTENT, WCTYPE_FILENAME, WCTYPE_WILDCARD$/;"	e	enum:__anon44
WCTYPE_NONEXISTENT	psftp.h	/^    WCTYPE_NONEXISTENT, WCTYPE_FILENAME, WCTYPE_WILDCARD$/;"	e	enum:__anon44
WCTYPE_WILDCARD	psftp.h	/^    WCTYPE_NONEXISTENT, WCTYPE_FILENAME, WCTYPE_WILDCARD$/;"	e	enum:__anon44
WC_INVALIDRANGE	wildcard.c	/^    WC_INVALIDRANGE$/;"	e	enum:__anon132	file:
WC_TRAILINGBACKSLASH	wildcard.c	/^    WC_TRAILINGBACKSLASH = 1,$/;"	e	enum:__anon132	file:
WC_UNCLOSEDCLASS	wildcard.c	/^    WC_UNCLOSEDCLASS,$/;"	e	enum:__anon132	file:
WFile	psftp.h	/^typedef struct WFile WFile;$/;"	t	typeref:struct:WFile
WFile	unix/uxsftp.c	/^struct WFile {$/;"	s	file:
WFile	windows/winsftp.c	/^struct WFile {$/;"	s	file:
WHEEL_DELTA	windows/window.c	81;"	d	file:
WILL	contrib/cygtermd/telnet.c	26;"	d	file:
WILL	telnet.c	22;"	d	file:
WINCAPI_GLOBAL	windows/wincapi.c	9;"	d	file:
WINCAPI_GLOBAL	windows/wincapi.h	10;"	d
WINHELP_CTXID_errors_cantloadkey	windows/winhelp.h	191;"	d
WINHELP_CTXID_errors_hostkey_absent	windows/winhelp.h	187;"	d
WINHELP_CTXID_errors_hostkey_changed	windows/winhelp.h	189;"	d
WINHELP_CTXID_no_help	windows/winhelp.h	185;"	d
WINHELP_CTXID_option_cleanup	windows/winhelp.h	193;"	d
WINHELP_CTXID_pgp_fingerprints	windows/winhelp.h	195;"	d
WINHELP_CTX_MAXLEN	windows/winhelp.h	11;"	d
WINHELP_CTX_appearance_border	windows/winhelp.h	74;"	d
WINHELP_CTX_appearance_cursor	windows/winhelp.h	70;"	d
WINHELP_CTX_appearance_font	windows/winhelp.h	71;"	d
WINHELP_CTX_appearance_hidemouse	windows/winhelp.h	73;"	d
WINHELP_CTX_appearance_title	windows/winhelp.h	72;"	d
WINHELP_CTX_behaviour_altenter	windows/winhelp.h	69;"	d
WINHELP_CTX_behaviour_altf4	windows/winhelp.h	65;"	d
WINHELP_CTX_behaviour_altonly	windows/winhelp.h	67;"	d
WINHELP_CTX_behaviour_altspace	windows/winhelp.h	66;"	d
WINHELP_CTX_behaviour_alwaysontop	windows/winhelp.h	68;"	d
WINHELP_CTX_behaviour_closewarn	windows/winhelp.h	64;"	d
WINHELP_CTX_bell_overload	windows/winhelp.h	59;"	d
WINHELP_CTX_bell_style	windows/winhelp.h	57;"	d
WINHELP_CTX_bell_taskbar	windows/winhelp.h	58;"	d
WINHELP_CTX_colours_ansi	windows/winhelp.h	126;"	d
WINHELP_CTX_colours_bold	windows/winhelp.h	128;"	d
WINHELP_CTX_colours_config	windows/winhelp.h	131;"	d
WINHELP_CTX_colours_logpal	windows/winhelp.h	130;"	d
WINHELP_CTX_colours_system	windows/winhelp.h	129;"	d
WINHELP_CTX_colours_xterm256	windows/winhelp.h	127;"	d
WINHELP_CTX_connection_ipversion	windows/winhelp.h	81;"	d
WINHELP_CTX_connection_keepalive	windows/winhelp.h	79;"	d
WINHELP_CTX_connection_loghost	windows/winhelp.h	83;"	d
WINHELP_CTX_connection_nodelay	windows/winhelp.h	80;"	d
WINHELP_CTX_connection_tcpkeepalive	windows/winhelp.h	82;"	d
WINHELP_CTX_connection_termspeed	windows/winhelp.h	76;"	d
WINHELP_CTX_connection_termtype	windows/winhelp.h	75;"	d
WINHELP_CTX_connection_username	windows/winhelp.h	77;"	d
WINHELP_CTX_connection_username_from_env	windows/winhelp.h	78;"	d
WINHELP_CTX_errors_cantloadkey	windows/winhelp.h	190;"	d
WINHELP_CTX_errors_hostkey_absent	windows/winhelp.h	186;"	d
WINHELP_CTX_errors_hostkey_changed	windows/winhelp.h	188;"	d
WINHELP_CTX_features_altscreen	windows/winhelp.h	39;"	d
WINHELP_CTX_features_application	windows/winhelp.h	36;"	d
WINHELP_CTX_features_arabicshaping	windows/winhelp.h	45;"	d
WINHELP_CTX_features_bidi	windows/winhelp.h	46;"	d
WINHELP_CTX_features_charset	windows/winhelp.h	43;"	d
WINHELP_CTX_features_clearscroll	windows/winhelp.h	44;"	d
WINHELP_CTX_features_dbackspace	windows/winhelp.h	42;"	d
WINHELP_CTX_features_mouse	windows/winhelp.h	37;"	d
WINHELP_CTX_features_qtitle	windows/winhelp.h	41;"	d
WINHELP_CTX_features_resize	windows/winhelp.h	38;"	d
WINHELP_CTX_features_retitle	windows/winhelp.h	40;"	d
WINHELP_CTX_keyboard_appcursor	windows/winhelp.h	32;"	d
WINHELP_CTX_keyboard_appkeypad	windows/winhelp.h	31;"	d
WINHELP_CTX_keyboard_backspace	windows/winhelp.h	28;"	d
WINHELP_CTX_keyboard_compose	windows/winhelp.h	34;"	d
WINHELP_CTX_keyboard_ctrlalt	windows/winhelp.h	35;"	d
WINHELP_CTX_keyboard_funkeys	windows/winhelp.h	30;"	d
WINHELP_CTX_keyboard_homeend	windows/winhelp.h	29;"	d
WINHELP_CTX_keyboard_nethack	windows/winhelp.h	33;"	d
WINHELP_CTX_logging_exists	windows/winhelp.h	24;"	d
WINHELP_CTX_logging_filename	windows/winhelp.h	23;"	d
WINHELP_CTX_logging_flush	windows/winhelp.h	25;"	d
WINHELP_CTX_logging_main	windows/winhelp.h	22;"	d
WINHELP_CTX_logging_ssh_omit_data	windows/winhelp.h	27;"	d
WINHELP_CTX_logging_ssh_omit_password	windows/winhelp.h	26;"	d
WINHELP_CTX_no_help	windows/winhelp.h	17;"	d
WINHELP_CTX_option_cleanup	windows/winhelp.h	192;"	d
WINHELP_CTX_pageant_addkey	windows/winhelp.h	164;"	d
WINHELP_CTX_pageant_general	windows/winhelp.h	162;"	d
WINHELP_CTX_pageant_keylist	windows/winhelp.h	163;"	d
WINHELP_CTX_pageant_remkey	windows/winhelp.h	165;"	d
WINHELP_CTX_pgp_fingerprints	windows/winhelp.h	194;"	d
WINHELP_CTX_pgpfingerprints	windows/winhelp.h	166;"	d
WINHELP_CTX_proxy_auth	windows/winhelp.h	88;"	d
WINHELP_CTX_proxy_command	windows/winhelp.h	89;"	d
WINHELP_CTX_proxy_dns	windows/winhelp.h	87;"	d
WINHELP_CTX_proxy_exclude	windows/winhelp.h	86;"	d
WINHELP_CTX_proxy_logging	windows/winhelp.h	90;"	d
WINHELP_CTX_proxy_main	windows/winhelp.h	85;"	d
WINHELP_CTX_proxy_type	windows/winhelp.h	84;"	d
WINHELP_CTX_puttygen_bits	windows/winhelp.h	169;"	d
WINHELP_CTX_puttygen_comment	windows/winhelp.h	172;"	d
WINHELP_CTX_puttygen_conversions	windows/winhelp.h	178;"	d
WINHELP_CTX_puttygen_fingerprint	windows/winhelp.h	171;"	d
WINHELP_CTX_puttygen_general	windows/winhelp.h	167;"	d
WINHELP_CTX_puttygen_generate	windows/winhelp.h	170;"	d
WINHELP_CTX_puttygen_keytype	windows/winhelp.h	168;"	d
WINHELP_CTX_puttygen_load	windows/winhelp.h	177;"	d
WINHELP_CTX_puttygen_passphrase	windows/winhelp.h	173;"	d
WINHELP_CTX_puttygen_pastekey	windows/winhelp.h	176;"	d
WINHELP_CTX_puttygen_savepriv	windows/winhelp.h	174;"	d
WINHELP_CTX_puttygen_savepub	windows/winhelp.h	175;"	d
WINHELP_CTX_rlogin_localuser	windows/winhelp.h	96;"	d
WINHELP_CTX_selection_buttons	windows/winhelp.h	120;"	d
WINHELP_CTX_selection_charclasses	windows/winhelp.h	123;"	d
WINHELP_CTX_selection_linedraw	windows/winhelp.h	124;"	d
WINHELP_CTX_selection_rect	windows/winhelp.h	122;"	d
WINHELP_CTX_selection_rtf	windows/winhelp.h	125;"	d
WINHELP_CTX_selection_shiftdrag	windows/winhelp.h	121;"	d
WINHELP_CTX_serial_databits	windows/winhelp.h	157;"	d
WINHELP_CTX_serial_flow	windows/winhelp.h	160;"	d
WINHELP_CTX_serial_line	windows/winhelp.h	155;"	d
WINHELP_CTX_serial_parity	windows/winhelp.h	159;"	d
WINHELP_CTX_serial_speed	windows/winhelp.h	156;"	d
WINHELP_CTX_serial_stopbits	windows/winhelp.h	158;"	d
WINHELP_CTX_session_coe	windows/winhelp.h	21;"	d
WINHELP_CTX_session_hostname	windows/winhelp.h	19;"	d
WINHELP_CTX_session_saved	windows/winhelp.h	20;"	d
WINHELP_CTX_ssh_auth_agentfwd	windows/winhelp.h	112;"	d
WINHELP_CTX_ssh_auth_banner	windows/winhelp.h	110;"	d
WINHELP_CTX_ssh_auth_bypass	windows/winhelp.h	109;"	d
WINHELP_CTX_ssh_auth_changeuser	windows/winhelp.h	113;"	d
WINHELP_CTX_ssh_auth_ki	windows/winhelp.h	116;"	d
WINHELP_CTX_ssh_auth_pageant	windows/winhelp.h	114;"	d
WINHELP_CTX_ssh_auth_privkey	windows/winhelp.h	111;"	d
WINHELP_CTX_ssh_auth_tis	windows/winhelp.h	115;"	d
WINHELP_CTX_ssh_bugs_chanreq	windows/winhelp.h	153;"	d
WINHELP_CTX_ssh_bugs_derivekey2	windows/winhelp.h	147;"	d
WINHELP_CTX_ssh_bugs_hmac2	windows/winhelp.h	146;"	d
WINHELP_CTX_ssh_bugs_ignore1	windows/winhelp.h	142;"	d
WINHELP_CTX_ssh_bugs_ignore2	windows/winhelp.h	145;"	d
WINHELP_CTX_ssh_bugs_maxpkt2	windows/winhelp.h	151;"	d
WINHELP_CTX_ssh_bugs_oldgex2	windows/winhelp.h	154;"	d
WINHELP_CTX_ssh_bugs_pksessid2	windows/winhelp.h	149;"	d
WINHELP_CTX_ssh_bugs_plainpw1	windows/winhelp.h	143;"	d
WINHELP_CTX_ssh_bugs_rekey2	windows/winhelp.h	150;"	d
WINHELP_CTX_ssh_bugs_rsa1	windows/winhelp.h	144;"	d
WINHELP_CTX_ssh_bugs_rsapad2	windows/winhelp.h	148;"	d
WINHELP_CTX_ssh_bugs_winadj	windows/winhelp.h	152;"	d
WINHELP_CTX_ssh_ciphers	windows/winhelp.h	100;"	d
WINHELP_CTX_ssh_command	windows/winhelp.h	102;"	d
WINHELP_CTX_ssh_compress	windows/winhelp.h	103;"	d
WINHELP_CTX_ssh_gssapi	windows/winhelp.h	117;"	d
WINHELP_CTX_ssh_gssapi_delegation	windows/winhelp.h	118;"	d
WINHELP_CTX_ssh_gssapi_libraries	windows/winhelp.h	119;"	d
WINHELP_CTX_ssh_hklist	windows/winhelp.h	106;"	d
WINHELP_CTX_ssh_kex_manual_hostkeys	windows/winhelp.h	108;"	d
WINHELP_CTX_ssh_kex_repeat	windows/winhelp.h	107;"	d
WINHELP_CTX_ssh_kexlist	windows/winhelp.h	105;"	d
WINHELP_CTX_ssh_nopty	windows/winhelp.h	97;"	d
WINHELP_CTX_ssh_noshell	windows/winhelp.h	99;"	d
WINHELP_CTX_ssh_protocol	windows/winhelp.h	101;"	d
WINHELP_CTX_ssh_share	windows/winhelp.h	104;"	d
WINHELP_CTX_ssh_ttymodes	windows/winhelp.h	98;"	d
WINHELP_CTX_ssh_tunnels_portfwd	windows/winhelp.h	139;"	d
WINHELP_CTX_ssh_tunnels_portfwd_ipversion	windows/winhelp.h	141;"	d
WINHELP_CTX_ssh_tunnels_portfwd_localhost	windows/winhelp.h	140;"	d
WINHELP_CTX_ssh_tunnels_x11	windows/winhelp.h	136;"	d
WINHELP_CTX_ssh_tunnels_x11auth	windows/winhelp.h	137;"	d
WINHELP_CTX_ssh_tunnels_xauthority	windows/winhelp.h	138;"	d
WINHELP_CTX_telnet_environ	windows/winhelp.h	91;"	d
WINHELP_CTX_telnet_newline	windows/winhelp.h	95;"	d
WINHELP_CTX_telnet_oldenviron	windows/winhelp.h	92;"	d
WINHELP_CTX_telnet_passive	windows/winhelp.h	93;"	d
WINHELP_CTX_telnet_specialkeys	windows/winhelp.h	94;"	d
WINHELP_CTX_terminal_answerback	windows/winhelp.h	53;"	d
WINHELP_CTX_terminal_autowrap	windows/winhelp.h	47;"	d
WINHELP_CTX_terminal_bce	windows/winhelp.h	51;"	d
WINHELP_CTX_terminal_blink	windows/winhelp.h	52;"	d
WINHELP_CTX_terminal_crhaslf	windows/winhelp.h	50;"	d
WINHELP_CTX_terminal_decom	windows/winhelp.h	48;"	d
WINHELP_CTX_terminal_lfhascr	windows/winhelp.h	49;"	d
WINHELP_CTX_terminal_localecho	windows/winhelp.h	54;"	d
WINHELP_CTX_terminal_localedit	windows/winhelp.h	55;"	d
WINHELP_CTX_terminal_printing	windows/winhelp.h	56;"	d
WINHELP_CTX_translation_cjk_ambig_wide	windows/winhelp.h	133;"	d
WINHELP_CTX_translation_codepage	windows/winhelp.h	132;"	d
WINHELP_CTX_translation_cyrillic	windows/winhelp.h	134;"	d
WINHELP_CTX_translation_linedraw	windows/winhelp.h	135;"	d
WINHELP_CTX_window_erased	windows/winhelp.h	63;"	d
WINHELP_CTX_window_resize	windows/winhelp.h	61;"	d
WINHELP_CTX_window_scrollback	windows/winhelp.h	62;"	d
WINHELP_CTX_window_size	windows/winhelp.h	60;"	d
WINSECUR_GLOBAL	windows/winsecur.c	12;"	d	file:
WINSECUR_GLOBAL	windows/winsecur.h	12;"	d
WINSIZE	sshzlib.c	101;"	d	file:
WITH_GSSAPI	uxconfig.h	114;"	d
WM_AGENT_CALLBACK	windows/window.c	68;"	d	file:
WM_AGENT_CALLBACK	windows/winplink.c	16;"	d	file:
WM_DONEKEY	windows/winpgen.c	23;"	d	file:
WM_FULLSCR_ON_MAX	windows/window.c	67;"	d	file:
WM_GOT_CLIPDATA	windows/window.c	69;"	d	file:
WM_IGNORE_CLIP	windows/window.c	66;"	d	file:
WM_MOUSEWHEEL	windows/window.c	78;"	d	file:
WM_NETEVENT	windows/winstuff.h	245;"	d
WM_SYSTRAY	windows/winpgnt.c	34;"	d	file:
WM_SYSTRAY2	windows/winpgnt.c	35;"	d	file:
WONT	contrib/cygtermd/telnet.c	25;"	d	file:
WONT	telnet.c	21;"	d	file:
WS	minibidi.c	/^    WS,$/;"	e	enum:__anon37	file:
WTMPX_FILE	unix/uxpty.c	42;"	d	file:
WTMPX_FILE	unix/uxpty.c	44;"	d	file:
WildcardMatcher	psftp.h	/^typedef struct WildcardMatcher WildcardMatcher;$/;"	t	typeref:struct:WildcardMatcher
WildcardMatcher	unix/uxsftp.c	/^struct WildcardMatcher {$/;"	s	file:
WildcardMatcher	windows/winsftp.c	/^struct WildcardMatcher {$/;"	s	file:
WinMain	windows/window.c	/^int WINAPI WinMain(HINSTANCE inst, HINSTANCE prev, LPSTR cmdline, int show)$/;"	f
WinMain	windows/winpgen.c	/^int WINAPI WinMain(HINSTANCE inst, HINSTANCE prev, LPSTR cmdline, int show)$/;"	f
WinMain	windows/winpgnt.c	/^int WINAPI WinMain(HINSTANCE inst, HINSTANCE prev, LPSTR cmdline, int show)$/;"	f
WindowEntry	sshzlib.c	/^struct WindowEntry {$/;"	s	file:
WndProc	windows/window.c	/^static LRESULT CALLBACK WndProc(HWND hwnd, UINT message,$/;"	f	file:
WndProc	windows/winpgnt.c	/^static LRESULT CALLBACK WndProc(HWND hwnd, UINT message,$/;"	f	file:
X11Connection	unix/uxpgnt.c	/^struct X11Connection {$/;"	s	file:
X11Connection	x11fwd.c	/^struct X11Connection {$/;"	s	file:
X11Display	ssh.h	/^struct X11Display {$/;"	s
X11FakeAuth	ssh.h	/^struct X11FakeAuth {$/;"	s
X11_MIT	putty.h	/^    X11_MIT,                           \/* MIT-MAGIC-COOKIE-1 *\/$/;"	e	enum:__anon71
X11_NAUTHS	putty.h	/^    X11_NAUTHS$/;"	e	enum:__anon71
X11_NO_AUTH	putty.h	/^    X11_NO_AUTH,$/;"	e	enum:__anon71
X11_TRANS_IPV4	ssh.h	/^    X11_TRANS_IPV4 = 0, X11_TRANS_IPV6 = 6, X11_TRANS_UNIX = 256$/;"	e	enum:__anon97
X11_TRANS_IPV6	ssh.h	/^    X11_TRANS_IPV4 = 0, X11_TRANS_IPV6 = 6, X11_TRANS_UNIX = 256$/;"	e	enum:__anon97
X11_TRANS_UNIX	ssh.h	/^    X11_TRANS_IPV4 = 0, X11_TRANS_IPV6 = 6, X11_TRANS_UNIX = 256$/;"	e	enum:__anon97
X11_UNIX_PATH	unix/uxnet.c	33;"	d	file:
X11_XDM	putty.h	/^    X11_XDM,			       \/* XDM-AUTHORIZATION-1 *\/$/;"	e	enum:__anon71
X11_fwd_enabled	ssh.c	/^    int X11_fwd_enabled;$/;"	m	struct:ssh_tag	file:
XDMSeen	x11fwd.c	/^struct XDMSeen {$/;"	s	file:
XDM_MAXSKEW	x11fwd.c	357;"	d	file:
XLFD_INT_WILDCARD	unix/gtkfont.c	243;"	d	file:
XLFD_STRING_PARTS_LIST	unix/gtkfont.c	225;"	d	file:
X_POS	windows/window.c	2486;"	d	file:
Y_POS	windows/window.c	2487;"	d	file:
ZERO	sshcrcda.c	/^uchar ZERO[4] = { 0, 0, 0, 0 };$/;"	v
Zero	sshbn.c	/^Bignum Zero = bnZero, One = bnOne, Ten = bnTen;$/;"	v
_APS_NEXT_COMMAND_VALUE	resource.h	11;"	d
_APS_NEXT_CONTROL_VALUE	resource.h	12;"	d
_APS_NEXT_RESOURCE_VALUE	resource.h	10;"	d
_APS_NEXT_SYMED_VALUE	resource.h	13;"	d
_GNU_SOURCE	unix/gtkcomm.c	8;"	d	file:
_GNU_SOURCE	unix/gtkmain.c	7;"	d	file:
_GNU_SOURCE	unix/gtkwin.c	6;"	d	file:
_GNU_SOURCE	unix/uxpeer.c	11;"	d	file:
_GNU_SOURCE	unix/uxpty.c	5;"	d	file:
_PROPVARIANTINIT_DEFINED_	windows/winjump.c	45;"	d	file:
_REFPROPVARIANT_DEFINED	windows/winjump.c	40;"	d	file:
_WIN32_WINNT	windows/winpgnt.c	26;"	d	file:
_XOPEN_SOURCE	contrib/cygtermd/pty.c	5;"	d	file:
__add__	contrib/make1305.py	/^    def __add__(self, rhs):$/;"	m	class:Multiprecision	file:
__init__	contrib/kh2reg.py	/^    def __init__(self, keytype):$/;"	m	class:UnknownKeyType
__init__	contrib/kh2reg.py	/^    def __init__(self, msg):$/;"	m	class:KeyFormatError
__init__	contrib/make1305.py	/^    def __init__(self, bits):$/;"	m	class:CodegenTarget
__init__	contrib/make1305.py	/^    def __init__(self, target, minval, maxval, words):$/;"	m	class:Multiprecision
__mul__	contrib/make1305.py	/^    def __mul__(self, rhs):$/;"	m	class:Multiprecision	file:
_ecdsa_sign	sshecc.c	/^static void _ecdsa_sign(const Bignum privateKey, const struct ec_curve *curve,$/;"	f	file:
_ecdsa_verify	sshecc.c	/^static int _ecdsa_verify(const struct ec_point *publicKey,$/;"	f	file:
_tagpropertykey	windows/winjump.c	/^typedef struct _tagpropertykey {$/;"	s	file:
a	ssh.c	/^	} a;$/;"	m	union:ssh_channel::__anon80	typeref:struct:ssh_channel::__anon80::ssh_agent_channel	file:
a	ssh.h	/^    Bignum a, b, n;$/;"	m	struct:ec_wcurve
a	ssh.h	/^    Bignum a, b;$/;"	m	struct:ec_mcurve
a	testdata/bignum.py	/^    a = sqrt(3<<(2*ai-1))$/;"	v
a_cipher	sshccp.c	/^    struct chacha20 a_cipher; \/* Used for length *\/$/;"	m	struct:ccp_context	typeref:struct:ccp_context::chacha20	file:
about_box	unix/gtkdlg.c	/^void about_box(void *window)$/;"	f
about_close_clicked	unix/gtkdlg.c	/^static void about_close_clicked(GtkButton *button, gpointer data)$/;"	f	file:
about_handler	unix/gtkcfg.c	/^static void about_handler(union control *ctrl, void *dlg,$/;"	f	file:
about_handler	windows/wincfg.c	/^static void about_handler(union control *ctrl, void *dlg,$/;"	f	file:
about_key_press	unix/gtkdlg.c	/^static void about_key_press(GtkWidget *widget, GdkEventKey *event,$/;"	f	file:
about_menuitem	unix/gtkwin.c	/^void about_menuitem(GtkMenuItem *item, gpointer data)$/;"	f
aboutbox	unix/gtkdlg.c	/^static GtkWidget *aboutbox = NULL;$/;"	v	file:
aboutbox	windows/winpgnt.c	/^static HWND aboutbox;$/;"	v	file:
abs_builddir	Makefile	/^abs_builddir = \/media\/B\/cjn\/putty-0.70$/;"	m
abs_srcdir	Makefile	/^abs_srcdir = \/media\/B\/cjn\/putty-0.70$/;"	m
abs_top_builddir	Makefile	/^abs_top_builddir = \/media\/B\/cjn\/putty-0.70$/;"	m
abs_top_srcdir	Makefile	/^abs_top_srcdir = \/media\/B\/cjn\/putty-0.70$/;"	m
ac_ct_AR	Makefile	/^ac_ct_AR = ar$/;"	m
ac_ct_CC	Makefile	/^ac_ct_CC = gcc$/;"	m
ac_fn_c_check_decl	configure	/^ac_fn_c_check_decl ()$/;"	f
ac_fn_c_check_func	configure	/^ac_fn_c_check_func ()$/;"	f
ac_fn_c_check_header_compile	configure	/^ac_fn_c_check_header_compile ()$/;"	f
ac_fn_c_check_header_mongrel	configure	/^ac_fn_c_check_header_mongrel ()$/;"	f
ac_fn_c_try_compile	configure	/^ac_fn_c_try_compile ()$/;"	f
ac_fn_c_try_cpp	configure	/^ac_fn_c_try_cpp ()$/;"	f
ac_fn_c_try_link	configure	/^ac_fn_c_try_link ()$/;"	f
ac_fn_c_try_run	configure	/^ac_fn_c_try_run ()$/;"	f
accept_ctx_t	network.h	/^typedef union { void *p; int i; } accept_ctx_t;$/;"	t	typeref:union:__anon40
accept_fn_t	network.h	/^typedef Socket (*accept_fn_t)(accept_ctx_t ctx, Plug plug);$/;"	t
accepting	network.h	/^    int (*accepting)(Plug p, accept_fn_t constructor, accept_ctx_t ctx);$/;"	m	struct:plug_function_table
accepting_constructor	proxy.h	/^    accept_fn_t accepting_constructor;$/;"	m	struct:Socket_proxy_tag
accepting_ctx	proxy.h	/^    accept_ctx_t accepting_ctx;$/;"	m	struct:Socket_proxy_tag
acceptor_address	pgssapi.h	/^    gss_buffer_desc acceptor_address;$/;"	m	struct:gss_channel_bindings_struct
acceptor_addrtype	pgssapi.h	/^    OM_uint32 acceptor_addrtype;$/;"	m	struct:gss_channel_bindings_struct
access_random_seed	windows/winstore.c	/^static HANDLE access_random_seed(int action)$/;"	f	file:
ack	contrib/cygtermd/telnet.c	/^    int ack, nak;		       \/* +ve and -ve acknowledgements *\/$/;"	m	struct:Opt	file:
ack	telnet.c	/^    int ack, nak;		       \/* +ve and -ve acknowledgements *\/$/;"	m	struct:Opt	file:
acl	windows/winnps.c	/^    PACL acl;$/;"	m	struct:Socket_named_pipe_server_tag	file:
acquire_cred	sshgss.h	/^    t_ssh_gss_acquire_cred acquire_cred;$/;"	m	struct:ssh_gss_library
action	pscp.c	/^    int action;			       \/* FILE, DIR, ENDDIR *\/$/;"	m	struct:scp_sink_action	file:
action	unix/gtkdlg.c	/^    int action;$/;"	m	struct:Shortcut	file:
action	unix/uxpgnt.c	/^    keyact action;$/;"	m	struct:cmdline_key_action	file:
activate	unix/gtkapp.c	/^static void activate(GApplication *app,$/;"	f	file:
activate_option	contrib/cygtermd/telnet.c	/^static void activate_option(Telnet telnet, const struct Opt *o)$/;"	f	file:
activate_option	telnet.c	/^static void activate_option(Telnet telnet, const struct Opt *o)$/;"	f	file:
activated	telnet.c	/^    int activated;$/;"	m	struct:telnet_tag	file:
active	sshshare.c	/^    int active;             \/* has the server sent REQUEST_SUCCESS? *\/$/;"	m	struct:share_forwarding	file:
active_area	unix/gtkask.c	/^    int active_area;$/;"	m	struct:askpass_ctx	file:
adc	contrib/make1305.py	/^    def adc(self, a1, a2):$/;"	m	class:CodegenTarget
add	contrib/make1305.py	/^    def add(self, a1, a2):$/;"	m	class:CodegenTarget
add	sshsh512.c	17;"	d	file:
add	terminal.c	/^static void add(struct buf *b, unsigned char c)$/;"	f	file:
add234	tree234.c	/^void *add234(tree234 * t, void *e)$/;"	f
add234_internal	tree234.c	/^static void *add234_internal(tree234 * t, void *e, int index)$/;"	f	file:
add_cc	terminal.c	/^static void add_cc(termline *line, int col, unsigned long chr)$/;"	f	file:
add_keyact	unix/uxpgnt.c	/^void add_keyact(keyact action, const char *filename)$/;"	f
add_prompt	misc.c	/^void add_prompt(prompts_t *p, char *promptstr, int echo)$/;"	f
add_session_to_jumplist	putty.h	1522;"	d
add_session_to_jumplist	windows/winjump.c	/^void add_session_to_jumplist(const char * const sessionname)$/;"	f
add_session_to_jumplist	windows/winnojmp.c	/^void add_session_to_jumplist(const char * const sessionname) {}$/;"	f
add_text_to_passphrase	unix/gtkask.c	/^static void add_text_to_passphrase(struct askpass_ctx *ctx, gchar *str)$/;"	f	file:
add_to_jumplist_registry	windows/winstore.c	/^int add_to_jumplist_registry(const char *item)$/;"	f
addbutton	config.c	/^    union control *addbutton, *rembutton, *listbox, *keybox;$/;"	m	struct:manual_hostkey_data	typeref:union:manual_hostkey_data::control	file:
addbutton	config.c	/^    union control *addbutton, *rembutton, *listbox;$/;"	m	struct:portfwd_data	typeref:union:portfwd_data::control	file:
addbutton	config.c	/^    union control *varbox, *valbox, *addbutton, *rembutton, *listbox;$/;"	m	struct:environ_data	typeref:union:environ_data::	file:
additional_log_text	ssh.c	/^    const char *additional_log_text;$/;"	m	struct:Packet	file:
addpos234	tree234.c	/^void *addpos234(tree234 * t, void *e, int index)$/;"	f
addpostest	tree234.c	/^void addpostest(void *elem, int i)$/;"	f
addr	ssh.h	/^    SockAddr addr;$/;"	m	struct:X11Display
addr	unix/uxnet.c	/^    SockAddr addr;$/;"	m	struct:Socket_tag	file:
addr	windows/winnet.c	/^    SockAddr addr;$/;"	m	struct:Socket_tag	file:
addresses	unix/uxnet.c	/^    unsigned long *addresses;	       \/* Addresses IPv4 style. *\/$/;"	m	struct:SockAddr_tag	file:
addresses	windows/winnet.c	/^    unsigned long *addresses;	       \/* Addresses IPv4 style. *\/$/;"	m	struct:SockAddr_tag	file:
addressfamily	config.c	/^    union control *addressfamily;$/;"	m	struct:portfwd_data	typeref:union:portfwd_data::control	file:
addressfamily	ssh.c	/^    int addressfamily;$/;"	m	struct:ssh_portfwd	file:
addtest	tree234.c	/^void addtest(void *elem)$/;"	f
adj	unix/gtkdlg.c	/^    GtkAdjustment *adj;       \/* for the scrollbar in a list box *\/$/;"	m	struct:uctrl	file:
aes128_key	sshaes.c	/^void aes128_key(void *handle, unsigned char *key)$/;"	f
aes192_key	sshaes.c	/^void aes192_key(void *handle, unsigned char *key)$/;"	f
aes256_decrypt_pubkey	sshaes.c	/^void aes256_decrypt_pubkey(unsigned char *key, unsigned char *blk, int len)$/;"	f
aes256_encrypt_pubkey	sshaes.c	/^void aes256_encrypt_pubkey(unsigned char *key, unsigned char *blk, int len)$/;"	f
aes256_key	sshaes.c	/^void aes256_key(void *handle, unsigned char *key)$/;"	f
aes_decrypt	sshaes.c	/^static void aes_decrypt(AESContext * ctx, word32 * block)$/;"	f	file:
aes_decrypt_cbc	sshaes.c	/^static void aes_decrypt_cbc(unsigned char *blk, int len, AESContext * ctx)$/;"	f	file:
aes_decrypt_nb_4	sshaes.c	/^static void aes_decrypt_nb_4(AESContext * ctx, word32 * block)$/;"	f	file:
aes_decrypt_nb_6	sshaes.c	/^static void aes_decrypt_nb_6(AESContext * ctx, word32 * block)$/;"	f	file:
aes_decrypt_nb_8	sshaes.c	/^static void aes_decrypt_nb_8(AESContext * ctx, word32 * block)$/;"	f	file:
aes_encrypt	sshaes.c	/^static void aes_encrypt(AESContext * ctx, word32 * block)$/;"	f	file:
aes_encrypt_cbc	sshaes.c	/^static void aes_encrypt_cbc(unsigned char *blk, int len, AESContext * ctx)$/;"	f	file:
aes_encrypt_nb_4	sshaes.c	/^static void aes_encrypt_nb_4(AESContext * ctx, word32 * block)$/;"	f	file:
aes_encrypt_nb_6	sshaes.c	/^static void aes_encrypt_nb_6(AESContext * ctx, word32 * block)$/;"	f	file:
aes_encrypt_nb_8	sshaes.c	/^static void aes_encrypt_nb_8(AESContext * ctx, word32 * block)$/;"	f	file:
aes_free_context	sshaes.c	/^void aes_free_context(void *handle)$/;"	f
aes_iv	sshaes.c	/^void aes_iv(void *handle, unsigned char *iv)$/;"	f
aes_list	sshaes.c	/^static const struct ssh2_cipher *const aes_list[] = {$/;"	v	file:
aes_make_context	sshaes.c	/^void *aes_make_context(void)$/;"	f
aes_sdctr	sshaes.c	/^static void aes_sdctr(unsigned char *blk, int len, AESContext *ctx)$/;"	f	file:
aes_setup	sshaes.c	/^static void aes_setup(AESContext * ctx, int blocklen,$/;"	f	file:
aes_ssh2_decrypt_blk	sshaes.c	/^void aes_ssh2_decrypt_blk(void *handle, unsigned char *blk, int len)$/;"	f
aes_ssh2_encrypt_blk	sshaes.c	/^void aes_ssh2_encrypt_blk(void *handle, unsigned char *blk, int len)$/;"	f
aes_ssh2_sdctr	sshaes.c	/^static void aes_ssh2_sdctr(void *handle, unsigned char *blk, int len)$/;"	f	file:
agent_callback	windows/window.c	/^struct agent_callback {$/;"	s	file:
agent_callback	windows/winplink.c	/^struct agent_callback {$/;"	s	file:
agent_cancel_query	unix/uxagentc.c	/^void agent_cancel_query(agent_pending_query *conn)$/;"	f
agent_cancel_query	windows/winpgntc.c	/^void agent_cancel_query(agent_pending_query *q)$/;"	f
agent_conncmp	unix/uxagentc.c	/^static int agent_conncmp(void *av, void *bv)$/;"	f	file:
agent_connfind	unix/uxagentc.c	/^static int agent_connfind(void *av, void *bv)$/;"	f	file:
agent_exists	unix/uxagentc.c	/^int agent_exists(void)$/;"	f
agent_exists	windows/winpgntc.c	/^int agent_exists(void)$/;"	f
agent_pending_queries	unix/uxagentc.c	/^static tree234 *agent_pending_queries;$/;"	v	file:
agent_pending_query	putty.h	/^typedef struct agent_pending_query agent_pending_query;$/;"	t	typeref:struct:agent_pending_query
agent_pending_query	unix/uxagentc.c	/^struct agent_pending_query {$/;"	s	file:
agent_query	unix/uxagentc.c	/^agent_pending_query *agent_query($/;"	f
agent_query	windows/winpgntc.c	/^agent_pending_query *agent_query($/;"	f
agent_query_synchronous	aqsync.c	/^void agent_query_synchronous(void *in, int inlen, void **out, int *outlen)$/;"	f
agent_response	ssh.c	/^    void *agent_response;$/;"	m	struct:ssh_tag	file:
agent_response_len	ssh.c	/^    int agent_response_len;$/;"	m	struct:ssh_tag	file:
agent_schedule_callback	pscp.c	/^void agent_schedule_callback(void (*callback)(void *, void *, int),$/;"	f
agent_schedule_callback	psftp.c	/^void agent_schedule_callback(void (*callback)(void *, void *, int),$/;"	f
agent_schedule_callback	windows/window.c	/^void agent_schedule_callback(void (*callback)(void *, void *, int),$/;"	f
agent_schedule_callback	windows/winpgnt.c	/^void agent_schedule_callback(void (*callback)(void *, void *, int),$/;"	f
agent_schedule_callback	windows/winplink.c	/^void agent_schedule_callback(void (*callback)(void *, void *, int),$/;"	f
agent_select_result	unix/uxagentc.c	/^static void agent_select_result(int fd, int event)$/;"	f	file:
agent_try_read	unix/uxagentc.c	/^static int agent_try_read(agent_pending_query *conn)$/;"	f	file:
agentfwd_enabled	ssh.c	/^    int agentfwd_enabled;$/;"	m	struct:ssh_tag	file:
ai	unix/uxnet.c	/^    struct addrinfo *ai;	       \/* steps along addr->ais *\/$/;"	m	struct:SockAddrStep_tag	typeref:struct:SockAddrStep_tag::addrinfo	file:
ai	windows/winnet.c	/^    struct addrinfo *ai;	       \/* steps along addr->ais *\/$/;"	m	struct:SockAddrStep_tag	typeref:struct:SockAddrStep_tag::addrinfo	file:
ais	unix/uxnet.c	/^    struct addrinfo *ais;	       \/* Addresses IPv6 style. *\/$/;"	m	struct:SockAddr_tag	typeref:struct:SockAddr_tag::addrinfo	file:
ais	windows/winnet.c	/^    struct addrinfo *ais;	       \/* Addresses IPv6 style. *\/$/;"	m	struct:SockAddr_tag	typeref:struct:SockAddr_tag::addrinfo	file:
aix_post_process_depfile	depcomp	/^aix_post_process_depfile ()$/;"	f
alg	ssh.c	/^    const struct ssh_signkey *alg;$/;"	m	struct:ssh_signkey_with_user_pref_id	typeref:struct:ssh_signkey_with_user_pref_id::ssh_signkey	file:
alg	ssh.h	/^    const struct ssh_signkey *alg;     \/* the key algorithm *\/$/;"	m	struct:ssh2_userkey	typeref:struct:ssh2_userkey::ssh_signkey
alias_resolve	unix/gtkfont.c	/^static void alias_resolve(GtkTreeView *treeview, GtkTreePath *path,$/;"	f	file:
align_label_left	unix/gtkmisc.c	/^void align_label_left(GtkLabel *label)$/;"	f
alloc_cat	unix/osxlaunch.c	/^char *alloc_cat(const char *str1, const char *str2)$/;"	f
alloc_channel_id	ssh.c	/^static int alloc_channel_id(Ssh ssh)$/;"	f	file:
allocated	unix/gtkfont.c	/^    int allocated;$/;"	m	struct:x11font_individual	file:
allsize	unix/gtkfont.c	/^    int rowsize, allsize, indexflip;$/;"	m	struct:x11font_individual	file:
allsources	Makefile	/^allsources = aqsync.c be_all_s.c be_misc.c be_none.c be_nos_s.c be_ssh.c \\$/;"	m
already_running	windows/winpgnt.c	/^static int already_running;$/;"	v	file:
alt_b	terminal.h	/^    int alt_t, alt_b;$/;"	m	struct:terminal_tag
alt_cset	terminal.h	/^    int alt_cset, alt_sco_acs, alt_utf;$/;"	m	struct:terminal_tag
alt_digits	unix/gtkwin.c	/^    int alt_digits;$/;"	m	struct:gui_data	file:
alt_ins	terminal.h	/^    int alt_x, alt_y, alt_om, alt_wrap, alt_wnext, alt_ins;$/;"	m	struct:terminal_tag
alt_keycode	unix/gtkwin.c	/^    int alt_keycode;$/;"	m	struct:gui_data	file:
alt_om	terminal.h	/^    int alt_x, alt_y, alt_om, alt_wrap, alt_wnext, alt_ins;$/;"	m	struct:terminal_tag
alt_save_attr	terminal.h	/^    int alt_save_attr;$/;"	m	struct:terminal_tag
alt_save_csattr	terminal.h	/^    int alt_save_cset, alt_save_csattr;$/;"	m	struct:terminal_tag
alt_save_cset	terminal.h	/^    int alt_save_cset, alt_save_csattr;$/;"	m	struct:terminal_tag
alt_save_sco_acs	terminal.h	/^    int alt_save_sco_acs;$/;"	m	struct:terminal_tag
alt_save_utf	terminal.h	/^    int alt_save_utf, alt_save_wnext;$/;"	m	struct:terminal_tag
alt_save_wnext	terminal.h	/^    int alt_save_utf, alt_save_wnext;$/;"	m	struct:terminal_tag
alt_savecurs	terminal.h	/^    pos alt_savecurs;$/;"	m	struct:terminal_tag
alt_sblines	terminal.h	/^    int alt_sblines; \/* # of lines on alternate screen that should be used for scrollback. *\/$/;"	m	struct:terminal_tag
alt_sco_acs	terminal.h	/^    int alt_cset, alt_sco_acs, alt_utf;$/;"	m	struct:terminal_tag
alt_screen	terminal.h	/^    tree234 *alt_screen;	       \/* lines on alternate screen *\/$/;"	m	struct:terminal_tag
alt_t	terminal.h	/^    int alt_t, alt_b;$/;"	m	struct:terminal_tag
alt_utf	terminal.h	/^    int alt_cset, alt_sco_acs, alt_utf;$/;"	m	struct:terminal_tag
alt_which	terminal.h	/^    int alt_which;$/;"	m	struct:terminal_tag
alt_wnext	terminal.h	/^    int alt_x, alt_y, alt_om, alt_wrap, alt_wnext, alt_ins;$/;"	m	struct:terminal_tag
alt_wrap	terminal.h	/^    int alt_x, alt_y, alt_om, alt_wrap, alt_wnext, alt_ins;$/;"	m	struct:terminal_tag
alt_x	terminal.h	/^    int alt_x, alt_y, alt_om, alt_wrap, alt_wnext, alt_ins;$/;"	m	struct:terminal_tag
alt_y	terminal.h	/^    int alt_x, alt_y, alt_om, alt_wrap, alt_wnext, alt_ins;$/;"	m	struct:terminal_tag
am__CONFIG_DISTCLEAN_FILES	Makefile	/^am__CONFIG_DISTCLEAN_FILES = config.status config.cache config.log \\$/;"	m
am__DEPENDENCIES_1	Makefile	/^am__DEPENDENCIES_1 =$/;"	m
am__DIST_COMMON	Makefile	/^am__DIST_COMMON = $(srcdir)\/Makefile.in $(srcdir)\/uxconfig.in README \\$/;"	m
am__aclocal_m4_deps	Makefile	/^am__aclocal_m4_deps = $(top_srcdir)\/configure.ac$/;"	m
am__base_list	Makefile	/^am__base_list = \\$/;"	m
am__can_run_installinfo	Makefile	/^am__can_run_installinfo = \\$/;"	m
am__cd	Makefile	/^am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd$/;"	m
am__configure_deps	Makefile	/^am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\$/;"	m
am__define_uniq_tagged_files	Makefile	/^am__define_uniq_tagged_files = \\$/;"	m
am__depfiles_maybe	Makefile	/^am__depfiles_maybe = depfiles$/;"	m
am__dirstamp	Makefile	/^am__dirstamp = $(am__leading_dot)dirstamp$/;"	m
am__distuninstallcheck_listfiles	Makefile	/^am__distuninstallcheck_listfiles = $(distuninstallcheck_listfiles) \\$/;"	m
am__include	Makefile	/^am__include = include$/;"	m
am__install_max	Makefile	/^am__install_max = 40$/;"	m
am__installdirs	Makefile	/^am__installdirs = "$(DESTDIR)$(bindir)" "$(DESTDIR)$(man1dir)"$/;"	m
am__is_gnu_make	Makefile	/^am__is_gnu_make = { \\$/;"	m
am__leading_dot	Makefile	/^am__leading_dot = .$/;"	m
am__make_dryrun	Makefile	/^am__make_dryrun = (target_option=n; $(am__make_running_with_option))$/;"	m
am__make_keepgoing	Makefile	/^am__make_keepgoing = (target_option=k; $(am__make_running_with_option))$/;"	m
am__make_running_with_option	Makefile	/^am__make_running_with_option = \\$/;"	m
am__mv	Makefile	/^am__mv = mv -f$/;"	m
am__nobase_list	Makefile	/^am__nobase_list = $(am__nobase_strip_setup); \\$/;"	m
am__nobase_strip	Makefile	/^am__nobase_strip = \\$/;"	m
am__nobase_strip_setup	Makefile	/^am__nobase_strip_setup = \\$/;"	m
am__pageant_SOURCES_DIST	Makefile	/^am__pageant_SOURCES_DIST = aqsync.c be_misc.c be_none.c callback.c \\$/;"	m
am__post_remove_distdir	Makefile	/^am__post_remove_distdir = $(am__remove_distdir)$/;"	m
am__pterm_SOURCES_DIST	Makefile	/^am__pterm_SOURCES_DIST = be_none.c callback.c charset\/fromucs.c \\$/;"	m
am__ptermapp_SOURCES_DIST	Makefile	/^am__ptermapp_SOURCES_DIST = be_none.c callback.c charset\/fromucs.c \\$/;"	m
am__putty_SOURCES_DIST	Makefile	/^am__putty_SOURCES_DIST = aqsync.c be_all_s.c be_misc.c callback.c \\$/;"	m
am__puttyapp_SOURCES_DIST	Makefile	/^am__puttyapp_SOURCES_DIST = aqsync.c be_all_s.c be_misc.c callback.c \\$/;"	m
am__puttytel_SOURCES_DIST	Makefile	/^am__puttytel_SOURCES_DIST = be_misc.c be_nos_s.c callback.c \\$/;"	m
am__quote	Makefile	/^am__quote = $/;"	m
am__remove_distdir	Makefile	/^am__remove_distdir = \\$/;"	m
am__strip_dir	Makefile	/^am__strip_dir = f=`echo $$p | sed -e 's|^.*\/||'`;$/;"	m
am__tagged_files	Makefile	/^am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) \\$/;"	m
am__tar	Makefile	/^am__tar = $${TAR-tar} chof - "$$tardir"$/;"	m
am__uninstall_files_from_dir	Makefile	/^am__uninstall_files_from_dir = { \\$/;"	m
am__uniquify_input	Makefile	/^am__uniquify_input = $(AWK) '\\$/;"	m
am__untar	Makefile	/^am__untar = $${TAR-tar} xf -$/;"	m
am__v_AR_	Makefile	/^am__v_AR_ = $(am__v_AR_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_AR_0	Makefile	/^am__v_AR_0 = @echo "  AR      " $@;$/;"	m
am__v_AR_1	Makefile	/^am__v_AR_1 = $/;"	m
am__v_CCLD_	Makefile	/^am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_CCLD_0	Makefile	/^am__v_CCLD_0 = @echo "  CCLD    " $@;$/;"	m
am__v_CCLD_1	Makefile	/^am__v_CCLD_1 = $/;"	m
am__v_CC_	Makefile	/^am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_CC_0	Makefile	/^am__v_CC_0 = @echo "  CC      " $@;$/;"	m
am__v_CC_1	Makefile	/^am__v_CC_1 = $/;"	m
am__v_GEN_	Makefile	/^am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_GEN_0	Makefile	/^am__v_GEN_0 = @echo "  GEN     " $@;$/;"	m
am__v_GEN_1	Makefile	/^am__v_GEN_1 = $/;"	m
am__v_P_	Makefile	/^am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_P_0	Makefile	/^am__v_P_0 = false$/;"	m
am__v_P_1	Makefile	/^am__v_P_1 = :$/;"	m
am__v_at_	Makefile	/^am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_at_0	Makefile	/^am__v_at_0 = @$/;"	m
am__v_at_1	Makefile	/^am__v_at_1 = $/;"	m
am__v_lt_	Makefile	/^am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_lt_0	Makefile	/^am__v_lt_0 = --silent$/;"	m
am__v_lt_1	Makefile	/^am__v_lt_1 = $/;"	m
am__vpath_adj	Makefile	/^am__vpath_adj = case $$p in \\$/;"	m
am__vpath_adj_setup	Makefile	/^am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;$/;"	m
am_cgtest_OBJECTS	Makefile	/^am_cgtest_OBJECTS = cgtest.$(OBJEXT) conf.$(OBJEXT) import.$(OBJEXT) \\$/;"	m
am_fuzzterm_OBJECTS	Makefile	/^am_fuzzterm_OBJECTS = be_none.$(OBJEXT) callback.$(OBJEXT) \\$/;"	m
am_libversion_a_OBJECTS	Makefile	/^am_libversion_a_OBJECTS = libversion_a-version.$(OBJEXT)$/;"	m
am_osxlaunch_OBJECTS	Makefile	/^am_osxlaunch_OBJECTS = unix\/osxlaunch.$(OBJEXT)$/;"	m
am_pageant_OBJECTS	Makefile	/^am_pageant_OBJECTS = aqsync.$(OBJEXT) be_misc.$(OBJEXT) \\$/;"	m
am_plink_OBJECTS	Makefile	/^am_plink_OBJECTS = aqsync.$(OBJEXT) be_all_s.$(OBJEXT) \\$/;"	m
am_pscp_OBJECTS	Makefile	/^am_pscp_OBJECTS = aqsync.$(OBJEXT) be_misc.$(OBJEXT) be_ssh.$(OBJEXT) \\$/;"	m
am_psftp_OBJECTS	Makefile	/^am_psftp_OBJECTS = aqsync.$(OBJEXT) be_misc.$(OBJEXT) be_ssh.$(OBJEXT) \\$/;"	m
am_pterm_OBJECTS	Makefile	/^am_pterm_OBJECTS = be_none.$(OBJEXT) callback.$(OBJEXT) \\$/;"	m
am_ptermapp_OBJECTS	Makefile	/^am_ptermapp_OBJECTS = be_none.$(OBJEXT) \\$/;"	m
am_putty_OBJECTS	Makefile	/^am_putty_OBJECTS = aqsync.$(OBJEXT) be_all_s.$(OBJEXT) \\$/;"	m
am_puttyapp_OBJECTS	Makefile	/^am_puttyapp_OBJECTS = aqsync.$(OBJEXT) \\$/;"	m
am_puttygen_OBJECTS	Makefile	/^am_puttygen_OBJECTS = cmdgen.$(OBJEXT) conf.$(OBJEXT) import.$(OBJEXT) \\$/;"	m
am_puttytel_OBJECTS	Makefile	/^am_puttytel_OBJECTS = be_misc.$(OBJEXT) \\$/;"	m
am_testbn_OBJECTS	Makefile	/^am_testbn_OBJECTS = conf.$(OBJEXT) misc.$(OBJEXT) sshbn.$(OBJEXT) \\$/;"	m
and	sshsh512.c	26;"	d	file:
another_font	windows/window.c	/^static void another_font(int fontno)$/;"	f	file:
ansi_colour	terminal.h	/^    int ansi_colour;$/;"	m	struct:terminal_tag
answer_msg	windows/winpgnt.c	/^static void answer_msg(void *msgv)$/;"	f	file:
answerback	terminal.h	/^    char *answerback;$/;"	m	struct:terminal_tag
answerbacklen	terminal.h	/^    int answerbacklen;$/;"	m	struct:terminal_tag
app	unix/gtkapp.c	/^static GtkApplication *app;$/;"	v	file:
app_actions	unix/gtkapp.c	/^static const GActionEntry app_actions[] = {$/;"	v	file:
app_cursor_keys	terminal.h	/^    int app_cursor_keys, app_keypad_keys, vt52_mode;$/;"	m	struct:terminal_tag
app_keypad_keys	terminal.h	/^    int app_cursor_keys, app_keypad_keys, vt52_mode;$/;"	m	struct:terminal_tag
app_name	unix/gtkmain.c	/^static const char *app_name = "pterm";$/;"	v	file:
application_data	pgssapi.h	/^    gss_buffer_desc application_data;$/;"	m	struct:gss_channel_bindings_struct
appname	be_all.c	/^const char *const appname = "PuTTY";$/;"	v
appname	be_all_s.c	/^const char *const appname = "PuTTY";$/;"	v
appname	be_nos_s.c	/^const char *const appname = "PuTTYtel";$/;"	v
appname	be_nossh.c	/^const char *const appname = "PuTTYtel";$/;"	v
appname	fuzzterm.c	/^const char *const appname = "FuZZterm";$/;"	v
appname	pscp.c	/^const char *const appname = "PSCP";$/;"	v
appname	psftp.c	/^const char *const appname = "PSFTP";$/;"	v
appname	unix/uxpgnt.c	/^const char *const appname = "Pageant";$/;"	v
appname	unix/uxpterm.c	/^const char *const appname = "pterm";$/;"	v
arabicshaping	terminal.h	/^    int arabicshaping;$/;"	m	struct:terminal_tag
arcfour128_key	ssharcf.c	/^static void arcfour128_key(void *handle, unsigned char *key)$/;"	f	file:
arcfour256_key	ssharcf.c	/^static void arcfour256_key(void *handle, unsigned char *key)$/;"	f	file:
arcfour_block	ssharcf.c	/^static void arcfour_block(void *handle, unsigned char *blk, int len)$/;"	f	file:
arcfour_free_context	ssharcf.c	/^static void arcfour_free_context(void *handle)$/;"	f	file:
arcfour_iv	ssharcf.c	/^static void arcfour_iv(void *handle, unsigned char *key)$/;"	f	file:
arcfour_list	ssharcf.c	/^static const struct ssh2_cipher *const arcfour_list[] = {$/;"	v	file:
arcfour_make_context	ssharcf.c	/^static void *arcfour_make_context(void)$/;"	f	file:
arcfour_setkey	ssharcf.c	/^static void arcfour_setkey(ArcfourContext *ctx, unsigned char const *key,$/;"	f	file:
arcfour_stir	ssharcf.c	/^static void arcfour_stir(ArcfourContext *ctx)$/;"	f	file:
area	unix/gtkask.c	/^    GtkWidget *area;$/;"	m	struct:drawing_area_ctx	file:
area	unix/gtkwin.c	/^    GtkWidget *area, *menubar;$/;"	m	struct:find_app_menu_bar_ctx	file:
area	unix/gtkwin.c	/^    GtkWidget *window, *area, *sbar;$/;"	m	struct:gui_data	file:
args	icons/mkicon.py	/^args = sys.argv[1:]$/;"	v
argv	windows/winutils.c	/^    const char *argv[10];$/;"	m	struct:argv_test	file:
argv_test	windows/winutils.c	/^const struct argv_test {$/;"	s	file:
argv_tests	windows/winutils.c	/^} argv_tests[] = {$/;"	v	typeref:struct:argv_test
array	tree234.c	/^void **array;$/;"	v
arraylen	tree234.c	/^int arraylen, arraysize;$/;"	v
arraysize	tree234.c	/^int arraylen, arraysize;$/;"	v
as_fn_append	config.status	/^  as_fn_append ()$/;"	f
as_fn_append	configure	/^  as_fn_append ()$/;"	f
as_fn_arith	config.status	/^  as_fn_arith ()$/;"	f
as_fn_arith	configure	/^  as_fn_arith ()$/;"	f
as_fn_error	config.status	/^as_fn_error ()$/;"	f
as_fn_error	configure	/^as_fn_error ()$/;"	f
as_fn_executable_p	config.status	/^as_fn_executable_p ()$/;"	f
as_fn_executable_p	configure	/^as_fn_executable_p ()$/;"	f
as_fn_exit	config.status	/^as_fn_exit ()$/;"	f
as_fn_exit	configure	/^as_fn_exit ()$/;"	f
as_fn_failure	configure	/^as_fn_failure () { as_fn_return 1; }$/;"	f
as_fn_mkdir_p	config.status	/^as_fn_mkdir_p ()$/;"	f
as_fn_mkdir_p	configure	/^as_fn_mkdir_p ()$/;"	f
as_fn_ret_failure	configure	/^as_fn_ret_failure () { return 1; }$/;"	f
as_fn_ret_success	configure	/^as_fn_ret_success () { return 0; }$/;"	f
as_fn_set_status	config.status	/^as_fn_set_status ()$/;"	f
as_fn_set_status	configure	/^as_fn_set_status ()$/;"	f
as_fn_success	configure	/^as_fn_success () { as_fn_return 0; }$/;"	f
as_fn_unset	config.status	/^as_fn_unset ()$/;"	f
as_fn_unset	configure	/^as_fn_unset ()$/;"	f
ascent	unix/gtkfont.h	/^    int width, height, ascent, descent;$/;"	m	struct:unifont
asel	contrib/cygtermd/main.c	/^sel *asel;$/;"	v
askalg	unix/gtkdlg.c	/^int askalg(void *frontend, const char *algtype, const char *algname,$/;"	f
askalg	unix/uxcons.c	/^int askalg(void *frontend, const char *algtype, const char *algname,$/;"	f
askalg	windows/wincons.c	/^int askalg(void *frontend, const char *algtype, const char *algname,$/;"	f
askalg	windows/windlg.c	/^int askalg(void *frontend, const char *algtype, const char *algname,$/;"	f
askappend	fuzzterm.c	/^int askappend(void *frontend, Filename *filename,$/;"	f
askappend	unix/gtkdlg.c	/^int askappend(void *frontend, Filename *filename,$/;"	f
askappend	unix/uxcons.c	/^int askappend(void *frontend, Filename *filename,$/;"	f
askappend	windows/wincons.c	/^int askappend(void *frontend, Filename *filename,$/;"	f
askappend	windows/windlg.c	/^int askappend(void *frontend, Filename *filename,$/;"	f
askhk	unix/gtkdlg.c	/^int askhk(void *frontend, const char *algname, const char *betteralgs,$/;"	f
askhk	unix/uxcons.c	/^int askhk(void *frontend, const char *algname, const char *betteralgs,$/;"	f
askhk	windows/wincons.c	/^int askhk(void *frontend, const char *algname, const char *betteralgs,$/;"	f
askhk	windows/windlg.c	/^int askhk(void *frontend, const char *algname, const char *betteralgs,$/;"	f
askpass	unix/uxpgnt.c	/^static char *askpass(const char *comment)$/;"	f	file:
askpass_ctx	unix/gtkask.c	/^struct askpass_ctx {$/;"	s	file:
askpass_redraw_cairo	unix/gtkask.c	/^static void askpass_redraw_cairo(cairo_t *cr, struct drawing_area_ctx *ctx)$/;"	f	file:
askpass_redraw_gdk	unix/gtkask.c	/^static void askpass_redraw_gdk(GdkWindow *win, struct drawing_area_ctx *ctx)$/;"	f	file:
asn1_weird_stuff	sshrsa.c	/^static const unsigned char asn1_weird_stuff[] = {$/;"	v	file:
atime	pscp.c	/^    unsigned long atime, mtime;	       \/* access times for the file *\/$/;"	m	struct:scp_sink_action	file:
atime	sftp.h	/^    unsigned long atime;$/;"	m	struct:fxp_attrs
attempting_connshare	ssh.c	/^    int attempting_connshare;$/;"	m	struct:ssh_tag	file:
attr	terminal.h	/^    unsigned long attr;$/;"	m	struct:termchar
attr_mask	terminal.h	/^    int attr_mask;$/;"	m	struct:terminal_tag
attrbuf	terminal.c	/^    int *attrbuf;	    \/* buffer for copied attributes *\/$/;"	m	struct:__anon108	file:
attrptr	terminal.c	/^    int *attrptr;	    \/* = attrbuf + bufpos *\/$/;"	m	struct:__anon108	file:
attrs	sftp.h	/^    struct fxp_attrs attrs;$/;"	m	struct:fxp_name	typeref:struct:fxp_name::fxp_attrs
attrs_clr	psftp.c	/^    unsigned attrs_clr, attrs_xor;$/;"	m	struct:sftp_context_chmod	file:
attrs_xor	psftp.c	/^    unsigned attrs_clr, attrs_xor;$/;"	m	struct:sftp_context_chmod	file:
auth_agent_query	ssh.c	/^    agent_pending_query *auth_agent_query;$/;"	m	struct:ssh_tag	file:
auth_data	x11fwd.c	/^    unsigned char *auth_data;$/;"	m	struct:X11Connection	file:
auth_dlen	x11fwd.c	/^    int data_read, auth_plen, auth_psize, auth_dlen, auth_dsize;$/;"	m	struct:X11Connection	file:
auth_dsize	x11fwd.c	/^    int data_read, auth_plen, auth_psize, auth_dlen, auth_dsize;$/;"	m	struct:X11Connection	file:
auth_plen	x11fwd.c	/^    int data_read, auth_plen, auth_psize, auth_dlen, auth_dsize;$/;"	m	struct:X11Connection	file:
auth_protocol	x11fwd.c	/^    char *auth_protocol;$/;"	m	struct:X11Connection	file:
auth_psize	x11fwd.c	/^    int data_read, auth_plen, auth_psize, auth_dlen, auth_dsize;$/;"	m	struct:X11Connection	file:
authtree	x11fwd.c	/^    tree234 *authtree;$/;"	m	struct:X11Connection	file:
b	ssh.h	/^    Bignum a, b, n;$/;"	m	struct:ec_wcurve
b	ssh.h	/^    Bignum a, b;$/;"	m	struct:ec_mcurve
b	testdata/bignum.py	/^        b = sqrt(5<<(2*bi-1))$/;"	v
b	unix/gtkdlg.c	/^    struct { unsigned char r, g, b, ok; } coloursel_result;   \/* 0-255 *\/$/;"	m	struct:dlgparam::__anon116	file:
b	windows/winstuff.h	/^    struct { unsigned char r, g, b, ok; } coloursel_result;   \/* 0-255 *\/$/;"	m	struct:dlgparam::__anon149
b_cipher	sshccp.c	/^    struct chacha20 b_cipher; \/* Used for content *\/$/;"	m	struct:ccp_context	typeref:struct:ccp_context::chacha20	file:
back	ldisc.h	/^    Backend *back;$/;"	m	struct:ldisc_tag
back	pinger.c	/^    Backend *back;$/;"	m	struct:pinger_tag	file:
back	pscp.c	/^static Backend *back;$/;"	v	file:
back	psftp.c	/^static Backend *back;$/;"	v	file:
back	unix/gtkwin.c	/^    Backend *back;$/;"	m	struct:gui_data	file:
back	unix/uxplink.c	/^static Backend *back;$/;"	v	file:
back	windows/window.c	/^static Backend *back;$/;"	v	file:
back	windows/winplink.c	/^static Backend *back;$/;"	v	file:
backend_from_name	settings.c	/^Backend *backend_from_name(const char *name)$/;"	f
backend_from_proto	settings.c	/^Backend *backend_from_proto(int proto)$/;"	f
backend_socket_log	be_misc.c	/^void backend_socket_log(void *frontend, int type, SockAddr addr, int port,$/;"	f
backend_tag	putty.h	/^struct backend_tag {$/;"	s
backends	be_all.c	/^Backend *backends[] = {$/;"	v
backends	be_all_s.c	/^Backend *backends[] = {$/;"	v
backends	be_none.c	/^Backend *backends[] = {$/;"	v
backends	be_nos_s.c	/^Backend *backends[] = {$/;"	v
backends	be_nossh.c	/^Backend *backends[] = {$/;"	v
backends	be_ssh.c	/^Backend *backends[] = {$/;"	v
backhandle	ldisc.h	/^    void *backhandle;$/;"	m	struct:ldisc_tag
backhandle	pinger.c	/^    void *backhandle;$/;"	m	struct:pinger_tag	file:
backhandle	portfwd.c	/^    void *backhandle;		       \/* instance of SSH backend itself *\/$/;"	m	struct:PortForwarding	file:
backhandle	portfwd.c	/^    void *backhandle;		       \/* instance of SSH backend itself *\/$/;"	m	struct:PortListener	file:
backhandle	pscp.c	/^static void *backhandle;$/;"	v	file:
backhandle	psftp.c	/^static void *backhandle;$/;"	v	file:
backhandle	unix/gtkwin.c	/^    void *backhandle;$/;"	m	struct:gui_data	file:
backhandle	unix/uxplink.c	/^static void *backhandle;$/;"	v	file:
backhandle	windows/window.c	/^static void *backhandle;$/;"	v	file:
backhandle	windows/winplink.c	/^static void *backhandle;$/;"	v	file:
backward	terminal.h	/^    int *forward, *backward;	       \/* the permutations of line positions *\/$/;"	m	struct:bidi_cache_entry
banner	ssh.c	/^    bufchain banner;	\/* accumulates banners during do_ssh2_authconn *\/$/;"	m	struct:ssh_tag	file:
bare_connection	ssh.c	/^    int bare_connection;$/;"	m	struct:ssh_tag	file:
bare_name_compare	psftp.c	/^static int bare_name_compare(const void *av, const void *bv)$/;"	f	file:
bareradioline	windows/winctrls.c	/^void bareradioline(struct ctlpos *cp, int nacross, ...)$/;"	f
bartitle	windows/winctrls.c	/^void bartitle(struct ctlpos *cp, char *name, int id)$/;"	f
base	testdata/bignum.py	/^    base = sqrt(3*modulus*modulus) % modulus$/;"	v
base64	contrib/kh2reg.py	/^import base64$/;"	i
base64_decode_atom	misc.c	/^int base64_decode_atom(const char *atom, unsigned char *out)$/;"	f
base64_encode	sshpubk.c	/^void base64_encode(FILE *fp, const unsigned char *data, int datalen, int cpl)$/;"	f
base64_encode_atom	misc.c	/^void base64_encode_atom(const unsigned char *data, int n, char *out)$/;"	f
base64_lines	sshpubk.c	/^int base64_lines(int datalen)$/;"	f
base_id	windows/winstuff.h	/^    int base_id;$/;"	m	struct:winctrl
basic_erase_char	terminal.h	/^    termchar basic_erase_char, erase_char;$/;"	m	struct:terminal_tag
bbox	icons/mkicon.py	/^def bbox(canvas):$/;"	f
bcrypt	import.c	/^        } bcrypt;$/;"	m	union:openssh_new_key::__anon33	typeref:struct:openssh_new_key::__anon33::__anon34	file:
bcrypt_genblock	sshbcrypt.c	/^void bcrypt_genblock(int counter,$/;"	f
bcrypt_hash	sshbcrypt.c	/^void bcrypt_hash(const unsigned char *key, int keybytes,$/;"	f
bcrypt_setup	sshbcrypt.c	/^BlowfishContext *bcrypt_setup(const unsigned char *key, int keybytes,$/;"	f
be_default_protocol	be_all.c	/^const int be_default_protocol = PROT_SSH;$/;"	v
be_default_protocol	be_all.c	/^const int be_default_protocol = PROT_TELNET;$/;"	v
be_default_protocol	be_all_s.c	/^const int be_default_protocol = PROT_SSH;$/;"	v
be_default_protocol	be_all_s.c	/^const int be_default_protocol = PROT_TELNET;$/;"	v
be_default_protocol	be_nos_s.c	/^const int be_default_protocol = PROT_TELNET;$/;"	v
be_default_protocol	be_nossh.c	/^const int be_default_protocol = PROT_TELNET;$/;"	v
be_default_protocol	be_ssh.c	/^const int be_default_protocol = PROT_SSH;$/;"	v
bedit	config.c	/^    union control *listbox, *redit, *gedit, *bedit, *button;$/;"	m	struct:colour_data	typeref:union:colour_data::	file:
beep	terminal.h	/^    int beep;$/;"	m	struct:terminal_tag
beep_overloaded	terminal.h	/^    int beep_overloaded;$/;"	m	struct:terminal_tag
beephead	terminal.h	/^    struct beeptime *beephead, *beeptail;$/;"	m	struct:terminal_tag	typeref:struct:terminal_tag::beeptime
beeptail	terminal.h	/^    struct beeptime *beephead, *beeptail;$/;"	m	struct:terminal_tag	typeref:struct:terminal_tag::
beeptime	terminal.h	/^struct beeptime {$/;"	s
begin_wildcard_matching	unix/uxsftp.c	/^WildcardMatcher *begin_wildcard_matching(const char *name) {$/;"	f
begin_wildcard_matching	windows/winsftp.c	/^WildcardMatcher *begin_wildcard_matching(const char *name)$/;"	f
beginbox	windows/winctrls.c	/^void beginbox(struct ctlpos *cp, char *name, int idbox)$/;"	f
bellovl	terminal.h	/^    int bellovl;$/;"	m	struct:terminal_tag
bellovl_n	terminal.h	/^    int bellovl_n;$/;"	m	struct:terminal_tag
bellovl_s	terminal.h	/^    int bellovl_s;$/;"	m	struct:terminal_tag
bellovl_t	terminal.h	/^    int bellovl_t;$/;"	m	struct:terminal_tag
ber_read_id_len	import.c	/^static int ber_read_id_len(void *source, int sourcelen,$/;"	f	file:
ber_write_id_len	import.c	/^static int ber_write_id_len(void *dest, int id, int length, int flags)$/;"	f	file:
bidi	terminal.h	/^    int bidi;$/;"	m	struct:terminal_tag
bidi_cache_entry	terminal.h	/^struct bidi_cache_entry {$/;"	s
bidi_cache_size	terminal.h	/^    int bidi_cache_size;$/;"	m	struct:terminal_tag
bidi_char	minibidi.c	/^typedef struct bidi_char {$/;"	s	file:
bidi_char	minibidi.c	/^} bidi_char;$/;"	t	typeref:struct:bidi_char	file:
bidi_char	putty.h	/^typedef struct bidi_char {$/;"	s
bidi_char	putty.h	/^} bidi_char;$/;"	t	typeref:struct:bidi_char
big_cursor	terminal.h	/^    int big_cursor;$/;"	m	struct:terminal_tag
bigadd	sshbn.c	/^Bignum bigadd(Bignum a, Bignum b)$/;"	f
bigdiv	sshbn.c	/^Bignum bigdiv(Bignum a, Bignum b)$/;"	f
bigdivmod	sshbn.c	/^static void bigdivmod(Bignum p, Bignum mod, Bignum result, Bignum quotient)$/;"	f	file:
bigeditctrl	windows/winctrls.c	/^void bigeditctrl(struct ctlpos *cp, char *stext,$/;"	f
biggcd	sshbn.c	/^Bignum biggcd(Bignum av, Bignum bv)$/;"	f
biglen	ssh.c	/^    long len, pad, biglen, to_read;$/;"	m	struct:rdpkt1_state_tag	file:
bigmod	sshbn.c	/^Bignum bigmod(Bignum a, Bignum b)$/;"	f
bigmul	sshbn.c	/^Bignum bigmul(Bignum a, Bignum b)$/;"	f
bigmuladd	sshbn.c	/^Bignum bigmuladd(Bignum a, Bignum b, Bignum addend)$/;"	f
bignum_add_long	sshbn.c	/^Bignum bignum_add_long(Bignum number, unsigned long n)$/;"	f
bignum_bit	sshbn.c	/^int bignum_bit(Bignum bn, int i)$/;"	f
bignum_bitcount	sshbn.c	/^int bignum_bitcount(Bignum bn)$/;"	f
bignum_bitmask	sshbn.c	/^Bignum bignum_bitmask(Bignum n)$/;"	f
bignum_byte	sshbn.c	/^int bignum_byte(Bignum bn, int i)$/;"	f
bignum_cmp	sshbn.c	/^int bignum_cmp(Bignum a, Bignum b)$/;"	f
bignum_decimal	sshbn.c	/^char *bignum_decimal(Bignum x)$/;"	f
bignum_from_bytes	sshbn.c	/^Bignum bignum_from_bytes(const unsigned char *data, int nbytes)$/;"	f
bignum_from_bytes_le	sshbn.c	/^Bignum bignum_from_bytes_le(const unsigned char *data, int nbytes)$/;"	f
bignum_from_decimal	sshbn.c	/^Bignum bignum_from_decimal(const char *decimal)$/;"	f
bignum_from_long	sshbn.c	/^Bignum bignum_from_long(unsigned long n)$/;"	f
bignum_lshift	sshbn.c	/^Bignum bignum_lshift(Bignum a, int shift)$/;"	f
bignum_mod_short	sshbn.c	/^unsigned short bignum_mod_short(Bignum number, unsigned short modulus)$/;"	f
bignum_random_in_range	sshbn.c	/^Bignum bignum_random_in_range(const Bignum lower, const Bignum upper)$/;"	f
bignum_rshift	sshbn.c	/^Bignum bignum_rshift(Bignum a, int shift)$/;"	f
bignum_set_bit	sshbn.c	/^void bignum_set_bit(Bignum bn, int bitnum, int value)$/;"	f
bigsigma0	sshsh256.c	17;"	d	file:
bigsigma0	sshsh512.c	41;"	d	file:
bigsigma1	sshsh256.c	18;"	d	file:
bigsigma1	sshsh512.c	43;"	d	file:
bigsub	sshbn.c	/^Bignum bigsub(Bignum a, Bignum b)$/;"	f
bigval	sshccp.c	/^typedef struct bigval {$/;"	s	file:
bigval	sshccp.c	/^} bigval;$/;"	t	typeref:struct:bigval	file:
bigval_add	sshccp.c	/^static void bigval_add(bigval *r, const bigval *a, const bigval *b)$/;"	f	file:
bigval_clear	sshccp.c	/^static void bigval_clear(bigval *r)$/;"	f	file:
bigval_export_le	sshccp.c	/^static void bigval_export_le(const bigval *r, void *vdata, int len)$/;"	f	file:
bigval_final_reduce	sshccp.c	/^static void bigval_final_reduce(bigval *n)$/;"	f	file:
bigval_import_le	sshccp.c	/^static void bigval_import_le(bigval *r, const void *vdata, int len)$/;"	f	file:
bigval_input	contrib/make1305.py	/^    def bigval_input(self, name, bits):$/;"	m	class:CodegenTarget
bigval_mul_mod_p	sshccp.c	/^static void bigval_mul_mod_p(bigval *r, const bigval *a, const bigval *b)$/;"	f	file:
bin_PROGRAMS	Makefile	/^bin_PROGRAMS = plink$(EXEEXT) pscp$(EXEEXT) \\$/;"	m
bindir	Makefile	/^bindir = ${exec_prefix}\/bin$/;"	m
bisearch	wcwidth.c	/^static int bisearch(unsigned int ucs, const struct interval *table, int max) {$/;"	f	file:
bitmap	unix/gtkfont.c	/^    unsigned char *bitmap;$/;"	m	struct:cairo_cached_glyph	file:
bits	ssh.h	/^    int bits;$/;"	m	struct:RSAKey
bits	sshzlib.c	/^    unsigned long bits;$/;"	m	struct:zlib_decompress_ctx	file:
bitsel	sshdes.c	/^static word32 bitsel(word32 * input, const int *bitnums, int size)$/;"	f	file:
bitswap	sshdes.c	502;"	d	file:
bksp_is_delete	terminal.h	/^    int bksp_is_delete;$/;"	m	struct:terminal_tag
blankcursor	unix/gtkwin.c	/^    GdkCursor *rawcursor, *textcursor, *blankcursor, *waitcursor, *currcursor;$/;"	m	struct:gui_data	file:
blend	icons/mkicon.py	/^    def blend(col1, col2):$/;"	f
blink_cur	terminal.h	/^    int blink_cur;$/;"	m	struct:terminal_tag
blink_is_real	terminal.h	/^    int blink_is_real;		       \/* Actually blink blinking text *\/$/;"	m	struct:terminal_tag
blinktext	terminal.h	/^    int blinktext;$/;"	m	struct:terminal_tag
blksize	ssh.h	/^    int blksize;$/;"	m	struct:ssh2_cipher
blksize	ssh.h	/^    int blksize;$/;"	m	struct:ssh_cipher
blkused	ssh.h	/^    int blkused;$/;"	m	struct:__anon93
blkused	ssh.h	/^    int blkused;$/;"	m	struct:__anon94
blkused	ssh.h	/^    int blkused;$/;"	m	struct:__anon95
blob	pageant.c	/^    const unsigned char *blob;$/;"	m	struct:blob	file:
blob	pageant.c	/^struct blob {$/;"	s	file:
blob	pageant.h	/^    void *blob;$/;"	m	struct:pageant_pubkey
bloblen	pageant.h	/^    int bloblen;$/;"	m	struct:pageant_pubkey
block	ssh.h	/^    unsigned char block[128];$/;"	m	struct:__anon95
block	ssh.h	/^    unsigned char block[64];$/;"	m	struct:__anon93
block	ssh.h	/^    unsigned char block[64];$/;"	m	struct:__anon94
block_and_read	unix/uxcons.c	/^static int block_and_read(int fd, void *buf, size_t len)$/;"	f	file:
block_signal	unix/uxsignal.c	/^void block_signal(int sig, int block_it)$/;"	f
blowfish256_key	sshblowf.c	/^static void blowfish256_key(void *handle, unsigned char *key)$/;"	f	file:
blowfish_decrypt	sshblowf.c	/^static void blowfish_decrypt(word32 xL, word32 xR, word32 * output,$/;"	f	file:
blowfish_encrypt	sshblowf.c	/^static void blowfish_encrypt(word32 xL, word32 xR, word32 * output,$/;"	f	file:
blowfish_expandkey	sshblowf.c	/^void blowfish_expandkey(BlowfishContext * ctx,$/;"	f
blowfish_free_context	sshblowf.c	/^void blowfish_free_context(void *handle)$/;"	f
blowfish_initkey	sshblowf.c	/^void blowfish_initkey(BlowfishContext *ctx)$/;"	f
blowfish_iv	sshblowf.c	/^static void blowfish_iv(void *handle, unsigned char *key)$/;"	f	file:
blowfish_key	sshblowf.c	/^static void blowfish_key(void *handle, unsigned char *key)$/;"	f	file:
blowfish_list	sshblowf.c	/^static const struct ssh2_cipher *const blowfish_list[] = {$/;"	v	file:
blowfish_lsb_decrypt_cbc	sshblowf.c	/^static void blowfish_lsb_decrypt_cbc(unsigned char *blk, int len,$/;"	f	file:
blowfish_lsb_encrypt_cbc	sshblowf.c	/^static void blowfish_lsb_encrypt_cbc(unsigned char *blk, int len,$/;"	f	file:
blowfish_lsb_encrypt_ecb	sshblowf.c	/^void blowfish_lsb_encrypt_ecb(unsigned char *blk, int len,$/;"	f
blowfish_make_context	sshblowf.c	/^void *blowfish_make_context(void)$/;"	f
blowfish_msb_decrypt_cbc	sshblowf.c	/^static void blowfish_msb_decrypt_cbc(unsigned char *blk, int len,$/;"	f	file:
blowfish_msb_encrypt_cbc	sshblowf.c	/^static void blowfish_msb_encrypt_cbc(unsigned char *blk, int len,$/;"	f	file:
blowfish_msb_sdctr	sshblowf.c	/^static void blowfish_msb_sdctr(unsigned char *blk, int len,$/;"	f	file:
blowfish_sesskey	sshblowf.c	/^static void blowfish_sesskey(void *handle, unsigned char *key)$/;"	f	file:
blowfish_setkey	sshblowf.c	/^static void blowfish_setkey(BlowfishContext *ctx,$/;"	f	file:
blowfish_ssh1_decrypt_blk	sshblowf.c	/^static void blowfish_ssh1_decrypt_blk(void *handle, unsigned char *blk,$/;"	f	file:
blowfish_ssh1_encrypt_blk	sshblowf.c	/^static void blowfish_ssh1_encrypt_blk(void *handle, unsigned char *blk,$/;"	f	file:
blowfish_ssh1_make_context	sshblowf.c	/^static void *blowfish_ssh1_make_context(void)$/;"	f	file:
blowfish_ssh2_decrypt_blk	sshblowf.c	/^static void blowfish_ssh2_decrypt_blk(void *handle, unsigned char *blk,$/;"	f	file:
blowfish_ssh2_encrypt_blk	sshblowf.c	/^static void blowfish_ssh2_encrypt_blk(void *handle, unsigned char *blk,$/;"	f	file:
blowfish_ssh2_sdctr	sshblowf.c	/^static void blowfish_ssh2_sdctr(void *handle, unsigned char *blk,$/;"	f	file:
bluepix	icons/mkicon.py	/^    def bluepix(value):$/;"	f
bnOne	sshbn.c	/^BignumInt bnOne[2] = { 1, 1 };$/;"	v
bnTen	sshbn.c	/^BignumInt bnTen[2] = { 1, 10 };$/;"	v
bnZero	sshbn.c	/^BignumInt bnZero[1] = { 0 };$/;"	v
bn_clz	sshbn.c	/^static int bn_clz(BignumInt x)$/;"	f	file:
bn_power_2	sshbn.c	/^Bignum bn_power_2(int n)$/;"	f
bn_restore_invariant	sshbn.c	/^void bn_restore_invariant(Bignum b)$/;"	f
body	ssh.c	/^    unsigned char *body;    \/* offset of payload within `data' *\/$/;"	m	struct:Packet	file:
body 	doc/chm.css	/^body { font-size: 75%; font-family: Verdana, Arial, Helvetica, Sans-Serif; }$/;"	s
bold	unix/gtkfont.c	/^    int bold, shadowoffset, shadowalways;$/;"	m	struct:pangofont	file:
bold	unix/gtkfont.c	/^    int wide, bold, shadowoffset, shadowalways;$/;"	m	struct:x11font	file:
bold_colours	windows/window.c	/^static int bold_colours;$/;"	v	file:
bold_font_mode	windows/window.c	/^} bold_font_mode;$/;"	v	typeref:enum:__anon136	file:
bold_style	unix/gtkwin.c	/^    int bold_style;$/;"	m	struct:gui_data	file:
bomb_out	ssh.c	/^static void bomb_out(Ssh ssh, char *text)$/;"	f	file:
bombout	ssh.c	1027;"	d	file:
boolean	contrib/encodelib.py	/^def boolean(b):$/;"	f
border	icons/mkicon.py	/^def border(canvas, thickness, squarecorners, out={}):$/;"	f
botline	terminal.h	/^    int botline; \/* Bottom line of scroll region. *\/$/;"	m	struct:scrollregion
box	icons/mkicon.py	/^def box(size, back):$/;"	f
boxback	icons/mkicon.py	/^def boxback(size):$/;"	f
boxfront	icons/mkicon.py	/^def boxfront(size):$/;"	f
boxid	windows/winstuff.h	/^    int boxystart, boxid;$/;"	m	struct:ctlpos
boxname	dialog.h	/^    char *boxname;		       \/* internal short name of controlset *\/$/;"	m	struct:controlset
boxtext	windows/winstuff.h	/^    char *boxtext;$/;"	m	struct:ctlpos
boxtitle	dialog.h	/^    char *boxtitle;		       \/* title of container box *\/$/;"	m	struct:controlset
boxystart	windows/winstuff.h	/^    int boxystart, boxid;$/;"	m	struct:ctlpos
bracketed_paste	terminal.h	/^    int bracketed_paste;$/;"	m	struct:terminal_tag
break_in_progress	windows/winser.c	/^    int break_in_progress;$/;"	m	struct:serial_backend_data	file:
bsb	ldisc.c	/^static void bsb(Ldisc ldisc, int n)$/;"	f	file:
bucket	unix/osxlaunch.c	/^struct bucket {$/;"	s	file:
buf	contrib/cygtermd/sel.c	/^    bufchain buf;$/;"	m	struct:sel_wfd	file:
buf	contrib/cygtermd/sel.c	/^    char buf[BUFFER_GRANULE];$/;"	m	struct:bufchain_granule	file:
buf	ldisc.h	/^    char *buf;$/;"	m	struct:ldisc_tag
buf	pscp.c	/^    char *buf;			       \/* will need freeing after use *\/$/;"	m	struct:scp_sink_action	file:
buf	terminal.c	/^struct buf {$/;"	s	file:
bufchain	contrib/cygtermd/sel.c	/^} bufchain;$/;"	t	typeref:struct:bufchain_tag	file:
bufchain	misc.h	/^typedef struct bufchain_tag bufchain;  \/* rest of declaration in misc.c *\/$/;"	t	typeref:struct:bufchain_tag
bufchain	network.h	/^typedef struct bufchain_tag bufchain;  \/* rest of declaration in misc.c *\/$/;"	t	typeref:struct:bufchain_tag
bufchain_add	contrib/cygtermd/sel.c	/^static void bufchain_add(bufchain *ch, const void *data, size_t len)$/;"	f	file:
bufchain_add	misc.c	/^void bufchain_add(bufchain *ch, const void *data, int len)$/;"	f
bufchain_clear	contrib/cygtermd/sel.c	/^static void bufchain_clear(bufchain *ch)$/;"	f	file:
bufchain_clear	misc.c	/^void bufchain_clear(bufchain *ch)$/;"	f
bufchain_consume	contrib/cygtermd/sel.c	/^static void bufchain_consume(bufchain *ch, size_t len)$/;"	f	file:
bufchain_consume	misc.c	/^void bufchain_consume(bufchain *ch, int len)$/;"	f
bufchain_fetch	misc.c	/^void bufchain_fetch(bufchain *ch, void *data, int len)$/;"	f
bufchain_granule	contrib/cygtermd/sel.c	/^struct bufchain_granule {$/;"	s	file:
bufchain_granule	misc.c	/^struct bufchain_granule {$/;"	s	file:
bufchain_init	contrib/cygtermd/sel.c	/^static void bufchain_init(bufchain *ch)$/;"	f	file:
bufchain_init	misc.c	/^void bufchain_init(bufchain *ch)$/;"	f
bufchain_prefix	contrib/cygtermd/sel.c	/^static void bufchain_prefix(bufchain *ch, void **data, size_t *len)$/;"	f	file:
bufchain_prefix	misc.c	/^void bufchain_prefix(bufchain *ch, void **data, int *len)$/;"	f
bufchain_size	contrib/cygtermd/sel.c	/^static size_t bufchain_size(bufchain *ch)$/;"	f	file:
bufchain_size	misc.c	/^int bufchain_size(bufchain *ch)$/;"	f
bufchain_tag	contrib/cygtermd/sel.c	/^typedef struct bufchain_tag {$/;"	s	file:
bufchain_tag	misc.h	/^struct bufchain_tag {$/;"	s
bufend	misc.c	/^    char *bufpos, *bufend, *bufmax;$/;"	m	struct:bufchain_granule	file:
buffer	portfwd.c	/^    void *buffer;$/;"	m	struct:PortForwarding	file:
buffer	putty.h	/^    char *buffer;		       \/* so memory can be freed later *\/$/;"	m	struct:sesslist
buffer	sftp.c	/^    char *buffer;$/;"	m	struct:req	file:
buffer	sshccp.c	/^    unsigned char buffer[16];$/;"	m	struct:poly1305	file:
buffer	windows/winhandl.c	/^    char *buffer;		       \/* the data to write *\/$/;"	m	struct:handle_output	file:
buffer	windows/winhandl.c	/^    char buffer[4096];		       \/* the data read from the handle *\/$/;"	m	struct:handle_input	file:
bufferIndex	sshccp.c	/^    int bufferIndex;$/;"	m	struct:poly1305	file:
buffersize	contrib/cygtermd/sel.c	/^    size_t buffersize;		       \/* current amount of buffered data *\/$/;"	m	struct:bufchain_tag	file:
buffersize	misc.h	/^    int buffersize;		       \/* current amount of buffered data *\/$/;"	m	struct:bufchain_tag
buflen	contrib/cygtermd/sel.c	/^    size_t buflen, bufpos;$/;"	m	struct:bufchain_granule	file:
buflen	ldisc.h	/^    int buflen, bufsiz, quotenext;$/;"	m	struct:ldisc_tag
buflen	portfwd.c	/^    int buflen;$/;"	m	struct:PortForwarding	file:
buflen	terminal.c	/^    int buflen;		    \/* amount of allocated space in textbuf\/attrbuf *\/$/;"	m	struct:__anon108	file:
bufmax	misc.c	/^    char *bufpos, *bufend, *bufmax;$/;"	m	struct:bufchain_granule	file:
bufpos	contrib/cygtermd/sel.c	/^    size_t buflen, bufpos;$/;"	m	struct:bufchain_granule	file:
bufpos	misc.c	/^    char *bufpos, *bufend, *bufmax;$/;"	m	struct:bufchain_granule	file:
bufpos	terminal.c	/^    int bufpos;		    \/* amount of actual data *\/$/;"	m	struct:__anon108	file:
bufsiz	ldisc.h	/^    int buflen, bufsiz, quotenext;$/;"	m	struct:ldisc_tag
bufsize	raw.c	/^    int bufsize;$/;"	m	struct:raw_backend_data	file:
bufsize	rlogin.c	/^    int bufsize;$/;"	m	struct:rlogin_tag	file:
bufsize	telnet.c	/^    int bufsize;$/;"	m	struct:telnet_tag	file:
bufsize	windows/winser.c	/^    int bufsize;$/;"	m	struct:serial_backend_data	file:
buggymacs	ssh.c	/^const static struct ssh_mac *const buggymacs[] = {$/;"	v	file:
build_alias	Makefile	/^build_alias = $/;"	m
builddir	Makefile	/^builddir = .$/;"	m
buildinfo	misc.c	/^char *buildinfo(const char *newline)$/;"	f
buildinfo_gtk_relevant	cmdgen.c	/^const int buildinfo_gtk_relevant = FALSE;$/;"	v
buildinfo_gtk_relevant	fuzzterm.c	/^const int buildinfo_gtk_relevant = FALSE;$/;"	v
buildinfo_gtk_relevant	testbn.c	/^const int buildinfo_gtk_relevant = FALSE;$/;"	v
buildinfo_gtk_relevant	unix/gtkapp.c	/^const int buildinfo_gtk_relevant = TRUE;$/;"	v
buildinfo_gtk_relevant	unix/gtkask.c	/^const int buildinfo_gtk_relevant = TRUE;$/;"	v
buildinfo_gtk_relevant	unix/gtkmain.c	/^const int buildinfo_gtk_relevant = TRUE;$/;"	v
buildinfo_gtk_relevant	unix/uxplink.c	/^const int buildinfo_gtk_relevant = FALSE;$/;"	v
buildinfo_gtk_relevant	unix/uxsftp.c	/^const int buildinfo_gtk_relevant = FALSE;$/;"	v
buildinfo_gtk_version	unix/gtkmisc.c	/^char *buildinfo_gtk_version(void)$/;"	f
buildinfo_gtk_version	unix/uxnogtk.c	/^char *buildinfo_gtk_version(void)$/;"	f
bump	pscp.c	/^static void bump(const char *fmt, ...)$/;"	f	file:
burnstr	misc.c	/^void burnstr(char *string)             \/* sfree(str), only clear it first *\/$/;"	f
busy	windows/winhandl.c	/^    int busy;			       \/* operation currently in progress? *\/$/;"	m	struct:handle_foreign	file:
busy	windows/winhandl.c	/^    int busy;			       \/* operation currently in progress? *\/$/;"	m	struct:handle_generic	file:
busy	windows/winhandl.c	/^    int busy;			       \/* operation currently in progress? *\/$/;"	m	struct:handle_input	file:
busy	windows/winhandl.c	/^    int busy;			       \/* operation currently in progress? *\/$/;"	m	struct:handle_output	file:
busy_status	unix/gtkwin.c	/^    int busy_status;$/;"	m	struct:gui_data	file:
busy_status	windows/window.c	/^static int busy_status = BUSY_NOT;$/;"	v	file:
button	config.c	/^    union control *listbox, *editbox, *button;$/;"	m	struct:charclass_data	typeref:union:charclass_data::	file:
button	config.c	/^    union control *listbox, *redit, *gedit, *bedit, *button;$/;"	m	struct:colour_data	typeref:union:colour_data::	file:
button	dialog.h	/^    } button;$/;"	m	union:control	typeref:struct:control::__anon24
button	unix/gtkdlg.c	/^    GtkWidget *button;        \/* for filesel, fontsel *\/$/;"	m	struct:uctrl	file:
button	windows/winctrls.c	/^void button(struct ctlpos *cp, char *btext, int bid, int defbtn)$/;"	f
button_clicked	unix/gtkdlg.c	/^static void button_clicked(GtkButton *button, gpointer data)$/;"	f	file:
button_event	unix/gtkwin.c	/^gboolean button_event(GtkWidget *widget, GdkEventButton *event, gpointer data)$/;"	f
button_internal	unix/gtkwin.c	/^static gboolean button_internal(struct gui_data *inst, GdkEventButton *event)$/;"	f	file:
button_toggled	unix/gtkdlg.c	/^static void button_toggled(GtkToggleButton *tb, gpointer data)$/;"	f	file:
buttondata	dialog.h	/^	intorptr *buttondata;	       \/* `nbuttons' entries; may be NULL *\/$/;"	m	struct:control::__anon22
buttons	dialog.h	/^	char **buttons;		       \/* `nbuttons' button labels *\/$/;"	m	struct:control::__anon22
buttons	unix/gtkdlg.c	/^    GtkWidget **buttons; int nbuttons; \/* for radio buttons *\/$/;"	m	struct:uctrl	file:
byctrl	unix/gtkdlg.c	/^    tree234 *byctrl, *bywidget;$/;"	m	struct:dlgparam	file:
byctrl	windows/winstuff.h	/^    tree234 *byctrl, *byid;$/;"	m	struct:winctrls
byid	windows/winstuff.h	/^    tree234 *byctrl, *byid;$/;"	m	struct:winctrls
byte	contrib/encodelib.py	/^def byte(b):$/;"	f
bytes	import.c	/^struct mpint_pos { void *start; int bytes; };$/;"	m	struct:mpint_pos	file:
bytes	ssh.h	/^    int bytes;$/;"	m	struct:RSAKey
bytes	ssh.h	/^    void (*bytes) (void *, unsigned char const *, int);$/;"	m	struct:ssh_mac
bytes	ssh.h	/^    void (*bytes)(void *, const void *, int);$/;"	m	struct:ssh_hash
bywidget	unix/gtkdlg.c	/^    tree234 *byctrl, *bywidget;$/;"	m	struct:dlgparam	file:
c	portfwd.c	/^    struct ssh_channel *c;        \/* channel structure held by ssh.c *\/$/;"	m	struct:PortForwarding	typeref:struct:PortForwarding::ssh_channel	file:
c	x11fwd.c	/^    struct ssh_channel *c;        \/* channel structure held by ssh.c *\/$/;"	m	struct:X11Connection	typeref:struct:X11Connection::ssh_channel	file:
cB	icons/mkicon.py	/^    cB = (0x00, 0x00, 0xFF, 0xFF)$/;"	v
cC	icons/mkicon.py	/^    cC = (0x00, 0xFF, 0xFF, 0xFF)$/;"	v
cD	icons/mkicon.py	/^    cD = (0x00, 0x00, 0x00, 0x80)$/;"	v
cD	icons/mkicon.py	/^    cD = -2 # special translucent half-darkening value used internally$/;"	v
cG	icons/mkicon.py	/^    cG = (0x00, 0xFF, 0x00, 0xFF)$/;"	v
cK	icons/mkicon.py	/^    cK = (0x00, 0x00, 0x00, 0xFF)$/;"	v
cM	icons/mkicon.py	/^    cM = (0xFF, 0x00, 0xFF, 0xFF)$/;"	v
cP	icons/mkicon.py	/^    cP = (0xC0, 0xC0, 0xC0, 0xFF)$/;"	v
cR	icons/mkicon.py	/^    cR = (0xFF, 0x00, 0x00, 0xFF)$/;"	v
cT	icons/mkicon.py	/^    cT = (0x00, 0x00, 0x00, 0x00)$/;"	v
cT	icons/mkicon.py	/^    cT = -1$/;"	v
cW	icons/mkicon.py	/^    cW = (0xFF, 0xFF, 0xFF, 0xFF)$/;"	v
cY	icons/mkicon.py	/^    cY = (0xFF, 0xFF, 0x00, 0xFF)$/;"	v
c_write	ldisc.c	/^static void c_write(Ldisc ldisc, const char *buf, int len)$/;"	f	file:
c_write	raw.c	/^static void c_write(Raw raw, char *buf, int len)$/;"	f	file:
c_write	rlogin.c	/^static void c_write(Rlogin rlogin, char *buf, int len)$/;"	f	file:
c_write	ssh.c	/^static void c_write(Ssh ssh, const char *buf, int len)$/;"	f	file:
c_write	telnet.c	/^static void c_write(Telnet telnet, const char *buf, int len)$/;"	f	file:
c_write_stderr	ssh.c	/^static void c_write_stderr(int trusted, const char *buf, int len)$/;"	f	file:
c_write_str	ssh.c	/^static void c_write_str(Ssh ssh, const char *buf)$/;"	f	file:
c_write_untrusted	ssh.c	/^static void c_write_untrusted(Ssh ssh, const char *buf, int len)$/;"	f	file:
cache_conf_values	unix/gtkwin.c	/^static void cache_conf_values(struct gui_data *inst)$/;"	f	file:
cairo	unix/gtkfont.h	/^        } cairo;$/;"	m	union:unifont_drawctx::__anon127	typeref:struct:unifont_drawctx::__anon127::__anon129
cairo_cached_glyph	unix/gtkfont.c	/^struct cairo_cached_glyph {$/;"	s	file:
cairo_setup_dctx	unix/gtkwin.c	/^static void cairo_setup_dctx(struct draw_ctx *dctx)$/;"	f	file:
callback	callback.c	/^struct callback {$/;"	s	file:
callback	unix/uxagentc.c	/^    void (*callback)(void *, void *, int);$/;"	m	struct:agent_pending_query	file:
callback	unix/uxsel.c	/^    uxsel_callback_fn callback;$/;"	m	struct:fd	file:
callback	windows/window.c	/^    void (*callback)(void *, void *, int);$/;"	m	struct:agent_callback	file:
callback	windows/winhandl.c	/^    void (*callback)(void *);$/;"	m	struct:handle_foreign	file:
callback	windows/winplink.c	/^    void (*callback)(void *, void *, int);$/;"	m	struct:agent_callback	file:
callback_ctx	unix/uxagentc.c	/^    void *callback_ctx;$/;"	m	struct:agent_pending_query	file:
callback_ctx	windows/window.c	/^    void *callback_ctx;$/;"	m	struct:agent_callback	file:
callback_ctx	windows/winplink.c	/^    void *callback_ctx;$/;"	m	struct:agent_callback	file:
callback_handle	windows/winnps.c	/^    struct handle *callback_handle;    \/* winhandl.c's reference *\/$/;"	m	struct:Socket_named_pipe_server_tag	typeref:struct:Socket_named_pipe_server_tag::handle	file:
cancel_button	unix/gtkfont.h	/^    GtkWidget *ok_button, *cancel_button;$/;"	m	struct:unifontsel
cancelbutton	config.c	/^    union control *okbutton, *cancelbutton;$/;"	m	struct:sessionsaver_data	typeref:union:sessionsaver_data::	file:
cancelbutton	unix/gtkdlg.c	/^    GtkWidget *window, *cancelbutton;$/;"	m	struct:dlgparam	file:
canonify	psftp.c	/^char *canonify(const char *name)$/;"	f
canonify_fontname	unix/gtkfont.c	/^    char *(*canonify_fontname)(GtkWidget *widget, const char *name, int *size,$/;"	m	struct:unifont_vtable	file:
cansize	rlogin.c	/^    int cansize;$/;"	m	struct:rlogin_tag	file:
caret_x	windows/window.c	/^static int caret_x = -1, caret_y = -1;$/;"	v	file:
caret_y	windows/window.c	/^static int caret_x = -1, caret_y = -1;$/;"	v	file:
caretbm	windows/window.c	/^static HBITMAP caretbm;$/;"	v	file:
cb	icons/mkicon.py	/^    cb = (0x00, 0x00, 0x80, 0xFF)$/;"	v
cbhead	callback.c	/^struct callback *cbhead = NULL, *cbtail = NULL;$/;"	v	typeref:struct:callback
cblink_pending	terminal.h	/^    int tblink_pending, cblink_pending;$/;"	m	struct:terminal_tag
cblinker	terminal.h	/^    int cblinker;		       \/* When blinking is the cursor on ? *\/$/;"	m	struct:terminal_tag
cbtail	callback.c	/^struct callback *cbhead = NULL, *cbtail = NULL;$/;"	v	typeref:struct:
cc	icons/mkicon.py	/^    cc = (0x00, 0x80, 0x80, 0xFF)$/;"	v
cc_check	terminal.c	/^static void cc_check(termline *line)$/;"	f	file:
cc_free	terminal.h	/^    int cc_free;		       \/* offset to first cc in free list *\/$/;"	m	struct:termline
cc_next	terminal.h	/^    int cc_next;$/;"	m	struct:termchar
cchandler_fn_t	ssh.c	/^typedef void (*cchandler_fn_t)(struct ssh_channel *, struct Packet *, void *);$/;"	t	file:
ccp_context	sshccp.c	/^struct ccp_context {$/;"	s	file:
ccp_decrypt	sshccp.c	/^static void ccp_decrypt(void *vctx, unsigned char *blk, int len)$/;"	f	file:
ccp_decrypt_length	sshccp.c	/^static void ccp_decrypt_length(void *vctx, unsigned char *blk, int len,$/;"	f	file:
ccp_encrypt	sshccp.c	/^static void ccp_encrypt(void *vctx, unsigned char *blk, int len)$/;"	f	file:
ccp_encrypt_length	sshccp.c	/^static void ccp_encrypt_length(void *vctx, unsigned char *blk, int len,$/;"	f	file:
ccp_free_context	sshccp.c	/^static void ccp_free_context(void *vctx)$/;"	f	file:
ccp_iv	sshccp.c	/^static void ccp_iv(void *vctx, unsigned char *iv)$/;"	f	file:
ccp_key	sshccp.c	/^static void ccp_key(void *vctx, unsigned char *key)$/;"	f	file:
ccp_length_op	sshccp.c	/^static void ccp_length_op(struct ccp_context *ctx, unsigned char *blk, int len,$/;"	f	file:
ccp_list	sshccp.c	/^static const struct ssh2_cipher *const ccp_list[] = {$/;"	v	file:
ccp_make_context	sshccp.c	/^static void *ccp_make_context(void)$/;"	f	file:
cfg_icon	unix/xpmptcfg.c	/^const char *const *const cfg_icon[] = {$/;"	v
cfg_icon	unix/xpmpucfg.c	/^const char *const *const cfg_icon[] = {$/;"	v
cfg_icon_0	unix/xpmptcfg.c	/^static const char *const cfg_icon_0[] = {$/;"	v	file:
cfg_icon_0	unix/xpmpucfg.c	/^static const char *const cfg_icon_0[] = {$/;"	v	file:
cfg_icon_1	unix/xpmptcfg.c	/^static const char *const cfg_icon_1[] = {$/;"	v	file:
cfg_icon_1	unix/xpmpucfg.c	/^static const char *const cfg_icon_1[] = {$/;"	v	file:
cfg_icon_2	unix/xpmptcfg.c	/^static const char *const cfg_icon_2[] = {$/;"	v	file:
cfg_icon_2	unix/xpmpucfg.c	/^static const char *const cfg_icon_2[] = {$/;"	v	file:
cfg_info	putty.h	/^    int (*cfg_info) (void *handle);$/;"	m	struct:backend_tag
cfgbox	unix/uxpterm.c	/^int cfgbox(Conf *conf)$/;"	f
cfgbox	unix/uxputty.c	/^int cfgbox(Conf *conf)$/;"	f
cg	icons/mkicon.py	/^    cg = (0x00, 0x80, 0x00, 0xFF)$/;"	v
cgtest_DEPENDENCIES	Makefile	/^cgtest_DEPENDENCIES = libversion.a$/;"	m
cgtest_LDADD	Makefile	/^cgtest_LDADD = libversion.a$/;"	m
cgtest_OBJECTS	Makefile	/^cgtest_OBJECTS = $(am_cgtest_OBJECTS)$/;"	m
cgtest_SOURCES	Makefile	/^cgtest_SOURCES = cgtest.c conf.c import.c misc.c notiming.c sshaes.c \\$/;"	m
chacha20	sshccp.c	/^struct chacha20 {$/;"	s	file:
chacha20_decrypt	sshccp.c	/^static INLINE void chacha20_decrypt(struct chacha20 *ctx,$/;"	f	file:
chacha20_encrypt	sshccp.c	/^static void chacha20_encrypt(struct chacha20 *ctx, unsigned char *blk, int len)$/;"	f	file:
chacha20_iv	sshccp.c	/^static void chacha20_iv(struct chacha20 *ctx, const unsigned char *iv)$/;"	f	file:
chacha20_key	sshccp.c	/^static void chacha20_key(struct chacha20 *ctx, const unsigned char *key)$/;"	f	file:
chacha20_round	sshccp.c	/^static INLINE void chacha20_round(struct chacha20 *ctx)$/;"	f	file:
chan	unix/gtkcomm.c	/^    GIOChannel *chan;$/;"	m	struct:uxsel_id	file:
chandler_fn_t	ssh.c	/^typedef void (*chandler_fn_t)(Ssh ssh, struct Packet *pktin, void *ctx);$/;"	t	file:
change_font_size	unix/gtkwin.c	/^static void change_font_size(struct gui_data *inst, int increment)$/;"	f	file:
change_settings_menuitem	unix/gtkwin.c	/^void change_settings_menuitem(GtkMenuItem *item, gpointer data)$/;"	f
channels	ssh.c	/^    tree234 *channels;		       \/* indexed by local id *\/$/;"	m	struct:ssh_tag	file:
channels_by_server	sshshare.c	/^    tree234 *channels_by_server;   \/* stores 'struct share_channel' *\/$/;"	m	struct:ssh_sharing_connstate	file:
channels_by_us	sshshare.c	/^    tree234 *channels_by_us;       \/* stores 'struct share_channel' *\/$/;"	m	struct:ssh_sharing_connstate	file:
chanreq_head	ssh.c	/^	    struct outstanding_channel_request *chanreq_head, *chanreq_tail;$/;"	m	struct:ssh_channel::__anon78::ssh2_data_channel	typeref:struct:ssh_channel::__anon78::ssh2_data_channel::outstanding_channel_request	file:
chanreq_tail	ssh.c	/^	    struct outstanding_channel_request *chanreq_head, *chanreq_tail;$/;"	m	struct:ssh_channel::__anon78::ssh2_data_channel	typeref:struct:ssh_channel::__anon78::ssh2_data_channel::	file:
chap_current_attribute	proxy.h	/^    int chap_current_attribute;$/;"	m	struct:Socket_proxy_tag
chap_current_datalen	proxy.h	/^    int chap_current_datalen;$/;"	m	struct:Socket_proxy_tag
chap_num_attributes	proxy.h	/^    int chap_num_attributes;$/;"	m	struct:Socket_proxy_tag
chap_num_attributes_processed	proxy.h	/^    int chap_num_attributes_processed;$/;"	m	struct:Socket_proxy_tag
char_index	unix/osxlaunch.c	/^int char_index(int ch)$/;"	f
char_start	ldisc.c	/^static int char_start(Ldisc ldisc, unsigned char c)$/;"	f	file:
char_width	fuzzterm.c	/^int char_width(Context ctx, int uc) { return 1; }$/;"	f
char_width	unix/gtkwin.c	/^int char_width(Context ctx, int uc)$/;"	f
char_width	windows/window.c	/^int char_width(Context ctx, int uc) {$/;"	f
charclass_data	config.c	/^struct charclass_data {$/;"	s	file:
charclass_handler	config.c	/^static void charclass_handler(union control *ctrl, void *dlg,$/;"	f	file:
chars	terminal.h	/^    struct termchar *chars;$/;"	m	struct:bidi_cache_entry	typeref:struct:bidi_cache_entry::termchar
chars	terminal.h	/^    struct termchar *chars;$/;"	m	struct:termline	typeref:struct:termline::termchar
charset	charset/internal.h	/^    int charset;		       \/* numeric identifier *\/$/;"	m	struct:charset_spec
charset	charset/localenc.c	/^    int charset;$/;"	m	struct:__anon6	file:
charset	charset/macenc.c	/^    int charset;$/;"	m	struct:__anon2	file:
charset	charset/mimeenc.c	/^    int charset;$/;"	m	struct:__anon5	file:
charset	charset/xenc.c	/^    int charset;$/;"	m	struct:__anon1	file:
charset	unix/gtkfont.c	/^    char *family, *charset, *style, *stylekey;$/;"	m	struct:fontinfo	file:
charset	windows/winstuff.h	/^    int charset;$/;"	m	struct:FontSpec
charset_CS_CP1250	charset/sbcsdat.c	/^const charset_spec charset_CS_CP1250 = {$/;"	v
charset_CS_CP1251	charset/sbcsdat.c	/^const charset_spec charset_CS_CP1251 = {$/;"	v
charset_CS_CP1252	charset/sbcsdat.c	/^const charset_spec charset_CS_CP1252 = {$/;"	v
charset_CS_CP1253	charset/sbcsdat.c	/^const charset_spec charset_CS_CP1253 = {$/;"	v
charset_CS_CP1254	charset/sbcsdat.c	/^const charset_spec charset_CS_CP1254 = {$/;"	v
charset_CS_CP1255	charset/sbcsdat.c	/^const charset_spec charset_CS_CP1255 = {$/;"	v
charset_CS_CP1256	charset/sbcsdat.c	/^const charset_spec charset_CS_CP1256 = {$/;"	v
charset_CS_CP1257	charset/sbcsdat.c	/^const charset_spec charset_CS_CP1257 = {$/;"	v
charset_CS_CP1258	charset/sbcsdat.c	/^const charset_spec charset_CS_CP1258 = {$/;"	v
charset_CS_CP437	charset/sbcsdat.c	/^const charset_spec charset_CS_CP437 = {$/;"	v
charset_CS_CP850	charset/sbcsdat.c	/^const charset_spec charset_CS_CP850 = {$/;"	v
charset_CS_CP852	charset/sbcsdat.c	/^const charset_spec charset_CS_CP852 = {$/;"	v
charset_CS_CP866	charset/sbcsdat.c	/^const charset_spec charset_CS_CP866 = {$/;"	v
charset_CS_DEC_MCS	charset/sbcsdat.c	/^const charset_spec charset_CS_DEC_MCS = {$/;"	v
charset_CS_HP_ROMAN8	charset/sbcsdat.c	/^const charset_spec charset_CS_HP_ROMAN8 = {$/;"	v
charset_CS_ISO8859_1	charset/sbcsdat.c	/^const charset_spec charset_CS_ISO8859_1 = {$/;"	v
charset_CS_ISO8859_10	charset/sbcsdat.c	/^const charset_spec charset_CS_ISO8859_10 = {$/;"	v
charset_CS_ISO8859_11	charset/sbcsdat.c	/^const charset_spec charset_CS_ISO8859_11 = {$/;"	v
charset_CS_ISO8859_13	charset/sbcsdat.c	/^const charset_spec charset_CS_ISO8859_13 = {$/;"	v
charset_CS_ISO8859_14	charset/sbcsdat.c	/^const charset_spec charset_CS_ISO8859_14 = {$/;"	v
charset_CS_ISO8859_15	charset/sbcsdat.c	/^const charset_spec charset_CS_ISO8859_15 = {$/;"	v
charset_CS_ISO8859_16	charset/sbcsdat.c	/^const charset_spec charset_CS_ISO8859_16 = {$/;"	v
charset_CS_ISO8859_1_X11	charset/sbcsdat.c	/^const charset_spec charset_CS_ISO8859_1_X11 = {$/;"	v
charset_CS_ISO8859_2	charset/sbcsdat.c	/^const charset_spec charset_CS_ISO8859_2 = {$/;"	v
charset_CS_ISO8859_3	charset/sbcsdat.c	/^const charset_spec charset_CS_ISO8859_3 = {$/;"	v
charset_CS_ISO8859_4	charset/sbcsdat.c	/^const charset_spec charset_CS_ISO8859_4 = {$/;"	v
charset_CS_ISO8859_5	charset/sbcsdat.c	/^const charset_spec charset_CS_ISO8859_5 = {$/;"	v
charset_CS_ISO8859_6	charset/sbcsdat.c	/^const charset_spec charset_CS_ISO8859_6 = {$/;"	v
charset_CS_ISO8859_7	charset/sbcsdat.c	/^const charset_spec charset_CS_ISO8859_7 = {$/;"	v
charset_CS_ISO8859_8	charset/sbcsdat.c	/^const charset_spec charset_CS_ISO8859_8 = {$/;"	v
charset_CS_ISO8859_9	charset/sbcsdat.c	/^const charset_spec charset_CS_ISO8859_9 = {$/;"	v
charset_CS_KOI8_R	charset/sbcsdat.c	/^const charset_spec charset_CS_KOI8_R = {$/;"	v
charset_CS_KOI8_U	charset/sbcsdat.c	/^const charset_spec charset_CS_KOI8_U = {$/;"	v
charset_CS_MAC_CENTEURO	charset/sbcsdat.c	/^const charset_spec charset_CS_MAC_CENTEURO = {$/;"	v
charset_CS_MAC_CROATIAN	charset/sbcsdat.c	/^const charset_spec charset_CS_MAC_CROATIAN = {$/;"	v
charset_CS_MAC_CROATIAN_OLD	charset/sbcsdat.c	/^const charset_spec charset_CS_MAC_CROATIAN_OLD = {$/;"	v
charset_CS_MAC_CYRILLIC	charset/sbcsdat.c	/^const charset_spec charset_CS_MAC_CYRILLIC = {$/;"	v
charset_CS_MAC_CYRILLIC_OLD	charset/sbcsdat.c	/^const charset_spec charset_CS_MAC_CYRILLIC_OLD = {$/;"	v
charset_CS_MAC_DINGBATS	charset/sbcsdat.c	/^const charset_spec charset_CS_MAC_DINGBATS = {$/;"	v
charset_CS_MAC_GREEK	charset/sbcsdat.c	/^const charset_spec charset_CS_MAC_GREEK = {$/;"	v
charset_CS_MAC_GREEK_OLD	charset/sbcsdat.c	/^const charset_spec charset_CS_MAC_GREEK_OLD = {$/;"	v
charset_CS_MAC_ICELAND	charset/sbcsdat.c	/^const charset_spec charset_CS_MAC_ICELAND = {$/;"	v
charset_CS_MAC_ICELAND_OLD	charset/sbcsdat.c	/^const charset_spec charset_CS_MAC_ICELAND_OLD = {$/;"	v
charset_CS_MAC_ROMAN	charset/sbcsdat.c	/^const charset_spec charset_CS_MAC_ROMAN = {$/;"	v
charset_CS_MAC_ROMANIAN	charset/sbcsdat.c	/^const charset_spec charset_CS_MAC_ROMANIAN = {$/;"	v
charset_CS_MAC_ROMANIAN_OLD	charset/sbcsdat.c	/^const charset_spec charset_CS_MAC_ROMANIAN_OLD = {$/;"	v
charset_CS_MAC_ROMAN_OLD	charset/sbcsdat.c	/^const charset_spec charset_CS_MAC_ROMAN_OLD = {$/;"	v
charset_CS_MAC_SYMBOL	charset/sbcsdat.c	/^const charset_spec charset_CS_MAC_SYMBOL = {$/;"	v
charset_CS_MAC_THAI	charset/sbcsdat.c	/^const charset_spec charset_CS_MAC_THAI = {$/;"	v
charset_CS_MAC_TURKISH	charset/sbcsdat.c	/^const charset_spec charset_CS_MAC_TURKISH = {$/;"	v
charset_CS_MAC_UKRAINE	charset/sbcsdat.c	/^const charset_spec charset_CS_MAC_UKRAINE = {$/;"	v
charset_CS_MAC_VT100	charset/sbcsdat.c	/^const charset_spec charset_CS_MAC_VT100 = {$/;"	v
charset_CS_MAC_VT100_OLD	charset/sbcsdat.c	/^const charset_spec charset_CS_MAC_VT100_OLD = {$/;"	v
charset_CS_UTF8	charset/utf8.c	/^const charset_spec charset_CS_UTF8 = {$/;"	v
charset_CS_VISCII	charset/sbcsdat.c	/^const charset_spec charset_CS_VISCII = {$/;"	v
charset_charset_h	charset/charset.h	7;"	d
charset_emit	charset/fromucs.c	/^static void charset_emit(void *ctx, long int output)$/;"	f	file:
charset_emit_param	charset/fromucs.c	/^struct charset_emit_param {$/;"	s	file:
charset_find_spec	charset/slookup.c	/^charset_spec const *charset_find_spec(int charset)$/;"	f
charset_from_localenc	charset/localenc.c	/^int charset_from_localenc(const char *name)$/;"	f
charset_from_macenc	charset/macenc.c	/^int charset_from_macenc(int script, int region, int sysvers,$/;"	f
charset_from_mimeenc	charset/mimeenc.c	/^int charset_from_mimeenc(const char *name)$/;"	f
charset_from_unicode	charset/fromucs.c	/^int charset_from_unicode(const wchar_t **input, int *inlen,$/;"	f
charset_from_xenc	charset/xenc.c	/^int charset_from_xenc(const char *name)$/;"	f
charset_internal_h	charset/internal.h	6;"	d
charset_localenc_nth	charset/localenc.c	/^int charset_localenc_nth(int n)$/;"	f
charset_spec	charset/internal.h	/^struct charset_spec {$/;"	s
charset_spec	charset/internal.h	/^typedef struct charset_spec charset_spec;$/;"	t	typeref:struct:charset_spec
charset_state	charset/charset.h	/^} charset_state;$/;"	t	typeref:struct:__anon4
charset_t	charset/charset.h	/^} charset_t;$/;"	t	typeref:enum:__anon3
charset_to_localenc	charset/localenc.c	/^const char *charset_to_localenc(int charset)$/;"	f
charset_to_mimeenc	charset/mimeenc.c	/^const char *charset_to_mimeenc(int charset)$/;"	f
charset_to_unicode	charset/toucs.c	/^int charset_to_unicode(const char **input, int *inlen,$/;"	f
charset_to_xenc	charset/xenc.c	/^const char *charset_to_xenc(int charset)$/;"	f
check_boundary	terminal.c	/^static void check_boundary(Terminal *term, int x, int y)$/;"	f	file:
check_compose	windows/winucs.c	/^int check_compose(int first, int second)$/;"	f
check_compose_internal	windows/winucs.c	/^int check_compose_internal(int first, int second, int recurse)$/;"	f
check_crc	sshcrcda.c	/^static int check_crc(uchar *S, uchar *buf, uint32 len, uchar *IV)$/;"	f	file:
check_fp	cmdgen.c	/^void check_fp(char *filename, char *fp, char *fmt, ...)$/;"	f
check_is_dir	psftp.c	/^static int check_is_dir(char *dstfname)$/;"	f	file:
check_line_size	terminal.c	/^static void check_line_size(Terminal *term, termline *line)$/;"	f	file:
check_selection	terminal.c	/^static void check_selection(Terminal *term, pos from, pos to)$/;"	f	file:
checkbox	dialog.h	/^    } checkbox;$/;"	m	union:control	typeref:struct:control::__anon23
checkbox	windows/winctrls.c	/^void checkbox(struct ctlpos *cp, char *text, int id)$/;"	f
child	unix/uxnet.c	/^    Actual_Socket parent, child;$/;"	m	struct:Socket_tag	file:
child	windows/winnet.c	/^    Actual_Socket parent, child;$/;"	m	struct:Socket_tag	file:
child_dead	unix/uxpty.c	/^    int child_dead, finished;$/;"	m	struct:pty_tag	file:
child_pid	unix/uxpty.c	/^    pid_t child_pid;$/;"	m	struct:pty_tag	file:
children	unix/gtkcols.h	/^    GList *children;		       \/* this holds ColumnsChild structures *\/$/;"	m	struct:Columns_tag
chkctx	tree234.c	/^} chkctx;$/;"	t	typeref:struct:__anon114	file:
chknode	tree234.c	/^int chknode(chkctx * ctx, int level, node234 * node,$/;"	f
chm_path	windows/winhelp.c	/^static char *chm_path;$/;"	v	file:
chomp	misc.c	/^char *chomp(char *str)$/;"	f
chr	terminal.h	/^    unsigned long chr;$/;"	m	struct:termchar
chunk	ssh.c	/^    int chunk;$/;"	m	struct:rdpkt1_state_tag	file:
cipher	import.c	/^    openssh_new_cipher cipher;$/;"	m	struct:openssh_new_key	file:
cipher	ssh.c	/^	    const struct ssh2_cipher *cipher;$/;"	m	struct:kexinit_algorithm::__anon83::__anon86	typeref:struct:kexinit_algorithm::__anon83::__anon86::ssh2_cipher	file:
cipher	ssh.c	/^	} cipher;$/;"	m	union:kexinit_algorithm::__anon83	typeref:struct:kexinit_algorithm::__anon83::__anon86	file:
cipher	ssh.c	/^    const struct ssh_cipher *cipher;$/;"	m	struct:ssh_tag	typeref:struct:ssh_tag::ssh_cipher	file:
cipherblk	ssh.c	/^    int cipherblk;$/;"	m	struct:rdpkt2_state_tag	file:
cipherlist_handler	config.c	/^static void cipherlist_handler(union control *ctrl, void *dlg,$/;"	f	file:
ciphernames	settings.c	/^static const struct keyvalwhere ciphernames[] = {$/;"	v	typeref:struct:keyvalwhere	file:
cjk_ambig_wide	terminal.h	/^    int cjk_ambig_wide;$/;"	m	struct:terminal_tag
clean_exit	ssh.c	/^    int clean_exit;$/;"	m	struct:ssh_tag	file:
cleanup_all	unix/uxstore.c	/^void cleanup_all(void)$/;"	f
cleanup_all	windows/winstore.c	/^void cleanup_all(void)$/;"	f
cleanup_exit	unix/uxcons.c	/^void cleanup_exit(int code)$/;"	f
cleanup_exit	unix/uxpterm.c	/^void cleanup_exit(int code)$/;"	f
cleanup_exit	unix/uxputty.c	/^void cleanup_exit(int code)$/;"	f
cleanup_exit	windows/wincons.c	/^void cleanup_exit(int code)$/;"	f
cleanup_exit	windows/window.c	/^void cleanup_exit(int code)$/;"	f
cleanup_exit	windows/winpgen.c	/^void cleanup_exit(int code)$/;"	f
cleanup_exit	windows/winpgnt.c	/^void cleanup_exit(int code)$/;"	f
cleanup_fp	cmdgen.c	/^char *cleanup_fp(char *s)$/;"	f
cleanup_termios	unix/uxplink.c	/^void cleanup_termios(void)$/;"	f
cleanup_utmp	unix/uxpty.c	/^static void cleanup_utmp(void)$/;"	f	file:
clear_cc	terminal.c	/^static void clear_cc(termline *line, int col)$/;"	f	file:
clear_full_screen	windows/window.c	/^static void clear_full_screen()$/;"	f	file:
clear_jumplist	windows/winjump.c	/^void clear_jumplist(void)$/;"	f
clear_jumplist	windows/winnojmp.c	/^void clear_jumplist(void) {}$/;"	f
clear_scrollback_menuitem	unix/gtkwin.c	/^void clear_scrollback_menuitem(GtkMenuItem *item, gpointer data)$/;"	f
clearbreak_time	windows/winser.c	/^    long clearbreak_time;$/;"	m	struct:serial_backend_data	file:
clearpkt	contrib/encodelib.py	/^def clearpkt(msgtype, *stuff):$/;"	f
click	windows/window.c	/^static void click(Mouse_Button b, int x, int y, int shift, int ctrl, int alt)$/;"	f	file:
clientid	x11fwd.c	/^    unsigned char clientid[6];$/;"	m	struct:XDMSeen	file:
clip_addchar	terminal.c	/^static void clip_addchar(clip_workbuf *b, wchar_t chr, int attr)$/;"	f	file:
clip_workbuf	terminal.c	/^} clip_workbuf;$/;"	t	typeref:struct:__anon108	file:
clipboard	unix/gtkwin.c	/^    GtkClipboard *clipboard;$/;"	m	struct:gui_data	file:
clipboard_clear	unix/gtkwin.c	/^static void clipboard_clear(GtkClipboard *clipboard, gpointer data)$/;"	f	file:
clipboard_contents	windows/window.c	/^static wchar_t *clipboard_contents;$/;"	v	file:
clipboard_data_instance	unix/gtkwin.c	/^struct clipboard_data_instance {$/;"	s	file:
clipboard_length	windows/window.c	/^static size_t clipboard_length;$/;"	v	file:
clipboard_provide_data	unix/gtkwin.c	/^static void clipboard_provide_data(GtkClipboard *clipboard,$/;"	f	file:
clipboard_read_threadfunc	windows/window.c	/^static DWORD WINAPI clipboard_read_threadfunc(void *param)$/;"	f	file:
clipboard_text_received	unix/gtkwin.c	/^static void clipboard_text_received(GtkClipboard *clipboard,$/;"	f	file:
clipme	terminal.c	/^static void clipme(Terminal *term, pos top, pos bottom, int rect, int desel)$/;"	f	file:
cloexec	unix/uxmisc.c	/^void cloexec(int fd) {$/;"	f
close	network.h	/^    void (*close) (Socket s);$/;"	m	struct:socket_function_table
close_directory	unix/uxsftp.c	/^void close_directory(DirHandle *dir)$/;"	f
close_directory	windows/winsftp.c	/^void close_directory(DirHandle *dir)$/;"	f
close_expected	ssh.c	/^    int close_expected;$/;"	m	struct:ssh_tag	file:
close_rfile	unix/uxsftp.c	/^void close_rfile(RFile *f)$/;"	f
close_rfile	windows/winsftp.c	/^void close_rfile(RFile *f)$/;"	f
close_session	windows/window.c	/^static void close_session(void *ignored_context)$/;"	f	file:
close_settings_r	unix/uxstore.c	/^void close_settings_r(void *handle)$/;"	f
close_settings_r	windows/winstore.c	/^void close_settings_r(void *handle)$/;"	f
close_settings_w	unix/uxstore.c	/^void close_settings_w(void *handle)$/;"	f
close_settings_w	windows/winstore.c	/^void close_settings_w(void *handle)$/;"	f
close_wfile	unix/uxsftp.c	/^void close_wfile(WFile *f)$/;"	f
close_wfile	windows/winsftp.c	/^void close_wfile(WFile *f)$/;"	f
closed_on_socket_error	raw.c	/^    int closed_on_socket_error;$/;"	m	struct:raw_backend_data	file:
closed_on_socket_error	rlogin.c	/^    int closed_on_socket_error;$/;"	m	struct:rlogin_tag	file:
closed_on_socket_error	telnet.c	/^    int closed_on_socket_error;$/;"	m	struct:telnet_tag	file:
closes	ssh.c	/^    int closes;$/;"	m	struct:ssh_channel	file:
closing	network.h	/^    void (*closing)$/;"	m	struct:plug_function_table
closing_calling_back	proxy.h	/^    int closing_calling_back;$/;"	m	struct:Socket_proxy_tag
closing_error_code	proxy.h	/^    int closing_error_code;$/;"	m	struct:Socket_proxy_tag
closing_error_msg	proxy.h	/^    const char *closing_error_msg;$/;"	m	struct:Socket_proxy_tag
cm	icons/mkicon.py	/^    cm = (0x80, 0x00, 0x80, 0xFF)$/;"	v
cmd_err	unix/uxproxy.c	/^    int to_cmd, from_cmd, cmd_err;     \/* fds *\/$/;"	m	struct:Socket_localproxy_tag	file:
cmdline	windows/winutils.c	/^    const char *cmdline;$/;"	m	struct:argv_test	file:
cmdline_check_unavailable	cmdline.c	/^static int cmdline_check_unavailable(int flag, const char *p)$/;"	f	file:
cmdline_cleanup	cmdline.c	/^void cmdline_cleanup(void)$/;"	f
cmdline_error	pscp.c	/^void cmdline_error(const char *p, ...)$/;"	f
cmdline_error	psftp.c	/^void cmdline_error(const char *p, ...)$/;"	f
cmdline_error	unix/gtkwin.c	/^void cmdline_error(const char *p, ...)$/;"	f
cmdline_error	unix/uxpgnt.c	/^void cmdline_error(const char *p, ...)$/;"	f
cmdline_error	unix/uxplink.c	/^void cmdline_error(const char *p, ...)$/;"	f
cmdline_error	windows/window.c	/^void cmdline_error(const char *fmt, ...)$/;"	f
cmdline_error	windows/winplink.c	/^void cmdline_error(const char *p, ...)$/;"	f
cmdline_get_passwd_input	cmdline.c	/^int cmdline_get_passwd_input(prompts_t *p, const unsigned char *in, int inlen)$/;"	f
cmdline_key_action	unix/uxpgnt.c	/^struct cmdline_key_action {$/;"	s	file:
cmdline_keyfile	windows/winpgen.c	/^static char *cmdline_keyfile = NULL;$/;"	v	file:
cmdline_password	cmdline.c	/^static char *cmdline_password = NULL;$/;"	v	file:
cmdline_process_param	cmdline.c	/^int cmdline_process_param(const char *p, char *value,$/;"	f
cmdline_run_saved	cmdline.c	/^void cmdline_run_saved(Conf *conf)$/;"	f
cmdline_save_param	cmdline.c	/^static void cmdline_save_param(const char *p, const char *value, int pri)$/;"	f	file:
cmdline_saved_param	cmdline.c	/^struct cmdline_saved_param {$/;"	s	file:
cmdline_saved_param_set	cmdline.c	/^struct cmdline_saved_param_set {$/;"	s	file:
cmdline_session_name	putty.h	/^GLOBAL char *cmdline_session_name;$/;"	v
cmdline_tooltype	cmdline.c	/^int cmdline_tooltype = 0;$/;"	v
cmp	tree234.c	/^    cmpfn234 cmp;$/;"	m	struct:tree234_Tag	file:
cmp	tree234.c	/^cmpfn234 cmp;$/;"	v
cmpfn234	tree234.h	/^typedef int (*cmpfn234) (void *, void *);$/;"	t
cmpforsearch	unix/uxnet.c	/^static int cmpforsearch(void *av, void *bv)$/;"	f	file:
cmpforsearch	windows/winnet.c	/^static int cmpforsearch(void *av, void *bv)$/;"	f	file:
cmpfortree	unix/uxnet.c	/^static int cmpfortree(void *av, void *bv)$/;"	f	file:
cmpfortree	windows/winnet.c	/^static int cmpfortree(void *av, void *bv)$/;"	f	file:
cmpkeys_rsa	pageant.c	/^static int cmpkeys_rsa(void *av, void *bv)$/;"	f	file:
cmpkeys_ssh2	pageant.c	/^static int cmpkeys_ssh2(void *av, void *bv)$/;"	f	file:
cmpkeys_ssh2_asymm	pageant.c	/^static int cmpkeys_ssh2_asymm(void *av, void *bv)$/;"	f	file:
code	putty.h	/^    int code;$/;"	m	struct:telnet_special
code	sshzlib.c	/^    short code, extrabits;$/;"	m	struct:__anon102	file:
code	sshzlib.c	/^    short code;$/;"	m	struct:zlib_tableentry	file:
codepage	windows/winucs.c	/^    int codepage;$/;"	m	struct:cp_list_item	file:
codepage_handler	config.c	/^static void codepage_handler(union control *ctrl, void *dlg,$/;"	f	file:
coderecord	sshzlib.c	/^} coderecord;$/;"	t	typeref:struct:__anon102	file:
collecting_entropy	windows/winpgen.c	/^    int collecting_entropy;$/;"	m	struct:MainDlgState	file:
colmap	unix/gtkask.c	/^    GdkColormap *colmap;$/;"	m	struct:askpass_ctx	file:
colmap	unix/gtkwin.c	/^    GdkColormap *colmap;$/;"	m	struct:gui_data	file:
colon	pscp.c	/^static char *colon(char *str)$/;"	f	file:
colour_data	config.c	/^struct colour_data {$/;"	s	file:
colour_handler	config.c	/^static void colour_handler(union control *ctrl, void *dlg,$/;"	f	file:
colour_to_css	unix/gtkwin.c	/^char *colour_to_css(const GdkColor *col)$/;"	f
colourchoose_response	unix/gtkdlg.c	/^static void colourchoose_response(GtkDialog *dialog,$/;"	f	file:
colours	config.c	/^static const char *const colours[] = {$/;"	v	file:
colours	icons/mkicon.py	/^            colours = 0$/;"	v
colours	icons/mkicon.py	/^            colours = 2$/;"	v
colours	icons/mkicon.py	/^colours = 1 # 0=mono, 1=16col, 2=truecol$/;"	v
colours	windows/window.c	/^static COLORREF colours[NALLCOLOURS];$/;"	v	file:
coloursel_cancel	unix/gtkdlg.c	/^static void coloursel_cancel(GtkButton *button, gpointer data)$/;"	f	file:
coloursel_ok	unix/gtkdlg.c	/^static void coloursel_ok(GtkButton *button, gpointer data)$/;"	f	file:
coloursel_result	unix/gtkdlg.c	/^    struct { unsigned char r, g, b, ok; } coloursel_result;   \/* 0-255 *\/$/;"	m	struct:dlgparam	typeref:struct:dlgparam::__anon116	file:
coloursel_result	windows/winstuff.h	/^    struct { unsigned char r, g, b, ok; } coloursel_result;   \/* 0-255 *\/$/;"	m	struct:dlgparam	typeref:struct:dlgparam::__anon149
coloursel_wanted	windows/winstuff.h	/^    int coloursel_wanted;	       \/* has an event handler asked for$/;"	m	struct:dlgparam
cols	terminal.h	/^    int cols;			       \/* number of real columns on the line *\/$/;"	m	struct:termline
cols	terminal.h	/^    int rows, cols, savelines;$/;"	m	struct:terminal_tag
cols	unix/gtkask.c	/^    GdkColor *cols;$/;"	m	struct:drawing_area_ctx	file:
cols	unix/gtkask.c	/^    GdkColor cols[2];$/;"	m	struct:askpass_ctx	file:
cols	unix/gtkwin.c	/^    GdkColor cols[NALLCOLOURS];$/;"	m	struct:gui_data	file:
colspan	unix/gtkcols.h	/^    gint colstart, colspan;$/;"	m	struct:ColumnsChild_tag
colstart	unix/gtkcols.h	/^    gint colstart, colspan;$/;"	m	struct:ColumnsChild_tag
column	dialog.h	/^	int column;$/;"	m	struct:control::__anon18
columns	dialog.h	/^    } columns;$/;"	m	union:control	typeref:struct:control::__anon27
columns_add	unix/gtkcols.c	/^void columns_add(Columns *cols, GtkWidget *child,$/;"	f
columns_alloc_horiz	unix/gtkcols.c	/^static void columns_alloc_horiz(Columns *cols, gint ourwidth,$/;"	f	file:
columns_alloc_vert	unix/gtkcols.c	/^static void columns_alloc_vert(Columns *cols, gint ourheight,$/;"	f	file:
columns_base_add	unix/gtkcols.c	/^static void columns_base_add(GtkContainer *container, GtkWidget *widget)$/;"	f	file:
columns_child_type	unix/gtkcols.c	/^static GType columns_child_type(GtkContainer *container)$/;"	f	file:
columns_class_init	unix/gtkcols.c	/^static void columns_class_init(ColumnsClass *klass)$/;"	f	file:
columns_compute_height	unix/gtkcols.c	/^static gint columns_compute_height(Columns *cols, widget_dim_fn_t get_height)$/;"	f	file:
columns_compute_width	unix/gtkcols.c	/^static gint columns_compute_width(Columns *cols, widget_dim_fn_t get_width)$/;"	f	file:
columns_draw	unix/gtkcols.c	/^static void columns_draw(GtkWidget *widget, GdkRectangle *area)$/;"	f	file:
columns_expose	unix/gtkcols.c	/^static gint columns_expose(GtkWidget *widget, GdkEventExpose *event)$/;"	f	file:
columns_find_child	unix/gtkcols.c	/^static ColumnsChild *columns_find_child(Columns *cols, GtkWidget *widget)$/;"	f	file:
columns_focus	unix/gtkcols.c	/^static gint columns_focus(GtkContainer *container, GtkDirectionType dir)$/;"	f	file:
columns_forall	unix/gtkcols.c	/^static void columns_forall(GtkContainer *container, gboolean include_internals,$/;"	f	file:
columns_force_left_align	unix/gtkcols.c	/^void columns_force_left_align(Columns *cols, GtkWidget *widget)$/;"	f
columns_force_same_height	unix/gtkcols.c	/^void columns_force_same_height(Columns *cols, GtkWidget *cw1, GtkWidget *cw2)$/;"	f
columns_get_preferred_height	unix/gtkcols.c	/^static void columns_get_preferred_height(GtkWidget *widget,$/;"	f	file:
columns_get_preferred_height_for_width	unix/gtkcols.c	/^static void columns_get_preferred_height_for_width(GtkWidget *widget,$/;"	f	file:
columns_get_preferred_width	unix/gtkcols.c	/^static void columns_get_preferred_width(GtkWidget *widget,$/;"	f	file:
columns_get_preferred_width_for_height	unix/gtkcols.c	/^static void columns_get_preferred_width_for_height(GtkWidget *widget,$/;"	f	file:
columns_get_type	unix/gtkcols.c	/^GType columns_get_type(void)$/;"	f
columns_gtk2_get_height	unix/gtkcols.c	/^static gint columns_gtk2_get_height(ColumnsChild *child)$/;"	f	file:
columns_gtk2_get_width	unix/gtkcols.c	/^static gint columns_gtk2_get_width(ColumnsChild *child)$/;"	f	file:
columns_gtk3_get_min_height	unix/gtkcols.c	/^static gint columns_gtk3_get_min_height(ColumnsChild *child)$/;"	f	file:
columns_gtk3_get_min_width	unix/gtkcols.c	/^static gint columns_gtk3_get_min_width(ColumnsChild *child)$/;"	f	file:
columns_gtk3_get_minfh_width	unix/gtkcols.c	/^static gint columns_gtk3_get_minfh_width(ColumnsChild *child)$/;"	f	file:
columns_gtk3_get_minfw_height	unix/gtkcols.c	/^static gint columns_gtk3_get_minfw_height(ColumnsChild *child)$/;"	f	file:
columns_gtk3_get_nat_height	unix/gtkcols.c	/^static gint columns_gtk3_get_nat_height(ColumnsChild *child)$/;"	f	file:
columns_gtk3_get_nat_width	unix/gtkcols.c	/^static gint columns_gtk3_get_nat_width(ColumnsChild *child)$/;"	f	file:
columns_gtk3_get_natfh_width	unix/gtkcols.c	/^static gint columns_gtk3_get_natfh_width(ColumnsChild *child)$/;"	f	file:
columns_gtk3_get_natfw_height	unix/gtkcols.c	/^static gint columns_gtk3_get_natfw_height(ColumnsChild *child)$/;"	f	file:
columns_inherited_focus	unix/gtkcols.c	/^static gint (*columns_inherited_focus)(GtkContainer *container,$/;"	v	file:
columns_init	unix/gtkcols.c	/^static void columns_init(Columns *cols)$/;"	f	file:
columns_map	unix/gtkcols.c	/^static void columns_map(GtkWidget *widget)$/;"	f	file:
columns_new	unix/gtkcols.c	/^GtkWidget *columns_new(gint spacing)$/;"	f
columns_remove	unix/gtkcols.c	/^static void columns_remove(GtkContainer *container, GtkWidget *widget)$/;"	f	file:
columns_set_cols	unix/gtkcols.c	/^void columns_set_cols(Columns *cols, gint ncols, const gint *percentages)$/;"	f
columns_size_allocate	unix/gtkcols.c	/^static void columns_size_allocate(GtkWidget *widget, GtkAllocation *alloc)$/;"	f	file:
columns_size_request	unix/gtkcols.c	/^static void columns_size_request(GtkWidget *widget, GtkRequisition *req)$/;"	f	file:
columns_taborder_last	unix/gtkcols.c	/^void columns_taborder_last(Columns *cols, GtkWidget *widget)$/;"	f
columns_unmap	unix/gtkcols.c	/^static void columns_unmap(GtkWidget *widget)$/;"	f	file:
combo	unix/gtkdlg.c	/^    GtkWidget *combo;         \/* for combo box (either editable or not) *\/$/;"	m	struct:uctrl	file:
combobox	windows/winctrls.c	/^void combobox(struct ctlpos *cp, char *text, int staticid, int listid)$/;"	f
command_read_ctx	windows/winsftp.c	/^struct command_read_ctx {$/;"	s	file:
command_read_thread	windows/winsftp.c	/^static DWORD WINAPI command_read_thread(void *param)$/;"	f	file:
comment	import.c	/^    char comment[256];                 \/* allowing any length is overkill *\/$/;"	m	struct:sshcom_key	file:
comment	pageant.h	/^    char *comment;$/;"	m	struct:pageant_pubkey
comment	ssh.h	/^    char *comment;		       \/* the key comment *\/$/;"	m	struct:ssh2_userkey
comment	ssh.h	/^    char *comment;$/;"	m	struct:RSAKey
comment	windows/winpgen.c	/^    char *comment;$/;"	m	struct:PassphraseProcStruct	file:
comment	windows/winpgnt.c	/^    char *comment;$/;"	m	struct:PassphraseProcStruct	file:
commentptr	windows/winpgen.c	/^    char **commentptr;		       \/* points to key.comment or ssh2key.comment *\/$/;"	m	struct:MainDlgState	file:
commitid	version.c	/^const char commitid[] = SOURCE_COMMIT;$/;"	v
comp	ssh.c	/^	const struct ssh_compress *comp;$/;"	m	union:kexinit_algorithm::__anon83	typeref:struct:kexinit_algorithm::__anon83::ssh_compress	file:
comp_disabled	sshzlib.c	/^    int comp_disabled;$/;"	m	struct:Outbuf	file:
compare_timer_contexts	timing.c	/^static int compare_timer_contexts(void *av, void *bv)$/;"	f	file:
compare_timers	timing.c	/^static int compare_timers(void *av, void *bv)$/;"	f	file:
compatibility	terminal.c	56;"	d	file:
compatibility2	terminal.c	61;"	d	file:
compatibility_level	terminal.h	/^    int compatibility_level;$/;"	m	struct:terminal_tag
complete	sftp.c	/^    int len, retlen, complete;$/;"	m	struct:req	file:
compose_state	windows/window.c	/^static int compose_state = 0;$/;"	v	file:
compound_text_atom	unix/gtkwin.c	/^GdkAtom compound_text_atom, utf8_string_atom;$/;"	v
compress	ssh.h	/^    int (*compress) (void *, unsigned char *block, int len,$/;"	m	struct:ssh_compress
compress_cleanup	ssh.h	/^    void (*compress_cleanup) (void *);$/;"	m	struct:ssh_compress
compress_init	ssh.h	/^    void *(*compress_init) (void);$/;"	m	struct:ssh_compress
compressions	ssh.c	/^const static struct ssh_compress *const compressions[] = {$/;"	v	file:
compressline	terminal.c	/^static unsigned char *compressline(termline *ldata)$/;"	f	file:
compute_geom_hints	unix/gtkwin.c	/^static void compute_geom_hints(struct gui_data *inst, GdkGeometry *geom)$/;"	f	file:
compute_needed	contrib/make1305.py	/^    def compute_needed(self):$/;"	m	class:CodegenTarget
compute_whole_window_size	unix/gtkwin.c	/^static void compute_whole_window_size(struct gui_data *inst,$/;"	f	file:
computer	icons/mkicon.py	/^def computer(size):$/;"	f
conf	logging.c	/^    Conf *conf;$/;"	m	struct:LogContext	file:
conf	proxy.h	/^    Conf *conf;$/;"	m	struct:Socket_proxy_tag
conf	pscp.c	/^static Conf *conf;$/;"	v	file:
conf	psftp.c	/^static Conf *conf;$/;"	v	file:
conf	raw.c	/^    Conf *conf;$/;"	m	struct:raw_backend_data	file:
conf	rlogin.c	/^    Conf *conf;$/;"	m	struct:rlogin_tag	file:
conf	ssh.c	/^    Conf *conf;$/;"	m	struct:ssh_tag	file:
conf	telnet.c	/^    Conf *conf;$/;"	m	struct:telnet_tag	file:
conf	terminal.h	/^    Conf *conf;$/;"	m	struct:terminal_tag
conf	unix/gtkwin.c	/^    Conf *conf;$/;"	m	struct:gui_data	file:
conf	unix/uxplink.c	/^static Conf *conf;$/;"	v	file:
conf	unix/uxpty.c	/^    Conf *conf;$/;"	m	struct:pty_tag	file:
conf	windows/window.c	/^Conf *conf;			       \/* exported to windlg.c *\/$/;"	v
conf	windows/winplink.c	/^static Conf *conf;$/;"	v	file:
conf_cache_data	windows/window.c	/^static void conf_cache_data(void)$/;"	f	file:
conf_checkbox_handler	config.c	/^void conf_checkbox_handler(union control *ctrl, void *dlg,$/;"	f
conf_clear	conf.c	/^static void conf_clear(Conf *conf)$/;"	f	file:
conf_cmp	conf.c	/^static int conf_cmp(void *av, void *bv)$/;"	f	file:
conf_cmp_constkey	conf.c	/^static int conf_cmp_constkey(void *av, void *bv)$/;"	f	file:
conf_copy	conf.c	/^Conf *conf_copy(Conf *oldconf)$/;"	f
conf_copy_into	conf.c	/^void conf_copy_into(Conf *newconf, Conf *oldconf)$/;"	f
conf_del_str_str	conf.c	/^void conf_del_str_str(Conf *conf, int primary, const char *secondary)$/;"	f
conf_deserialise	conf.c	/^int conf_deserialise(Conf *conf, void *vdata, int maxsize)$/;"	f
conf_dest	misc.c	/^char const *conf_dest(Conf *conf)$/;"	f
conf_editbox_handler	config.c	/^void conf_editbox_handler(union control *ctrl, void *dlg,$/;"	f
conf_entry	conf.c	/^struct conf_entry {$/;"	s	file:
conf_filesel_handler	config.c	/^void conf_filesel_handler(union control *ctrl, void *dlg,$/;"	f
conf_fontsel_handler	config.c	/^void conf_fontsel_handler(union control *ctrl, void *dlg,$/;"	f
conf_free	conf.c	/^void conf_free(Conf *conf)$/;"	f
conf_get_filename	conf.c	/^Filename *conf_get_filename(Conf *conf, int primary)$/;"	f
conf_get_fontspec	conf.c	/^FontSpec *conf_get_fontspec(Conf *conf, int primary)$/;"	f
conf_get_int	conf.c	/^int conf_get_int(Conf *conf, int primary)$/;"	f
conf_get_int	misc.c	/^int conf_get_int(Conf *conf, int primary) { return 0; }$/;"	f
conf_get_int_int	conf.c	/^int conf_get_int_int(Conf *conf, int primary, int secondary)$/;"	f
conf_get_str	conf.c	/^char *conf_get_str(Conf *conf, int primary)$/;"	f
conf_get_str	misc.c	/^char *conf_get_str(Conf *conf, int primary) { return NULL; }$/;"	f
conf_get_str_nthstrkey	conf.c	/^char *conf_get_str_nthstrkey(Conf *conf, int primary, int n)$/;"	f
conf_get_str_str	conf.c	/^char *conf_get_str_str(Conf *conf, int primary, const char *secondary)$/;"	f
conf_get_str_str_opt	conf.c	/^char *conf_get_str_str_opt(Conf *conf, int primary, const char *secondary)$/;"	f
conf_get_str_strs	conf.c	/^char *conf_get_str_strs(Conf *conf, int primary,$/;"	f
conf_height	terminal.h	/^    int conf_height;$/;"	m	struct:terminal_tag
conf_insert	conf.c	/^static void conf_insert(Conf *conf, struct conf_entry *entry)$/;"	f	file:
conf_launchable	misc.c	/^int conf_launchable(Conf *conf)$/;"	f
conf_new	conf.c	/^Conf *conf_new(void)$/;"	f
conf_radiobutton_handler	config.c	/^void conf_radiobutton_handler(union control *ctrl, void *dlg,$/;"	f
conf_serialise	conf.c	/^void conf_serialise(Conf *conf, void *vdata)$/;"	f
conf_serialised_size	conf.c	/^int conf_serialised_size(Conf *conf)$/;"	f
conf_set_filename	conf.c	/^void conf_set_filename(Conf *conf, int primary, const Filename *value)$/;"	f
conf_set_fontspec	conf.c	/^void conf_set_fontspec(Conf *conf, int primary, const FontSpec *value)$/;"	f
conf_set_int	conf.c	/^void conf_set_int(Conf *conf, int primary, int value)$/;"	f
conf_set_int_int	conf.c	/^void conf_set_int_int(Conf *conf, int primary, int secondary, int value)$/;"	f
conf_set_str	conf.c	/^void conf_set_str(Conf *conf, int primary, const char *value)$/;"	f
conf_set_str_str	conf.c	/^void conf_set_str_str(Conf *conf, int primary, const char *secondary,$/;"	f
conf_tag	conf.c	/^struct conf_tag {$/;"	s	file:
conf_width	terminal.h	/^    int conf_width;$/;"	m	struct:terminal_tag
config	doc/Chapter4.html	/^<h1><a name="config"><\/a><a name="C4"><\/a>Chapter 4: Configuring PuTTY<\/h1>$/;"	a
config-address-family	doc/Chapter4.html	/^<h3><a name="config-address-family"><\/a><a name="S4.13.4"><\/a>4.13.4 <a name="i233"><\/a>&#8216;Internet protocol&#8217;<\/h3>$/;"	a
config-altf4	doc/Chapter4.html	/^<h3><a name="config-altf4"><\/a><a name="S4.9.3"><\/a>4.9.3 &#8216;Window closes on <a name="i144"><\/a>ALT-F4&#8217;<\/h3>$/;"	a
config-altonly	doc/Chapter4.html	/^<h3><a name="config-altonly"><\/a><a name="S4.9.5"><\/a>4.9.5 &#8216;<a name="i150"><\/a>System menu appears on <a name="i151"><\/a>Alt alone&#8217;<\/h3>$/;"	a
config-altspace	doc/Chapter4.html	/^<h3><a name="config-altspace"><\/a><a name="S4.9.4"><\/a>4.9.4 &#8216;<a name="i146"><\/a>System menu appears on <a name="i147"><\/a>ALT-Space&#8217;<\/h3>$/;"	a
config-alwaysontop	doc/Chapter4.html	/^<h3><a name="config-alwaysontop"><\/a><a name="S4.9.6"><\/a>4.9.6 &#8216;Ensure window is <a name="i152"><\/a>always on top&#8217;<\/h3>$/;"	a
config-ansicolour	doc/Chapter4.html	/^<h3><a name="config-ansicolour"><\/a><a name="S4.12.1"><\/a>4.12.1 &#8216;Allow terminal to specify <a name="i200"><\/a>ANSI colours&#8217;<\/h3>$/;"	a
config-answerback	doc/Chapter4.html	/^<h3><a name="config-answerback"><\/a><a name="S4.3.7"><\/a>4.3.7 &#8216;<a name="i40"><\/a>Answerback to ^E&#8217;<\/h3>$/;"	a
config-appcursor	doc/Chapter4.html	/^<h3><a name="config-appcursor"><\/a><a name="S4.4.4"><\/a>4.4.4 Controlling <a name="i71"><\/a>Application Cursor Keys mode<\/h3>$/;"	a
config-appearance	doc/Chapter4.html	/^<h2><a name="config-appearance"><\/a><a name="S4.8"><\/a>4.8 The Appearance panel<\/h2>$/;"	a
config-appkeypad	doc/Chapter4.html	/^<h3><a name="config-appkeypad"><\/a><a name="S4.4.5"><\/a>4.4.5 Controlling <a name="i72"><\/a>Application Keypad mode<\/h3>$/;"	a
config-autowrap	doc/Chapter4.html	/^<h3><a name="config-autowrap"><\/a><a name="S4.3.1"><\/a>4.3.1 &#8216;Auto wrap mode initially on&#8217;<\/h3>$/;"	a
config-backspace	doc/Chapter4.html	/^<h3><a name="config-backspace"><\/a><a name="S4.4.1"><\/a>4.4.1 Changing the action of the <a name="i55"><\/a>Backspace key<\/h3>$/;"	a
config-behaviour	doc/Chapter4.html	/^<h2><a name="config-behaviour"><\/a><a name="S4.9"><\/a>4.9 The Behaviour panel<\/h2>$/;"	a
config-bell	doc/Chapter4.html	/^<h2><a name="config-bell"><\/a><a name="S4.5"><\/a>4.5 The Bell panel<\/h2>$/;"	a
config-bellovl	doc/Chapter4.html	/^<h3><a name="config-bellovl"><\/a><a name="S4.5.3"><\/a>4.5.3 &#8216;Control the <a name="i89"><\/a>bell overload behaviour&#8217;<\/h3>$/;"	a
config-bellstyle	doc/Chapter4.html	/^<h3><a name="config-bellstyle"><\/a><a name="S4.5.1"><\/a>4.5.1 &#8216;Set the style of bell&#8217;<\/h3>$/;"	a
config-belltaskbar	doc/Chapter4.html	/^<h3><a name="config-belltaskbar"><\/a><a name="S4.5.2"><\/a>4.5.2 &#8216;<a name="i87"><\/a>Taskbar\/<a name="i88"><\/a>caption indication on bell&#8217;<\/h3>$/;"	a
config-blink	doc/Chapter4.html	/^<h3><a name="config-blink"><\/a><a name="S4.3.6"><\/a>4.3.6 &#8216;Enable <a name="i37"><\/a>blinking text&#8217;<\/h3>$/;"	a
config-boldcolour	doc/Chapter4.html	/^<h3><a name="config-boldcolour"><\/a><a name="S4.12.3"><\/a>4.12.3 &#8216;Indicate bolded text by changing...&#8217;<\/h3>$/;"	a
config-charclasses	doc/Chapter4.html	/^<h3><a name="config-charclasses"><\/a><a name="S4.11.5"><\/a>4.11.5 Configuring <a name="i193"><\/a>word-by-word selection<\/h3>$/;"	a
config-charset	doc/Chapter4.html	/^<h3><a name="config-charset"><\/a><a name="S4.10.1"><\/a>4.10.1 Controlling character set translation<\/h3>$/;"	a
config-cjk-ambig-wide	doc/Chapter4.html	/^<h3><a name="config-cjk-ambig-wide"><\/a><a name="S4.10.2"><\/a>4.10.2 &#8216;Treat <a name="i163"><\/a>CJK ambiguous characters as wide&#8217;<\/h3>$/;"	a
config-closeonexit	doc/Chapter4.html	/^<h3><a name="config-closeonexit"><\/a><a name="S4.1.3"><\/a>4.1.3 &#8216;<a name="i12"><\/a>Close Window on Exit&#8217;<\/h3>$/;"	a
config-colourcfg	doc/Chapter4.html	/^<h3><a name="config-colourcfg"><\/a><a name="S4.12.6"><\/a>4.12.6 Adjusting the colours in the <a name="i215"><\/a>terminal window<\/h3>$/;"	a
config-colours	doc/Chapter4.html	/^<h2><a name="config-colours"><\/a><a name="S4.12"><\/a>4.12 The Colours panel<\/h2>$/;"	a
config-command	doc/Chapter4.html	/^<h3><a name="config-command"><\/a><a name="S4.18.1"><\/a>4.18.1 Executing a specific command on the server<\/h3>$/;"	a
config-compose	doc/Chapter4.html	/^<h3><a name="config-compose"><\/a><a name="S4.4.7"><\/a>4.4.7 Enabling a DEC-like <a name="i76"><\/a>Compose key<\/h3>$/;"	a
config-connection	doc/Chapter4.html	/^<h2><a name="config-connection"><\/a><a name="S4.13"><\/a>4.13 The Connection panel<\/h2>$/;"	a
config-crlf	doc/Chapter4.html	/^<h3><a name="config-crlf"><\/a><a name="S4.3.3"><\/a>4.3.3 &#8216;Implicit CR in every LF&#8217;<\/h3>$/;"	a
config-ctrlalt	doc/Chapter4.html	/^<h3><a name="config-ctrlalt"><\/a><a name="S4.4.8"><\/a>4.4.8 &#8216;Control-Alt is different from <a name="i80"><\/a>AltGr&#8217;<\/h3>$/;"	a
config-cursor	doc/Chapter4.html	/^<h3><a name="config-cursor"><\/a><a name="S4.8.1"><\/a>4.8.1 Controlling the appearance of the <a name="i129"><\/a>cursor<\/h3>$/;"	a
config-cyr	doc/Chapter4.html	/^<h3><a name="config-cyr"><\/a><a name="S4.10.3"><\/a>4.10.3 &#8216;<a name="i168"><\/a>Caps Lock acts as <a name="i169"><\/a>Cyrillic switch&#8217;<\/h3>$/;"	a
config-data	doc/Chapter4.html	/^<h2><a name="config-data"><\/a><a name="S4.14"><\/a>4.14 The Data panel<\/h2>$/;"	a
config-decom	doc/Chapter4.html	/^<h3><a name="config-decom"><\/a><a name="S4.3.2"><\/a>4.3.2 &#8216;DEC Origin Mode initially on&#8217;<\/h3>$/;"	a
config-environ	doc/Chapter4.html	/^<h3><a name="config-environ"><\/a><a name="S4.14.5"><\/a>4.14.5 Setting <a name="i255"><\/a>environment variables on the server<\/h3>$/;"	a
config-erase	doc/Chapter4.html	/^<h3><a name="config-erase"><\/a><a name="S4.3.5"><\/a>4.3.5 &#8216;Use <a name="i34"><\/a>background colour to erase screen&#8217;<\/h3>$/;"	a
config-erasetoscrollback	doc/Chapter4.html	/^<h3><a name="config-erasetoscrollback"><\/a><a name="S4.7.4"><\/a>4.7.4 &#8216;Push erased text into scrollback&#8217;<\/h3>$/;"	a
config-features	doc/Chapter4.html	/^<h2><a name="config-features"><\/a><a name="S4.6"><\/a>4.6 The Features panel<\/h2>$/;"	a
config-features-altscreen	doc/Chapter4.html	/^<h3><a name="config-features-altscreen"><\/a><a name="S4.6.4"><\/a>4.6.4 Disabling switching to the <a name="i101"><\/a>alternate screen<\/h3>$/;"	a
config-features-application	doc/Chapter4.html	/^<h3><a name="config-features-application"><\/a><a name="S4.6.1"><\/a>4.6.1 Disabling application keypad and cursor keys<\/h3>$/;"	a
config-features-bidi	doc/Chapter4.html	/^<h3><a name="config-features-bidi"><\/a><a name="S4.6.11"><\/a>4.6.11 Disabling <a name="i112"><\/a>bidirectional text display<\/h3>$/;"	a
config-features-charset	doc/Chapter4.html	/^<h3><a name="config-features-charset"><\/a><a name="S4.6.9"><\/a>4.6.9 Disabling remote <a name="i107"><\/a>character set configuration<\/h3>$/;"	a
config-features-clearscroll	doc/Chapter4.html	/^<h3><a name="config-features-clearscroll"><\/a><a name="S4.6.7"><\/a>4.6.7 Disabling remote <a name="i105"><\/a>scrollback clearing<\/h3>$/;"	a
config-features-dbackspace	doc/Chapter4.html	/^<h3><a name="config-features-dbackspace"><\/a><a name="S4.6.8"><\/a>4.6.8 Disabling <a name="i106"><\/a>destructive backspace<\/h3>$/;"	a
config-features-mouse	doc/Chapter4.html	/^<h3><a name="config-features-mouse"><\/a><a name="S4.6.2"><\/a>4.6.2 Disabling <code>xterm<\/code>-style <a name="i94"><\/a>mouse reporting<\/h3>$/;"	a
config-features-qtitle	doc/Chapter4.html	/^<h3><a name="config-features-qtitle"><\/a><a name="S4.6.6"><\/a>4.6.6 Response to remote <a name="i103"><\/a>window title querying<\/h3>$/;"	a
config-features-resize	doc/Chapter4.html	/^<h3><a name="config-features-resize"><\/a><a name="S4.6.3"><\/a>4.6.3 Disabling remote <a name="i100"><\/a>terminal resizing<\/h3>$/;"	a
config-features-retitle	doc/Chapter4.html	/^<h3><a name="config-features-retitle"><\/a><a name="S4.6.5"><\/a>4.6.5 Disabling remote <a name="i102"><\/a>window title changing<\/h3>$/;"	a
config-features-shaping	doc/Chapter4.html	/^<h3><a name="config-features-shaping"><\/a><a name="S4.6.10"><\/a>4.6.10 Disabling <a name="i109"><\/a>Arabic text shaping<\/h3>$/;"	a
config-file	doc/Chapter4.html	/^<h2><a name="config-file"><\/a><a name="S4.29"><\/a>4.29 <a name="i433"><\/a>Storing configuration in a file<\/h2>$/;"	a
config-font	doc/Chapter4.html	/^<h3><a name="config-font"><\/a><a name="S4.8.2"><\/a>4.8.2 Controlling the <a name="i131"><\/a>font used in the terminal window<\/h3>$/;"	a
config-fullscreen	doc/Chapter4.html	/^<h3><a name="config-fullscreen"><\/a><a name="S4.9.7"><\/a>4.9.7 &#8216;<a name="i153"><\/a>Full screen on Alt-Enter&#8217;<\/h3>$/;"	a
config-funkeys	doc/Chapter4.html	/^<h3><a name="config-funkeys"><\/a><a name="S4.4.3"><\/a>4.4.3 Changing the action of the <a name="i64"><\/a>function keys and <a name="i65"><\/a>keypad<\/h3>$/;"	a
config-homeend	doc/Chapter4.html	/^<h3><a name="config-homeend"><\/a><a name="S4.4.2"><\/a>4.4.2 Changing the action of the <a name="i61"><\/a>Home and End keys<\/h3>$/;"	a
config-hostname	doc/Chapter4.html	/^<h3><a name="config-hostname"><\/a><a name="S4.1.1"><\/a>4.1.1 The <a name="i1"><\/a>host name section<\/h3>$/;"	a
config-keepalive	doc/Chapter4.html	/^<h3><a name="config-keepalive"><\/a><a name="S4.13.1"><\/a>4.13.1 Using <a name="i223"><\/a>keepalives to prevent disconnection<\/h3>$/;"	a
config-keyboard	doc/Chapter4.html	/^<h2><a name="config-keyboard"><\/a><a name="S4.4"><\/a>4.4 The Keyboard panel<\/h2>$/;"	a
config-lfcr	doc/Chapter4.html	/^<h3><a name="config-lfcr"><\/a><a name="S4.3.4"><\/a>4.3.4 &#8216;Implicit LF in every CR&#8217;<\/h3>$/;"	a
config-linedraw	doc/Chapter4.html	/^<h3><a name="config-linedraw"><\/a><a name="S4.10.4"><\/a>4.10.4 Controlling display of <a name="i171"><\/a>line-drawing characters<\/h3>$/;"	a
config-linedrawpaste	doc/Chapter4.html	/^<h3><a name="config-linedrawpaste"><\/a><a name="S4.10.5"><\/a>4.10.5 Controlling <a name="i175"><\/a>copy and paste of line drawing characters<\/h3>$/;"	a
config-localecho	doc/Chapter4.html	/^<h3><a name="config-localecho"><\/a><a name="S4.3.8"><\/a>4.3.8 &#8216;<a name="i43"><\/a>Local echo&#8217;<\/h3>$/;"	a
config-localedit	doc/Chapter4.html	/^<h3><a name="config-localedit"><\/a><a name="S4.3.9"><\/a>4.3.9 &#8216;<a name="i45"><\/a>Local line editing&#8217;<\/h3>$/;"	a
config-logfileexists	doc/Chapter4.html	/^<h3><a name="config-logfileexists"><\/a><a name="S4.2.2"><\/a>4.2.2 &#8216;What to do if the log file already exists&#8217;<\/h3>$/;"	a
config-logfilename	doc/Chapter4.html	/^<h3><a name="config-logfilename"><\/a><a name="S4.2.1"><\/a>4.2.1 &#8216;Log file name&#8217;<\/h3>$/;"	a
config-logflush	doc/Chapter4.html	/^<h3><a name="config-logflush"><\/a><a name="S4.2.3"><\/a>4.2.3 <a name="i18"><\/a>&#8216;Flush log file frequently&#8217;<\/h3>$/;"	a
config-logging	doc/Chapter4.html	/^<h2><a name="config-logging"><\/a><a name="S4.2"><\/a>4.2 The Logging panel<\/h2>$/;"	a
config-loghost	doc/Chapter4.html	/^<h3><a name="config-loghost"><\/a><a name="S4.13.5"><\/a>4.13.5 <a name="i239"><\/a>&#8216;Logical name of remote host&#8217;<\/h3>$/;"	a
config-logpalette	doc/Chapter4.html	/^<h3><a name="config-logpalette"><\/a><a name="S4.12.4"><\/a>4.12.4 &#8216;Attempt to use <a name="i208"><\/a>logical palettes&#8217;<\/h3>$/;"	a
config-logssh	doc/Chapter4.html	/^<h3><a name="config-logssh"><\/a><a name="S4.2.4"><\/a>4.2.4 Options specific to <a name="i19"><\/a>SSH packet logging<\/h3>$/;"	a
config-logssh-omitdata	doc/Chapter4.html	/^<h4><a name="config-logssh-omitdata"><\/a><a name="S4.2.4.2"><\/a>4.2.4.2 &#8216;Omit session data&#8217;<\/h4>$/;"	a
config-logssh-omitpw	doc/Chapter4.html	/^<h4><a name="config-logssh-omitpw"><\/a><a name="S4.2.4.1"><\/a>4.2.4.1 &#8216;Omit known password fields&#8217;<\/h4>$/;"	a
config-mouse	doc/Chapter4.html	/^<h3><a name="config-mouse"><\/a><a name="S4.11.2"><\/a>4.11.2 Changing the actions of the mouse buttons<\/h3>$/;"	a
config-mouseptr	doc/Chapter4.html	/^<h3><a name="config-mouseptr"><\/a><a name="S4.8.3"><\/a>4.8.3 &#8216;Hide <a name="i133"><\/a>mouse pointer when typing in window&#8217;<\/h3>$/;"	a
config-mouseshift	doc/Chapter4.html	/^<h3><a name="config-mouseshift"><\/a><a name="S4.11.3"><\/a>4.11.3 &#8216;Shift overrides application's use of mouse&#8217;<\/h3>$/;"	a
config-nethack	doc/Chapter4.html	/^<h3><a name="config-nethack"><\/a><a name="S4.4.6"><\/a>4.4.6 Using <a name="i74"><\/a>NetHack keypad mode<\/h3>$/;"	a
config-nodelay	doc/Chapter4.html	/^<h3><a name="config-nodelay"><\/a><a name="S4.13.2"><\/a>4.13.2 &#8216;Disable <a name="i228"><\/a>Nagle's algorithm&#8217;<\/h3>$/;"	a
config-oldenviron	doc/Chapter4.html	/^<h3><a name="config-oldenviron"><\/a><a name="S4.16.1"><\/a>4.16.1 &#8216;Handling of OLD_ENVIRON ambiguity&#8217;<\/h3>$/;"	a
config-printing	doc/Chapter4.html	/^<h3><a name="config-printing"><\/a><a name="S4.3.10"><\/a>4.3.10 <a name="i49"><\/a>Remote-controlled printing<\/h3>$/;"	a
config-proxy	doc/Chapter4.html	/^<h2><a name="config-proxy"><\/a><a name="S4.15"><\/a>4.15 The Proxy panel<\/h2>$/;"	a
config-proxy-auth	doc/Chapter4.html	/^<h3><a name="config-proxy-auth"><\/a><a name="S4.15.4"><\/a>4.15.4 <a name="i269"><\/a>Username and <a name="i270"><\/a>password<\/h3>$/;"	a
config-proxy-command	doc/Chapter4.html	/^<h3><a name="config-proxy-command"><\/a><a name="S4.15.5"><\/a>4.15.5 Specifying the Telnet or Local proxy command<\/h3>$/;"	a
config-proxy-dns	doc/Chapter4.html	/^<h3><a name="config-proxy-dns"><\/a><a name="S4.15.3"><\/a>4.15.3 <a name="i266"><\/a><a name="i267"><\/a>Name resolution when using a proxy<\/h3>$/;"	a
config-proxy-exclude	doc/Chapter4.html	/^<h3><a name="config-proxy-exclude"><\/a><a name="S4.15.2"><\/a>4.15.2 Excluding parts of the network from proxying<\/h3>$/;"	a
config-proxy-logging	doc/Chapter4.html	/^<h3><a name="config-proxy-logging"><\/a><a name="S4.15.6"><\/a>4.15.6 Controlling <a name="i280"><\/a>proxy logging<\/h3>$/;"	a
config-proxy-type	doc/Chapter4.html	/^<h3><a name="config-proxy-type"><\/a><a name="S4.15.1"><\/a>4.15.1 Setting the proxy type<\/h3>$/;"	a
config-ptelnet	doc/Chapter4.html	/^<h3><a name="config-ptelnet"><\/a><a name="S4.16.2"><\/a>4.16.2 Passive and active <a name="i287"><\/a>Telnet negotiation modes<\/h3>$/;"	a
config-rectselect	doc/Chapter4.html	/^<h3><a name="config-rectselect"><\/a><a name="S4.11.4"><\/a>4.11.4 Default selection mode<\/h3>$/;"	a
config-rlogin	doc/Chapter4.html	/^<h2><a name="config-rlogin"><\/a><a name="S4.17"><\/a>4.17 The Rlogin panel<\/h2>$/;"	a
config-rlogin-localuser	doc/Chapter4.html	/^<h3><a name="config-rlogin-localuser"><\/a><a name="S4.17.1"><\/a>4.17.1 <a name="i299"><\/a>&#8216;Local username&#8217;<\/h3>$/;"	a
config-rtfpaste	doc/Chapter4.html	/^<h3><a name="config-rtfpaste"><\/a><a name="S4.11.1"><\/a>4.11.1 Pasting in <a name="i179"><\/a>Rich Text Format<\/h3>$/;"	a
config-saving	doc/Chapter4.html	/^<h3><a name="config-saving"><\/a><a name="S4.1.2"><\/a>4.1.2 <a name="i9"><\/a>Loading and storing saved sessions<\/h3>$/;"	a
config-scrollback	doc/Chapter4.html	/^<h3><a name="config-scrollback"><\/a><a name="S4.7.3"><\/a>4.7.3 Controlling <a name="i124"><\/a>scrollback<\/h3>$/;"	a
config-selection	doc/Chapter4.html	/^<h2><a name="config-selection"><\/a><a name="S4.11"><\/a>4.11 The Selection panel<\/h2>$/;"	a
config-serial	doc/Chapter4.html	/^<h2><a name="config-serial"><\/a><a name="S4.28"><\/a>4.28 The Serial panel<\/h2>$/;"	a
config-serial-databits	doc/Chapter4.html	/^<h3><a name="config-serial-databits"><\/a><a name="S4.28.3"><\/a>4.28.3 Selecting the number of data bits<\/h3>$/;"	a
config-serial-flow	doc/Chapter4.html	/^<h3><a name="config-serial-flow"><\/a><a name="S4.28.6"><\/a>4.28.6 Selecting the serial flow control scheme<\/h3>$/;"	a
config-serial-line	doc/Chapter4.html	/^<h3><a name="config-serial-line"><\/a><a name="S4.28.1"><\/a>4.28.1 Selecting a serial line to connect to<\/h3>$/;"	a
config-serial-parity	doc/Chapter4.html	/^<h3><a name="config-serial-parity"><\/a><a name="S4.28.5"><\/a>4.28.5 Selecting the serial parity checking scheme<\/h3>$/;"	a
config-serial-speed	doc/Chapter4.html	/^<h3><a name="config-serial-speed"><\/a><a name="S4.28.2"><\/a>4.28.2 Selecting the speed of your serial line<\/h3>$/;"	a
config-serial-stopbits	doc/Chapter4.html	/^<h3><a name="config-serial-stopbits"><\/a><a name="S4.28.4"><\/a>4.28.4 Selecting the number of stop bits<\/h3>$/;"	a
config-session	doc/Chapter4.html	/^<h2><a name="config-session"><\/a><a name="S4.1"><\/a>4.1 The Session panel<\/h2>$/;"	a
config-ssh	doc/Chapter4.html	/^<h2><a name="config-ssh"><\/a><a name="S4.18"><\/a>4.18 The SSH panel<\/h2>$/;"	a
config-ssh-agentfwd	doc/Chapter4.html	/^<h3><a name="config-ssh-agentfwd"><\/a><a name="S4.22.6"><\/a>4.22.6 &#8216;Allow <a name="i358"><\/a>agent forwarding&#8217;<\/h3>$/;"	a
config-ssh-auth	doc/Chapter4.html	/^<h2><a name="config-ssh-auth"><\/a><a name="S4.22"><\/a>4.22 The Auth panel<\/h2>$/;"	a
config-ssh-auth-gssapi	doc/Chapter4.html	/^<h2><a name="config-ssh-auth-gssapi"><\/a><a name="S4.23"><\/a>4.23 The <a name="i366"><\/a>GSSAPI panel<\/h2>$/;"	a
config-ssh-auth-gssapi-delegation	doc/Chapter4.html	/^<h3><a name="config-ssh-auth-gssapi-delegation"><\/a><a name="S4.23.1"><\/a>4.23.1 &#8216;Allow GSSAPI credential delegation&#8217;<\/h3>$/;"	a
config-ssh-auth-gssapi-libraries	doc/Chapter4.html	/^<h3><a name="config-ssh-auth-gssapi-libraries"><\/a><a name="S4.23.2"><\/a>4.23.2 Preference order for GSSAPI libraries<\/h3>$/;"	a
config-ssh-banner	doc/Chapter4.html	/^<h3><a name="config-ssh-banner"><\/a><a name="S4.22.1"><\/a>4.22.1 &#8216;Display pre-authentication banner&#8217;<\/h3>$/;"	a
config-ssh-bug-chanreq	doc/Chapter4.html	/^<h3><a name="config-ssh-bug-chanreq"><\/a><a name="S4.27.12"><\/a>4.27.12 &#8216;Replies to requests on closed channels&#8217;<\/h3>$/;"	a
config-ssh-bug-derivekey2	doc/Chapter4.html	/^<h3><a name="config-ssh-bug-derivekey2"><\/a><a name="S4.27.7"><\/a>4.27.7 &#8216;Miscomputes SSH-2 <a name="i418"><\/a>encryption keys&#8217;<\/h3>$/;"	a
config-ssh-bug-hmac2	doc/Chapter4.html	/^<h3><a name="config-ssh-bug-hmac2"><\/a><a name="S4.27.6"><\/a>4.27.6 &#8216;Miscomputes SSH-2 HMAC keys&#8217;<\/h3>$/;"	a
config-ssh-bug-ignore1	doc/Chapter4.html	/^<h3><a name="config-ssh-bug-ignore1"><\/a><a name="S4.27.1"><\/a>4.27.1 &#8216;Chokes on SSH-1 <a name="i408"><\/a>ignore messages&#8217;<\/h3>$/;"	a
config-ssh-bug-ignore2	doc/Chapter4.html	/^<h3><a name="config-ssh-bug-ignore2"><\/a><a name="S4.27.4"><\/a>4.27.4 &#8216;Chokes on SSH-2 <a name="i414"><\/a>ignore messages&#8217;<\/h3>$/;"	a
config-ssh-bug-maxpkt2	doc/Chapter4.html	/^<h3><a name="config-ssh-bug-maxpkt2"><\/a><a name="S4.27.11"><\/a>4.27.11 &#8216;Ignores SSH-2 <a name="i427"><\/a>maximum packet size&#8217;<\/h3>$/;"	a
config-ssh-bug-oldgex2	doc/Chapter4.html	/^<h3><a name="config-ssh-bug-oldgex2"><\/a><a name="S4.27.13"><\/a>4.27.13 &#8216;Only supports pre-RFC4419 SSH-2 DH GEX&#8217;<\/h3>$/;"	a
config-ssh-bug-pksessid2	doc/Chapter4.html	/^<h3><a name="config-ssh-bug-pksessid2"><\/a><a name="S4.27.9"><\/a>4.27.9 &#8216;Misuses the <a name="i423"><\/a>session ID in SSH-2 PK auth&#8217;<\/h3>$/;"	a
config-ssh-bug-plainpw1	doc/Chapter4.html	/^<h3><a name="config-ssh-bug-plainpw1"><\/a><a name="S4.27.2"><\/a>4.27.2 &#8216;Refuses all SSH-1 <a name="i411"><\/a>password camouflage&#8217;<\/h3>$/;"	a
config-ssh-bug-rekey	doc/Chapter4.html	/^<h3><a name="config-ssh-bug-rekey"><\/a><a name="S4.27.10"><\/a>4.27.10 &#8216;Handles SSH-2 key re-exchange badly&#8217;<\/h3>$/;"	a
config-ssh-bug-rsa1	doc/Chapter4.html	/^<h3><a name="config-ssh-bug-rsa1"><\/a><a name="S4.27.3"><\/a>4.27.3 &#8216;Chokes on SSH-1 <a name="i412"><\/a>RSA authentication&#8217;<\/h3>$/;"	a
config-ssh-bug-sig	doc/Chapter4.html	/^<h3><a name="config-ssh-bug-sig"><\/a><a name="S4.27.8"><\/a>4.27.8 &#8216;Requires padding on SSH-2 <a name="i420"><\/a>RSA <a name="i421"><\/a>signatures&#8217;<\/h3>$/;"	a
config-ssh-bug-winadj	doc/Chapter4.html	/^<h3><a name="config-ssh-bug-winadj"><\/a><a name="S4.27.5"><\/a>4.27.5 &#8216;Chokes on PuTTY's SSH-2 &#8216;<code>winadj<\/code>&#8217; requests&#8217;<\/h3>$/;"	a
config-ssh-bugs	doc/Chapter4.html	/^<h2><a name="config-ssh-bugs"><\/a><a name="S4.27"><\/a>4.27 <a name="i407"><\/a>The Bugs and More Bugs panels<\/h2>$/;"	a
config-ssh-changeuser	doc/Chapter4.html	/^<h3><a name="config-ssh-changeuser"><\/a><a name="S4.22.7"><\/a>4.22.7 &#8216;Allow attempted <a name="i360"><\/a>changes of username in SSH-2&#8217;<\/h3>$/;"	a
config-ssh-comp	doc/Chapter4.html	/^<h3><a name="config-ssh-comp"><\/a><a name="S4.18.3"><\/a>4.18.3 &#8216;Enable <a name="i311"><\/a>compression&#8217;<\/h3>$/;"	a
config-ssh-encryption	doc/Chapter4.html	/^<h2><a name="config-ssh-encryption"><\/a><a name="S4.21"><\/a>4.21 The Cipher panel<\/h2>$/;"	a
config-ssh-hostkey	doc/Chapter4.html	/^<h2><a name="config-ssh-hostkey"><\/a><a name="S4.20"><\/a>4.20 The Host Keys panel<\/h2>$/;"	a
config-ssh-hostkey-order	doc/Chapter4.html	/^<h3><a name="config-ssh-hostkey-order"><\/a><a name="S4.20.1"><\/a>4.20.1 <a name="i329"><\/a>Host key type selection<\/h3>$/;"	a
config-ssh-kex	doc/Chapter4.html	/^<h2><a name="config-ssh-kex"><\/a><a name="S4.19"><\/a>4.19 The Kex panel<\/h2>$/;"	a
config-ssh-kex-manual-hostkeys	doc/Chapter4.html	/^<h3><a name="config-ssh-kex-manual-hostkeys"><\/a><a name="S4.20.2"><\/a>4.20.2 <a name="i336"><\/a>Manually configuring host keys<\/h3>$/;"	a
config-ssh-kex-order	doc/Chapter4.html	/^<h3><a name="config-ssh-kex-order"><\/a><a name="S4.19.1"><\/a>4.19.1 <a name="i318"><\/a>Key exchange algorithm selection<\/h3>$/;"	a
config-ssh-kex-rekey	doc/Chapter4.html	/^<h3><a name="config-ssh-kex-rekey"><\/a><a name="S4.19.2"><\/a>4.19.2 <a name="i323"><\/a>Repeat key exchange<\/h3>$/;"	a
config-ssh-ki	doc/Chapter4.html	/^<h3><a name="config-ssh-ki"><\/a><a name="S4.22.5"><\/a>4.22.5 &#8216;Attempt <a name="i354"><\/a>keyboard-interactive authentication&#8217;<\/h3>$/;"	a
config-ssh-noauth	doc/Chapter4.html	/^<h3><a name="config-ssh-noauth"><\/a><a name="S4.22.2"><\/a>4.22.2 &#8216;Bypass authentication entirely&#8217;<\/h3>$/;"	a
config-ssh-noshell	doc/Chapter4.html	/^<h3><a name="config-ssh-noshell"><\/a><a name="S4.18.2"><\/a>4.18.2 &#8216;Don't start a <a name="i307"><\/a>shell or <a name="i308"><\/a>command at all&#8217;<\/h3>$/;"	a
config-ssh-portfwd	doc/Chapter4.html	/^<h2><a name="config-ssh-portfwd"><\/a><a name="S4.26"><\/a>4.26 <a name="i388"><\/a>The Tunnels panel<\/h2>$/;"	a
config-ssh-portfwd-address-family	doc/Chapter4.html	/^<h3><a name="config-ssh-portfwd-address-family"><\/a><a name="S4.26.2"><\/a>4.26.2 Selecting <a name="i403"><\/a>Internet protocol version for forwarded ports<\/h3>$/;"	a
config-ssh-portfwd-localhost	doc/Chapter4.html	/^<h3><a name="config-ssh-portfwd-localhost"><\/a><a name="S4.26.1"><\/a>4.26.1 Controlling the visibility of forwarded ports<\/h3>$/;"	a
config-ssh-privkey	doc/Chapter4.html	/^<h3><a name="config-ssh-privkey"><\/a><a name="S4.22.8"><\/a>4.22.8 &#8216;<a name="i362"><\/a>Private key file for authentication&#8217;<\/h3>$/;"	a
config-ssh-prot	doc/Chapter4.html	/^<h3><a name="config-ssh-prot"><\/a><a name="S4.18.4"><\/a>4.18.4 &#8216;<a name="i313"><\/a>SSH protocol version&#8217;<\/h3>$/;"	a
config-ssh-pty	doc/Chapter4.html	/^<h3><a name="config-ssh-pty"><\/a><a name="S4.24.1"><\/a>4.24.1 <a name="i372"><\/a>&#8216;Don't allocate a pseudo-terminal&#8217;<\/h3>$/;"	a
config-ssh-sharing	doc/Chapter4.html	/^<h3><a name="config-ssh-sharing"><\/a><a name="S4.18.5"><\/a>4.18.5 Sharing an SSH connection between PuTTY tools<\/h3>$/;"	a
config-ssh-tis	doc/Chapter4.html	/^<h3><a name="config-ssh-tis"><\/a><a name="S4.22.4"><\/a>4.22.4 &#8216;Attempt <a name="i348"><\/a>TIS or <a name="i349"><\/a>CryptoCard authentication&#8217;<\/h3>$/;"	a
config-ssh-tryagent	doc/Chapter4.html	/^<h3><a name="config-ssh-tryagent"><\/a><a name="S4.22.3"><\/a>4.22.3 &#8216;Attempt authentication using Pageant&#8217;<\/h3>$/;"	a
config-ssh-tty	doc/Chapter4.html	/^<h2><a name="config-ssh-tty"><\/a><a name="S4.24"><\/a>4.24 The TTY panel<\/h2>$/;"	a
config-ssh-x11	doc/Chapter4.html	/^<h2><a name="config-ssh-x11"><\/a><a name="S4.25"><\/a>4.25 The X11 panel<\/h2>$/;"	a
config-ssh-x11auth	doc/Chapter4.html	/^<h3><a name="config-ssh-x11auth"><\/a><a name="S4.25.1"><\/a>4.25.1 Remote <a name="i385"><\/a>X11 authentication<\/h3>$/;"	a
config-ssh-xauthority	doc/Chapter4.html	/^<h3><a name="config-ssh-xauthority"><\/a><a name="S4.25.2"><\/a>4.25.2 X authority file for local display<\/h3>$/;"	a
config-syscolour	doc/Chapter4.html	/^<h3><a name="config-syscolour"><\/a><a name="S4.12.5"><\/a>4.12.5 &#8216;Use <a name="i210"><\/a>system colours&#8217;<\/h3>$/;"	a
config-tcp-keepalives	doc/Chapter4.html	/^<h3><a name="config-tcp-keepalives"><\/a><a name="S4.13.3"><\/a>4.13.3 &#8216;Enable <a name="i231"><\/a>TCP keepalives&#8217;<\/h3>$/;"	a
config-telnet	doc/Chapter4.html	/^<h2><a name="config-telnet"><\/a><a name="S4.16"><\/a>4.16 The <a name="i281"><\/a>Telnet panel<\/h2>$/;"	a
config-telnetkey	doc/Chapter4.html	/^<h3><a name="config-telnetkey"><\/a><a name="S4.16.3"><\/a>4.16.3 &#8216;Keyboard sends <a name="i292"><\/a>Telnet special commands&#8217;<\/h3>$/;"	a
config-telnetnl	doc/Chapter4.html	/^<h3><a name="config-telnetnl"><\/a><a name="S4.16.4"><\/a>4.16.4 &#8216;Return key sends <a name="i296"><\/a>Telnet New Line instead of ^M&#8217;<\/h3>$/;"	a
config-terminal	doc/Chapter4.html	/^<h2><a name="config-terminal"><\/a><a name="S4.3"><\/a>4.3 The Terminal panel<\/h2>$/;"	a
config-termspeed	doc/Chapter4.html	/^<h3><a name="config-termspeed"><\/a><a name="S4.14.4"><\/a>4.14.4 &#8216;<a name="i253"><\/a>Terminal speeds&#8217;<\/h3>$/;"	a
config-termtype	doc/Chapter4.html	/^<h3><a name="config-termtype"><\/a><a name="S4.14.3"><\/a>4.14.3 &#8216;<a name="i244"><\/a>Terminal-type string&#8217;<\/h3>$/;"	a
config-title	doc/Chapter4.html	/^<h3><a name="config-title"><\/a><a name="S4.9.1"><\/a>4.9.1 Controlling the <a name="i136"><\/a>window title<\/h3>$/;"	a
config-translation	doc/Chapter4.html	/^<h2><a name="config-translation"><\/a><a name="S4.10"><\/a>4.10 The Translation panel<\/h2>$/;"	a
config-ttymodes	doc/Chapter4.html	/^<h3><a name="config-ttymodes"><\/a><a name="S4.24.2"><\/a>4.24.2 Sending <a name="i375"><\/a>terminal modes<\/h3>$/;"	a
config-username	doc/Chapter4.html	/^<h3><a name="config-username"><\/a><a name="S4.14.1"><\/a>4.14.1 &#8216;<a name="i241"><\/a>Auto-login username&#8217;<\/h3>$/;"	a
config-username-from-env	doc/Chapter4.html	/^<h3><a name="config-username-from-env"><\/a><a name="S4.14.2"><\/a>4.14.2 Use of system username<\/h3>$/;"	a
config-warnonclose	doc/Chapter4.html	/^<h3><a name="config-warnonclose"><\/a><a name="S4.9.2"><\/a>4.9.2 &#8216;Warn before <a name="i142"><\/a>closing window&#8217;<\/h3>$/;"	a
config-winborder	doc/Chapter4.html	/^<h3><a name="config-winborder"><\/a><a name="S4.8.4"><\/a>4.8.4 Controlling the <a name="i134"><\/a>window border<\/h3>$/;"	a
config-window	doc/Chapter4.html	/^<h2><a name="config-window"><\/a><a name="S4.7"><\/a>4.7 The Window panel<\/h2>$/;"	a
config-winsize	doc/Chapter4.html	/^<h3><a name="config-winsize"><\/a><a name="S4.7.1"><\/a>4.7.1 Setting the <a name="i117"><\/a>size of the PuTTY window<\/h3>$/;"	a
config-winsizelock	doc/Chapter4.html	/^<h3><a name="config-winsizelock"><\/a><a name="S4.7.2"><\/a>4.7.2 What to do when the window is resized<\/h3>$/;"	a
config-xtermcolour	doc/Chapter4.html	/^<h3><a name="config-xtermcolour"><\/a><a name="S4.12.2"><\/a>4.12.2 &#8216;Allow terminal to use xterm <a name="i202"><\/a>256-colour mode&#8217;<\/h3>$/;"	a
config_host_handler	config.c	/^static void config_host_handler(union control *ctrl, void *dlg,$/;"	f	file:
config_port_handler	config.c	/^static void config_port_handler(union control *ctrl, void *dlg,$/;"	f	file:
config_primary_key	putty.h	/^enum config_primary_key { CONFIG_OPTIONS(CONF_ENUM_DEF) N_CONFIG_OPTIONS };$/;"	g
config_protocolbuttons_handler	config.c	/^void config_protocolbuttons_handler(union control *ctrl, void *dlg,$/;"	f
configure_area	unix/gtkask.c	/^static gint configure_area(GtkWidget *widget, GdkEventConfigure *event,$/;"	f	file:
configure_area	unix/gtkwin.c	/^gint configure_area(GtkWidget *widget, GdkEventConfigure *event, gpointer data)$/;"	f
confrac	testdata/bignum.py	/^def confrac(n, d):$/;"	f
conftopalette	windows/window.c	/^static void conftopalette(void)$/;"	f	file:
conn_throttle_count	ssh.c	/^    int conn_throttle_count;$/;"	m	struct:ssh_tag	file:
connect_ovl	windows/winnps.c	/^    OVERLAPPED connect_ovl;$/;"	m	struct:Socket_named_pipe_server_tag	file:
connect_to_host	ssh.c	/^static const char *connect_to_host(Ssh ssh, const char *host, int port,$/;"	f	file:
connected	putty.h	/^    int (*connected) (void *handle);$/;"	m	struct:backend_tag
connected	unix/uxnet.c	/^    int connected;		       \/* irrelevant for listening sockets *\/$/;"	m	struct:Socket_tag	file:
connected	windows/winnet.c	/^    int connected;$/;"	m	struct:Socket_tag	file:
connection_fatal	pscp.c	/^void connection_fatal(void *frontend, const char *fmt, ...)$/;"	f
connection_fatal	psftp.c	/^void connection_fatal(void *frontend, const char *fmt, ...)$/;"	f
connection_fatal	unix/gtkwin.c	/^void connection_fatal(void *frontend, const char *p, ...)$/;"	f
connection_fatal	unix/uxpgnt.c	/^void connection_fatal(void *frontend, const char *p, ...)$/;"	f
connection_fatal	unix/uxplink.c	/^void connection_fatal(void *frontend, const char *p, ...)$/;"	f
connection_fatal	windows/window.c	/^void connection_fatal(void *frontend, const char *fmt, ...)$/;"	f
connection_fatal	windows/winplink.c	/^void connection_fatal(void *frontend, const char *p, ...)$/;"	f
connections	sshshare.c	/^    tree234 *connections;            \/* holds ssh_sharing_connstates *\/$/;"	m	struct:ssh_sharing_state	file:
connshare	ssh.c	/^    void *connshare;$/;"	m	struct:ssh_tag	file:
connsock	pageant.c	/^    Socket connsock;$/;"	m	struct:pageant_conn_state	file:
console_batch_mode	unix/uxcons.c	/^int console_batch_mode = FALSE;$/;"	v
console_batch_mode	windows/wincons.c	/^int console_batch_mode = FALSE;$/;"	v
console_close	unix/uxcons.c	/^static void console_close(FILE *outfp, int infd)$/;"	f	file:
console_data_untrusted	windows/wincons.c	/^static void console_data_untrusted(HANDLE hout, const char *data, int len)$/;"	f	file:
console_get_userpass_input	cmdgen.c	/^int console_get_userpass_input(prompts_t *p, unsigned char *in, int inlen)$/;"	f
console_get_userpass_input	cmdgen.c	46;"	d	file:
console_get_userpass_input	unix/uxcons.c	/^int console_get_userpass_input(prompts_t *p, const unsigned char *in,$/;"	f
console_get_userpass_input	windows/wincons.c	/^int console_get_userpass_input(prompts_t *p,$/;"	f
console_logctx	unix/uxcons.c	/^static void *console_logctx = NULL;$/;"	v	file:
console_logctx	windows/wincons.c	/^static void *console_logctx = NULL;$/;"	v	file:
console_open	unix/uxcons.c	/^static void console_open(FILE **outfp, int *infd)$/;"	f	file:
console_prompt_text	unix/uxcons.c	/^static void console_prompt_text(FILE *outfp, const char *data, int len)$/;"	f	file:
console_provide_logctx	unix/uxcons.c	/^void console_provide_logctx(void *logctx)$/;"	f
console_provide_logctx	windows/wincons.c	/^void console_provide_logctx(void *logctx)$/;"	f
const	contrib/make1305.py	/^    def const(self, value):$/;"	m	class:CodegenTarget
const_gss_OID	pgssapi.h	/^typedef const gss_OID_desc *const_gss_OID;$/;"	t
const_gss_OID	pgssapi.h	/^typedef gss_OID const_gss_OID;	       \/* for our prototypes below *\/$/;"	t
const_gss_OID_set	pgssapi.h	/^typedef const gss_OID_set_desc *const_gss_OID_set;$/;"	t
constkey	conf.c	/^struct constkey {$/;"	s	file:
construct_packet	ssh.c	/^static struct Packet *construct_packet(Ssh ssh, int pkttype, va_list ap)$/;"	f	file:
container	unix/gtkcols.h	/^    GtkContainer container;$/;"	m	struct:Columns_tag
container_remove_and_destroy	unix/gtkdlg.c	/^static void container_remove_and_destroy(GtkWidget *w, gpointer data)$/;"	f	file:
context	dialog.h	/^	intorptr context;$/;"	m	struct:control::__anon18
context	windows/wingss.c	/^    CtxtHandle context;$/;"	m	struct:winSsh_gss_ctx	file:
context2	dialog.h	/^	intorptr context2;$/;"	m	struct:control::__anon21
context_handle	windows/wingss.c	/^    PCtxtHandle context_handle;$/;"	m	struct:winSsh_gss_ctx	file:
control	dialog.h	/^union control {$/;"	u
controlbox	dialog.h	/^struct controlbox {$/;"	s
controlidstart	windows/winpgen.c	/^    controlidstart = 100,$/;"	e	enum:__anon142	file:
controlset	dialog.h	/^struct controlset {$/;"	s
controltrees	windows/winstuff.h	/^    struct winctrls *controltrees[8];  \/* can have several of these *\/$/;"	m	struct:dlgparam	typeref:struct:dlgparam::winctrls
cookie	contrib/samplekex.py	/^cookie = "".join([chr(random.randint(0,255)) for i in range(16)])$/;"	v
copy	ssh.h	/^    void *(*copy)(const void *);$/;"	m	struct:ssh_hash
copy_all_menuitem	unix/gtkwin.c	/^void copy_all_menuitem(GtkMenuItem *item, gpointer data)$/;"	f
copy_key	conf.c	/^static void copy_key(struct key *to, struct key *from)$/;"	f	file:
copy_termchar	terminal.c	/^static void copy_termchar(termline *destline, int x, termchar *src)$/;"	f	file:
copy_value	conf.c	/^static void copy_value(struct value *to, struct value *from, int type)$/;"	f	file:
copybn	sshbn.c	/^Bignum copybn(Bignum orig)$/;"	f
count	pgssapi.h	/^    size_t  count;$/;"	m	struct:gss_OID_set_desc_struct
count234	tree234.c	/^int count234(tree234 * t)$/;"	f
countnode234	tree234.c	/^static int countnode234(node234 * n)$/;"	f	file:
counts	tree234.c	/^    int counts[4];$/;"	m	struct:node234_Tag	file:
cp_enumerate	unix/uxucs.c	/^const char *cp_enumerate(int index)$/;"	f
cp_enumerate	windows/winucs.c	/^const char *cp_enumerate(int index)$/;"	f
cp_list	windows/winucs.c	/^static const struct cp_list_item cp_list[] = {$/;"	v	typeref:struct:cp_list_item	file:
cp_list_item	windows/winucs.c	/^struct cp_list_item {$/;"	s	file:
cp_name	unix/uxucs.c	/^const char *cp_name(int codepage)$/;"	f
cp_name	windows/winucs.c	/^const char *cp_name(int codepage)$/;"	f
cp_size	windows/winucs.c	/^    int cp_size;$/;"	m	struct:cp_list_item	file:
cp_table	windows/winucs.c	/^    const wchar_t *cp_table;$/;"	m	struct:cp_list_item	file:
cr	icons/mkicon.py	/^    cr = (0x80, 0x00, 0x00, 0xFF)$/;"	v
cr	unix/gtkfont.h	/^            cairo_t *cr;$/;"	m	struct:unifont_drawctx::__anon127::__anon129
crBegin	pageant.c	966;"	d	file:
crBegin	ssh.c	321;"	d	file:
crBegin	sshshare.c	1776;"	d	file:
crBeginState	ssh.c	322;"	d	file:
crFinish	ssh.c	328;"	d	file:
crFinishFree	ssh.c	330;"	d	file:
crFinishFreeV	ssh.c	331;"	d	file:
crFinishV	pageant.c	967;"	d	file:
crFinishV	ssh.c	329;"	d	file:
crFinishV	sshshare.c	1777;"	d	file:
crGetChar	pageant.c	968;"	d	file:
crGetChar	sshshare.c	1778;"	d	file:
crLine	pageant.c	/^    int crLine;            \/* for coroutine in pageant_conn_receive *\/$/;"	m	struct:pageant_conn_state	file:
crLine	sshshare.c	/^    int crLine;                        \/* coroutine state for share_receive *\/$/;"	m	struct:ssh_sharing_connstate	file:
crReturn	ssh.c	332;"	d	file:
crReturnV	ssh.c	336;"	d	file:
crState	ssh.c	327;"	d	file:
crStateP	ssh.c	323;"	d	file:
crStop	ssh.c	340;"	d	file:
crStopV	ssh.c	341;"	d	file:
crWaitUntil	ssh.c	342;"	d	file:
crWaitUntilV	ssh.c	343;"	d	file:
cr_lf_return	terminal.h	/^    int repeat_off, cr_lf_return;$/;"	m	struct:terminal_tag
crc32_compute	sshcrc.c	/^unsigned long crc32_compute(const void *buf, size_t len)$/;"	f
crc32_init	sshcrc.c	/^void crc32_init(void)$/;"	f
crc32_table	sshcrc.c	/^static const unsigned long crc32_table[256] = {$/;"	v	file:
crc32_table	sshcrc.c	/^static unsigned long crc32_table[256];$/;"	v	file:
crc32_update	sshcrc.c	/^unsigned long crc32_update(unsigned long crcword, const void *buf, size_t len)$/;"	f
crc_update	sshcrcda.c	/^static void crc_update(uint32 *a, void *b)$/;"	f	file:
crcda_ctx	ssh.c	/^    void *crcda_ctx;$/;"	m	struct:ssh_tag	file:
crcda_ctx	sshcrcda.c	/^struct crcda_ctx {$/;"	s	file:
crcda_free_context	sshcrcda.c	/^void crcda_free_context(void *handle)$/;"	f
crcda_make_context	sshcrcda.c	/^void *crcda_make_context(void)$/;"	f
create	unix/gtkfont.c	/^    unifont *(*create)(GtkWidget *widget, const char *name, int wide, int bold,$/;"	m	struct:unifont_vtable	file:
create_controls	windows/windlg.c	/^static void create_controls(HWND hwnd, char *path)$/;"	f	file:
create_devcpp_project	mkfiles.pl	/^    sub create_devcpp_project {$/;"	s
create_directory	unix/uxsftp.c	/^int create_directory(const char *name)$/;"	f
create_directory	windows/winsftp.c	/^int create_directory(const char *name)$/;"	f
create_fallback	unix/gtkfont.c	/^    unifont *(*create_fallback)(GtkWidget *widget, int height, int wide,$/;"	m	struct:unifont_vtable	file:
create_named_pipe	windows/winnps.c	/^static int create_named_pipe(Named_Pipe_Server_Socket ps, int first_instance)$/;"	f	file:
create_vc_project	mkfiles.pl	/^    sub create_vc_project {$/;"	s
create_vs_project	mkfiles.pl	/^    sub create_vs_project {$/;"	s
create_vs_solution	mkfiles.pl	/^    sub create_vs_solution {$/;"	s
createkey	ssh.h	/^    void *(*createkey) (const struct ssh_signkey *self,$/;"	m	struct:ssh_signkey
cred_handle	windows/wingss.c	/^    CredHandle cred_handle;$/;"	m	struct:winSsh_gss_ctx	file:
crhaslf	terminal.h	/^    int crhaslf;$/;"	m	struct:terminal_tag
cross_certifying	ssh.c	/^    int cross_certifying;$/;"	m	struct:ssh_tag	file:
crt_modpow	sshrsa.c	/^Bignum crt_modpow(Bignum base, Bignum exp, Bignum mod,$/;"	f
cs_cipher_ctx	ssh.c	/^    void *cs_cipher_ctx, *sc_cipher_ctx;$/;"	m	struct:ssh_tag	file:
cs_comp_ctx	ssh.c	/^    void *cs_comp_ctx, *sc_comp_ctx;$/;"	m	struct:ssh_tag	file:
cs_mac_ctx	ssh.c	/^    void *cs_mac_ctx, *sc_mac_ctx;$/;"	m	struct:ssh_tag	file:
cs_table	charset/slookup.c	/^static charset_spec const *const cs_table[] = {$/;"	v	file:
cscipher	ssh.c	/^    const struct ssh2_cipher *cscipher, *sccipher;$/;"	m	struct:ssh_tag	typeref:struct:ssh_tag::ssh2_cipher	file:
cscomp	ssh.c	/^    const struct ssh_compress *cscomp, *sccomp;$/;"	m	struct:ssh_tag	typeref:struct:ssh_tag::ssh_compress	file:
cset	terminal.h	/^    int cset;			       \/* 0 or 1: which char set *\/$/;"	m	struct:terminal_tag
cset_attr	terminal.h	/^    int cset_attr[2];$/;"	m	struct:terminal_tag
csmac	ssh.c	/^    const struct ssh_mac *csmac, *scmac;$/;"	m	struct:ssh_tag	typeref:struct:ssh_tag::ssh_mac	file:
csmac_etm	ssh.c	/^    int csmac_etm, scmac_etm;$/;"	m	struct:ssh_tag	file:
ctlpos	windows/winstuff.h	/^struct ctlpos {$/;"	s
ctlposinit	windows/winctrls.c	/^void ctlposinit(struct ctlpos *cp, HWND hwnd,$/;"	f
ctrl	dialog.h	/^	union control *ctrl;$/;"	m	struct:control::__anon19	typeref:union:control::__anon19::control
ctrl	unix/gtkdlg.c	/^    union control *ctrl;$/;"	m	struct:uctrl	typeref:union:uctrl::control	file:
ctrl	windows/winstuff.h	/^    union control *ctrl;$/;"	m	struct:winctrl	typeref:union:winctrl::control
ctrl_alloc	dialog.c	/^void *ctrl_alloc(struct controlbox *b, size_t size)$/;"	f
ctrl_alloc_with_free	dialog.c	/^void *ctrl_alloc_with_free(struct controlbox *b, size_t size,$/;"	f
ctrl_checkbox	dialog.c	/^union control *ctrl_checkbox(struct controlset *s, const char *label,$/;"	f
ctrl_columns	dialog.c	/^union control *ctrl_columns(struct controlset *s, int ncolumns, ...)$/;"	f
ctrl_combobox	dialog.c	/^union control *ctrl_combobox(struct controlset *s, const char *label,$/;"	f
ctrl_default_free	dialog.c	/^static void ctrl_default_free(void *p)$/;"	f	file:
ctrl_draglist	dialog.c	/^union control *ctrl_draglist(struct controlset *s, const char *label,$/;"	f
ctrl_droplist	dialog.c	/^union control *ctrl_droplist(struct controlset *s, const char *label,$/;"	f
ctrl_editbox	dialog.c	/^union control *ctrl_editbox(struct controlset *s, const char *label,$/;"	f
ctrl_filesel	dialog.c	/^union control *ctrl_filesel(struct controlset *s, const char *label,$/;"	f
ctrl_find_path	dialog.c	/^int ctrl_find_path(struct controlbox *b, const char *path, int index)$/;"	f
ctrl_find_set	dialog.c	/^static int ctrl_find_set(struct controlbox *b, const char *path, int start)$/;"	f	file:
ctrl_fontsel	dialog.c	/^union control *ctrl_fontsel(struct controlset *s, const char *label,$/;"	f
ctrl_free	dialog.c	/^void ctrl_free(union control *ctrl)$/;"	f
ctrl_free_box	dialog.c	/^void ctrl_free_box(struct controlbox *b)$/;"	f
ctrl_free_set	dialog.c	/^void ctrl_free_set(struct controlset *s)$/;"	f
ctrl_freefn_t	dialog.h	/^typedef void (*ctrl_freefn_t)(void *);    \/* used by ctrl_alloc_with_free *\/$/;"	t
ctrl_getset	dialog.c	/^struct controlset *ctrl_getset(struct controlbox *b, const char *path,$/;"	f
ctrl_listbox	dialog.c	/^union control *ctrl_listbox(struct controlset *s, const char *label,$/;"	f
ctrl_new	dialog.c	/^static union control *ctrl_new(struct controlset *s, int type,$/;"	f	file:
ctrl_new_box	dialog.c	/^struct controlbox *ctrl_new_box(void)$/;"	f
ctrl_path_compare	dialog.c	/^int ctrl_path_compare(const char *p1, const char *p2)$/;"	f
ctrl_path_elements	dialog.c	/^int ctrl_path_elements(const char *path)$/;"	f
ctrl_pushbutton	dialog.c	/^union control *ctrl_pushbutton(struct controlset *s, const char *label,$/;"	f
ctrl_radiobuttons	dialog.c	/^union control *ctrl_radiobuttons(struct controlset *s, const char *label,$/;"	f
ctrl_settitle	dialog.c	/^struct controlset *ctrl_settitle(struct controlbox *b,$/;"	f
ctrl_tabdelay	dialog.c	/^union control *ctrl_tabdelay(struct controlset *s, union control *ctrl)$/;"	f
ctrl_text	dialog.c	/^union control *ctrl_text(struct controlset *s, const char *text,$/;"	f
ctrlbox	windows/windlg.c	/^static struct controlbox *ctrlbox;$/;"	v	typeref:struct:controlbox	file:
ctrlparse	misc.c	/^char ctrlparse(char *s, char **next)$/;"	f
ctrls	dialog.h	/^    union control **ctrls;	       \/* actual array *\/$/;"	m	struct:controlset	typeref:union:controlset::control
ctrls_base	windows/windlg.c	/^static struct winctrls ctrls_base, ctrls_panel;$/;"	v	typeref:struct:winctrls	file:
ctrls_panel	windows/windlg.c	/^static struct winctrls ctrls_base, ctrls_panel;$/;"	v	typeref:struct:	file:
ctrlsets	dialog.h	/^    struct controlset **ctrlsets;      \/* actual array of ctrlsets *\/$/;"	m	struct:controlbox	typeref:struct:controlbox::controlset
ctrlsetsize	dialog.h	/^    int ctrlsetsize;		       \/* ctrlset size *\/$/;"	m	struct:controlbox
ctrlsize	dialog.h	/^    int ctrlsize;		       \/* allocated size of array *\/$/;"	m	struct:controlset
ctx	callback.c	/^    void *ctx;$/;"	m	struct:callback	file:
ctx	contrib/cygtermd/sel.c	/^    void *ctx;$/;"	m	struct:sel	file:
ctx	contrib/cygtermd/sel.c	/^    void *ctx;$/;"	m	struct:sel_rfd	file:
ctx	contrib/cygtermd/sel.c	/^    void *ctx;$/;"	m	struct:sel_wfd	file:
ctx	ssh.c	/^	    void *ctx;$/;"	m	struct:ssh_channel::__anon80::ssh_sharing_channel	file:
ctx	ssh.c	/^    void *ctx;$/;"	m	struct:outstanding_channel_request	file:
ctx	ssh.c	/^    void *ctx;$/;"	m	struct:queued_handler	file:
ctx	sshgssc.h	/^    gss_ctx_id_t ctx;$/;"	m	struct:gssapi_ssh_gss_ctx
ctx	timing.c	/^    void *ctx;$/;"	m	struct:timer	file:
ctx	windows/winhandl.c	/^    void *ctx;$/;"	m	struct:handle_foreign	file:
cumulative_scroll	unix/gtkwin.c	/^    gdouble cumulative_scroll;$/;"	m	struct:gui_data	file:
curr_attr	terminal.h	/^    int default_attr, curr_attr, save_attr;$/;"	m	struct:terminal_tag
curr_packetlen	sshshare.c	/^    int sent_verstring, got_verstring, curr_packetlen;$/;"	m	struct:ssh_sharing_connstate	file:
curr_prompt	terminal.c	/^    size_t curr_prompt;$/;"	m	struct:term_userpass_state	file:
curraddr	unix/uxnet.c	/^    int curraddr;$/;"	m	struct:SockAddrStep_tag	file:
curraddr	windows/winnet.c	/^    int curraddr;$/;"	m	struct:SockAddrStep_tag	file:
currcursor	unix/gtkwin.c	/^    GdkCursor *rawcursor, *textcursor, *blankcursor, *waitcursor, *currcursor;$/;"	m	struct:gui_data	file:
currdisttable	sshzlib.c	/^    struct zlib_table *currlentable, *currdisttable, *lenlentable;$/;"	m	struct:zlib_decompress_ctx	typeref:struct:zlib_decompress_ctx::	file:
current	cmdgen.c	/^    int phase, current;$/;"	m	struct:progress	file:
current	sshccp.c	/^    unsigned char current[64];$/;"	m	struct:chacha20	file:
current	unix/gtkask.c	/^    int width, height, current;$/;"	m	struct:drawing_area_ctx	file:
current	windows/winpgen.c	/^	unsigned param, current, n;    \/* if exponential *\/$/;"	m	struct:progress::__anon138	file:
currentIndex	sshccp.c	/^    int currentIndex;$/;"	m	struct:chacha20	file:
current_carry	contrib/make1305.py	/^    def current_carry(self):$/;"	m	class:CodegenTarget
current_cdi	unix/gtkwin.c	/^    struct clipboard_data_instance *current_cdi;$/;"	m	struct:gui_data	typeref:struct:gui_data::clipboard_data_instance	file:
currfocus	unix/gtkdlg.c	/^    union control *currfocus, *lastfocus;$/;"	m	struct:dlgparam	typeref:union:dlgparam::control	file:
currlentable	sshzlib.c	/^    struct zlib_table *currlentable, *currdisttable, *lenlentable;$/;"	m	struct:zlib_decompress_ctx	typeref:struct:zlib_decompress_ctx::zlib_table	file:
currlogfilename	logging.c	/^    Filename *currlogfilename;$/;"	m	struct:LogContext	file:
currtreeitem	unix/gtkdlg.c	/^    GtkWidget *currtreeitem, **treeitems;$/;"	m	struct:dlgparam	file:
curs	terminal.h	/^    pos curs;			       \/* cursor *\/$/;"	m	struct:terminal_tag
cursor_on	terminal.h	/^    int cursor_on;		       \/* cursor enabled flag *\/$/;"	m	struct:terminal_tag
cursor_type	unix/gtkwin.c	/^    int cursor_type;$/;"	m	struct:gui_data	file:
cursor_type	windows/window.c	/^int cursor_type;$/;"	v
curstype	terminal.h	/^    int curstype;		       \/* type of cursor on real screen *\/$/;"	m	struct:terminal_tag
curve	ssh.h	/^    const struct ec_curve *curve;$/;"	m	struct:ec_point	typeref:struct:ec_point::ec_curve
curve	sshecc.c	/^    struct ec_curve *(*curve)(void);$/;"	m	struct:eckex_extra	typeref:struct:eckex_extra::curve	file:
curve	sshecc.c	/^    struct ec_curve *(*curve)(void);$/;"	m	struct:ecsign_extra	typeref:struct:ecsign_extra::curve	file:
curve_bits	windows/winpgen.c	/^    int curve_bits;                    \/* bits in elliptic curve (ECDSA) *\/$/;"	m	struct:rsa_key_thread_params	file:
curve_bits	windows/winpgen.c	/^    int key_bits, curve_bits;$/;"	m	struct:MainDlgState	file:
cvtmenu	windows/winpgen.c	/^    HMENU filemenu, keymenu, cvtmenu;$/;"	m	struct:MainDlgState	file:
cw	icons/mkicon.py	/^    cw = (0x80, 0x80, 0x80, 0xFF)$/;"	v
cwd	windows/winutils.c	/^    TCHAR cwd[MAX_PATH];$/;"	m	struct:filereq_tag	file:
cy	icons/mkicon.py	/^    cy = (0x80, 0x80, 0x00, 0xFF)$/;"	v
d	ssh.h	/^    Bignum l, d;$/;"	m	struct:ec_ecurve
d	testdata/bignum.py	/^            d = sqrt(3<<(2*dsize)) + (dprefix<<dsize)$/;"	v
daddr	ssh.c	/^    char *saddr, *daddr;$/;"	m	struct:ssh_portfwd	file:
dark	icons/mkicon.py	/^    def dark(value):$/;"	f
data	charset/internal.h	/^    void const *data;$/;"	m	struct:charset_spec
data	icons/macicon.py	/^data = ""$/;"	v
data	icons/macicon.py	/^data = make_chunk("icns", data)$/;"	v
data	putty.h	/^    void *data;		\/* slot for housekeeping data, managed by$/;"	m	struct:__anon67
data	sftp.c	/^    char *data;$/;"	m	struct:sftp_packet	file:
data	ssh.c	/^    unsigned char *data;    \/* allocated storage *\/$/;"	m	struct:Packet	file:
data	ssh.h	/^    unsigned char *data;$/;"	m	struct:X11FakeAuth
data	ssh.h	/^    void *data;			       \/* the key data *\/$/;"	m	struct:ssh2_userkey
data	sshshare.c	/^    unsigned char *data;$/;"	m	struct:share_xchannel_message	file:
data	sshzlib.c	/^    unsigned char data[WINSIZE];$/;"	m	struct:LZ77InternalContext	file:
data	terminal.c	/^    unsigned char *data;$/;"	m	struct:buf	file:
data	unix/gtkdlg.c	/^    void *data;$/;"	m	struct:dlgparam	file:
data	windows/window.c	/^    void *data;$/;"	m	struct:agent_callback	file:
data	windows/winplink.c	/^    void *data;$/;"	m	struct:agent_callback	file:
data	windows/winstuff.h	/^    void *data;			       \/* data to pass in refresh events *\/$/;"	m	struct:dlgparam
data	windows/winstuff.h	/^    void *data;$/;"	m	struct:winctrl
data_CS_CP1250	charset/sbcsdat.c	/^static const sbcs_data data_CS_CP1250 = {$/;"	v	file:
data_CS_CP1251	charset/sbcsdat.c	/^static const sbcs_data data_CS_CP1251 = {$/;"	v	file:
data_CS_CP1252	charset/sbcsdat.c	/^static const sbcs_data data_CS_CP1252 = {$/;"	v	file:
data_CS_CP1253	charset/sbcsdat.c	/^static const sbcs_data data_CS_CP1253 = {$/;"	v	file:
data_CS_CP1254	charset/sbcsdat.c	/^static const sbcs_data data_CS_CP1254 = {$/;"	v	file:
data_CS_CP1255	charset/sbcsdat.c	/^static const sbcs_data data_CS_CP1255 = {$/;"	v	file:
data_CS_CP1256	charset/sbcsdat.c	/^static const sbcs_data data_CS_CP1256 = {$/;"	v	file:
data_CS_CP1257	charset/sbcsdat.c	/^static const sbcs_data data_CS_CP1257 = {$/;"	v	file:
data_CS_CP1258	charset/sbcsdat.c	/^static const sbcs_data data_CS_CP1258 = {$/;"	v	file:
data_CS_CP437	charset/sbcsdat.c	/^static const sbcs_data data_CS_CP437 = {$/;"	v	file:
data_CS_CP850	charset/sbcsdat.c	/^static const sbcs_data data_CS_CP850 = {$/;"	v	file:
data_CS_CP852	charset/sbcsdat.c	/^static const sbcs_data data_CS_CP852 = {$/;"	v	file:
data_CS_CP866	charset/sbcsdat.c	/^static const sbcs_data data_CS_CP866 = {$/;"	v	file:
data_CS_DEC_MCS	charset/sbcsdat.c	/^static const sbcs_data data_CS_DEC_MCS = {$/;"	v	file:
data_CS_HP_ROMAN8	charset/sbcsdat.c	/^static const sbcs_data data_CS_HP_ROMAN8 = {$/;"	v	file:
data_CS_ISO8859_1	charset/sbcsdat.c	/^static const sbcs_data data_CS_ISO8859_1 = {$/;"	v	file:
data_CS_ISO8859_10	charset/sbcsdat.c	/^static const sbcs_data data_CS_ISO8859_10 = {$/;"	v	file:
data_CS_ISO8859_11	charset/sbcsdat.c	/^static const sbcs_data data_CS_ISO8859_11 = {$/;"	v	file:
data_CS_ISO8859_13	charset/sbcsdat.c	/^static const sbcs_data data_CS_ISO8859_13 = {$/;"	v	file:
data_CS_ISO8859_14	charset/sbcsdat.c	/^static const sbcs_data data_CS_ISO8859_14 = {$/;"	v	file:
data_CS_ISO8859_15	charset/sbcsdat.c	/^static const sbcs_data data_CS_ISO8859_15 = {$/;"	v	file:
data_CS_ISO8859_16	charset/sbcsdat.c	/^static const sbcs_data data_CS_ISO8859_16 = {$/;"	v	file:
data_CS_ISO8859_1_X11	charset/sbcsdat.c	/^static const sbcs_data data_CS_ISO8859_1_X11 = {$/;"	v	file:
data_CS_ISO8859_2	charset/sbcsdat.c	/^static const sbcs_data data_CS_ISO8859_2 = {$/;"	v	file:
data_CS_ISO8859_3	charset/sbcsdat.c	/^static const sbcs_data data_CS_ISO8859_3 = {$/;"	v	file:
data_CS_ISO8859_4	charset/sbcsdat.c	/^static const sbcs_data data_CS_ISO8859_4 = {$/;"	v	file:
data_CS_ISO8859_5	charset/sbcsdat.c	/^static const sbcs_data data_CS_ISO8859_5 = {$/;"	v	file:
data_CS_ISO8859_6	charset/sbcsdat.c	/^static const sbcs_data data_CS_ISO8859_6 = {$/;"	v	file:
data_CS_ISO8859_7	charset/sbcsdat.c	/^static const sbcs_data data_CS_ISO8859_7 = {$/;"	v	file:
data_CS_ISO8859_8	charset/sbcsdat.c	/^static const sbcs_data data_CS_ISO8859_8 = {$/;"	v	file:
data_CS_ISO8859_9	charset/sbcsdat.c	/^static const sbcs_data data_CS_ISO8859_9 = {$/;"	v	file:
data_CS_KOI8_R	charset/sbcsdat.c	/^static const sbcs_data data_CS_KOI8_R = {$/;"	v	file:
data_CS_KOI8_U	charset/sbcsdat.c	/^static const sbcs_data data_CS_KOI8_U = {$/;"	v	file:
data_CS_MAC_CENTEURO	charset/sbcsdat.c	/^static const sbcs_data data_CS_MAC_CENTEURO = {$/;"	v	file:
data_CS_MAC_CROATIAN	charset/sbcsdat.c	/^static const sbcs_data data_CS_MAC_CROATIAN = {$/;"	v	file:
data_CS_MAC_CROATIAN_OLD	charset/sbcsdat.c	/^static const sbcs_data data_CS_MAC_CROATIAN_OLD = {$/;"	v	file:
data_CS_MAC_CYRILLIC	charset/sbcsdat.c	/^static const sbcs_data data_CS_MAC_CYRILLIC = {$/;"	v	file:
data_CS_MAC_CYRILLIC_OLD	charset/sbcsdat.c	/^static const sbcs_data data_CS_MAC_CYRILLIC_OLD = {$/;"	v	file:
data_CS_MAC_DINGBATS	charset/sbcsdat.c	/^static const sbcs_data data_CS_MAC_DINGBATS = {$/;"	v	file:
data_CS_MAC_GREEK	charset/sbcsdat.c	/^static const sbcs_data data_CS_MAC_GREEK = {$/;"	v	file:
data_CS_MAC_GREEK_OLD	charset/sbcsdat.c	/^static const sbcs_data data_CS_MAC_GREEK_OLD = {$/;"	v	file:
data_CS_MAC_ICELAND	charset/sbcsdat.c	/^static const sbcs_data data_CS_MAC_ICELAND = {$/;"	v	file:
data_CS_MAC_ICELAND_OLD	charset/sbcsdat.c	/^static const sbcs_data data_CS_MAC_ICELAND_OLD = {$/;"	v	file:
data_CS_MAC_ROMAN	charset/sbcsdat.c	/^static const sbcs_data data_CS_MAC_ROMAN = {$/;"	v	file:
data_CS_MAC_ROMANIAN	charset/sbcsdat.c	/^static const sbcs_data data_CS_MAC_ROMANIAN = {$/;"	v	file:
data_CS_MAC_ROMANIAN_OLD	charset/sbcsdat.c	/^static const sbcs_data data_CS_MAC_ROMANIAN_OLD = {$/;"	v	file:
data_CS_MAC_ROMAN_OLD	charset/sbcsdat.c	/^static const sbcs_data data_CS_MAC_ROMAN_OLD = {$/;"	v	file:
data_CS_MAC_SYMBOL	charset/sbcsdat.c	/^static const sbcs_data data_CS_MAC_SYMBOL = {$/;"	v	file:
data_CS_MAC_THAI	charset/sbcsdat.c	/^static const sbcs_data data_CS_MAC_THAI = {$/;"	v	file:
data_CS_MAC_TURKISH	charset/sbcsdat.c	/^static const sbcs_data data_CS_MAC_TURKISH = {$/;"	v	file:
data_CS_MAC_UKRAINE	charset/sbcsdat.c	/^static const sbcs_data data_CS_MAC_UKRAINE = {$/;"	v	file:
data_CS_MAC_VT100	charset/sbcsdat.c	/^static const sbcs_data data_CS_MAC_VT100 = {$/;"	v	file:
data_CS_MAC_VT100_OLD	charset/sbcsdat.c	/^static const sbcs_data data_CS_MAC_VT100_OLD = {$/;"	v	file:
data_CS_VISCII	charset/sbcsdat.c	/^static const sbcs_data data_CS_VISCII = {$/;"	v	file:
data_read	x11fwd.c	/^    int data_read, auth_plen, auth_psize, auth_dlen, auth_dsize;$/;"	m	struct:X11Connection	file:
datadir	Makefile	/^datadir = ${datarootdir}$/;"	m
datalen	ssh.h	/^    int datalen;$/;"	m	struct:X11FakeAuth
datalen	sshshare.c	/^    int datalen;$/;"	m	struct:share_xchannel_message	file:
datarootdir	Makefile	/^datarootdir = ${prefix}\/share$/;"	m
datastring	ssh.h	/^    char *datastring;$/;"	m	struct:X11FakeAuth
dbcs_screenfont	putty.h	/^    int dbcs_screenfont;$/;"	m	struct:unicode_data
dbltime	windows/window.c	/^static int dbltime, lasttime, lastact;$/;"	v	file:
deactivate_option	contrib/cygtermd/telnet.c	/^static void deactivate_option(Telnet telnet, const struct Opt *o)$/;"	f	file:
deactivate_option	telnet.c	/^static void deactivate_option(Telnet telnet, const struct Opt *o)$/;"	f	file:
debug	misc.h	139;"	d
debug	misc.h	143;"	d
debug_fp	unix/uxmisc.c	/^static FILE *debug_fp = NULL;$/;"	v	file:
debug_fp	windows/winmisc.c	/^static FILE *debug_fp = NULL;$/;"	v	file:
debug_got_console	windows/winmisc.c	/^static int debug_got_console = 0;$/;"	v	file:
debug_hdl	windows/winmisc.c	/^static HANDLE debug_hdl = INVALID_HANDLE_VALUE;$/;"	v	file:
debug_memdump	misc.c	/^void debug_memdump(const void *buf, int len, int L)$/;"	f
debug_printf	misc.c	/^void debug_printf(const char *fmt, ...)$/;"	f
dec_mcs	windows/winucs.c	/^static const wchar_t dec_mcs[] = {$/;"	v	file:
dec_om	terminal.h	/^    int dec_om;			       \/* DEC origin mode flag *\/$/;"	m	struct:terminal_tag
decbn	sshbn.c	/^void decbn(Bignum bn)$/;"	f
decode_codepage	unix/uxucs.c	/^int decode_codepage(char *cp_name)$/;"	f
decode_codepage	windows/winucs.c	/^int decode_codepage(char *cp_name)$/;"	f
decode_uint32	contrib/encodelib.py	/^def decode_uint32(s):$/;"	f
decodepoint	sshecc.c	/^static int decodepoint(const char *p, int length, struct ec_point *point)$/;"	f	file:
decodepoint_ed	sshecc.c	/^static int decodepoint_ed(const char *p, int length, struct ec_point *point)$/;"	f	file:
decompress	ssh.h	/^    int (*decompress) (void *, unsigned char *block, int len,$/;"	m	struct:ssh_compress
decompress_cleanup	ssh.h	/^    void (*decompress_cleanup) (void *);$/;"	m	struct:ssh_compress
decompress_init	ssh.h	/^    void *(*decompress_init) (void);$/;"	m	struct:ssh_compress
decompressline	terminal.c	/^static termline *decompressline(unsigned char *data, int *bytes_used)$/;"	f	file:
decpos	terminal.c	25;"	d	file:
decrypt	ssh.h	/^    void (*decrypt) (void *, unsigned char *blk, int len);$/;"	m	struct:ssh2_cipher
decrypt	ssh.h	/^    void (*decrypt) (void *, unsigned char *blk, int len);$/;"	m	struct:ssh_cipher
decrypt	sshaes.c	/^    void (*decrypt) (AESContext * ctx, word32 * block);$/;"	m	struct:AESContext	file:
decrypt_length	ssh.h	/^    void (*decrypt_length) (void *, unsigned char *blk, int len, unsigned long seq);$/;"	m	struct:ssh2_cipher
def	mkfiles.pl	/^sub def {$/;"	s
def	terminal.h	174;"	d
default_attr	terminal.h	/^    int default_attr, curr_attr, save_attr;$/;"	m	struct:terminal_tag
default_port	putty.h	/^    int default_port;$/;"	m	struct:backend_tag
default_port	putty.h	/^GLOBAL int default_port;$/;"	v
default_protocol	putty.h	/^GLOBAL int default_protocol;$/;"	v
defer_close	windows/winhsock.c	/^    int defer_close, deferred_close;   \/* in case of re-entrance *\/$/;"	m	struct:Socket_handle_tag	file:
defer_packet	ssh.c	/^static void defer_packet(Ssh ssh, int pkttype, ...)$/;"	f	file:
deferred_close	windows/winhsock.c	/^    int defer_close, deferred_close;   \/* in case of re-entrance *\/$/;"	m	struct:Socket_handle_tag	file:
deferred_data_size	ssh.c	/^    unsigned long incoming_data_size, outgoing_data_size, deferred_data_size;$/;"	m	struct:ssh_tag	file:
deferred_len	ssh.c	/^    int deferred_len, deferred_size;$/;"	m	struct:ssh_tag	file:
deferred_rekey_reason	ssh.c	/^    const char *deferred_rekey_reason;$/;"	m	struct:ssh_tag	file:
deferred_send_data	ssh.c	/^    unsigned char *deferred_send_data;$/;"	m	struct:ssh_tag	file:
deferred_size	ssh.c	/^    int deferred_len, deferred_size;$/;"	m	struct:ssh_tag	file:
defpal	windows/window.c	/^static RGBTRIPLE defpal[NALLCOLOURS];$/;"	v	file:
defunct	windows/winhandl.c	/^    int defunct;		       \/* has the subthread already gone? *\/$/;"	m	struct:handle_foreign	file:
defunct	windows/winhandl.c	/^    int defunct;		       \/* has the subthread already gone? *\/$/;"	m	struct:handle_generic	file:
defunct	windows/winhandl.c	/^    int defunct;		       \/* has the subthread already gone? *\/$/;"	m	struct:handle_input	file:
defunct	windows/winhandl.c	/^    int defunct;		       \/* has the subthread already gone? *\/$/;"	m	struct:handle_output	file:
defuse_showwindow	windows/windlg.c	/^void defuse_showwindow(void)$/;"	f
deinit_fonts	windows/window.c	/^static void deinit_fonts(void)$/;"	f	file:
del234	tree234.c	/^void *del234(tree234 * t, void *e)$/;"	f
del_settings	unix/uxstore.c	/^void del_settings(const char *sessionname)$/;"	f
del_settings	windows/winstore.c	/^void del_settings(const char *sessionname)$/;"	f
delayed_name	ssh.h	/^    const char *delayed_name;$/;"	m	struct:ssh_compress
delbutton	config.c	/^    union control *editbox, *listbox, *loadbutton, *savebutton, *delbutton;$/;"	m	struct:sessionsaver_data	typeref:union:sessionsaver_data::	file:
delete_sec_context	pgssapi.h	/^    t_gss_delete_sec_context delete_sec_context;$/;"	m	struct:gssapi_functions
delete_window	unix/gtkwin.c	/^gint delete_window(GtkWidget *widget, GdkEvent *event, gpointer data)$/;"	f
delpos234	tree234.c	/^void *delpos234(tree234 * t, int index)$/;"	f
delpos234_internal	tree234.c	/^static void *delpos234_internal(tree234 * t, int index)$/;"	f	file:
delpostest	tree234.c	/^void delpostest(int i)$/;"	f
deltest	tree234.c	/^void deltest(void *elem)$/;"	f
depcomp	Makefile	/^depcomp = $(SHELL) $(top_srcdir)\/depcomp$/;"	m
deps	mkfiles.pl	/^sub deps {$/;"	s
depth	unix/gtkdlg.c	/^    int depth;$/;"	m	struct:selparam	file:
des3_decrypt_blk	sshdes.c	/^static void des3_decrypt_blk(void *handle, unsigned char *blk, int len)$/;"	f	file:
des3_decrypt_pubkey	sshdes.c	/^void des3_decrypt_pubkey(unsigned char *key, unsigned char *blk, int len)$/;"	f
des3_decrypt_pubkey_ossh	sshdes.c	/^void des3_decrypt_pubkey_ossh(unsigned char *key, unsigned char *iv,$/;"	f
des3_encrypt_blk	sshdes.c	/^static void des3_encrypt_blk(void *handle, unsigned char *blk, int len)$/;"	f	file:
des3_encrypt_pubkey	sshdes.c	/^void des3_encrypt_pubkey(unsigned char *key, unsigned char *blk, int len)$/;"	f
des3_encrypt_pubkey_ossh	sshdes.c	/^void des3_encrypt_pubkey_ossh(unsigned char *key, unsigned char *iv,$/;"	f
des3_free_context	sshdes.c	/^static void des3_free_context(void *handle)   \/* used for both 3DES and DES *\/$/;"	f	file:
des3_iv	sshdes.c	/^static void des3_iv(void *handle, unsigned char *key)$/;"	f	file:
des3_key	sshdes.c	/^static void des3_key(void *handle, unsigned char *key)$/;"	f	file:
des3_list	sshdes.c	/^static const struct ssh2_cipher *const des3_list[] = {$/;"	v	file:
des3_make_context	sshdes.c	/^static void *des3_make_context(void)$/;"	f	file:
des3_sesskey	sshdes.c	/^static void des3_sesskey(void *handle, unsigned char *key)$/;"	f	file:
des3_ssh1_make_context	sshdes.c	/^static void *des3_ssh1_make_context(void)$/;"	f	file:
des3_ssh2_decrypt_blk	sshdes.c	/^static void des3_ssh2_decrypt_blk(void *handle, unsigned char *blk, int len)$/;"	f	file:
des3_ssh2_encrypt_blk	sshdes.c	/^static void des3_ssh2_encrypt_blk(void *handle, unsigned char *blk, int len)$/;"	f	file:
des3_ssh2_sdctr	sshdes.c	/^static void des3_ssh2_sdctr(void *handle, unsigned char *blk, int len)$/;"	f	file:
des_3cbc_decrypt	sshdes.c	/^static void des_3cbc_decrypt(unsigned char *blk,$/;"	f	file:
des_3cbc_encrypt	sshdes.c	/^static void des_3cbc_encrypt(unsigned char *blk,$/;"	f	file:
des_cbc3_decrypt	sshdes.c	/^static void des_cbc3_decrypt(unsigned char *blk,$/;"	f	file:
des_cbc3_encrypt	sshdes.c	/^static void des_cbc3_encrypt(unsigned char *blk,$/;"	f	file:
des_cbc_decrypt	sshdes.c	/^static void des_cbc_decrypt(unsigned char *blk,$/;"	f	file:
des_cbc_encrypt	sshdes.c	/^static void des_cbc_encrypt(unsigned char *blk,$/;"	f	file:
des_decipher	sshdes.c	/^static void des_decipher(word32 * output, word32 L, word32 R,$/;"	f	file:
des_decrypt_blk	sshdes.c	/^static void des_decrypt_blk(void *handle, unsigned char *blk, int len)$/;"	f	file:
des_decrypt_xdmauth	sshdes.c	/^void des_decrypt_xdmauth(const unsigned char *keydata,$/;"	f
des_encipher	sshdes.c	/^static void des_encipher(word32 * output, word32 L, word32 R,$/;"	f	file:
des_encrypt_blk	sshdes.c	/^static void des_encrypt_blk(void *handle, unsigned char *blk, int len)$/;"	f	file:
des_encrypt_xdmauth	sshdes.c	/^void des_encrypt_xdmauth(const unsigned char *keydata,$/;"	f
des_key	sshdes.c	/^static void des_key(void *handle, unsigned char *key)$/;"	f	file:
des_key_setup	sshdes.c	/^static void des_key_setup(word32 key_msw, word32 key_lsw, DESContext * sched)$/;"	f	file:
des_keysetup_xdmauth	sshdes.c	/^static void des_keysetup_xdmauth(const unsigned char *keydata, DESContext *dc)$/;"	f	file:
des_list	sshdes.c	/^static const struct ssh2_cipher *const des_list[] = {$/;"	v	file:
des_make_context	sshdes.c	/^static void *des_make_context(void)$/;"	f	file:
des_sdctr3	sshdes.c	/^static void des_sdctr3(unsigned char *blk,$/;"	f	file:
des_sesskey	sshdes.c	/^static void des_sesskey(void *handle, unsigned char *key)$/;"	f	file:
des_ssh1_make_context	sshdes.c	/^static void *des_ssh1_make_context(void)$/;"	f	file:
des_ssh2_decrypt_blk	sshdes.c	/^static void des_ssh2_decrypt_blk(void *handle, unsigned char *blk, int len)$/;"	f	file:
des_ssh2_encrypt_blk	sshdes.c	/^static void des_ssh2_encrypt_blk(void *handle, unsigned char *blk, int len)$/;"	f	file:
desc	unix/gtkfont.c	/^    PangoFontDescription *desc;$/;"	m	struct:pangofont	file:
descent	unix/gtkfont.h	/^    int width, height, ascent, descent;$/;"	m	struct:unifont
descent	windows/window.c	/^static int descent;$/;"	v	file:
deselect	terminal.c	/^static void deselect(Terminal *term)$/;"	f	file:
dest_is_dir	psftp.c	/^    int dest_is_dir;$/;"	m	struct:sftp_context_mv	file:
destbox	config.c	/^    union control *sourcebox, *destbox, *direction;$/;"	m	struct:portfwd_data	typeref:union:portfwd_data::	file:
destroy	unix/gtkfont.c	/^    void (*destroy)(unifont *font);$/;"	m	struct:unifont_vtable	file:
destroy	unix/gtkwin.c	/^void destroy(GtkWidget *widget, gpointer data)$/;"	f
detect_attack	sshcrcda.c	/^int detect_attack(void *handle, uchar *buf, uint32 len, uchar *IV)$/;"	f
dh_cleanup	sshdh.c	/^void dh_cleanup(void *handle)$/;"	f
dh_create_e	sshdh.c	/^Bignum dh_create_e(void *handle, int nbits)$/;"	f
dh_ctx	sshdh.c	/^struct dh_ctx {$/;"	s	file:
dh_extra	sshdh.c	/^struct dh_extra {$/;"	s	file:
dh_find_K	sshdh.c	/^Bignum dh_find_K(void *handle, Bignum f)$/;"	f
dh_init	sshdh.c	/^static void dh_init(struct dh_ctx *ctx)$/;"	f	file:
dh_is_gex	sshdh.c	/^int dh_is_gex(const struct ssh_kex *kex)$/;"	f
dh_setup_gex	sshdh.c	/^void *dh_setup_gex(Bignum pval, Bignum gval)$/;"	f
dh_setup_group	sshdh.c	/^void *dh_setup_group(const struct ssh_kex *kex)$/;"	f
dh_validate_f	sshdh.c	/^const char *dh_validate_f(void *handle, Bignum f)$/;"	f
dhost	ssh.c	/^    char *shost, *dhost;$/;"	m	struct:ssh_rportfwd	file:
diagbn	sshbn.c	/^void diagbn(char *prefix, Bignum md)$/;"	f
dialog	unix/gtkask.c	/^    GtkWidget *dialog, *promptlabel;$/;"	m	struct:askpass_ctx	file:
dialog	windows/winpgen.c	/^    HWND dialog;		       \/* notify this on completion *\/$/;"	m	struct:rsa_key_thread_params	file:
dir	unix/uxsftp.c	/^    DIR *dir;$/;"	m	struct:DirHandle	file:
dir_file_cat	unix/uxsftp.c	/^char *dir_file_cat(const char *dir, const char *file)$/;"	f
dir_file_cat	windows/winsftp.c	/^char *dir_file_cat(const char *dir, const char *file)$/;"	f
direct_to_font	unix/gtkwin.c	/^    int direct_to_font;$/;"	m	struct:gui_data	file:
direction	config.c	/^    union control *sourcebox, *destbox, *direction;$/;"	m	struct:portfwd_data	typeref:union:portfwd_data::	file:
dirh	psftp.c	/^    struct fxp_handle *dirh;$/;"	m	struct:SftpWildcardMatcher	typeref:struct:SftpWildcardMatcher::fxp_handle	file:
dirname_wrapper	unix/osxlaunch.c	/^char *dirname_wrapper(const char *path)$/;"	f
dirpath	pscp.c	/^    char *dirpath;$/;"	m	struct:scp_sftp_dirstack	file:
dirpfx	mkfiles.pl	/^sub dirpfx {$/;"	s
disable_compression	ssh.h	/^    int (*disable_compression) (void *);$/;"	m	struct:ssh_compress
disp	ssh.h	/^    struct X11Display *disp;$/;"	m	struct:X11FakeAuth	typeref:struct:X11FakeAuth::X11Display
disp	x11fwd.c	/^    struct X11Display *disp;$/;"	m	struct:X11Connection	typeref:struct:X11Connection::X11Display	file:
dispcursx	terminal.h	/^    int dispcursx, dispcursy;	       \/* location of cursor on real screen *\/$/;"	m	struct:terminal_tag
dispcursy	terminal.h	/^    int dispcursx, dispcursy;	       \/* location of cursor on real screen *\/$/;"	m	struct:terminal_tag
display	unix/uxpgnt.c	/^const char *display = NULL;$/;"	v
display	unix/x11misc.c	/^    Display *display;$/;"	m	struct:x11_err_to_ignore	file:
display_status	pgssapi.h	/^    t_gss_display_status display_status;$/;"	m	struct:gssapi_functions
display_status	sshgss.h	/^    t_ssh_gss_display_status display_status;$/;"	m	struct:ssh_gss_library
displaynum	ssh.h	/^    int displaynum;$/;"	m	struct:X11Display
disptext	terminal.h	/^    termline **disptext;	       \/* buffer of text on real screen *\/$/;"	m	struct:terminal_tag
disptop	terminal.h	/^    int disptop;		       \/* distance scrolled back (0 or -ve) *\/$/;"	m	struct:terminal_tag
distance	sshzlib.c	/^    int distance, len;$/;"	m	struct:Match	file:
distcleancheck_listfiles	Makefile	/^distcleancheck_listfiles = find . -type f -print$/;"	m
distcodes	sshzlib.c	/^static const coderecord distcodes[] = {$/;"	v	file:
distdir	Makefile	/^distdir = $(PACKAGE)-$(VERSION)$/;"	m
distuninstallcheck_listfiles	Makefile	/^distuninstallcheck_listfiles = find . -type f -print$/;"	m
divisor	windows/winpgen.c	/^    unsigned total, divisor, range;$/;"	m	struct:progress	file:
dlg_add_uctrl	unix/gtkdlg.c	/^static void dlg_add_uctrl(struct dlgparam *dp, struct uctrl *uc)$/;"	f	file:
dlg_auto_set_fixed_pitch_flag	windows/winctrls.c	/^void dlg_auto_set_fixed_pitch_flag(void *dlg)$/;"	f
dlg_beep	fuzzterm.c	/^void dlg_beep(void *dlg) { }$/;"	f
dlg_beep	unix/gtkdlg.c	/^void dlg_beep(void *dlg)$/;"	f
dlg_beep	windows/winctrls.c	/^void dlg_beep(void *dlg)$/;"	f
dlg_checkbox_get	fuzzterm.c	/^int dlg_checkbox_get(union control *ctrl, void *dlg) { return 0; }$/;"	f
dlg_checkbox_get	unix/gtkdlg.c	/^int dlg_checkbox_get(union control *ctrl, void *dlg)$/;"	f
dlg_checkbox_get	windows/winctrls.c	/^int dlg_checkbox_get(union control *ctrl, void *dlg)$/;"	f
dlg_checkbox_set	fuzzterm.c	/^void dlg_checkbox_set(union control *ctrl, void *dlg, int checked) { }$/;"	f
dlg_checkbox_set	unix/gtkdlg.c	/^void dlg_checkbox_set(union control *ctrl, void *dlg, int checked)$/;"	f
dlg_checkbox_set	windows/winctrls.c	/^void dlg_checkbox_set(union control *ctrl, void *dlg, int checked)$/;"	f
dlg_cleanup	unix/gtkdlg.c	/^static void dlg_cleanup(struct dlgparam *dp)$/;"	f	file:
dlg_coloursel_results	fuzzterm.c	/^int dlg_coloursel_results(union control *ctrl, void *dlg,$/;"	f
dlg_coloursel_results	unix/gtkdlg.c	/^int dlg_coloursel_results(union control *ctrl, void *dlg,$/;"	f
dlg_coloursel_results	windows/winctrls.c	/^int dlg_coloursel_results(union control *ctrl, void *dlg,$/;"	f
dlg_coloursel_start	fuzzterm.c	/^void dlg_coloursel_start(union control *ctrl, void *dlg,$/;"	f
dlg_coloursel_start	unix/gtkdlg.c	/^void dlg_coloursel_start(union control *ctrl, void *dlg, int r, int g, int b)$/;"	f
dlg_coloursel_start	windows/winctrls.c	/^void dlg_coloursel_start(union control *ctrl, void *dlg, int r, int g, int b)$/;"	f
dlg_editbox_get	fuzzterm.c	/^char *dlg_editbox_get(union control *ctrl, void *dlg) { return dupstr("moo"); }$/;"	f
dlg_editbox_get	unix/gtkdlg.c	/^char *dlg_editbox_get(union control *ctrl, void *dlg)$/;"	f
dlg_editbox_get	windows/winctrls.c	/^char *dlg_editbox_get(union control *ctrl, void *dlg)$/;"	f
dlg_editbox_set	fuzzterm.c	/^void dlg_editbox_set(union control *ctrl, void *dlg, char const *text) { }$/;"	f
dlg_editbox_set	unix/gtkdlg.c	/^void dlg_editbox_set(union control *ctrl, void *dlg, char const *text)$/;"	f
dlg_editbox_set	windows/winctrls.c	/^void dlg_editbox_set(union control *ctrl, void *dlg, char const *text)$/;"	f
dlg_end	fuzzterm.c	/^void dlg_end(void *dlg, int value) { }$/;"	f
dlg_end	unix/gtkdlg.c	/^void dlg_end(void *dlg, int value)$/;"	f
dlg_end	windows/winctrls.c	/^void dlg_end(void *dlg, int value)$/;"	f
dlg_error_msg	fuzzterm.c	/^void dlg_error_msg(void *dlg, const char *msg) { }$/;"	f
dlg_error_msg	unix/gtkdlg.c	/^void dlg_error_msg(void *dlg, const char *msg)$/;"	f
dlg_error_msg	windows/winctrls.c	/^void dlg_error_msg(void *dlg, const char *msg)$/;"	f
dlg_filesel_get	fuzzterm.c	/^Filename *dlg_filesel_get(union control *ctrl, void *dlg) { return NULL; }$/;"	f
dlg_filesel_get	unix/gtkdlg.c	/^Filename *dlg_filesel_get(union control *ctrl, void *dlg)$/;"	f
dlg_filesel_get	windows/winctrls.c	/^Filename *dlg_filesel_get(union control *ctrl, void *dlg)$/;"	f
dlg_filesel_set	fuzzterm.c	/^void dlg_filesel_set(union control *ctrl, void *dlg, Filename *fn) { }$/;"	f
dlg_filesel_set	unix/gtkdlg.c	/^void dlg_filesel_set(union control *ctrl, void *dlg, Filename *fn)$/;"	f
dlg_filesel_set	windows/winctrls.c	/^void dlg_filesel_set(union control *ctrl, void *dlg, Filename *fn)$/;"	f
dlg_find_byctrl	unix/gtkdlg.c	/^static struct uctrl *dlg_find_byctrl(struct dlgparam *dp, union control *ctrl)$/;"	f	file:
dlg_find_bywidget	unix/gtkdlg.c	/^static struct uctrl *dlg_find_bywidget(struct dlgparam *dp, GtkWidget *w)$/;"	f	file:
dlg_findbyctrl	windows/winctrls.c	/^static struct winctrl *dlg_findbyctrl(struct dlgparam *dp, union control *ctrl)$/;"	f	file:
dlg_fontsel_get	fuzzterm.c	/^FontSpec *dlg_fontsel_get(union control *ctrl, void *dlg) { return NULL; }$/;"	f
dlg_fontsel_get	unix/gtkdlg.c	/^FontSpec *dlg_fontsel_get(union control *ctrl, void *dlg)$/;"	f
dlg_fontsel_get	windows/winctrls.c	/^FontSpec *dlg_fontsel_get(union control *ctrl, void *dlg)$/;"	f
dlg_fontsel_set	fuzzterm.c	/^void dlg_fontsel_set(union control *ctrl, void *dlg, FontSpec *fn) { }$/;"	f
dlg_fontsel_set	unix/gtkdlg.c	/^void dlg_fontsel_set(union control *ctrl, void *dlg, FontSpec *fs)$/;"	f
dlg_fontsel_set	windows/winctrls.c	/^void dlg_fontsel_set(union control *ctrl, void *dlg, FontSpec *fs)$/;"	f
dlg_get_fixed_pitch_flag	windows/winctrls.c	/^int dlg_get_fixed_pitch_flag(void *dlg)$/;"	f
dlg_init	unix/gtkdlg.c	/^static void dlg_init(struct dlgparam *dp)$/;"	f	file:
dlg_label_change	fuzzterm.c	/^void dlg_label_change(union control *ctrl, void *dlg, char const *text) { }$/;"	f
dlg_label_change	unix/gtkdlg.c	/^void dlg_label_change(union control *ctrl, void *dlg, char const *text)$/;"	f
dlg_label_change	windows/winctrls.c	/^void dlg_label_change(union control *ctrl, void *dlg, char const *text)$/;"	f
dlg_last_focused	fuzzterm.c	/^union control *dlg_last_focused(union control *ctrl, void *dlg) { return NULL; }$/;"	f
dlg_last_focused	unix/gtkdlg.c	/^union control *dlg_last_focused(union control *ctrl, void *dlg)$/;"	f
dlg_last_focused	windows/winctrls.c	/^union control *dlg_last_focused(union control *ctrl, void *dlg)$/;"	f
dlg_listbox_add	fuzzterm.c	/^void dlg_listbox_add(union control *ctrl, void *dlg, char const *text) { }$/;"	f
dlg_listbox_add	unix/gtkdlg.c	/^void dlg_listbox_add(union control *ctrl, void *dlg, char const *text)$/;"	f
dlg_listbox_add	windows/winctrls.c	/^void dlg_listbox_add(union control *ctrl, void *dlg, char const *text)$/;"	f
dlg_listbox_addwithid	fuzzterm.c	/^void dlg_listbox_addwithid(union control *ctrl, void *dlg,$/;"	f
dlg_listbox_addwithid	unix/gtkdlg.c	/^void dlg_listbox_addwithid(union control *ctrl, void *dlg,$/;"	f
dlg_listbox_addwithid	windows/winctrls.c	/^void dlg_listbox_addwithid(union control *ctrl, void *dlg,$/;"	f
dlg_listbox_clear	fuzzterm.c	/^void dlg_listbox_clear(union control *ctrl, void *dlg) { }$/;"	f
dlg_listbox_clear	unix/gtkdlg.c	/^void dlg_listbox_clear(union control *ctrl, void *dlg)$/;"	f
dlg_listbox_clear	windows/winctrls.c	/^void dlg_listbox_clear(union control *ctrl, void *dlg)$/;"	f
dlg_listbox_del	fuzzterm.c	/^void dlg_listbox_del(union control *ctrl, void *dlg, int index) { }$/;"	f
dlg_listbox_del	unix/gtkdlg.c	/^void dlg_listbox_del(union control *ctrl, void *dlg, int index)$/;"	f
dlg_listbox_del	windows/winctrls.c	/^void dlg_listbox_del(union control *ctrl, void *dlg, int index)$/;"	f
dlg_listbox_getid	fuzzterm.c	/^int dlg_listbox_getid(union control *ctrl, void *dlg, int index) { return 0; }$/;"	f
dlg_listbox_getid	unix/gtkdlg.c	/^int dlg_listbox_getid(union control *ctrl, void *dlg, int index)$/;"	f
dlg_listbox_getid	windows/winctrls.c	/^int dlg_listbox_getid(union control *ctrl, void *dlg, int index)$/;"	f
dlg_listbox_index	fuzzterm.c	/^int dlg_listbox_index(union control *ctrl, void *dlg) { return -1; }$/;"	f
dlg_listbox_index	unix/gtkdlg.c	/^int dlg_listbox_index(union control *ctrl, void *dlg)$/;"	f
dlg_listbox_index	windows/winctrls.c	/^int dlg_listbox_index(union control *ctrl, void *dlg)$/;"	f
dlg_listbox_issel	fuzzterm.c	/^int dlg_listbox_issel(union control *ctrl, void *dlg, int index) { return 0; }$/;"	f
dlg_listbox_issel	unix/gtkdlg.c	/^int dlg_listbox_issel(union control *ctrl, void *dlg, int index)$/;"	f
dlg_listbox_issel	windows/winctrls.c	/^int dlg_listbox_issel(union control *ctrl, void *dlg, int index)$/;"	f
dlg_listbox_select	fuzzterm.c	/^void dlg_listbox_select(union control *ctrl, void *dlg, int index) { }$/;"	f
dlg_listbox_select	unix/gtkdlg.c	/^void dlg_listbox_select(union control *ctrl, void *dlg, int index)$/;"	f
dlg_listbox_select	windows/winctrls.c	/^void dlg_listbox_select(union control *ctrl, void *dlg, int index)$/;"	f
dlg_radiobutton_get	fuzzterm.c	/^int dlg_radiobutton_get(union control *ctrl, void *dlg) { return 0; }$/;"	f
dlg_radiobutton_get	unix/gtkdlg.c	/^int dlg_radiobutton_get(union control *ctrl, void *dlg)$/;"	f
dlg_radiobutton_get	windows/winctrls.c	/^int dlg_radiobutton_get(union control *ctrl, void *dlg)$/;"	f
dlg_radiobutton_set	fuzzterm.c	/^void dlg_radiobutton_set(union control *ctrl, void *dlg, int whichbutton) { }$/;"	f
dlg_radiobutton_set	unix/gtkdlg.c	/^void dlg_radiobutton_set(union control *ctrl, void *dlg, int which)$/;"	f
dlg_radiobutton_set	windows/winctrls.c	/^void dlg_radiobutton_set(union control *ctrl, void *dlg, int whichbutton)$/;"	f
dlg_refresh	fuzzterm.c	/^void dlg_refresh(union control *ctrl, void *dlg) { }$/;"	f
dlg_refresh	unix/gtkdlg.c	/^void dlg_refresh(union control *ctrl, void *dlg)$/;"	f
dlg_refresh	windows/winctrls.c	/^void dlg_refresh(union control *ctrl, void *dlg)$/;"	f
dlg_set_fixed_pitch_flag	windows/winctrls.c	/^void dlg_set_fixed_pitch_flag(void *dlg, int flag)$/;"	f
dlg_set_focus	fuzzterm.c	/^void dlg_set_focus(union control *ctrl, void *dlg) { }$/;"	f
dlg_set_focus	unix/gtkdlg.c	/^void dlg_set_focus(union control *ctrl, void *dlg)$/;"	f
dlg_set_focus	windows/winctrls.c	/^void dlg_set_focus(union control *ctrl, void *dlg)$/;"	f
dlg_text_set	fuzzterm.c	/^void dlg_text_set(union control *ctrl, void *dlg, char const *text) { }$/;"	f
dlg_text_set	unix/gtkdlg.c	/^void dlg_text_set(union control *ctrl, void *dlg, char const *text)$/;"	f
dlg_text_set	windows/winctrls.c	/^void dlg_text_set(union control *ctrl, void *dlg, char const *text)$/;"	f
dlg_update_done	fuzzterm.c	/^void dlg_update_done(union control *ctrl, void *dlg) { }$/;"	f
dlg_update_done	unix/gtkdlg.c	/^void dlg_update_done(union control *ctrl, void *dlg)$/;"	f
dlg_update_done	windows/winctrls.c	/^void dlg_update_done(union control *ctrl, void *dlg)$/;"	f
dlg_update_start	fuzzterm.c	/^void dlg_update_start(union control *ctrl, void *dlg) { }$/;"	f
dlg_update_start	unix/gtkdlg.c	/^void dlg_update_start(union control *ctrl, void *dlg)$/;"	f
dlg_update_start	windows/winctrls.c	/^void dlg_update_start(union control *ctrl, void *dlg)$/;"	f
dlgparam	unix/gtkdlg.c	/^struct dlgparam {$/;"	s	file:
dlgparam	windows/winstuff.h	/^struct dlgparam {$/;"	s
dll_hijacking_protection	windows/winmisc.c	/^void dll_hijacking_protection(void)$/;"	f
dlu4inpix	windows/winstuff.h	/^    int dlu4inpix;$/;"	m	struct:ctlpos
dmemdump	misc.h	140;"	d
dmemdump	misc.h	144;"	d
dmemdumpl	misc.h	141;"	d
dmemdumpl	misc.h	145;"	d
dnbid	windows/winstuff.h	/^    int listid, upbid, dnbid;$/;"	m	struct:prefslist
dns_log_msg	proxy.c	/^static char *dns_log_msg(const char *host, int addressfamily,$/;"	f	file:
doMirror	minibidi.c	/^void doMirror(unsigned int *ch)$/;"	f
do_beep	fuzzterm.c	/^void do_beep(void *frontend, int a) { }$/;"	f
do_beep	unix/gtkwin.c	/^void do_beep(void *frontend, int mode)$/;"	f
do_beep	windows/window.c	/^void do_beep(void *frontend, int mode)$/;"	f
do_bidi	minibidi.c	/^int do_bidi(bidi_char *line, int count)$/;"	f
do_cmd	pscp.c	/^static void do_cmd(char *host, char *user, char *cmd)$/;"	f	file:
do_cmdline	unix/gtkmain.c	/^int do_cmdline(int argc, char **argv, int do_everything, int *allow_launch,$/;"	f
do_config	windows/windlg.c	/^int do_config(void)$/;"	f
do_config_box	unix/gtkdlg.c	/^int do_config_box(const char *title, Conf *conf, int midsession,$/;"	f
do_cursor	fuzzterm.c	/^void do_cursor(Context ctx, int x, int y, wchar_t * text, int len,$/;"	f
do_cursor	unix/gtkwin.c	/^void do_cursor(Context ctx, int x, int y, wchar_t *text, int len,$/;"	f
do_cursor	windows/window.c	/^void do_cursor(Context ctx, int x, int y, wchar_t *text, int len,$/;"	f
do_defaults	settings.c	/^void do_defaults(const char *session, Conf *conf)$/;"	f
do_eventsel_loop	windows/winsftp.c	/^int do_eventsel_loop(HANDLE other_event)$/;"	f
do_export_menuitem	windows/winpgen.c	589;"	d	file:
do_export_menuitem	windows/winpgen.c	595;"	d	file:
do_osc	terminal.c	/^static void do_osc(Terminal *term)$/;"	f	file:
do_paint	terminal.c	/^static void do_paint(Terminal *term, Context ctx, int may_optimise)$/;"	f	file:
do_proxy_dns	proxy.c	17;"	d	file:
do_reconfig	windows/windlg.c	/^int do_reconfig(HWND hwnd, int protcfginfo)$/;"	f
do_select	windows/window.c	/^char *do_select(SOCKET skt, int startup)$/;"	f
do_select	windows/winplink.c	/^char *do_select(SOCKET skt, int startup)$/;"	f
do_select	windows/winsftp.c	/^char *do_select(SOCKET skt, int startup)$/;"	f
do_sftp	psftp.c	/^int do_sftp(int mode, int modeflags, char *batchfile)$/;"	f
do_sftp_cleanup	psftp.c	/^void do_sftp_cleanup()$/;"	f
do_sftp_init	psftp.c	/^static int do_sftp_init(void)$/;"	f	file:
do_shape	minibidi.c	/^int do_shape(bidi_char *line, bidi_char *to, int count)$/;"	f
do_ssh1_connection	ssh.c	/^static void do_ssh1_connection(Ssh ssh, const unsigned char *in, int inlen,$/;"	f	file:
do_ssh1_connection_crstate	ssh.c	/^    int do_ssh1_connection_crstate;$/;"	m	struct:ssh_tag	file:
do_ssh1_login	ssh.c	/^static int do_ssh1_login(Ssh ssh, const unsigned char *in, int inlen,$/;"	f	file:
do_ssh1_login_state	ssh.c	/^    void *do_ssh1_login_state;$/;"	m	struct:ssh_tag	file:
do_ssh2_authconn	ssh.c	/^static void do_ssh2_authconn(Ssh ssh, const unsigned char *in, int inlen,$/;"	f	file:
do_ssh2_authconn_state	ssh.c	/^    void *do_ssh2_authconn_state;$/;"	m	struct:ssh_tag	file:
do_ssh2_transport	ssh.c	/^static void do_ssh2_transport(Ssh ssh, const void *vin, int inlen,$/;"	f	file:
do_ssh2_transport_state	ssh.c	/^    void *do_ssh2_transport_state;$/;"	m	struct:ssh_tag	file:
do_ssh_connection_init	ssh.c	/^static int do_ssh_connection_init(Ssh ssh, unsigned char c)$/;"	f	file:
do_ssh_connection_init_state	ssh.c	/^    void *do_ssh_connection_init_state;$/;"	m	struct:ssh_tag	file:
do_ssh_init	ssh.c	/^    int (*do_ssh_init)(Ssh ssh, unsigned char c);$/;"	m	struct:ssh_tag	file:
do_ssh_init	ssh.c	/^static int do_ssh_init(Ssh ssh, unsigned char c)$/;"	f	file:
do_ssh_init_state	ssh.c	/^    void *do_ssh_init_state;$/;"	m	struct:ssh_tag	file:
do_telnet_read	telnet.c	/^static void do_telnet_read(Telnet telnet, char *buf, int len)$/;"	f	file:
do_text	fuzzterm.c	/^void do_text(Context ctx, int x, int y, wchar_t * text, int len,$/;"	f
do_text	unix/gtkwin.c	/^void do_text(Context ctx, int x, int y, wchar_t *text, int len,$/;"	f
do_text	windows/window.c	/^void do_text(Context ctx, int x, int y, wchar_t *text, int len,$/;"	f
do_text_internal	unix/gtkwin.c	/^void do_text_internal(Context ctx, int x, int y, wchar_t *text, int len,$/;"	f
do_text_internal	windows/window.c	/^void do_text_internal(Context ctx, int x, int y, wchar_t *text, int len,$/;"	f
docdir	Makefile	/^docdir = ${datarootdir}\/doc\/${PACKAGE_TARNAME}$/;"	m
doctl	windows/winctrls.c	/^HWND doctl(struct ctlpos *cp, RECT r,$/;"	f
document	icons/mkicon.py	/^def document(size):$/;"	f
doingargs	icons/mkicon.py	/^            doingargs = 0$/;"	v
doingargs	icons/mkicon.py	/^doingargs = 1$/;"	v
done	windows/winhandl.c	/^    int done;			       \/* request subthread to terminate *\/$/;"	m	struct:handle_foreign	file:
done	windows/winhandl.c	/^    int done;			       \/* request subthread to terminate *\/$/;"	m	struct:handle_generic	file:
done	windows/winhandl.c	/^    int done;			       \/* request subthread to terminate *\/$/;"	m	struct:handle_input	file:
done	windows/winhandl.c	/^    int done;			       \/* request subthread to terminate *\/$/;"	m	struct:handle_output	file:
done_option	contrib/cygtermd/telnet.c	/^static void done_option(Telnet telnet, int option)$/;"	f	file:
done_prompt	terminal.c	/^    int done_prompt;	\/* printed out prompt yet? *\/$/;"	m	struct:term_userpass_state	file:
downstream_id	ssh.c	/^    unsigned downstream_id;$/;"	m	struct:Packet	file:
downstream_id	sshshare.c	/^    unsigned downstream_id, upstream_id, server_id;$/;"	m	struct:share_channel	file:
downstream_maxpkt	sshshare.c	/^    int downstream_maxpkt;$/;"	m	struct:share_channel	file:
dp	unix/gtkdlg.c	/^    struct dlgparam *dp;$/;"	m	struct:draglist_valchange_ctx	typeref:struct:draglist_valchange_ctx::dlgparam	file:
dp	unix/gtkdlg.c	/^    struct dlgparam *dp;$/;"	m	struct:selparam	typeref:struct:selparam::dlgparam	file:
dp	unix/gtkdlg.c	/^    struct dlgparam dp;$/;"	m	struct:eventlog_stuff	typeref:struct:eventlog_stuff::dlgparam	file:
dp	windows/windlg.c	/^static struct dlgparam dp;$/;"	v	typeref:struct:dlgparam	file:
dp_add_tree	windows/winctrls.c	/^void dp_add_tree(struct dlgparam *dp, struct winctrls *wc)$/;"	f
dp_cleanup	windows/winctrls.c	/^void dp_cleanup(struct dlgparam *dp)$/;"	f
dp_init	windows/winctrls.c	/^void dp_init(struct dlgparam *dp)$/;"	f
dport	ssh.c	/^    unsigned sport, dport;$/;"	m	struct:ssh_portfwd	file:
dport	ssh.c	/^    unsigned sport, dport;$/;"	m	struct:ssh_rportfwd	file:
dputs	unix/uxmisc.c	/^void dputs(const char *buf)$/;"	f
dputs	windows/winmisc.c	/^void dputs(const char *buf)$/;"	f
dragging	windows/winstuff.h	/^    int dragging;$/;"	m	struct:prefslist
draglist	dialog.h	/^	int draglist;$/;"	m	struct:control::__anon25
draglist_down	unix/gtkdlg.c	/^static void draglist_down(GtkButton *button, gpointer data)$/;"	f	file:
draglist_move	unix/gtkdlg.c	/^static void draglist_move(struct dlgparam *dp, struct uctrl *uc, int direction)$/;"	f	file:
draglist_up	unix/gtkdlg.c	/^static void draglist_up(GtkButton *button, gpointer data)$/;"	f	file:
draglist_valchange	unix/gtkdlg.c	/^static gboolean draglist_valchange(gpointer data)$/;"	f	file:
draglist_valchange_ctx	unix/gtkdlg.c	/^struct draglist_valchange_ctx {$/;"	s	file:
draw	unix/gtkfont.c	/^    void (*draw)(unifont_drawctx *ctx, x11font_individual *xfi, int x, int y,$/;"	m	struct:x11font_drawfuncs	file:
draw_area	unix/gtkask.c	/^static gint draw_area(GtkWidget *widget, cairo_t *cr, gpointer data)$/;"	f	file:
draw_area	unix/gtkwin.c	/^static gint draw_area(GtkWidget *widget, cairo_t *cr, gpointer data)$/;"	f	file:
draw_backing_rect	unix/gtkwin.c	/^static void draw_backing_rect(struct gui_data *inst)$/;"	f	file:
draw_clip	unix/gtkwin.c	/^static void draw_clip(struct draw_ctx *dctx, int x, int y, int w, int h)$/;"	f	file:
draw_combining	unix/gtkfont.c	/^    void (*draw_combining)(unifont_drawctx *ctx, unifont *font,$/;"	m	struct:unifont_vtable	file:
draw_ctx	unix/gtkwin.c	/^struct draw_ctx {$/;"	s	file:
draw_line	unix/gtkwin.c	/^static void draw_line(struct draw_ctx *dctx, int x0, int y0, int x1, int y1)$/;"	f	file:
draw_point	unix/gtkwin.c	/^static void draw_point(struct draw_ctx *dctx, int x, int y)$/;"	f	file:
draw_rectangle	unix/gtkwin.c	/^static void draw_rectangle(struct draw_ctx *dctx, int filled,$/;"	f	file:
draw_set_colour	unix/gtkwin.c	/^static void draw_set_colour(struct draw_ctx *dctx, int col)$/;"	f	file:
draw_stretch_after	unix/gtkwin.c	/^static void draw_stretch_after(struct draw_ctx *dctx, int x, int y,$/;"	f	file:
draw_stretch_before	unix/gtkwin.c	/^static void draw_stretch_before(struct draw_ctx *dctx, int x, int y,$/;"	f	file:
draw_text	unix/gtkfont.c	/^    void (*draw_text)(unifont_drawctx *ctx, unifont *font,$/;"	m	struct:unifont_vtable	file:
draw_update	unix/gtkwin.c	/^static void draw_update(struct draw_ctx *dctx, int x, int y, int w, int h)$/;"	f	file:
drawctx	unix/gtkfont.h	/^            GdkDrawingContext *drawctx;$/;"	m	struct:unifont_drawctx::__anon127::__anon129
drawicon	icons/mkicon.py	/^def drawicon(func, width, fname, orangebackground = 0):$/;"	f
drawing_area_ctx	unix/gtkask.c	/^struct drawing_area_ctx {$/;"	s	file:
drawingareas	unix/gtkask.c	/^    struct drawing_area_ctx drawingareas[N_DRAWING_AREAS];$/;"	m	struct:askpass_ctx	typeref:struct:askpass_ctx::drawing_area_ctx	file:
drawtype	unix/gtkwin.c	/^    int drawtype;$/;"	m	struct:gui_data	file:
droplist_selchange	unix/gtkdlg.c	/^static void droplist_selchange(GtkComboBox *combo, gpointer data)$/;"	f	file:
dsa_generate	sshdssg.c	/^int dsa_generate(struct dss_key *key, int bits, progfn_t pfn,$/;"	f
dserv	ssh.c	/^    char *sserv, *dserv;$/;"	m	struct:ssh_portfwd	file:
dss_createkey	sshdss.c	/^static void *dss_createkey(const struct ssh_signkey *self,$/;"	f	file:
dss_fmtkey	sshdss.c	/^static char *dss_fmtkey(void *key)$/;"	f	file:
dss_freekey	sshdss.c	/^static void dss_freekey(void *key)$/;"	f	file:
dss_gen_k	sshdss.c	/^Bignum *dss_gen_k(const char *id_string, Bignum modulus, Bignum private_key,$/;"	f
dss_key	ssh.h	/^struct dss_key {$/;"	s
dss_newkey	sshdss.c	/^static void *dss_newkey(const struct ssh_signkey *self,$/;"	f	file:
dss_openssh_createkey	sshdss.c	/^static void *dss_openssh_createkey(const struct ssh_signkey *self,$/;"	f	file:
dss_openssh_fmtkey	sshdss.c	/^static int dss_openssh_fmtkey(void *key, unsigned char *blob, int len)$/;"	f	file:
dss_private_blob	sshdss.c	/^static unsigned char *dss_private_blob(void *key, int *len)$/;"	f	file:
dss_pubkey_bits	sshdss.c	/^static int dss_pubkey_bits(const struct ssh_signkey *self,$/;"	f	file:
dss_public_blob	sshdss.c	/^static unsigned char *dss_public_blob(void *key, int *len)$/;"	f	file:
dss_sign	sshdss.c	/^static unsigned char *dss_sign(void *key, const char *data, int datalen,$/;"	f	file:
dss_verifysig	sshdss.c	/^static int dss_verifysig(void *key, const char *sig, int siglen,$/;"	f	file:
dsskey	windows/winpgen.c	/^        struct dss_key *dsskey;$/;"	m	union:rsa_key_thread_params::__anon140	typeref:struct:rsa_key_thread_params::__anon140::dss_key	file:
dsskey	windows/winpgen.c	/^        struct dss_key dsskey;$/;"	m	union:MainDlgState::__anon141	typeref:struct:MainDlgState::__anon141::dss_key	file:
dstfname	psftp.c	/^    char *dstfname;$/;"	m	struct:sftp_context_mv	file:
dummy	noprint.c	/^    int dummy;$/;"	m	struct:printer_job_tag	file:
dummy_plug	x11fwd.c	/^static const struct plug_function_table dummy_plug = {$/;"	v	typeref:struct:plug_function_table	file:
dummy_plug_accepting	x11fwd.c	/^static int dummy_plug_accepting(Plug p, accept_fn_t constructor, accept_ctx_t ctx) { return 1; }$/;"	f	file:
dummy_plug_closing	x11fwd.c	/^static void dummy_plug_closing$/;"	f	file:
dummy_plug_log	x11fwd.c	/^static void dummy_plug_log(Plug p, int type, SockAddr addr, int port,$/;"	f	file:
dummy_plug_receive	x11fwd.c	/^static void dummy_plug_receive(Plug p, int urgent, char *data, int len) { }$/;"	f	file:
dummy_plug_sent	x11fwd.c	/^static void dummy_plug_sent(Plug p, int bufsize) { }$/;"	f	file:
dummy_timer_ctx	unix/uxpgnt.c	/^void *dummy_timer_ctx;$/;"	v
dummyitem	windows/winstuff.h	/^    int dummyitem;$/;"	m	struct:prefslist
dup_check_launchable	unix/uxpterm.c	/^const int dup_check_launchable = 0; \/* no need to check host name in conf *\/$/;"	v
dup_check_launchable	unix/uxputty.c	/^const int dup_check_launchable = 1;$/;"	v
dup_keyval_name	unix/gtkwin.c	/^char *dup_keyval_name(guint keyval)$/;"	f
dup_mb_to_wc	miscucs.c	/^wchar_t *dup_mb_to_wc(int codepage, int flags, const char *string)$/;"	f
dup_mb_to_wc_c	miscucs.c	/^wchar_t *dup_mb_to_wc_c(int codepage, int flags, const char *string, int len)$/;"	f
dup_session_menuitem	unix/gtkwin.c	/^void dup_session_menuitem(GtkMenuItem *item, gpointer gdata)$/;"	f
dupcat	misc.c	/^char *dupcat(const char *s1, ...)$/;"	f
dupprintf	misc.c	/^char *dupprintf(const char *fmt, ...)$/;"	f
dupstr	contrib/cygtermd/malloc.c	/^char *dupstr(const char *s) {$/;"	f
dupstr	misc.c	/^char *dupstr(const char *s)$/;"	f
dupvprintf	misc.c	/^char *dupvprintf(const char *fmt, va_list ap)$/;"	f
dupvprintf_inner	misc.c	/^static char *dupvprintf_inner(char *buf, int oldlen, int *oldsize,$/;"	f	file:
dvidir	Makefile	/^dvidir = ${docdir}$/;"	m
dynamic	portfwd.c	/^    int dynamic;$/;"	m	struct:PortForwarding	file:
dynamic	portfwd.c	/^    int dynamic;$/;"	m	struct:PortListener	file:
e	ssh.h	/^        struct ec_ecurve e;$/;"	m	union:ec_curve::__anon91	typeref:struct:ec_curve::__anon91::ec_ecurve
e	sshdh.c	/^    Bignum x, e, p, q, qmask, g;$/;"	m	struct:dh_ctx	file:
ec_alg_by_oid	sshecc.c	/^const struct ssh_signkey *ec_alg_by_oid(int len, const void *oid,$/;"	f
ec_alg_oid	sshecc.c	/^const unsigned char *ec_alg_oid(const struct ssh_signkey *alg,$/;"	f
ec_aminus3	sshecc.c	/^static int ec_aminus3(const struct ec_curve *curve)$/;"	f	file:
ec_curve	ssh.h	/^struct ec_curve {$/;"	s
ec_curve25519	sshecc.c	/^static struct ec_curve *ec_curve25519(void)$/;"	f	file:
ec_ecurve	ssh.h	/^struct ec_ecurve$/;"	s
ec_ed25519	sshecc.c	/^static struct ec_curve *ec_ed25519(void)$/;"	f	file:
ec_ed_alg_and_curve_by_bits	sshecc.c	/^int ec_ed_alg_and_curve_by_bits(int bits,$/;"	f
ec_edgenerate	sshecdsag.c	/^int ec_edgenerate(struct ec_key *key, int bits, progfn_t pfn,$/;"	f
ec_generate	sshecdsag.c	/^int ec_generate(struct ec_key *key, int bits, progfn_t pfn,$/;"	f
ec_kex_list	sshecc.c	/^static const struct ssh_kex *const ec_kex_list[] = {$/;"	v	file:
ec_key	ssh.h	/^struct ec_key {$/;"	s
ec_mcurve	ssh.h	/^struct ec_mcurve$/;"	s
ec_nist_alg_and_curve_by_bits	sshecc.c	/^int ec_nist_alg_and_curve_by_bits(int bits,$/;"	f
ec_nist_curve_lengths	sshecc.c	/^const int ec_nist_curve_lengths[] = { 256, 384, 521 };$/;"	v
ec_p256	sshecc.c	/^static struct ec_curve *ec_p256(void)$/;"	f	file:
ec_p384	sshecc.c	/^static struct ec_curve *ec_p384(void)$/;"	f	file:
ec_p521	sshecc.c	/^static struct ec_curve *ec_p521(void)$/;"	f	file:
ec_point	ssh.h	/^struct ec_point {$/;"	s
ec_point_copy	sshecc.c	/^static struct ec_point *ec_point_copy(const struct ec_point *a)$/;"	f	file:
ec_point_free	sshecc.c	/^void ec_point_free(struct ec_point *point)$/;"	f
ec_point_new	sshecc.c	/^static struct ec_point *ec_point_new(const struct ec_curve *curve,$/;"	f	file:
ec_point_verify	sshecc.c	/^static int ec_point_verify(const struct ec_point *a)$/;"	f	file:
ec_public	sshecc.c	/^struct ec_point *ec_public(const Bignum privateKey, const struct ec_curve *curve)$/;"	f
ec_wcurve	ssh.h	/^struct ec_wcurve$/;"	s
ecdh_calculate	sshecc.c	/^static Bignum ecdh_calculate(const Bignum private,$/;"	f	file:
ecdsa_createkey	sshecc.c	/^static void *ecdsa_createkey(const struct ssh_signkey *self,$/;"	f	file:
ecdsa_fmtkey	sshecc.c	/^static char *ecdsa_fmtkey(void *key)$/;"	f	file:
ecdsa_freekey	sshecc.c	/^static void ecdsa_freekey(void *key)$/;"	f	file:
ecdsa_newkey	sshecc.c	/^static void *ecdsa_newkey(const struct ssh_signkey *self,$/;"	f	file:
ecdsa_openssh_createkey	sshecc.c	/^static void *ecdsa_openssh_createkey(const struct ssh_signkey *self,$/;"	f	file:
ecdsa_openssh_fmtkey	sshecc.c	/^static int ecdsa_openssh_fmtkey(void *key, unsigned char *blob, int len)$/;"	f	file:
ecdsa_private_blob	sshecc.c	/^static unsigned char *ecdsa_private_blob(void *key, int *len)$/;"	f	file:
ecdsa_pubkey_bits	sshecc.c	/^static int ecdsa_pubkey_bits(const struct ssh_signkey *self,$/;"	f	file:
ecdsa_public_blob	sshecc.c	/^static unsigned char *ecdsa_public_blob(void *key, int *len)$/;"	f	file:
ecdsa_sign	sshecc.c	/^static unsigned char *ecdsa_sign(void *key, const char *data, int datalen,$/;"	f	file:
ecdsa_verifysig	sshecc.c	/^static int ecdsa_verifysig(void *key, const char *sig, int siglen,$/;"	f	file:
ecf_add	sshecc.c	/^static Bignum ecf_add(const Bignum a, const Bignum b,$/;"	f	file:
ecf_double	sshecc.c	/^static Bignum ecf_double(const Bignum a, const struct ec_curve *curve)$/;"	f	file:
ecf_square	sshecc.c	/^static Bignum ecf_square(const Bignum a, const struct ec_curve *curve)$/;"	f	file:
ecf_treble	sshecc.c	/^static Bignum ecf_treble(const Bignum a, const struct ec_curve *curve)$/;"	f	file:
echo	putty.h	/^    int echo;$/;"	m	struct:__anon66
echoing	ssh.c	/^    int echoing, editing;$/;"	m	struct:ssh_tag	file:
echoing	telnet.c	/^    int echoing, editing;$/;"	m	struct:telnet_tag	file:
eckex_extra	sshecc.c	/^struct eckex_extra {$/;"	s	file:
eckey	windows/winpgen.c	/^        struct ec_key *eckey;$/;"	m	union:rsa_key_thread_params::__anon140	typeref:struct:rsa_key_thread_params::__anon140::ec_key	file:
eckey	windows/winpgen.c	/^        struct ec_key eckey;$/;"	m	union:MainDlgState::__anon141	typeref:struct:MainDlgState::__anon141::ec_key	file:
ecp_add	sshecc.c	/^static struct ec_point *ecp_add(const struct ec_point *a,$/;"	f	file:
ecp_adde	sshecc.c	/^static struct ec_point *ecp_adde(const struct ec_point *a,$/;"	f	file:
ecp_addm	sshecc.c	/^static struct ec_point *ecp_addm(const struct ec_point *a,$/;"	f	file:
ecp_addw	sshecc.c	/^static struct ec_point *ecp_addw(const struct ec_point *a,$/;"	f	file:
ecp_double	sshecc.c	/^static struct ec_point *ecp_double(const struct ec_point *a, const int aminus3)$/;"	f	file:
ecp_doublem	sshecc.c	/^static struct ec_point *ecp_doublem(const struct ec_point *a)$/;"	f	file:
ecp_doublew	sshecc.c	/^static struct ec_point *ecp_doublew(const struct ec_point *a, const int aminus3)$/;"	f	file:
ecp_edx	sshecc.c	/^static Bignum *ecp_edx(const struct ec_curve *curve, const Bignum y)$/;"	f	file:
ecp_mul	sshecc.c	/^struct ec_point *ecp_mul(const struct ec_point *a, const Bignum b)$/;"	f
ecp_mul_	sshecc.c	/^static struct ec_point *ecp_mul_(const struct ec_point *a, const Bignum b, int aminus3)$/;"	f	file:
ecp_mule	sshecc.c	/^static struct ec_point *ecp_mule(const struct ec_point *a, const Bignum b)$/;"	f	file:
ecp_mulm	sshecc.c	/^static struct ec_point *ecp_mulm(const struct ec_point *p, const Bignum n)$/;"	f	file:
ecp_mulw	sshecc.c	/^static struct ec_point *ecp_mulw(const struct ec_point *a, const Bignum b)$/;"	f	file:
ecp_normalise	sshecc.c	/^static int ecp_normalise(struct ec_point *a)$/;"	f	file:
ecp_summul	sshecc.c	/^static struct ec_point *ecp_summul(const Bignum a, const Bignum b,$/;"	f	file:
ecsign_extra	sshecc.c	/^struct ecsign_extra {$/;"	s	file:
ed25519_openssh_createkey	sshecc.c	/^static void *ed25519_openssh_createkey(const struct ssh_signkey *self,$/;"	f	file:
ed25519_openssh_fmtkey	sshecc.c	/^static int ed25519_openssh_fmtkey(void *key, unsigned char *blob, int len)$/;"	f	file:
editbox	config.c	/^    union control *editbox, *listbox, *loadbutton, *savebutton, *delbutton;$/;"	m	struct:sessionsaver_data	typeref:union:sessionsaver_data::control	file:
editbox	config.c	/^    union control *listbox, *editbox, *button;$/;"	m	struct:charclass_data	typeref:union:charclass_data::	file:
editbox	dialog.h	/^    } editbox;$/;"	m	union:control	typeref:struct:control::__anon21
editbox_changed	unix/gtkdlg.c	/^static void editbox_changed(GtkEditable *ed, gpointer data)$/;"	f	file:
editbox_key	unix/gtkdlg.c	/^static gboolean editbox_key(GtkWidget *widget, GdkEventKey *event,$/;"	f	file:
editbox_lostfocus	unix/gtkdlg.c	/^static gboolean editbox_lostfocus(GtkWidget *ed, GdkEventFocus *event,$/;"	f	file:
editboxfw	windows/winctrls.c	/^void editboxfw(struct ctlpos *cp, int password, char *text,$/;"	f
editbutton	windows/winctrls.c	/^void editbutton(struct ctlpos *cp, char *stext, int sid,$/;"	f
editing	ssh.c	/^    int echoing, editing;$/;"	m	struct:ssh_tag	file:
editing	telnet.c	/^    int echoing, editing;$/;"	m	struct:telnet_tag	file:
elemcount	tree234.c	/^    int elemcount;$/;"	m	struct:__anon114	file:
elements	pgssapi.h	/^    gss_OID elements;$/;"	m	struct:gss_OID_set_desc_struct
elements	pgssapi.h	/^    void *elements;$/;"	m	struct:gss_OID_desc_struct
elems	tree234.c	/^    void *elems[3];$/;"	m	struct:node234_Tag	file:
encrypt	ssh.h	/^    void (*encrypt) (void *, unsigned char *blk, int len);$/;"	m	struct:ssh2_cipher
encrypt	ssh.h	/^    void (*encrypt) (void *, unsigned char *blk, int len);$/;"	m	struct:ssh_cipher
encrypt	sshaes.c	/^    void (*encrypt) (AESContext * ctx, word32 * block);$/;"	m	struct:AESContext	file:
encrypt_length	ssh.h	/^    void (*encrypt_length) (void *, unsigned char *blk, int len, unsigned long seq);$/;"	m	struct:ssh2_cipher
encrypted	import.c	/^    int encrypted;$/;"	m	struct:openssh_pem_key	file:
encrypted_len	ssh.c	/^    long encrypted_len;	    \/* for SSH-2 total-size counting *\/$/;"	m	struct:Packet	file:
encryption	import.c	/^    openssh_pem_enc encryption;$/;"	m	struct:openssh_pem_key	file:
endbox	windows/winctrls.c	/^void endbox(struct ctlpos *cp)$/;"	f
ended	windows/winstuff.h	/^    int ended, endresult;	       \/* has the dialog been ended? *\/$/;"	m	struct:dlgparam
endresult	windows/winstuff.h	/^    int ended, endresult;	       \/* has the dialog been ended? *\/$/;"	m	struct:dlgparam
entropy	windows/winpgen.c	/^    unsigned *entropy;$/;"	m	struct:MainDlgState	file:
entropy_got	windows/winpgen.c	/^    int entropy_got, entropy_required, entropy_size;$/;"	m	struct:MainDlgState	file:
entropy_required	windows/winpgen.c	/^    int entropy_got, entropy_required, entropy_size;$/;"	m	struct:MainDlgState	file:
entropy_size	windows/winpgen.c	/^    int entropy_got, entropy_required, entropy_size;$/;"	m	struct:MainDlgState	file:
entry	unix/gtkdlg.c	/^    GtkWidget *entry;         \/* for editbox, filesel, fontsel *\/$/;"	m	struct:uctrl	file:
entrysig	unix/gtkdlg.c	/^    guint entrysig;$/;"	m	struct:uctrl	file:
enum_fonts	unix/gtkfont.c	/^    void (*enum_fonts)(GtkWidget *widget,$/;"	m	struct:unifont_vtable	file:
enum_level	windows/winprint.c	/^    DWORD enum_level;$/;"	m	struct:printer_enum_tag	file:
enum_settings_finish	unix/uxstore.c	/^void enum_settings_finish(void *handle)$/;"	f
enum_settings_finish	windows/winstore.c	/^void enum_settings_finish(void *handle)$/;"	f
enum_settings_next	unix/uxstore.c	/^char *enum_settings_next(void *handle, char *buffer, int buflen)$/;"	f
enum_settings_next	windows/winstore.c	/^char *enum_settings_next(void *handle, char *buffer, int buflen)$/;"	f
enum_settings_start	unix/uxstore.c	/^void *enum_settings_start(void)$/;"	f
enum_settings_start	windows/winstore.c	/^void *enum_settings_start(void)$/;"	f
enumsettings	windows/winstore.c	/^struct enumsettings {$/;"	s	file:
environ_data	config.c	/^struct environ_data {$/;"	s	file:
environ_handler	config.c	/^static void environ_handler(union control *ctrl, void *dlg,$/;"	f	file:
envvars	contrib/cygtermd/telnet.h	/^    char **envvars;		       \/* array of "VAR=value" terms *\/$/;"	m	struct:shell_data
envvarsize	contrib/cygtermd/telnet.c	/^    int envvarsize;$/;"	m	struct:telnet_tag	file:
eof	sftp.c	/^    int req_totalsize, req_maxsize, eof, err;$/;"	m	struct:fxp_xfer	file:
eof_needed	ssh.c	/^    int size_needed, eof_needed;$/;"	m	struct:ssh_tag	file:
erase_char	terminal.h	/^    termchar basic_erase_char, erase_char;$/;"	m	struct:terminal_tag
erase_lots	terminal.c	/^static void erase_lots(Terminal *term,$/;"	f	file:
erase_to_scrollback	terminal.h	/^    int erase_to_scrollback;$/;"	m	struct:terminal_tag
err	sftp.c	/^    int req_totalsize, req_maxsize, eof, err;$/;"	m	struct:fxp_xfer	file:
errhandle	windows/winplink.c	/^HANDLE inhandle, outhandle, errhandle;$/;"	v
errlen	charset/fromucs.c	/^    int errlen;$/;"	m	struct:charset_emit_param	file:
errlen	charset/toucs.c	/^    int errlen;$/;"	m	struct:unicode_emit_param	file:
errmsg_button_clicked	unix/gtkdlg.c	/^static void errmsg_button_clicked(GtkButton *button, gpointer data)$/;"	f	file:
error	errsock.c	/^    char *error;$/;"	m	struct:Socket_error_tag	file:
error	proxy.h	/^    const char *error;$/;"	m	struct:Socket_proxy_tag
error	tree234.c	/^void error(char *fmt, ...)$/;"	f
error	unix/uxnet.c	/^    const char *error;$/;"	m	struct:SockAddr_tag	file:
error	unix/uxnet.c	/^    const char *error;$/;"	m	struct:Socket_tag	file:
error	unix/uxproxy.c	/^    char *error;$/;"	m	struct:Socket_localproxy_tag	file:
error	windows/winhsock.c	/^    char *error;$/;"	m	struct:Socket_handle_tag	file:
error	windows/winmisc.c	/^    int error;$/;"	m	struct:errstring	file:
error	windows/winnet.c	/^    char *error;$/;"	m	struct:SockAddr_tag	file:
error	windows/winnet.c	/^    const char *error;$/;"	m	struct:Socket_tag	file:
error	windows/winnet.c	/^    int error;$/;"	m	struct:errstring	file:
error	windows/winnps.c	/^    char *error;$/;"	m	struct:Socket_named_pipe_server_tag	file:
error_code	unix/x11misc.c	/^    unsigned char error_code;$/;"	m	struct:x11_err_to_ignore	file:
errors	doc/Chapter10.html	/^<h1><a name="errors"><\/a><a name="C10"><\/a>Chapter 10: Common <a name="i0"><\/a>error messages<\/h1>$/;"	a
errors-access-denied	doc/Chapter10.html	/^<h2><a name="errors-access-denied"><\/a><a name="S10.10"><\/a>10.10 &#8216;Access denied&#8217;, &#8216;Authentication refused&#8217;<\/h2>$/;"	a
errors-cannotassignaddress	doc/Chapter10.html	/^<h2><a name="errors-cannotassignaddress"><\/a><a name="S10.19"><\/a>10.19 &#8216;Network error: Cannot assign requested address&#8217;<\/h2>$/;"	a
errors-cant-load-key	doc/Chapter10.html	/^<h2><a name="errors-cant-load-key"><\/a><a name="S10.8"><\/a>10.8 &#8216;Unable to use this private key file&#8217;, &#8216;Couldn't load private key&#8217;, &#8216;Key is of wrong type&#8217;<\/h2>$/;"	a
errors-cipher-warning	doc/Chapter10.html	/^<h2><a name="errors-cipher-warning"><\/a><a name="S10.4"><\/a>10.4 &#8216;The first cipher supported by the server is ... below the configured warning threshold&#8217;<\/h2>$/;"	a
errors-connaborted	doc/Chapter10.html	/^<h2><a name="errors-connaborted"><\/a><a name="S10.15"><\/a>10.15 &#8216;Network error: Software caused connection abort&#8217;<\/h2>$/;"	a
errors-connrefused	doc/Chapter10.html	/^<h2><a name="errors-connrefused"><\/a><a name="S10.17"><\/a>10.17 &#8216;Network error: Connection refused&#8217;<\/h2>$/;"	a
errors-connreset	doc/Chapter10.html	/^<h2><a name="errors-connreset"><\/a><a name="S10.16"><\/a>10.16 &#8216;Network error: Connection reset by peer&#8217;<\/h2>$/;"	a
errors-conntimedout	doc/Chapter10.html	/^<h2><a name="errors-conntimedout"><\/a><a name="S10.18"><\/a>10.18 &#8216;Network error: Connection timed out&#8217;<\/h2>$/;"	a
errors-crc	doc/Chapter10.html	/^<h2><a name="errors-crc"><\/a><a name="S10.12"><\/a>10.12 &#8216;Incorrect <a name="i12"><\/a>CRC received on packet&#8217; or &#8216;Incorrect <a name="i13"><\/a>MAC received on packet&#8217;<\/h2>$/;"	a
errors-garbled	doc/Chapter10.html	/^<h2><a name="errors-garbled"><\/a><a name="S10.13"><\/a>10.13 &#8216;Incoming packet was garbled on decryption&#8217;<\/h2>$/;"	a
errors-hostkey-absent	doc/Chapter10.html	/^<h2><a name="errors-hostkey-absent"><\/a><a name="S10.1"><\/a>10.1 &#8216;The server's host key is not cached in the registry&#8217;<\/h2>$/;"	a
errors-hostkey-wrong	doc/Chapter10.html	/^<h2><a name="errors-hostkey-wrong"><\/a><a name="S10.2"><\/a>10.2 &#8216;WARNING - POTENTIAL SECURITY BREACH!&#8217;<\/h2>$/;"	a
errors-internal	doc/Chapter10.html	/^<h2><a name="errors-internal"><\/a><a name="S10.7"><\/a>10.7 &#8216;<a name="i9"><\/a>Internal error&#8217;, &#8216;<a name="i10"><\/a>Internal fault&#8217;, &#8216;<a name="i11"><\/a>Assertion failed&#8217;<\/h2>$/;"	a
errors-memory	doc/Chapter10.html	/^<h2><a name="errors-memory"><\/a><a name="S10.6"><\/a>10.6 &#8216;<a name="i7"><\/a>Out of memory&#8217;<\/h2>$/;"	a
errors-no-auth	doc/Chapter10.html	/^<h2><a name="errors-no-auth"><\/a><a name="S10.11"><\/a>10.11 &#8216;No supported authentication methods available&#8217;<\/h2>$/;"	a
errors-refused	doc/Chapter10.html	/^<h2><a name="errors-refused"><\/a><a name="S10.9"><\/a>10.9 &#8216;Server refused our public key&#8217; or &#8216;Key refused&#8217;<\/h2>$/;"	a
errors-ssh-protocol	doc/Chapter10.html	/^<h2><a name="errors-ssh-protocol"><\/a><a name="S10.3"><\/a>10.3 &#8216;SSH protocol version 2 required by our configuration but server only provides (old, insecure) SSH-1&#8217;<\/h2>$/;"	a
errors-toomanyauth	doc/Chapter10.html	/^<h2><a name="errors-toomanyauth"><\/a><a name="S10.5"><\/a>10.5 &#8216;Server sent disconnect message type 2 (protocol error): "Too many authentication failures for root"&#8217;<\/h2>$/;"	a
errors-x11-proxy	doc/Chapter10.html	/^<h2><a name="errors-x11-proxy"><\/a><a name="S10.14"><\/a>10.14 &#8216;PuTTY X11 proxy: <em>various errors<\/em>&#8217;<\/h2>$/;"	a
errs	pscp.c	/^static int errs = 0;$/;"	v	file:
errs	unix/x11misc.c	/^struct x11_err_to_ignore *errs;$/;"	v	typeref:struct:x11_err_to_ignore
errsize	unix/x11misc.c	/^int nerrs, errsize;$/;"	v
errstr	charset/fromucs.c	/^    const char *errstr;$/;"	m	struct:charset_emit_param	file:
errstr	charset/toucs.c	/^    const wchar_t *errstr;$/;"	m	struct:unicode_emit_param	file:
errstring	windows/winmisc.c	/^struct errstring {$/;"	s	file:
errstring	windows/winnet.c	/^struct errstring {$/;"	s	file:
errstring_compare	windows/winmisc.c	/^static int errstring_compare(void *av, void *bv)$/;"	f	file:
errstring_compare	windows/winnet.c	/^static int errstring_compare(void *av, void *bv)$/;"	f	file:
errstring_find	windows/winmisc.c	/^static int errstring_find(void *av, void *bv)$/;"	f	file:
errstring_find	windows/winnet.c	/^static int errstring_find(void *av, void *bv)$/;"	f	file:
errstrings	windows/winmisc.c	/^static tree234 *errstrings = NULL;$/;"	v	file:
errstrings	windows/winnet.c	/^static tree234 *errstrings = NULL;$/;"	v	file:
errtitle	windows/winstuff.h	/^    char *errtitle;		       \/* title of error sub-messageboxes *\/$/;"	m	struct:dlgparam
ersatztab	windows/winctrls.c	/^void ersatztab(struct ctlpos *cp, char *stext, int sid, int lid, int s2id)$/;"	f
esc_args	terminal.h	/^    unsigned esc_args[ARGS_MAX];$/;"	m	struct:terminal_tag
esc_nargs	terminal.h	/^    int esc_nargs;$/;"	m	struct:terminal_tag
esc_query	terminal.h	/^    int esc_query;$/;"	m	struct:terminal_tag
etm	ssh.c	/^	    int etm;$/;"	m	struct:kexinit_algorithm::__anon83::__anon87	file:
etm_name	ssh.h	/^    const char *name, *etm_name;$/;"	m	struct:ssh_mac
ev_from_main	windows/winhandl.c	/^    HANDLE ev_from_main;	       \/* event used to signal back to us *\/$/;"	m	struct:handle_foreign	file:
ev_from_main	windows/winhandl.c	/^    HANDLE ev_from_main;	       \/* event used to signal back to us *\/$/;"	m	struct:handle_generic	file:
ev_from_main	windows/winhandl.c	/^    HANDLE ev_from_main;	       \/* event used to signal back to us *\/$/;"	m	struct:handle_input	file:
ev_from_main	windows/winhandl.c	/^    HANDLE ev_from_main;	       \/* event used to signal back to us *\/$/;"	m	struct:handle_output	file:
ev_to_main	windows/winhandl.c	/^    HANDLE ev_to_main;		       \/* event used to signal main thread *\/$/;"	m	struct:handle_foreign	file:
ev_to_main	windows/winhandl.c	/^    HANDLE ev_to_main;		       \/* event used to signal main thread *\/$/;"	m	struct:handle_generic	file:
ev_to_main	windows/winhandl.c	/^    HANDLE ev_to_main;		       \/* event used to signal main thread *\/$/;"	m	struct:handle_input	file:
ev_to_main	windows/winhandl.c	/^    HANDLE ev_to_main;		       \/* event used to signal main thread *\/$/;"	m	struct:handle_output	file:
event	windows/winsftp.c	/^    HANDLE event;$/;"	m	struct:command_read_ctx	file:
event_log_menuitem	unix/gtkwin.c	/^void event_log_menuitem(GtkMenuItem *item, gpointer data)$/;"	f
eventbox	unix/gtkdlg.c	/^    struct controlbox *eventbox;$/;"	m	struct:eventlog_stuff	typeref:struct:eventlog_stuff::controlbox	file:
eventlog_destroy	unix/gtkdlg.c	/^static void eventlog_destroy(GtkWidget *widget, gpointer data)$/;"	f	file:
eventlog_list_handler	unix/gtkdlg.c	/^static void eventlog_list_handler(union control *ctrl, void *dlg,$/;"	f	file:
eventlog_ok_handler	unix/gtkdlg.c	/^static void eventlog_ok_handler(union control *ctrl, void *dlg,$/;"	f	file:
eventlog_selection_clear	unix/gtkdlg.c	/^gint eventlog_selection_clear(GtkWidget *widget, GdkEventSelection *seldata,$/;"	f
eventlog_selection_get	unix/gtkdlg.c	/^void eventlog_selection_get(GtkWidget *widget, GtkSelectionData *seldata,$/;"	f
eventlog_stuff	unix/gtkdlg.c	/^struct eventlog_stuff {$/;"	s	file:
eventlogstuff	unix/gtkwin.c	/^    void *eventlogstuff;$/;"	m	struct:gui_data	file:
eventlogstuff_new	unix/gtkdlg.c	/^void *eventlogstuff_new(void)$/;"	f
events	unix/gtkdlg.c	/^    char **events;$/;"	m	struct:eventlog_stuff	file:
events	windows/windlg.c	/^static char **events = NULL;$/;"	v	file:
exact_textout	windows/window.c	/^static void exact_textout(HDC hdc, int x, int y, CONST RECT *lprc,$/;"	f	file:
exec_args	unix/uxpgnt.c	/^char **exec_args = NULL;$/;"	v
exec_prefix	Makefile	/^exec_prefix = ${prefix}$/;"	m
exhash	ssh.c	/^    void *exhash;$/;"	m	struct:ssh_tag	file:
exit_callback	unix/gtkwin.c	/^static void exit_callback(void *vinst)$/;"	f	file:
exit_code	unix/uxpty.c	/^    int exit_code;$/;"	m	struct:pty_tag	file:
exitcode	putty.h	/^    int (*exitcode) (void *handle);$/;"	m	struct:backend_tag
exitcode	ssh.c	/^    int exitcode;$/;"	m	struct:ssh_tag	file:
exited	unix/gtkwin.c	/^    int exited;$/;"	m	struct:gui_data	file:
expect	contrib/samplekex.py	/^def expect(var, expr):$/;"	f
expected_result	wildcard.c	/^    int expected_result;$/;"	m	struct:test	file:
expire_timer_context	notiming.c	/^void expire_timer_context(void *ctx)$/;"	f
expire_timer_context	timing.c	/^void expire_timer_context(void *ctx)$/;"	f
expiry	windows/wingss.c	/^    TimeStamp expiry;$/;"	m	struct:winSsh_gss_ctx	file:
exponent	ssh.h	/^    Bignum exponent;$/;"	m	struct:RSAKey
exponent	ssh.h	/^    unsigned long exponent;$/;"	m	struct:RSAKey
exponential	windows/winpgen.c	/^	int exponential;$/;"	m	struct:progress::__anon138	file:
export_ssh1	import.c	/^int export_ssh1(const Filename *filename, int type, struct RSAKey *key,$/;"	f
export_ssh2	import.c	/^int export_ssh2(const Filename *filename, int type,$/;"	f
expose_area	unix/gtkask.c	/^static gint expose_area(GtkWidget *widget, GdkEventExpose *event,$/;"	f	file:
expose_area	unix/gtkwin.c	/^gint expose_area(GtkWidget *widget, GdkEventExpose *event, gpointer data)$/;"	f
expt	testdata/bignum.py	/^    expt = sqrt(modulus*modulus*2\/5)$/;"	v
extra	ssh.h	/^    const void *extra;                 \/* private to the kex methods *\/$/;"	m	struct:ssh_kex
extra	ssh.h	/^    const void *extra;                 \/* private to the public key methods *\/$/;"	m	struct:ssh_signkey
extra_gex	sshdh.c	/^static const struct dh_extra extra_gex = {$/;"	v	typeref:struct:dh_extra	file:
extra_group1	sshdh.c	/^static const struct dh_extra extra_group1 = {$/;"	v	typeref:struct:dh_extra	file:
extra_group14	sshdh.c	/^static const struct dh_extra extra_group14 = {$/;"	v	typeref:struct:dh_extra	file:
extra_height	windows/window.c	/^static int extra_width, extra_height;$/;"	v	file:
extra_width	windows/window.c	/^static int extra_width, extra_height;$/;"	v	file:
extrabits	sshzlib.c	/^    short code, extrabits;$/;"	m	struct:__anon102	file:
extract_bits	contrib/make1305.py	/^    def extract_bits(self, start, bits=None):$/;"	m	class:Multiprecision
f	sshdes.c	489;"	d	file:
f	windows/window.c	1497;"	d	file:
f	windows/window.c	1600;"	d	file:
f	windows/winhandl.c	/^	struct handle_foreign f;$/;"	m	union:handle::__anon148	typeref:struct:handle::__anon148::handle_foreign	file:
f_open	unix/uxmisc.c	/^FILE *f_open(const Filename *filename, char const *mode, int is_private)$/;"	f
f_open	windows/winstuff.h	35;"	d
fails	cmdgen.c	/^int passes, fails;$/;"	v
fallback	unix/gtkfont.c	/^    unifont *fallback;$/;"	m	struct:multifont	file:
fallback_cmd	ssh.c	/^    int fallback_cmd;$/;"	m	struct:ssh_tag	file:
fallback_cmd_is_sftp	pscp.c	/^static int fallback_cmd_is_sftp = 0;$/;"	v	file:
family	unix/gtkfont.c	/^    char *family, *charset, *style, *stylekey;$/;"	m	struct:fontinfo	file:
family_changed	unix/gtkfont.c	/^static void family_changed(GtkTreeSelection *treeselection, gpointer data)$/;"	f	file:
family_list	unix/gtkfont.c	/^    GtkWidget *family_list, *style_list, *size_entry, *size_list;$/;"	m	struct:unifontsel_internal	file:
family_model	unix/gtkfont.c	/^    GtkListStore *family_model, *style_model, *size_model;$/;"	m	struct:unifontsel_internal	file:
familyindex	unix/gtkfont.c	/^    int familyindex, styleindex, sizeindex;$/;"	m	struct:fontinfo	file:
faq	doc/AppendixA.html	/^<h1><a name="faq"><\/a><a name="AA"><\/a>Appendix A: PuTTY <a name="i0"><\/a>FAQ<\/h1>$/;"	a
faq-32bit-64bit	doc/AppendixA.html	/^<h3><a name="faq-32bit-64bit"><\/a><a name="QA.6.10"><\/a>A.6.10 Should I run the 32-bit or the 64-bit version?<\/h3>$/;"	a
faq-admin	doc/AppendixA.html	/^<h2><a name="faq-admin"><\/a><a name="SA.9"><\/a>A.9 Administrative questions<\/h2>$/;"	a
faq-alternate-localhost	doc/AppendixA.html	/^<h3><a name="faq-alternate-localhost"><\/a><a name="QA.7.17"><\/a>A.7.17 Since I upgraded <a name="i47"><\/a>Windows XP to Service Pack 2, I can't use addresses like <code>127.0.0.2<\/code>.<\/h3>$/;"	a
faq-bce	doc/AppendixA.html	/^<h3><a name="faq-bce"><\/a><a name="QA.7.6"><\/a>A.7.6 When I run full-colour applications, I see areas of black space where colour ought to be, or vice versa.<\/h3>$/;"	a
faq-checksums	doc/AppendixA.html	/^<h3><a name="faq-checksums"><\/a><a name="QA.9.16"><\/a>A.9.16 The <code>sha1sums<\/code> \/ <code>sha256sums<\/code> \/ etc files on your download page don't match the binaries.<\/h3>$/;"	a
faq-cleanup	doc/AppendixA.html	/^<h3><a name="faq-cleanup"><\/a><a name="QA.8.2"><\/a>A.8.2 What does PuTTY leave on a system? How can I <a name="i60"><\/a>clean up after it?<\/h3>$/;"	a
faq-colours	doc/AppendixA.html	/^<h3><a name="faq-colours"><\/a><a name="QA.7.2"><\/a>A.7.2 I clicked on a colour in the <a name="i27"><\/a>Colours panel, and the colour didn't change in my terminal.<\/h3>$/;"	a
faq-commands	doc/AppendixA.html	/^<h3><a name="faq-commands"><\/a><a name="QA.6.2"><\/a>A.6.2 <a name="i18"><\/a>What commands can I type into my PuTTY terminal window?<\/h3>$/;"	a
faq-connaborted	doc/AppendixA.html	/^<h3><a name="faq-connaborted"><\/a><a name="QA.7.19"><\/a>A.7.19 Do you want to hear about &#8216;Software caused connection abort&#8217;?<\/h3>$/;"	a
faq-cutpaste	doc/AppendixA.html	/^<h3><a name="faq-cutpaste"><\/a><a name="QA.6.6"><\/a>A.6.6 How do I <a name="i21"><\/a>copy and paste between PuTTY and other Windows applications?<\/h3>$/;"	a
faq-details	doc/AppendixA.html	/^<h2><a name="faq-details"><\/a><a name="SA.5"><\/a>A.5 Details of PuTTY's operation<\/h2>$/;"	a
faq-disksettings	doc/AppendixA.html	/^<h3><a name="faq-disksettings"><\/a><a name="QA.2.6"><\/a>A.2.6 Does PuTTY support storing its settings in a disk file?<\/h3>$/;"	a
faq-dll	doc/AppendixA.html	/^<h3><a name="faq-dll"><\/a><a name="QA.4.1"><\/a>A.4.1 Is the SSH or Telnet code available as a DLL?<\/h3>$/;"	a
faq-domain	doc/AppendixA.html	/^<h3><a name="faq-domain"><\/a><a name="QA.9.1"><\/a>A.9.1 Would you like me to register you a nicer domain name?<\/h3>$/;"	a
faq-donations	doc/AppendixA.html	/^<h3><a name="faq-donations"><\/a><a name="QA.9.7"><\/a>A.9.7 How can I donate to PuTTY development?<\/h3>$/;"	a
faq-dsa	doc/AppendixA.html	/^<h3><a name="faq-dsa"><\/a><a name="QA.8.3"><\/a>A.8.3 How come PuTTY now supports <a name="i62"><\/a>DSA, when the website used to say how insecure it was?<\/h3>$/;"	a
faq-embedding	doc/AppendixA.html	/^<h2><a name="faq-embedding"><\/a><a name="SA.4"><\/a>A.4 Embedding PuTTY in other programs<\/h2>$/;"	a
faq-epoc	doc/AppendixA.html	/^<h3><a name="faq-epoc"><\/a><a name="QA.3.7"><\/a>A.3.7 Will there be a port to EPOC?<\/h3>$/;"	a
faq-export-cert	doc/AppendixA.html	/^<h3><a name="faq-export-cert"><\/a><a name="QA.9.14"><\/a>A.9.14 Can you provide us with export control information \/ FIPS certification for PuTTY?<\/h3>$/;"	a
faq-fullscreen	doc/AppendixA.html	/^<h3><a name="faq-fullscreen"><\/a><a name="QA.2.7"><\/a>A.2.7 Does PuTTY support full-screen mode, like a DOS box?<\/h3>$/;"	a
faq-hostkeys	doc/AppendixA.html	/^<h3><a name="faq-hostkeys"><\/a><a name="QA.2.9"><\/a>A.2.9 Is there an option to turn off the <a name="i4"><\/a>annoying host key prompts?<\/h3>$/;"	a
faq-howto	doc/AppendixA.html	/^<h2><a name="faq-howto"><\/a><a name="SA.6"><\/a>A.6 HOWTO questions<\/h2>$/;"	a
faq-idleout	doc/AppendixA.html	/^<h3><a name="faq-idleout"><\/a><a name="QA.7.8"><\/a>A.7.8 My PuTTY sessions unexpectedly close after they are <a name="i33"><\/a>idle for a while.<\/h3>$/;"	a
faq-indemnity	doc/AppendixA.html	/^<h3><a name="faq-indemnity"><\/a><a name="QA.9.9"><\/a>A.9.9 Can you sign an agreement indemnifying us against security problems in PuTTY?<\/h3>$/;"	a
faq-intro	doc/AppendixA.html	/^<h2><a name="faq-intro"><\/a><a name="SA.1"><\/a>A.1 Introduction<\/h2>$/;"	a
faq-ipc	doc/AppendixA.html	/^<h3><a name="faq-ipc"><\/a><a name="QA.4.3"><\/a>A.4.3 How can I use PuTTY to make an SSH connection from within another program?<\/h3>$/;"	a
faq-iphone	doc/AppendixA.html	/^<h3><a name="faq-iphone"><\/a><a name="QA.3.8"><\/a>A.3.8 Will there be a port to the iPhone?<\/h3>$/;"	a
faq-keyboard	doc/AppendixA.html	/^<h3><a name="faq-keyboard"><\/a><a name="QA.7.13"><\/a>A.7.13 One or more <a name="i40"><\/a><a name="i41"><\/a>function keys don't do what I expected in a server-side application.<\/h3>$/;"	a
faq-link	doc/AppendixA.html	/^<h3><a name="faq-link"><\/a><a name="QA.9.3"><\/a>A.9.3 Would you link to my web site from the PuTTY web site?<\/h3>$/;"	a
faq-localecho	doc/AppendixA.html	/^<h3><a name="faq-localecho"><\/a><a name="QA.2.4"><\/a>A.2.4 Does PuTTY support <a name="i2"><\/a>local echo?<\/h3>$/;"	a
faq-login	doc/AppendixA.html	/^<h3><a name="faq-login"><\/a><a name="QA.6.1"><\/a>A.6.1 What login name \/ password should I use?<\/h3>$/;"	a
faq-mac-port	doc/AppendixA.html	/^<h3><a name="faq-mac-port"><\/a><a name="QA.3.6"><\/a>A.3.6 Will there be a port to the <a name="i12"><\/a>Mac?<\/h3>$/;"	a
faq-mailinglist1	doc/AppendixA.html	/^<h3><a name="faq-mailinglist1"><\/a><a name="QA.9.5"><\/a>A.9.5 Why can't I subscribe to the putty-bugs mailing list?<\/h3>$/;"	a
faq-mailinglist2	doc/AppendixA.html	/^<h3><a name="faq-mailinglist2"><\/a><a name="QA.9.6"><\/a>A.9.6 If putty-bugs isn't a general-subscription mailing list, what is?<\/h3>$/;"	a
faq-meaning	doc/AppendixA.html	/^<h3><a name="faq-meaning"><\/a><a name="QA.10.3"><\/a>A.10.3 What does &#8216;PuTTY&#8217; mean?<\/h3>$/;"	a
faq-misc	doc/AppendixA.html	/^<h2><a name="faq-misc"><\/a><a name="SA.10"><\/a>A.10 Miscellaneous questions<\/h2>$/;"	a
faq-missing-slash	doc/AppendixA.html	/^<h3><a name="faq-missing-slash"><\/a><a name="QA.7.18"><\/a>A.7.18 PSFTP commands seem to be missing a directory separator (slash).<\/h3>$/;"	a
faq-openssh	doc/AppendixA.html	/^<h3><a name="faq-openssh"><\/a><a name="QA.10.1"><\/a>A.10.1 Is PuTTY a port of <a name="i63"><\/a>OpenSSH, or based on OpenSSH or OpenSSL?<\/h3>$/;"	a
faq-options	doc/AppendixA.html	/^<h3><a name="faq-options"><\/a><a name="QA.6.7"><\/a>A.6.7 How do I use all PuTTY's features (public keys, proxying, cipher selection, etc.) in PSCP, PSFTP and Plink?<\/h3>$/;"	a
faq-outofmem	doc/AppendixA.html	/^<h3><a name="faq-outofmem"><\/a><a name="QA.7.3"><\/a>A.7.3 After trying to establish an SSH-2 connection, PuTTY says &#8216;<a name="i28"><\/a>Out of memory&#8217; and dies.<\/h3>$/;"	a
faq-outofmem2	doc/AppendixA.html	/^<h3><a name="faq-outofmem2"><\/a><a name="QA.7.4"><\/a>A.7.4 When attempting a file transfer, either PSCP or PSFTP says &#8216;<a name="i29"><\/a>Out of memory&#8217; and dies.<\/h3>$/;"	a
faq-password-fails	doc/AppendixA.html	/^<h3><a name="faq-password-fails"><\/a><a name="QA.7.12"><\/a>A.7.12 My <a name="i38"><\/a>keyboard stops working once PuTTY displays the <a name="i39"><\/a>password prompt.<\/h3>$/;"	a
faq-password-remember	doc/AppendixA.html	/^<h3><a name="faq-password-remember"><\/a><a name="QA.2.8"><\/a>A.2.8 Does PuTTY have the ability to <a name="i3"><\/a>remember my password so I don't have to type it every time?<\/h3>$/;"	a
faq-permission	doc/AppendixA.html	/^<h3><a name="faq-permission"><\/a><a name="QA.9.8"><\/a>A.9.8 Can I have permission to put PuTTY on a cover disk \/ distribute it with other software \/ etc?<\/h3>$/;"	a
faq-permission-assurance	doc/AppendixA.html	/^<h3><a name="faq-permission-assurance"><\/a><a name="QA.9.13"><\/a>A.9.13 If you won't sign anything, can you give us some sort of assurance that you won't make PuTTY closed-source in future?<\/h3>$/;"	a
faq-permission-form	doc/AppendixA.html	/^<h3><a name="faq-permission-form"><\/a><a name="QA.9.10"><\/a>A.9.10 Can you sign this form granting us permission to use\/distribute PuTTY?<\/h3>$/;"	a
faq-permission-future	doc/AppendixA.html	/^<h3><a name="faq-permission-future"><\/a><a name="QA.9.11"><\/a>A.9.11 Can you write us a formal notice of permission to use PuTTY?<\/h3>$/;"	a
faq-permission-general	doc/AppendixA.html	/^<h3><a name="faq-permission-general"><\/a><a name="QA.9.12"><\/a>A.9.12 Can you sign <em>anything<\/em> for us?<\/h3>$/;"	a
faq-ports	doc/AppendixA.html	/^<h2><a name="faq-ports"><\/a><a name="SA.3"><\/a>A.3 Ports to other operating systems<\/h2>$/;"	a
faq-ports-general	doc/AppendixA.html	/^<h3><a name="faq-ports-general"><\/a><a name="QA.3.1"><\/a>A.3.1 What ports of PuTTY exist?<\/h3>$/;"	a
faq-pronounce	doc/AppendixA.html	/^<h3><a name="faq-pronounce"><\/a><a name="QA.10.4"><\/a>A.10.4 How do I pronounce &#8216;PuTTY&#8217;?<\/h3>$/;"	a
faq-pscp	doc/AppendixA.html	/^<h3><a name="faq-pscp"><\/a><a name="QA.6.8"><\/a>A.6.8 How do I use PSCP.EXE? When I double-click it gives me a command prompt window which then closes instantly.<\/h3>$/;"	a
faq-pscp-ascii	doc/AppendixA.html	/^<h3><a name="faq-pscp-ascii"><\/a><a name="QA.2.11"><\/a>A.2.11 Can PSCP or PSFTP transfer files in <a name="i6"><\/a>ASCII mode?<\/h3>$/;"	a
faq-pscp-protocol	doc/AppendixA.html	/^<h3><a name="faq-pscp-protocol"><\/a><a name="QA.7.1"><\/a>A.7.1 Why do I see &#8216;Fatal: Protocol error: Expected control record&#8217; in PSCP?<\/h3>$/;"	a
faq-pscp-spaces	doc/AppendixA.html	/^<h3><a name="faq-pscp-spaces"><\/a><a name="QA.6.9"><\/a>A.6.9 <a name="i22"><\/a>How do I use PSCP to copy a file whose name has spaces in?<\/h3>$/;"	a
faq-psftp-slow	doc/AppendixA.html	/^<h3><a name="faq-psftp-slow"><\/a><a name="QA.7.5"><\/a>A.7.5 PSFTP transfers files much slower than PSCP.<\/h3>$/;"	a
faq-publicpc	doc/AppendixA.html	/^<h3><a name="faq-publicpc"><\/a><a name="QA.8.1"><\/a>A.8.1 Is it safe for me to download PuTTY and use it on a public PC?<\/h3>$/;"	a
faq-puttyputty	doc/AppendixA.html	/^<h3><a name="faq-puttyputty"><\/a><a name="QA.7.10"><\/a>A.7.10 When I <code>cat<\/code> a binary file, I get &#8216;PuTTYPuTTYPuTTY&#8217; on my command line.<\/h3>$/;"	a
faq-rekey	doc/AppendixA.html	/^<h3><a name="faq-rekey"><\/a><a name="QA.7.20"><\/a>A.7.20 My SSH-2 session <a name="i52"><\/a>locks up for a few seconds every so often.<\/h3>$/;"	a
faq-resetterm	doc/AppendixA.html	/^<h3><a name="faq-resetterm"><\/a><a name="QA.7.7"><\/a>A.7.7 When I change some terminal settings, nothing happens.<\/h3>$/;"	a
faq-rh8-utf8	doc/AppendixA.html	/^<h3><a name="faq-rh8-utf8"><\/a><a name="QA.7.15"><\/a>A.7.15 When I'm connected to a <a name="i44"><\/a>Red Hat Linux 8.0 system, some characters don't display properly.<\/h3>$/;"	a
faq-savedsettings	doc/AppendixA.html	/^<h3><a name="faq-savedsettings"><\/a><a name="QA.2.5"><\/a>A.2.5 Does PuTTY support storing settings, so I don't have to change them every time?<\/h3>$/;"	a
faq-screen	doc/AppendixA.html	/^<h3><a name="faq-screen"><\/a><a name="QA.7.16"><\/a>A.7.16 Since I upgraded to PuTTY 0.54, the scrollback has stopped working when I run <code>screen<\/code>.<\/h3>$/;"	a
faq-secure	doc/AppendixA.html	/^<h2><a name="faq-secure"><\/a><a name="SA.8"><\/a>A.8 Security questions<\/h2>$/;"	a
faq-server	doc/AppendixA.html	/^<h3><a name="faq-server"><\/a><a name="QA.2.10"><\/a>A.2.10 Will you write an SSH server for the PuTTY suite, to go with the client?<\/h3>$/;"	a
faq-settings	doc/AppendixA.html	/^<h3><a name="faq-settings"><\/a><a name="QA.5.2"><\/a>A.5.2 Where does PuTTY store its data?<\/h3>$/;"	a
faq-sillyputty	doc/AppendixA.html	/^<h3><a name="faq-sillyputty"><\/a><a name="QA.10.2"><\/a>A.10.2 Where can I buy silly putty?<\/h3>$/;"	a
faq-sourceforge	doc/AppendixA.html	/^<h3><a name="faq-sourceforge"><\/a><a name="QA.9.4"><\/a>A.9.4 Why don't you move PuTTY to SourceForge?<\/h3>$/;"	a
faq-ssh1	doc/AppendixA.html	/^<h3><a name="faq-ssh1"><\/a><a name="QA.2.3"><\/a>A.2.3 Does PuTTY support SSH-1?<\/h3>$/;"	a
faq-ssh2	doc/AppendixA.html	/^<h3><a name="faq-ssh2"><\/a><a name="QA.2.1"><\/a>A.2.1 Does PuTTY support SSH-2?<\/h3>$/;"	a
faq-ssh2-keyfmt	doc/AppendixA.html	/^<h3><a name="faq-ssh2-keyfmt"><\/a><a name="QA.2.2"><\/a>A.2.2 Does PuTTY support reading OpenSSH or <code>ssh.com<\/code> SSH-2 private key files?<\/h3>$/;"	a
faq-ssh2key-ssh1conn	doc/AppendixA.html	/^<h3><a name="faq-ssh2key-ssh1conn"><\/a><a name="QA.7.14"><\/a>A.7.14 Why do I see &#8216;Couldn't load private key from ...&#8217;? Why can PuTTYgen load my key but not PuTTY?<\/h3>$/;"	a
faq-startmax	doc/AppendixA.html	/^<h3><a name="faq-startmax"><\/a><a name="QA.6.3"><\/a>A.6.3 How can I make PuTTY start up <a name="i19"><\/a>maximised?<\/h3>$/;"	a
faq-startsess	doc/AppendixA.html	/^<h3><a name="faq-startsess"><\/a><a name="QA.6.4"><\/a>A.6.4 How can I create a <a name="i20"><\/a>Windows shortcut to start a particular saved session directly?<\/h3>$/;"	a
faq-startssh	doc/AppendixA.html	/^<h3><a name="faq-startssh"><\/a><a name="QA.6.5"><\/a>A.6.5 How can I start an SSH session straight from the command line?<\/h3>$/;"	a
faq-support	doc/AppendixA.html	/^<h2><a name="faq-support"><\/a><a name="SA.2"><\/a>A.2 Features supported in PuTTY<\/h2>$/;"	a
faq-system32	doc/AppendixA.html	/^<h3><a name="faq-system32"><\/a><a name="QA.7.22"><\/a>A.7.22 When I put 32-bit PuTTY in <code>C:\\WINDOWS\\<a name="i56"><\/a>SYSTEM32<\/code> on my <a name="i57"><\/a>64-bit Windows system, <a name="i58"><\/a>&#8216;Duplicate Session&#8217; doesn't work.<\/h3>$/;"	a
faq-term	doc/AppendixA.html	/^<h3><a name="faq-term"><\/a><a name="QA.5.1"><\/a>A.5.1 What <a name="i13"><\/a>terminal type does PuTTY use?<\/h3>$/;"	a
faq-timeout	doc/AppendixA.html	/^<h3><a name="faq-timeout"><\/a><a name="QA.7.9"><\/a>A.7.9 PuTTY's network connections time out too quickly when <a name="i36"><\/a>network connectivity is temporarily lost.<\/h3>$/;"	a
faq-trouble	doc/AppendixA.html	/^<h2><a name="faq-trouble"><\/a><a name="SA.7"><\/a>A.7 Troubleshooting<\/h2>$/;"	a
faq-unix	doc/AppendixA.html	/^<h3><a name="faq-unix"><\/a><a name="QA.3.2"><\/a>A.3.2 <a name="i7"><\/a>Is there a port to Unix?<\/h3>$/;"	a
faq-unix-why	doc/AppendixA.html	/^<h3><a name="faq-unix-why"><\/a><a name="QA.3.3"><\/a>A.3.3 What's the point of the Unix port? Unix has OpenSSH.<\/h3>$/;"	a
faq-vb	doc/AppendixA.html	/^<h3><a name="faq-vb"><\/a><a name="QA.4.2"><\/a>A.4.2 Is the SSH or Telnet code available as a Visual Basic component?<\/h3>$/;"	a
faq-vendor	doc/AppendixA.html	/^<h3><a name="faq-vendor"><\/a><a name="QA.9.15"><\/a>A.9.15 As one of our existing software vendors, can you just fill in this questionnaire for us?<\/h3>$/;"	a
faq-virtuallock	doc/AppendixA.html	/^<h3><a name="faq-virtuallock"><\/a><a name="QA.8.4"><\/a>A.8.4 Couldn't Pageant use <code>VirtualLock()<\/code> to stop private keys being written to disk?<\/h3>$/;"	a
faq-webhosting	doc/AppendixA.html	/^<h3><a name="faq-webhosting"><\/a><a name="QA.9.2"><\/a>A.9.2 Would you like free web hosting for the PuTTY web site?<\/h3>$/;"	a
faq-what	doc/AppendixA.html	/^<h3><a name="faq-what"><\/a><a name="QA.1.1"><\/a>A.1.1 What is PuTTY?<\/h3>$/;"	a
faq-win31	doc/AppendixA.html	/^<h3><a name="faq-win31"><\/a><a name="QA.3.5"><\/a>A.3.5 Is there a port to <a name="i10"><\/a>Windows 3.1?<\/h3>$/;"	a
faq-wince	doc/AppendixA.html	/^<h3><a name="faq-wince"><\/a><a name="QA.3.4"><\/a>A.3.4 Will there be a port to Windows CE or PocketPC?<\/h3>$/;"	a
faq-wintitle	doc/AppendixA.html	/^<h3><a name="faq-wintitle"><\/a><a name="QA.7.11"><\/a>A.7.11 When I <code>cat<\/code> a binary file, my <a name="i37"><\/a>window title changes to a nonsense string.<\/h3>$/;"	a
faq-xpwontrun	doc/AppendixA.html	/^<h3><a name="faq-xpwontrun"><\/a><a name="QA.7.21"><\/a>A.7.21 PuTTY fails to start up. Windows claims that &#8216;the application configuration is incorrect&#8217;.<\/h3>$/;"	a
fatal	contrib/cygtermd/main.c	/^void fatal(const char *fmt, ...)$/;"	f
fatal_message_box	unix/gtkdlg.c	/^void fatal_message_box(void *window, const char *msg)$/;"	f
fatal_sig_handler	unix/uxpty.c	/^static void fatal_sig_handler(int signum)$/;"	f	file:
fatalbox	fuzzterm.c	/^void fatalbox(const char *fmt, ...) { exit(0); }$/;"	f
fatalbox	pscp.c	/^void fatalbox(const char *fmt, ...)$/;"	f
fatalbox	psftp.c	/^void fatalbox(const char *fmt, ...)$/;"	f
fatalbox	unix/gtkdlg.c	/^void fatalbox(const char *p, ...)$/;"	f
fatalbox	unix/uxpgnt.c	/^void fatalbox(const char *p, ...)$/;"	f
fatalbox	unix/uxplink.c	/^void fatalbox(const char *p, ...)$/;"	f
fatalbox	windows/window.c	/^void fatalbox(const char *fmt, ...)$/;"	f
fatalbox	windows/winplink.c	/^void fatalbox(const char *p, ...)$/;"	f
fd	contrib/cygtermd/sel.c	/^    int fd;$/;"	m	struct:sel_rfd	file:
fd	contrib/cygtermd/sel.c	/^    int fd;$/;"	m	struct:sel_wfd	file:
fd	unix/uxagentc.c	/^    int fd;$/;"	m	struct:agent_pending_query	file:
fd	unix/uxsel.c	/^    int fd;$/;"	m	struct:fd	file:
fd	unix/uxsel.c	/^struct fd {$/;"	s	file:
fd	unix/uxser.c	/^    int fd;$/;"	m	struct:serial_backend_data	file:
fd	unix/uxsftp.c	/^    int fd;$/;"	m	struct:RFile	file:
fd	unix/uxsftp.c	/^    int fd;$/;"	m	struct:WFile	file:
fd_input_func	unix/gtkcomm.c	/^gboolean fd_input_func(GIOChannel *source, GIOCondition condition,$/;"	f
fd_input_func	unix/gtkcomm.c	/^void fd_input_func(gpointer data, gint sourcefd, GdkInputCondition condition)$/;"	f
fds	unix/uxsel.c	/^static tree234 *fds;$/;"	v	file:
feedback	doc/AppendixB.html	/^<h1><a name="feedback"><\/a><a name="AB"><\/a>Appendix B: <a name="i0"><\/a>Feedback and <a name="i1"><\/a>bug reporting<\/h1>$/;"	a
feedback-address	doc/AppendixB.html	/^<h2><a name="feedback-address"><\/a><a name="SB.11"><\/a>B.11 E-mail address<\/h2>$/;"	a
feedback-bugs	doc/AppendixB.html	/^<h2><a name="feedback-bugs"><\/a><a name="SB.2"><\/a>B.2 Reporting bugs<\/h2>$/;"	a
feedback-compliments	doc/AppendixB.html	/^<h2><a name="feedback-compliments"><\/a><a name="SB.10"><\/a>B.10 Praise and compliments<\/h2>$/;"	a
feedback-feature-priority	doc/AppendixB.html	/^<h2><a name="feedback-feature-priority"><\/a><a name="SB.5"><\/a>B.5 Requesting features that have already been requested<\/h2>$/;"	a
feedback-features	doc/AppendixB.html	/^<h2><a name="feedback-features"><\/a><a name="SB.4"><\/a>B.4 Requesting extra features<\/h2>$/;"	a
feedback-general	doc/AppendixB.html	/^<h2><a name="feedback-general"><\/a><a name="SB.1"><\/a>B.1 General guidelines<\/h2>$/;"	a
feedback-largefiles	doc/AppendixB.html	/^<h3><a name="feedback-largefiles"><\/a><a name="SB.1.1"><\/a>B.1.1 Sending large attachments<\/h3>$/;"	a
feedback-mirrors	doc/AppendixB.html	/^<h2><a name="feedback-mirrors"><\/a><a name="SB.9"><\/a>B.9 Mirroring the PuTTY web site<\/h2>$/;"	a
feedback-other-fora	doc/AppendixB.html	/^<h3><a name="feedback-other-fora"><\/a><a name="SB.1.2"><\/a>B.1.2 Other places to ask for help<\/h3>$/;"	a
feedback-permission	doc/AppendixB.html	/^<h2><a name="feedback-permission"><\/a><a name="SB.8"><\/a>B.8 Asking permission for things<\/h2>$/;"	a
feedback-support	doc/AppendixB.html	/^<h2><a name="feedback-support"><\/a><a name="SB.6"><\/a>B.6 <a name="i6"><\/a>Support requests<\/h2>$/;"	a
feedback-vulns	doc/AppendixB.html	/^<h2><a name="feedback-vulns"><\/a><a name="SB.3"><\/a>B.3 Reporting security vulnerabilities<\/h2>$/;"	a
feedback-webadmin	doc/AppendixB.html	/^<h2><a name="feedback-webadmin"><\/a><a name="SB.7"><\/a>B.7 Web server administration<\/h2>$/;"	a
fgetline	misc.c	/^char *fgetline(FILE *fp)$/;"	f
fh	sftp.c	/^    struct fxp_handle *fh;$/;"	m	struct:fxp_xfer	typeref:struct:fxp_xfer::fxp_handle	file:
fieldBits	ssh.h	/^    unsigned int fieldBits;$/;"	m	struct:ec_curve
file_type	unix/uxsftp.c	/^int file_type(const char *name)$/;"	f
file_type	windows/winsftp.c	/^int file_type(const char *name)$/;"	f
filechoose_response	unix/gtkdlg.c	/^static void filechoose_response(GtkDialog *dialog, gint response,$/;"	f	file:
filecmp	cmdgen.c	/^void filecmp(char *file1, char *file2, char *fmt, ...)$/;"	f
filefont_clicked	unix/gtkdlg.c	/^static void filefont_clicked(GtkButton *button, gpointer data)$/;"	f	file:
fileinput	contrib/kh2reg.py	/^import fileinput$/;"	i
filemenu	windows/winpgen.c	/^    HMENU filemenu, keymenu, cvtmenu;$/;"	m	struct:MainDlgState	file:
filename	sftp.h	/^    char *filename, *longname;$/;"	m	struct:fxp_name
filename	unix/uxpgnt.c	/^    const char *filename;$/;"	m	struct:cmdline_key_action	file:
filename_char_sanitise	unix/uxmisc.c	/^char filename_char_sanitise(char c)$/;"	f
filename_char_sanitise	windows/winmisc.c	/^char filename_char_sanitise(char c)$/;"	f
filename_copy	unix/uxmisc.c	/^Filename *filename_copy(const Filename *fn)$/;"	f
filename_copy	windows/winmisc.c	/^Filename *filename_copy(const Filename *fn)$/;"	f
filename_deserialise	unix/uxmisc.c	/^Filename *filename_deserialise(void *vdata, int maxsize, int *used)$/;"	f
filename_deserialise	windows/winmisc.c	/^Filename *filename_deserialise(void *vdata, int maxsize, int *used)$/;"	f
filename_equal	unix/uxmisc.c	/^int filename_equal(const Filename *f1, const Filename *f2)$/;"	f
filename_equal	windows/winmisc.c	/^int filename_equal(const Filename *f1, const Filename *f2)$/;"	f
filename_free	unix/uxmisc.c	/^void filename_free(Filename *fn)$/;"	f
filename_free	windows/winmisc.c	/^void filename_free(Filename *fn)$/;"	f
filename_from_str	unix/uxmisc.c	/^Filename *filename_from_str(const char *str)$/;"	f
filename_from_str	windows/winmisc.c	/^Filename *filename_from_str(const char *str)$/;"	f
filename_is_null	unix/uxmisc.c	/^int filename_is_null(const Filename *fn)$/;"	f
filename_is_null	windows/winmisc.c	/^int filename_is_null(const Filename *fn)$/;"	f
filename_serialise	unix/uxmisc.c	/^int filename_serialise(const Filename *f, void *vdata)$/;"	f
filename_serialise	windows/winmisc.c	/^int filename_serialise(const Filename *f, void *vdata)$/;"	f
filename_to_str	unix/uxmisc.c	/^const char *filename_to_str(const Filename *fn)$/;"	f
filename_to_str	windows/winmisc.c	/^const char *filename_to_str(const Filename *fn)$/;"	f
filereq	windows/winstuff.h	/^typedef struct filereq_tag filereq; \/* cwd for file requester *\/$/;"	t	typeref:struct:filereq_tag
filereq_free	windows/winutils.c	/^void filereq_free(filereq *state)$/;"	f
filereq_new	windows/winutils.c	/^filereq *filereq_new(void)$/;"	f
filereq_tag	windows/winutils.c	/^struct filereq_tag {$/;"	s	file:
filesel_ok	unix/gtkdlg.c	/^static void filesel_ok(GtkButton *button, gpointer data)$/;"	f	file:
fileselect	dialog.h	/^    } fileselect;$/;"	m	union:control	typeref:struct:control::__anon26
filesize	sftp.c	/^    uint64 offset, furthestdata, filesize;$/;"	m	struct:fxp_xfer	file:
fileval	conf.c	/^	Filename *fileval;$/;"	m	union:value::__anon10	file:
filter	dialog.h	/^	char const *filter;$/;"	m	struct:control::__anon26
filter_buttons	unix/gtkfont.c	/^    GtkWidget *filter_buttons[4];$/;"	m	struct:unifontsel_internal	file:
filter_flags	unix/gtkfont.c	/^    int filter_flags;$/;"	m	struct:unifontsel_internal	file:
final	ssh.h	/^    void (*final)(void *, unsigned char *); \/* also frees context *\/$/;"	m	struct:ssh_hash
finalise	icons/mkicon.py	/^def finalise(canvas):$/;"	f
finalisepix	icons/mkicon.py	/^        def finalisepix(colour):$/;"	f	function:.outpix
finalisepix	icons/mkicon.py	/^    def finalisepix(colour):$/;"	f
find234	tree234.c	/^void *find234(tree234 * t, void *e, cmpfn234 cmp)$/;"	f
findIndexOfRun	minibidi.c	/^int findIndexOfRun(unsigned char* level , int start, int count, int tlevel)$/;"	f
find_app_menu_bar	unix/gtkwin.c	/^static void find_app_menu_bar(GtkWidget *widget, gpointer data)$/;"	f	file:
find_app_menu_bar_ctx	unix/gtkwin.c	/^struct find_app_menu_bar_ctx {$/;"	s	file:
find_key	unix/uxpgnt.c	/^struct pageant_pubkey *find_key(const char *string, char **retstr)$/;"	f
find_last_nonempty_line	terminal.c	/^static int find_last_nonempty_line(Terminal * term, tree234 * screen)$/;"	f	file:
find_pubkey_alg	sshpubk.c	/^const struct ssh_signkey *find_pubkey_alg(const char *name)$/;"	f
find_pubkey_alg_len	sshpubk.c	/^const struct ssh_signkey *find_pubkey_alg_len(int namelen, const char *name)$/;"	f
findfile	mkfiles.pl	/^sub findfile {$/;"	s
findpos234	tree234.c	/^void *findpos234(tree234 * t, void *e, cmpfn234 cmp, int *index)$/;"	f
findprod	testdata/bignum.py	/^def findprod(target, dir = +1, ratio=(1,1)):$/;"	f
findrel234	tree234.c	/^void *findrel234(tree234 * t, void *e, cmpfn234 cmp, int relation)$/;"	f
findrelpos234	tree234.c	/^void *findrelpos234(tree234 * t, void *e, cmpfn234 cmp,$/;"	f
findtest	tree234.c	/^int findtest(void)$/;"	f
finish_wildcard_matching	unix/uxsftp.c	/^void finish_wildcard_matching(WildcardMatcher *dir) {$/;"	f
finish_wildcard_matching	windows/winsftp.c	/^void finish_wildcard_matching(WildcardMatcher *dir)$/;"	f
finished	unix/uxpty.c	/^    int child_dead, finished;$/;"	m	struct:pty_tag	file:
finished	unix/uxser.c	/^    int finished;$/;"	m	struct:serial_backend_data	file:
first	sshzlib.c	/^    short first;		       \/* window index of first in chain *\/$/;"	m	struct:HashEntry	file:
first	wcwidth.c	/^  unsigned int first;$/;"	m	struct:interval	file:
first_fd	unix/uxsel.c	/^int first_fd(int *state, int *rwx)$/;"	f
first_in_commasep_string	ssh.c	/^static int first_in_commasep_string(char const *needle, char const *haystack,$/;"	f	file:
first_node	unix/osxlaunch.c	/^    struct node *first_node;$/;"	m	struct:bucket	typeref:struct:bucket::node	file:
first_socket	windows/winnet.c	/^SOCKET first_socket(int *state)$/;"	f
firstblock	sshzlib.c	/^    int firstblock;$/;"	m	struct:Outbuf	file:
firstbyte	rlogin.c	/^    int firstbyte;$/;"	m	struct:rlogin_tag	file:
firstpkt	x11fwd.c	/^    unsigned char firstpkt[12];	       \/* first X data packet *\/$/;"	m	struct:X11Connection	file:
fixed_pitch_fonts	windows/winstuff.h	/^    int fixed_pitch_fonts;             \/* are we constrained to fixed fonts? *\/$/;"	m	struct:dlgparam
flags	putty.h	/^GLOBAL int flags;$/;"	v
flags	sftp.h	/^    unsigned long flags;$/;"	m	struct:fxp_attrs
flags	ssh.h	/^    unsigned int flags;$/;"	m	struct:ssh2_cipher
flags	unix/gtkdlg.c	/^    int flags;$/;"	m	struct:dlgparam	file:
flags	unix/gtkfont.c	/^    int flags;$/;"	m	struct:fontinfo_realname_find	file:
flags	unix/gtkfont.c	/^    int size, flags;$/;"	m	struct:fontinfo	file:
flags	windows/winhandl.c	/^    int flags;$/;"	m	struct:handle_input	file:
flags	windows/winhandl.c	/^    int flags;$/;"	m	struct:handle_output	file:
flags	windows/winpgnt.c	/^int flags = FLAG_SYNCAGENT;$/;"	v
flash_window	windows/window.c	/^static void flash_window(int mode)$/;"	f	file:
flash_window_ex	windows/window.c	/^static BOOL flash_window_ex(DWORD dwFlags, UINT uCount, DWORD dwTimeout)$/;"	f	file:
flash_window_timer	windows/window.c	/^static void flash_window_timer(void *ctx, unsigned long now)$/;"	f	file:
flashing	windows/window.c	/^static int flashing = 0;$/;"	v	file:
flipThisRun	minibidi.c	/^void flipThisRun(bidi_char *from, unsigned char *level, int max, int count)$/;"	f
flip_full_screen	windows/window.c	/^static void flip_full_screen()$/;"	f	file:
flush	network.h	/^    void (*flush) (Socket s);$/;"	m	struct:socket_function_table
fmtid	windows/winjump.c	/^    GUID fmtid;$/;"	m	struct:_tagpropertykey	file:
fmtkey	ssh.h	/^    char *(*fmtkey) (void *key);$/;"	m	struct:ssh_signkey
fn	callback.c	/^    toplevel_callback_fn_t fn;$/;"	m	struct:callback	file:
fn	errsock.c	/^    const struct socket_function_table *fn;$/;"	m	struct:Socket_error_tag	typeref:struct:Socket_error_tag::socket_function_table	file:
fn	pageant.c	/^    const struct plug_function_table *fn;$/;"	m	struct:pageant_conn_state	typeref:struct:pageant_conn_state::plug_function_table	file:
fn	pageant.c	/^    const struct plug_function_table *fn;$/;"	m	struct:pageant_listen_state	typeref:struct:pageant_listen_state::plug_function_table	file:
fn	portfwd.c	/^    const struct plug_function_table *fn;$/;"	m	struct:PortForwarding	typeref:struct:PortForwarding::plug_function_table	file:
fn	portfwd.c	/^    const struct plug_function_table *fn;$/;"	m	struct:PortListener	typeref:struct:PortListener::plug_function_table	file:
fn	proxy.h	/^    const struct plug_function_table *fn;$/;"	m	struct:Plug_proxy_tag	typeref:struct:Plug_proxy_tag::plug_function_table
fn	proxy.h	/^    const struct socket_function_table *fn;$/;"	m	struct:Socket_proxy_tag	typeref:struct:Socket_proxy_tag::socket_function_table
fn	raw.c	/^    const struct plug_function_table *fn;$/;"	m	struct:raw_backend_data	typeref:struct:raw_backend_data::plug_function_table	file:
fn	rlogin.c	/^    const struct plug_function_table *fn;$/;"	m	struct:rlogin_tag	typeref:struct:rlogin_tag::plug_function_table	file:
fn	ssh.c	/^    const struct plug_function_table *fn;$/;"	m	struct:ssh_tag	typeref:struct:ssh_tag::plug_function_table	file:
fn	sshshare.c	/^    const struct plug_function_table *fn;$/;"	m	struct:ssh_sharing_connstate	typeref:struct:ssh_sharing_connstate::plug_function_table	file:
fn	sshshare.c	/^    const struct plug_function_table *fn;$/;"	m	struct:ssh_sharing_state	typeref:struct:ssh_sharing_state::plug_function_table	file:
fn	telnet.c	/^    const struct plug_function_table *fn;$/;"	m	struct:telnet_tag	typeref:struct:telnet_tag::plug_function_table	file:
fn	timing.c	/^    timer_fn_t fn;$/;"	m	struct:timer	file:
fn	unix/uxnet.c	/^    struct socket_function_table *fn;$/;"	m	struct:Socket_tag	typeref:struct:Socket_tag::socket_function_table	file:
fn	unix/uxpgnt.c	/^    const struct plug_function_table *fn;$/;"	m	struct:X11Connection	typeref:struct:X11Connection::plug_function_table	file:
fn	unix/uxproxy.c	/^    const struct socket_function_table *fn;$/;"	m	struct:Socket_localproxy_tag	typeref:struct:Socket_localproxy_tag::socket_function_table	file:
fn	windows/winhsock.c	/^    const struct socket_function_table *fn;$/;"	m	struct:Socket_handle_tag	typeref:struct:Socket_handle_tag::socket_function_table	file:
fn	windows/winnet.c	/^    const struct socket_function_table *fn;$/;"	m	struct:Socket_tag	typeref:struct:Socket_tag::socket_function_table	file:
fn	windows/winnps.c	/^    const struct socket_function_table *fn;$/;"	m	struct:Socket_named_pipe_server_tag	typeref:struct:Socket_named_pipe_server_tag::socket_function_table	file:
fn	x11fwd.c	/^    const struct plug_function_table *fn;$/;"	m	struct:X11Connection	typeref:struct:X11Connection::plug_function_table	file:
focus_event	unix/gtkwin.c	/^gint focus_event(GtkWidget *widget, GdkEventFocus *event, gpointer data)$/;"	f
focused	windows/winstuff.h	/^    union control *focused, *lastfocused; \/* which ctrl has focus now\/before *\/$/;"	m	struct:dlgparam	typeref:union:dlgparam::control
font	windows/winstuff.h	/^    WPARAM font;$/;"	m	struct:ctlpos
font_codepage	putty.h	/^    int font_codepage;$/;"	m	struct:unicode_data
font_dimension	unix/gtkwin.c	/^int font_dimension(void *frontend, int which)\/* 0 for width, 1 for height *\/$/;"	f
font_dualwidth	windows/window.c	/^static int font_width, font_height, font_dualwidth, font_varpitch;$/;"	v	file:
font_height	unix/gtkwin.c	/^    int font_width, font_height;$/;"	m	struct:gui_data	file:
font_height	windows/window.c	/^static int font_width, font_height, font_dualwidth, font_varpitch;$/;"	v	file:
font_varpitch	windows/window.c	/^static int font_width, font_height, font_dualwidth, font_varpitch;$/;"	v	file:
font_width	unix/gtkwin.c	/^    int font_width, font_height;$/;"	m	struct:gui_data	file:
font_width	windows/window.c	/^static int font_width, font_height, font_dualwidth, font_varpitch;$/;"	v	file:
fontclass	unix/gtkfont.c	/^    const struct unifont_vtable *fontclass;$/;"	m	struct:fontinfo	typeref:struct:fontinfo::unifont_vtable	file:
fontflag	windows/window.c	/^static int fontflag[FONT_MAXNO];$/;"	v	file:
fontinfo	unix/gtkfont.c	/^struct fontinfo {$/;"	s	file:
fontinfo	unix/gtkfont.c	/^typedef struct fontinfo fontinfo;$/;"	t	typeref:struct:fontinfo	file:
fontinfo_realname_compare	unix/gtkfont.c	/^static int fontinfo_realname_compare(void *av, void *bv)$/;"	f	file:
fontinfo_realname_find	unix/gtkfont.c	/^static int fontinfo_realname_find(void *av, void *bv)$/;"	f	file:
fontinfo_realname_find	unix/gtkfont.c	/^struct fontinfo_realname_find {$/;"	s	file:
fontinfo_selorder_compare	unix/gtkfont.c	/^static int fontinfo_selorder_compare(void *av, void *bv)$/;"	f	file:
fontname	charset/macenc.c	/^    char const *fontname;$/;"	m	struct:__anon2	file:
fonts	unix/gtkfont.c	/^    x11font_individual fonts[4];$/;"	m	struct:x11font	file:
fonts	unix/gtkwin.c	/^    unifont *fonts[4];                 \/* normal, bold, wide, widebold *\/$/;"	m	struct:gui_data	file:
fonts	windows/window.c	/^static HFONT fonts[FONT_MAXNO];$/;"	v	file:
fonts_by_realname	unix/gtkfont.c	/^    tree234 *fonts_by_realname, *fonts_by_selorder;$/;"	m	struct:unifontsel_internal	file:
fonts_by_selorder	unix/gtkfont.c	/^    tree234 *fonts_by_realname, *fonts_by_selorder;$/;"	m	struct:unifontsel_internal	file:
fontsel_add_entry	unix/gtkfont.c	/^typedef void (*fontsel_add_entry)(void *ctx, const char *realfontname,$/;"	t	file:
fontsel_ok	unix/gtkdlg.c	/^static void fontsel_ok(GtkButton *button, gpointer data)$/;"	f	file:
fontselect	dialog.h	/^    } fontselect;$/;"	m	union:control	typeref:struct:control::__anon28
fontspec_copy	unix/uxmisc.c	/^FontSpec *fontspec_copy(const FontSpec *f)$/;"	f
fontspec_copy	windows/winmisc.c	/^FontSpec *fontspec_copy(const FontSpec *f)$/;"	f
fontspec_deserialise	unix/uxmisc.c	/^FontSpec *fontspec_deserialise(void *vdata, int maxsize, int *used)$/;"	f
fontspec_deserialise	windows/winmisc.c	/^FontSpec *fontspec_deserialise(void *vdata, int maxsize, int *used)$/;"	f
fontspec_free	unix/uxmisc.c	/^void fontspec_free(FontSpec *f)$/;"	f
fontspec_free	windows/winmisc.c	/^void fontspec_free(FontSpec *f)$/;"	f
fontspec_new	unix/uxmisc.c	/^FontSpec *fontspec_new(const char *name)$/;"	f
fontspec_new	windows/winmisc.c	/^FontSpec *fontspec_new(const char *name,$/;"	f
fontspec_serialise	unix/uxmisc.c	/^int fontspec_serialise(FontSpec *f, void *data)$/;"	f
fontspec_serialise	windows/winmisc.c	/^int fontspec_serialise(FontSpec *f, void *vdata)$/;"	f
fontval	conf.c	/^	FontSpec *fontval;$/;"	m	union:value::__anon10	file:
for_writing	dialog.h	/^	int for_writing;$/;"	m	struct:control::__anon26
force_left	unix/gtkcols.h	/^    gboolean force_left;	       \/* for recalcitrant GtkLabels *\/$/;"	m	struct:ColumnsChild_tag
force_normal	windows/windlg.c	/^void force_normal(HWND hwnd)$/;"	f
forcepad	ssh.c	/^    long forcepad;	    \/* SSH-2: force padding to at least this length *\/$/;"	m	struct:Packet	file:
fork_and_exec_self	unix/gtkmain.c	/^void fork_and_exec_self(int fd_to_close, ...)$/;"	f
form_b	minibidi.c	/^    wchar_t form_b;$/;"	m	struct:__anon39	file:
format_arrow_key	terminal.c	/^int format_arrow_key(char *buf, Terminal *term, int xkey, int ctrl)$/;"	f
format_telnet_command	proxy.c	/^char *format_telnet_command(SockAddr addr, int port, Conf *conf)$/;"	f
forward	terminal.h	/^    int *forward, *backward;	       \/* the permutations of line positions *\/$/;"	m	struct:bidi_cache_entry
forwardings	sshshare.c	/^    tree234 *forwardings;          \/* stores 'struct share_forwarding' *\/$/;"	m	struct:ssh_sharing_connstate	file:
found	unix/uxpgnt.c	/^    struct pageant_pubkey *found;$/;"	m	struct:key_find_ctx	typeref:struct:key_find_ctx::pageant_pubkey	file:
fp	misc.c	/^static FILE *fp = NULL;$/;"	v	file:
fp	unix/uxprint.c	/^    FILE *fp;$/;"	m	struct:printer_job_tag	file:
fragment_tests	wildcard.c	/^const struct test fragment_tests[] = {$/;"	v	typeref:struct:test
free	putty.h	/^    void (*free) (void *handle);$/;"	m	struct:backend_tag
free	ssh.h	/^    void (*free)(void *);$/;"	m	struct:ssh_hash
free_context	ssh.h	/^    void (*free_context)(void *);$/;"	m	struct:ssh2_cipher
free_context	ssh.h	/^    void (*free_context)(void *);$/;"	m	struct:ssh_cipher
free_context	ssh.h	/^    void (*free_context)(void *);$/;"	m	struct:ssh_mac
free_ctx	fuzzterm.c	/^void free_ctx(Context ctx) { }$/;"	f
free_ctx	unix/gtkwin.c	/^void free_ctx(Context ctx)$/;"	f
free_ctx	windows/window.c	/^void free_ctx(Context ctx)$/;"	f
free_entry	conf.c	/^static void free_entry(struct conf_entry *entry)$/;"	f	file:
free_key	conf.c	/^static void free_key(struct key *key)$/;"	f	file:
free_mic	sshgss.h	/^    t_ssh_gss_free_mic free_mic;$/;"	m	struct:ssh_gss_library
free_portfwd	ssh.c	657;"	d	file:
free_portfwd_state	portfwd.c	/^static void free_portfwd_state(struct PortForwarding *pf)$/;"	f	file:
free_portlistener_state	portfwd.c	/^static void free_portlistener_state(struct PortListener *pl)$/;"	f	file:
free_prompts	misc.c	/^void free_prompts(prompts_t *p)$/;"	f
free_rportfwd	ssh.c	/^static void free_rportfwd(struct ssh_rportfwd *pf)$/;"	f	file:
free_tok	sshgss.h	/^    t_ssh_gss_free_tok free_tok;$/;"	m	struct:ssh_gss_library
free_value	conf.c	/^static void free_value(struct value *val, int type)$/;"	f	file:
freebn	sshbn.c	/^void freebn(Bignum b)$/;"	f
freefuncs	dialog.h	/^    ctrl_freefn_t *freefuncs;          \/* parallel array of free functions *\/$/;"	m	struct:controlbox
freekey	ssh.h	/^    void (*freekey) (void *key);$/;"	m	struct:ssh_signkey
freeline	terminal.c	/^static void freeline(termline *line)$/;"	f	file:
freenode234	tree234.c	/^static void freenode234(node234 * n)$/;"	f	file:
freersakey	sshrsa.c	/^void freersakey(struct RSAKey *key)$/;"	f
frees	dialog.h	/^    void **frees;		       \/* array of aux data areas to free *\/$/;"	m	struct:controlbox
freesize	dialog.h	/^    int freesize;$/;"	m	struct:controlbox
freetree234	tree234.c	/^void freetree234(tree234 * t)$/;"	f
freeze	proxy.h	/^    int freeze; \/* should we freeze the underlying socket when$/;"	m	struct:Socket_proxy_tag
from_backend	fuzzterm.c	/^int from_backend(void *frontend, int is_stderr, const char *data, int len)$/;"	f
from_backend	pscp.c	/^int from_backend(void *frontend, int is_stderr, const char *data, int datalen)$/;"	f
from_backend	psftp.c	/^int from_backend(void *frontend, int is_stderr, const char *data, int datalen)$/;"	f
from_backend	unix/gtkwin.c	/^int from_backend(void *frontend, int is_stderr, const char *data, int len)$/;"	f
from_backend	unix/uxpgnt.c	/^int from_backend(void *frontend, int is_stderr, const char *data, int datalen)$/;"	f
from_backend	unix/uxplink.c	/^int from_backend(void *frontend_handle, int is_stderr,$/;"	f
from_backend	windows/window.c	/^int from_backend(void *frontend, int is_stderr, const char *data, int len)$/;"	f
from_backend	windows/winplink.c	/^int from_backend(void *frontend_handle, int is_stderr,$/;"	f
from_backend_eof	pscp.c	/^int from_backend_eof(void *frontend)$/;"	f
from_backend_eof	psftp.c	/^int from_backend_eof(void *frontend)$/;"	f
from_backend_eof	unix/gtkwin.c	/^int from_backend_eof(void *frontend)$/;"	f
from_backend_eof	unix/uxplink.c	/^int from_backend_eof(void *frontend_handle)$/;"	f
from_backend_eof	windows/window.c	/^int from_backend_eof(void *frontend)$/;"	f
from_backend_eof	windows/winplink.c	/^int from_backend_eof(void *frontend_handle)$/;"	f
from_backend_untrusted	pscp.c	/^int from_backend_untrusted(void *frontend_handle, const char *data, int len)$/;"	f
from_backend_untrusted	psftp.c	/^int from_backend_untrusted(void *frontend_handle, const char *data, int len)$/;"	f
from_backend_untrusted	unix/gtkwin.c	/^int from_backend_untrusted(void *frontend, const char *data, int len)$/;"	f
from_backend_untrusted	unix/uxplink.c	/^int from_backend_untrusted(void *frontend_handle, const char *data, int len)$/;"	f
from_backend_untrusted	windows/window.c	/^int from_backend_untrusted(void *frontend, const char *data, int len)$/;"	f
from_backend_untrusted	windows/winplink.c	/^int from_backend_untrusted(void *frontend_handle, const char *data, int len)$/;"	f
from_cmd	unix/uxproxy.c	/^    int to_cmd, from_cmd, cmd_err;     \/* fds *\/$/;"	m	struct:Socket_localproxy_tag	file:
from_tty	unix/uxplink.c	/^static void from_tty(void *vbuf, unsigned len)$/;"	f	file:
fromxdigit	testbn.c	34;"	d	file:
frontend	callback.c	/^void *frontend = NULL;$/;"	v
frontend	ldisc.h	/^    void *frontend;$/;"	m	struct:ldisc_tag
frontend	logging.c	/^    void *frontend;$/;"	m	struct:LogContext	file:
frontend	putty.h	/^    void *frontend;$/;"	m	struct:__anon67
frontend	raw.c	/^    void *frontend;$/;"	m	struct:raw_backend_data	file:
frontend	rlogin.c	/^    void *frontend;$/;"	m	struct:rlogin_tag	file:
frontend	ssh.c	/^    void *frontend;$/;"	m	struct:ssh_tag	file:
frontend	telnet.c	/^    void *frontend;$/;"	m	struct:telnet_tag	file:
frontend	terminal.h	/^    void *frontend;$/;"	m	struct:terminal_tag
frontend	unix/uxpty.c	/^    void *frontend;$/;"	m	struct:pty_tag	file:
frontend	unix/uxser.c	/^    void *frontend;$/;"	m	struct:serial_backend_data	file:
frontend	windows/winser.c	/^    void *frontend;$/;"	m	struct:serial_backend_data	file:
frontend_echoedit_update	unix/gtkwin.c	/^void frontend_echoedit_update(void *frontend, int echo, int edit)$/;"	f
frontend_echoedit_update	unix/uxplink.c	/^void frontend_echoedit_update(void *frontend, int echo, int edit)$/;"	f
frontend_echoedit_update	windows/window.c	/^void frontend_echoedit_update(void *frontend, int echo, int edit)$/;"	f
frontend_echoedit_update	windows/winplink.c	/^void frontend_echoedit_update(void *frontend, int echo, int edit)$/;"	f
frontend_is_utf8	fuzzterm.c	/^int frontend_is_utf8(void *frontend) { return TRUE; }$/;"	f
frontend_is_utf8	unix/gtkwin.c	/^int frontend_is_utf8(void *frontend)$/;"	f
frontend_is_utf8	windows/window.c	/^int frontend_is_utf8(void *frontend)$/;"	f
frontend_keypress	unix/gtkwin.c	/^void frontend_keypress(void *handle)$/;"	f
frontend_keypress	unix/uxcons.c	/^void frontend_keypress(void *handle)$/;"	f
frontend_keypress	windows/wincons.c	/^void frontend_keypress(void *handle)$/;"	f
frontend_keypress	windows/window.c	/^void frontend_keypress(void *handle)$/;"	f
frontend_net_error_pending	unix/uxplink.c	/^void frontend_net_error_pending(void) {}$/;"	f
frontend_net_error_pending	unix/uxsftp.c	/^void frontend_net_error_pending(void) {}$/;"	f
frozen	contrib/cygtermd/sel.c	/^    int frozen;$/;"	m	struct:sel_rfd	file:
frozen	ssh.c	/^    int frozen;$/;"	m	struct:ssh_tag	file:
frozen	unix/uxnet.c	/^    int frozen; \/* this causes readability notifications to be ignored *\/$/;"	m	struct:Socket_tag	file:
frozen	windows/winhsock.c	/^    } frozen;$/;"	m	struct:Socket_handle_tag	typeref:enum:Socket_handle_tag::__anon143	file:
frozen	windows/winnet.c	/^    int frozen; \/* this causes readability notifications to be ignored *\/$/;"	m	struct:Socket_tag	file:
frozen_readable	windows/winnet.c	/^    int frozen_readable; \/* this means we missed at least one readability$/;"	m	struct:Socket_tag	file:
fset	unix/gtkfont.c	/^    PangoFontset *fset;$/;"	m	struct:pangofont	file:
full_tests	wildcard.c	/^const struct test full_tests[] = {$/;"	v	typeref:struct:test
fullhostname	ssh.c	/^    char *fullhostname;$/;"	m	struct:ssh_tag	file:
func_at_file	ar-lib	/^func_at_file ()$/;"	f
func_cl_dashL	compile	/^func_cl_dashL ()$/;"	f
func_cl_dashl	compile	/^func_cl_dashl ()$/;"	f
func_cl_wrapper	compile	/^func_cl_wrapper ()$/;"	f
func_error	ar-lib	/^func_error ()$/;"	f
func_file_conv	ar-lib	/^func_file_conv ()$/;"	f
func_file_conv	compile	/^func_file_conv ()$/;"	f
funky_type	terminal.h	/^    int funky_type;$/;"	m	struct:terminal_tag
furthestdata	sftp.c	/^    uint64 offset, furthestdata, filesize;$/;"	m	struct:fxp_xfer	file:
fuzzterm_DEPENDENCIES	Makefile	/^fuzzterm_DEPENDENCIES = libversion.a$/;"	m
fuzzterm_LDADD	Makefile	/^fuzzterm_LDADD = libversion.a$/;"	m
fuzzterm_OBJECTS	Makefile	/^fuzzterm_OBJECTS = $(am_fuzzterm_OBJECTS)$/;"	m
fuzzterm_SOURCES	Makefile	/^fuzzterm_SOURCES = be_none.c callback.c charset\/fromucs.c charset\/localenc.c \\$/;"	m
fwd	sshshare.c	/^    struct share_forwarding *fwd;$/;"	m	struct:share_globreq	typeref:struct:share_globreq::share_forwarding	file:
fxp_attrs	sftp.h	/^struct fxp_attrs {$/;"	s
fxp_close_recv	sftp.c	/^int fxp_close_recv(struct sftp_packet *pktin, struct sftp_request *req)$/;"	f
fxp_close_send	sftp.c	/^struct sftp_request *fxp_close_send(struct fxp_handle *handle)$/;"	f
fxp_dup_name	sftp.c	/^struct fxp_name *fxp_dup_name(struct fxp_name *name)$/;"	f
fxp_error	sftp.c	/^const char *fxp_error(void)$/;"	f
fxp_error_message	sftp.c	/^static const char *fxp_error_message;$/;"	v	file:
fxp_error_type	sftp.c	/^int fxp_error_type(void)$/;"	f
fxp_errtype	sftp.c	/^static int fxp_errtype;$/;"	v	file:
fxp_free_name	sftp.c	/^void fxp_free_name(struct fxp_name *name)$/;"	f
fxp_free_names	sftp.c	/^void fxp_free_names(struct fxp_names *names)$/;"	f
fxp_fsetstat_recv	sftp.c	/^int fxp_fsetstat_recv(struct sftp_packet *pktin, struct sftp_request *req)$/;"	f
fxp_fsetstat_send	sftp.c	/^struct sftp_request *fxp_fsetstat_send(struct fxp_handle *handle,$/;"	f
fxp_fstat_recv	sftp.c	/^int fxp_fstat_recv(struct sftp_packet *pktin, struct sftp_request *req,$/;"	f
fxp_fstat_send	sftp.c	/^struct sftp_request *fxp_fstat_send(struct fxp_handle *handle)$/;"	f
fxp_get_userdata	sftp.c	/^void *fxp_get_userdata(struct sftp_request *req)$/;"	f
fxp_got_status	sftp.c	/^static int fxp_got_status(struct sftp_packet *pktin)$/;"	f	file:
fxp_handle	sftp.h	/^struct fxp_handle {$/;"	s
fxp_init	sftp.c	/^int fxp_init(void)$/;"	f
fxp_internal_error	sftp.c	/^static void fxp_internal_error(const char *msg)$/;"	f	file:
fxp_mkdir_recv	sftp.c	/^int fxp_mkdir_recv(struct sftp_packet *pktin, struct sftp_request *req)$/;"	f
fxp_mkdir_send	sftp.c	/^struct sftp_request *fxp_mkdir_send(const char *path)$/;"	f
fxp_name	sftp.h	/^struct fxp_name {$/;"	s
fxp_names	sftp.h	/^struct fxp_names {$/;"	s
fxp_open_recv	sftp.c	/^struct fxp_handle *fxp_open_recv(struct sftp_packet *pktin,$/;"	f
fxp_open_send	sftp.c	/^struct sftp_request *fxp_open_send(const char *path, int type,$/;"	f
fxp_opendir_recv	sftp.c	/^struct fxp_handle *fxp_opendir_recv(struct sftp_packet *pktin,$/;"	f
fxp_opendir_send	sftp.c	/^struct sftp_request *fxp_opendir_send(const char *path)$/;"	f
fxp_read_recv	sftp.c	/^int fxp_read_recv(struct sftp_packet *pktin, struct sftp_request *req,$/;"	f
fxp_read_send	sftp.c	/^struct sftp_request *fxp_read_send(struct fxp_handle *handle,$/;"	f
fxp_readdir_recv	sftp.c	/^struct fxp_names *fxp_readdir_recv(struct sftp_packet *pktin,$/;"	f
fxp_readdir_send	sftp.c	/^struct sftp_request *fxp_readdir_send(struct fxp_handle *handle)$/;"	f
fxp_realpath_recv	sftp.c	/^char *fxp_realpath_recv(struct sftp_packet *pktin, struct sftp_request *req)$/;"	f
fxp_realpath_send	sftp.c	/^struct sftp_request *fxp_realpath_send(const char *path)$/;"	f
fxp_remove_recv	sftp.c	/^int fxp_remove_recv(struct sftp_packet *pktin, struct sftp_request *req)$/;"	f
fxp_remove_send	sftp.c	/^struct sftp_request *fxp_remove_send(const char *fname)$/;"	f
fxp_rename_recv	sftp.c	/^int fxp_rename_recv(struct sftp_packet *pktin, struct sftp_request *req)$/;"	f
fxp_rename_send	sftp.c	/^struct sftp_request *fxp_rename_send(const char *srcfname,$/;"	f
fxp_rmdir_recv	sftp.c	/^int fxp_rmdir_recv(struct sftp_packet *pktin, struct sftp_request *req)$/;"	f
fxp_rmdir_send	sftp.c	/^struct sftp_request *fxp_rmdir_send(const char *path)$/;"	f
fxp_set_userdata	sftp.c	/^void fxp_set_userdata(struct sftp_request *req, void *data)$/;"	f
fxp_setstat_recv	sftp.c	/^int fxp_setstat_recv(struct sftp_packet *pktin, struct sftp_request *req)$/;"	f
fxp_setstat_send	sftp.c	/^struct sftp_request *fxp_setstat_send(const char *fname,$/;"	f
fxp_stat_recv	sftp.c	/^int fxp_stat_recv(struct sftp_packet *pktin, struct sftp_request *req,$/;"	f
fxp_stat_send	sftp.c	/^struct sftp_request *fxp_stat_send(const char *fname)$/;"	f
fxp_write_recv	sftp.c	/^int fxp_write_recv(struct sftp_packet *pktin, struct sftp_request *req)$/;"	f
fxp_write_send	sftp.c	/^struct sftp_request *fxp_write_send(struct fxp_handle *handle,$/;"	f
fxp_xfer	sftp.c	/^struct fxp_xfer {$/;"	s	file:
g	ssh.h	/^    Bignum p, q, g, y, x;$/;"	m	struct:dss_key
g	sshdh.c	/^    Bignum x, e, p, q, qmask, g;$/;"	m	struct:dh_ctx	file:
g	unix/gtkdlg.c	/^    struct { unsigned char r, g, b, ok; } coloursel_result;   \/* 0-255 *\/$/;"	m	struct:dlgparam::__anon116	file:
g	windows/winhandl.c	/^	struct handle_generic g;$/;"	m	union:handle::__anon148	typeref:struct:handle::__anon148::handle_generic	file:
g	windows/winstuff.h	/^    struct { unsigned char r, g, b, ok; } coloursel_result;   \/* 0-255 *\/$/;"	m	struct:dlgparam::__anon149
g_ascii_isspace	unix/gtkcompat.h	28;"	d
g_ascii_strcasecmp	unix/gtkfont.c	45;"	d	file:
g_ascii_strncasecmp	unix/gtkfont.c	46;"	d	file:
g_object_get_data	unix/gtkcompat.h	34;"	d
g_object_ref_sink	unix/gtkcompat.h	36;"	d
g_object_set_data	unix/gtkcompat.h	35;"	d
g_signal_connect	unix/gtkcompat.h	29;"	d
g_signal_connect_swapped	unix/gtkcompat.h	30;"	d
g_signal_emit_by_name	unix/gtkcompat.h	32;"	d
g_signal_handler_disconnect	unix/gtkcompat.h	33;"	d
g_signal_stop_emission_by_name	unix/gtkcompat.h	31;"	d
gc	unix/gtkfont.c	/^    GC gc;$/;"	m	struct:x11font_individual	file:
gc	unix/gtkfont.h	/^            GdkGC *gc;$/;"	m	struct:unifont_drawctx::__anon127::__anon128
gdata	sshdh.c	/^    const unsigned char *pdata, *gdata; \/* NULL means group exchange *\/$/;"	m	struct:dh_extra	file:
gdk	unix/gtkfont.h	/^        } gdk;$/;"	m	union:unifont_drawctx::__anon127	typeref:struct:unifont_drawctx::__anon127::__anon128
gdk_cursor_new	unix/gtkcompat.h	197;"	d
gdk_get_display	unix/gtkcompat.h	195;"	d
gdk_visual_get_depth	unix/gtkcompat.h	90;"	d
gdk_window_get_screen	unix/gtkcompat.h	168;"	d
gdkwin	unix/gtkfont.h	/^            GdkWindow *gdkwin;$/;"	m	struct:unifont_drawctx::__anon127::__anon129
gedit	config.c	/^    union control *listbox, *redit, *gedit, *bedit, *button;$/;"	m	struct:colour_data	typeref:union:colour_data::	file:
gen_add	contrib/make1305.py	/^def gen_add(target):$/;"	f
gen_final_reduce	contrib/make1305.py	/^def gen_final_reduce(target):$/;"	f
gen_mul	contrib/make1305.py	/^def gen_mul(target):$/;"	f
general_textout	windows/window.c	/^static void general_textout(HDC hdc, int x, int y, CONST RECT *lprc,$/;"	f	file:
generate	ssh.h	/^    void (*generate) (void *, unsigned char *blk, int len, unsigned long seq);$/;"	m	struct:ssh_mac
generate_key_thread	windows/winpgen.c	/^static DWORD WINAPI generate_key_thread(void *param)$/;"	f	file:
generating_ids	windows/winpgen.c	/^static const int generating_ids[] = { IDC_GENERATING, IDC_PROGRESS, 0 };$/;"	v	file:
generation_thread_exists	windows/winpgen.c	/^    int generation_thread_exists;$/;"	m	struct:MainDlgState	file:
generic	dialog.h	/^    } generic;$/;"	m	union:control	typeref:struct:control::__anon18
genresult	ssh.h	/^    void (*genresult) (void *, unsigned char *);$/;"	m	struct:ssh_mac
geometry_string	unix/gtkmain.c	/^static const char *geometry_string;$/;"	v	file:
get	terminal.c	/^static int get(struct buf *b)$/;"	f	file:
get160	sshdss.c	/^static Bignum get160(const char **data, int *datalen)$/;"	f	file:
getPreviousLevel	minibidi.c	/^int getPreviousLevel(unsigned char* level, int from)$/;"	f
getType	minibidi.c	/^unsigned char getType(int ch)$/;"	f
get_clip	fuzzterm.c	/^void get_clip(void *frontend, wchar_t **w, int *i) { }$/;"	f
get_clip	unix/gtkwin.c	/^void get_clip(void *frontend, wchar_t ** p, int *len)$/;"	f
get_clip	windows/window.c	/^void get_clip(void *frontend, wchar_t **p, int *len)$/;"	f
get_ctx	fuzzterm.c	/^Context get_ctx(void *frontend) { $/;"	f
get_ctx	unix/gtkwin.c	/^Context get_ctx(void *frontend)$/;"	f
get_ctx	windows/window.c	/^Context get_ctx(void *frontend)$/;"	f
get_default_sid	windows/winpgnt.c	/^PSID get_default_sid(void)$/;"	f
get_dir_list	pscp.c	/^static void get_dir_list(int argc, char *argv[])$/;"	f	file:
get_file_posn	unix/uxsftp.c	/^uint64 get_file_posn(WFile *f)$/;"	f
get_file_posn	windows/winsftp.c	/^uint64 get_file_posn(WFile *f)$/;"	f
get_font_width	windows/window.c	/^static int get_font_width(HDC hdc, const TEXTMETRIC *tm)$/;"	f	file:
get_fp	cmdgen.c	/^char *get_fp(char *filename)$/;"	f
get_fullscreen_rect	windows/window.c	/^static int get_fullscreen_rect(RECT * ss)$/;"	f	file:
get_hostname	unix/uxnet.c	/^char *get_hostname(void)$/;"	f
get_hostname	windows/winnet.c	/^char *get_hostname(void)$/;"	f
get_jumplist_registry_entries	windows/winstore.c	/^char *get_jumplist_registry_entries (void)$/;"	f
get_label_text_dimensions	unix/gtkmisc.c	/^void get_label_text_dimensions(const char *text, int *width, int *height)$/;"	f
get_line_end	proxy.c	/^static int get_line_end (char * data, int len)$/;"	f	file:
get_listitemheight	unix/gtkdlg.c	/^int get_listitemheight(GtkWidget *w)$/;"	f
get_mic	pgssapi.h	/^    t_gss_get_mic get_mic;$/;"	m	struct:gssapi_functions
get_mic	sshgss.h	/^    t_ssh_gss_get_mic get_mic;$/;"	m	struct:ssh_gss_library
get_monitor_geometry	unix/gtkwin.c	/^static void get_monitor_geometry(GtkWidget *widget, GdkRectangle *geometry)$/;"	f	file:
get_program_path	unix/osxlaunch.c	/^char *get_program_path(void)$/;"	f
get_random_data	cmdgen.c	/^char *get_random_data(int len, const char *device)$/;"	f
get_random_data	cmdgen.c	39;"	d	file:
get_random_data	unix/uxgen.c	/^char *get_random_data(int len, const char *device)$/;"	f
get_remote_username	settings.c	/^char *get_remote_username(Conf *conf)$/;"	f
get_sesslist	settings.c	/^void get_sesslist(struct sesslist *list, int allocate)$/;"	f
get_setting	unix/uxstore.c	/^const char *get_setting(const char *key)$/;"	f
get_specials	putty.h	/^    const struct telnet_special *(*get_specials) (void *handle);$/;"	m	struct:backend_tag	typeref:struct:backend_tag::get_specials
get_ssh_string	misc.c	/^void *get_ssh_string(int *datalen, const void **data, int *stringlen)$/;"	f
get_ssh_uint32	misc.c	/^int get_ssh_uint32(int *datalen, const void **data, unsigned *ret)$/;"	f
get_ttychar	unix/uxplink.c	/^static char *get_ttychar(struct termios *t, int index)$/;"	f	file:
get_ttymode	unix/gtkwin.c	/^char *get_ttymode(void *frontend, const char *mode)$/;"	f
get_ttymode	unix/uxplink.c	/^char *get_ttymode(void *frontend, const char *mode)$/;"	f
get_ttymode	unix/uxsftp.c	/^char *get_ttymode(void *frontend, const char *mode) { return NULL; }$/;"	f
get_ttymode	windows/window.c	/^char *get_ttymode(void *frontend, const char *mode)$/;"	f
get_ttymode	windows/winplink.c	/^char *get_ttymode(void *frontend, const char *mode) { return NULL; }$/;"	f
get_ttymode	windows/winsftp.c	/^char *get_ttymode(void *frontend, const char *mode) { return NULL; }$/;"	f
get_unitab	windows/winucs.c	/^void get_unitab(int codepage, wchar_t * unitab, int ftype)$/;"	f
get_unused_env_prefix	unix/osxlaunch.c	/^char *get_unused_env_prefix(void)$/;"	f
get_user_sid	windows/winsecur.c	/^PSID get_user_sid(void)$/;"	f
get_username	unix/uxmisc.c	/^char *get_username(void)$/;"	f
get_username	windows/winmisc.c	/^char *get_username(void)$/;"	f
get_userpass_input	unix/gtkwin.c	/^int get_userpass_input(prompts_t *p, const unsigned char *in, int inlen)$/;"	f
get_userpass_input	unix/uxplink.c	/^int get_userpass_input(prompts_t *p, const unsigned char *in, int inlen)$/;"	f
get_userpass_input	unix/uxsftp.c	/^int get_userpass_input(prompts_t *p, const unsigned char *in, int inlen)$/;"	f
get_userpass_input	windows/window.c	/^int get_userpass_input(prompts_t *p, const unsigned char *in, int inlen)$/;"	f
get_userpass_input	windows/winplink.c	/^int get_userpass_input(prompts_t *p, const unsigned char *in, int inlen)$/;"	f
get_userpass_input	windows/winsftp.c	/^int get_userpass_input(prompts_t *p, const unsigned char *in, int inlen)$/;"	f
get_window	unix/gtkwin.c	/^void *get_window(void *frontend)$/;"	f
get_window_pixels	fuzzterm.c	/^void get_window_pixels(void *frontend, int *x, int *y) { *x = 0; *y = 0; }$/;"	f
get_window_pixels	unix/gtkwin.c	/^void get_window_pixels(void *frontend, int *x, int *y)$/;"	f
get_window_pixels	windows/window.c	/^void get_window_pixels(void *frontend, int *x, int *y)$/;"	f
get_window_pos	fuzzterm.c	/^void get_window_pos(void *frontend, int *x, int *y) { *x = 0; *y = 0; }$/;"	f
get_window_pos	unix/gtkwin.c	/^void get_window_pos(void *frontend, int *x, int *y)$/;"	f
get_window_pos	windows/window.c	/^void get_window_pos(void *frontend, int *x, int *y)$/;"	f
get_window_title	fuzzterm.c	/^char *get_window_title(void *frontend, int icon) { return "moo"; }$/;"	f
get_window_title	unix/gtkwin.c	/^char *get_window_title(void *frontend, int icon)$/;"	f
get_window_title	windows/window.c	/^char *get_window_title(void *frontend, int icon)$/;"	f
get_windowid	unix/gtkwin.c	/^long get_windowid(void *frontend)$/;"	f
get_x_display	unix/gtkwin.c	/^const char *get_x_display(void *frontend)$/;"	f
getmp	sshdss.c	/^static Bignum getmp(const char **data, int *datalen)$/;"	f	file:
getmp	sshecc.c	/^static Bignum getmp(const char **data, int *datalen)$/;"	f	file:
getmp	sshrsa.c	/^static Bignum getmp(const char **data, int *datalen)$/;"	f	file:
getmp_le	sshecc.c	/^static Bignum getmp_le(const char **data, int *datalen)$/;"	f	file:
getmppoint	sshecc.c	/^static int getmppoint(const char **data, int *datalen, struct ec_point *point)$/;"	f	file:
getopt	contrib/kh2reg.py	/^import getopt$/;"	i
getsids	windows/winsecur.c	/^int getsids(char **error)$/;"	f
getstring	sshdss.c	/^static void getstring(const char **data, int *datalen,$/;"	f	file:
getstring	sshecc.c	/^static void getstring(const char **data, int *datalen,$/;"	f	file:
getstring	sshrsa.c	/^static void getstring(const char **data, int *datalen,$/;"	f	file:
getstring	sshshare.c	/^static char *getstring(const void *data, int datalen)$/;"	f	file:
getstring_inner	sshshare.c	/^static int getstring_inner(const void *vdata, int datalen,$/;"	f	file:
getstring_size	sshshare.c	/^static int getstring_size(const void *data, int datalen)$/;"	f	file:
getticks	unix/uxmisc.c	/^unsigned long getticks(void)$/;"	f
getword	contrib/make1305.py	/^    def getword(self, n):$/;"	m	class:Multiprecision
gex_list	sshdh.c	/^static const struct ssh_kex *const gex_list[] = {$/;"	v	file:
gid	sftp.h	/^    unsigned long gid;$/;"	m	struct:fxp_attrs
give_advice	missing	/^give_advice ()$/;"	f
glen	sshdh.c	/^    int plen, glen;$/;"	m	struct:dh_extra	file:
globbed	unix/uxsftp.c	/^    glob_t globbed;$/;"	m	struct:WildcardMatcher	file:
globreq_head	sshshare.c	/^    struct share_globreq *globreq_head, *globreq_tail;$/;"	m	struct:ssh_sharing_connstate	typeref:struct:ssh_sharing_connstate::share_globreq	file:
globreq_tail	sshshare.c	/^    struct share_globreq *globreq_head, *globreq_tail;$/;"	m	struct:ssh_sharing_connstate	typeref:struct:ssh_sharing_connstate::	file:
glyphcache	unix/gtkfont.c	/^    struct cairo_cached_glyph *glyphcache;$/;"	m	struct:x11font_individual	typeref:struct:x11font_individual::cairo_cached_glyph	file:
got	pageant.c	/^    unsigned len, got;$/;"	m	struct:pageant_conn_state	file:
got_advapi	windows/winsecur.c	/^int got_advapi(void)$/;"	f
got_crypt	windows/wincapi.c	/^int got_crypt(void)$/;"	f
got_host	unix/uxputty.c	/^static int got_host = 0;$/;"	v	file:
got_pty	ssh.c	/^    int got_pty;           \/* affects EOF behaviour on main channel *\/$/;"	m	struct:ssh_tag	file:
got_verstring	sshshare.c	/^    int sent_verstring, got_verstring, curr_packetlen;$/;"	m	struct:ssh_sharing_connstate	file:
gotcrc	ssh.c	/^    unsigned long realcrc, gotcrc;$/;"	m	struct:rdpkt1_state_tag	file:
gotdata	windows/winhandl.c	/^    handle_inputfn_t gotdata;$/;"	m	struct:handle_input	file:
gotkey_ids	windows/winpgen.c	/^static const int gotkey_ids[] = {$/;"	v	file:
gotpos	unix/gtkwin.c	/^    int xpos, ypos, gotpos, gravity;$/;"	m	struct:gui_data	file:
gppfile	settings.c	/^static void gppfile(void *handle, const char *name, Conf *conf, int primary)$/;"	f	file:
gppfont	settings.c	/^static void gppfont(void *handle, const char *name, Conf *conf, int primary)$/;"	f	file:
gppi	settings.c	/^static void gppi(void *handle, const char *name, int def,$/;"	f	file:
gppi_raw	settings.c	/^static int gppi_raw(void *handle, const char *name, int def)$/;"	f	file:
gppmap	settings.c	/^static int gppmap(void *handle, const char *name, Conf *conf, int primary)$/;"	f	file:
gpps	settings.c	/^static void gpps(void *handle, const char *name, const char *def,$/;"	f	file:
gpps_raw	settings.c	/^static char *gpps_raw(void *handle, const char *name, const char *def)$/;"	f	file:
gprefs	settings.c	/^static void gprefs(void *sesskey, const char *name, const char *def,$/;"	f	file:
gprefs_from_str	settings.c	/^static void gprefs_from_str(const char *str,$/;"	f	file:
gravity	unix/gtkwin.c	/^    int xpos, ypos, gotpos, gravity;$/;"	m	struct:gui_data	file:
greeting	contrib/encodelib.py	/^def greeting(string):$/;"	f
greeting	contrib/samplekex.py	/^greeting = sys.stdin.readline()$/;"	v
greypix	icons/mkicon.py	/^    def greypix(value):$/;"	f
group	contrib/samplekex.py	/^group = 0xf5d3849d2092fd427b4ebd838ea4830397a55f80b644626320dbbe51e8f63ed88148d787c94e7e67e4f393f26c565e1992b0cff8a47a953439462a4d0ffa5763ef60ff908f8ee6c4f6ef9f32b9ba50f01ad56fe7ebe90876a5cf61813a4ad4ba7ec0704303c9bf887d36abbd6c2aa9545fc2263232927e731060f5c701c96dc34016636df438ce30973715f121d767cfb98b5d09ae7b86fa36a051ad3c2941a295a68e2f583a56bc69913ec9d25abef4fdf1e31ede827a02620db058b9f041da051c8c0f13b132c17ceb893fa7c4cd8d8feebd82c5f9120cb221b8e88c5fe4dc17ca020a535484c92c7d4bee69c7703e1fa9a652d444c80065342c6ec0fac23c24de246e3dee72ca8bc8beccdade2b36771efcc350558268f5352ae53f2f71db62249ad9ac4fabdd6dfb099c6cff8c05bdea894390f9860f011cca046dfeb2f6ef81094e7980be526742706d1f3db920db107409291bb4c11f9a7dcbfaf26d808e6f9fe636b26b939de419129e86b1e632c60ec23b65c815723c5d861af068fd0ac8b37f4c06ecbd5cb2ef069ca8daac5cbd67c6182a65fed656d0dfbbb8a430b1dbac7bd6303bec8de078fe69f443a7bc8131a284d25dc2844f096240bfc61b62e91a87802987659b884c094c68741d29aa5ca19b9457e1f9df61c7dbbb13a61a79e4670b086027f20da2af4f5b020725f8828726379f429178926a1f0ea03f$/;"	v
group14_list	sshdh.c	/^static const struct ssh_kex *const group14_list[] = {$/;"	v	file:
group1_list	sshdh.c	/^static const struct ssh_kex *const group1_list[] = {$/;"	v	file:
groupgen	contrib/samplekex.py	/^groupgen = 5$/;"	v
groupname	ssh.h	/^    const char *name, *groupname;$/;"	m	struct:ssh_kex
gs	doc/Chapter2.html	/^<h1><a name="gs"><\/a><a name="C2"><\/a>Chapter 2: Getting started with PuTTY<\/h1>$/;"	a
gs-hostkey	doc/Chapter2.html	/^<h2><a name="gs-hostkey"><\/a><a name="S2.2"><\/a>2.2 <a name="i9"><\/a>Verifying the host key (SSH only)<\/h2>$/;"	a
gs-insecure	doc/Chapter2.html	/^<h2><a name="gs-insecure"><\/a><a name="S2.1"><\/a>2.1 <a name="i0"><\/a>Starting a session<\/h2>$/;"	a
gs-login	doc/Chapter2.html	/^<h2><a name="gs-login"><\/a><a name="S2.3"><\/a>2.3 <a name="i16"><\/a>Logging in<\/h2>$/;"	a
gs-logout	doc/Chapter2.html	/^<h2><a name="gs-logout"><\/a><a name="S2.5"><\/a>2.5 <a name="i23"><\/a>Logging out<\/h2>$/;"	a
gs-session	doc/Chapter2.html	/^<h2><a name="gs-session"><\/a><a name="S2.4"><\/a>2.4 After logging in<\/h2>$/;"	a
gss_OID	pgssapi.h	/^typedef gss_OID_desc *gss_OID;$/;"	t
gss_OID_desc	pgssapi.h	/^} gss_OID_desc;$/;"	t	typeref:struct:gss_OID_desc_struct
gss_OID_desc_struct	pgssapi.h	/^typedef struct gss_OID_desc_struct {$/;"	s
gss_OID_set	pgssapi.h	/^typedef gss_OID_set_desc *gss_OID_set;$/;"	t
gss_OID_set_desc	pgssapi.h	/^} gss_OID_set_desc;$/;"	t	typeref:struct:gss_OID_set_desc_struct
gss_OID_set_desc_struct	pgssapi.h	/^typedef struct gss_OID_set_desc_struct  {$/;"	s
gss_buffer_desc	pgssapi.h	/^} gss_buffer_desc, *gss_buffer_t;$/;"	t	typeref:struct:gss_buffer_desc_struct
gss_buffer_desc_struct	pgssapi.h	/^typedef struct gss_buffer_desc_struct {$/;"	s
gss_buffer_t	pgssapi.h	/^} gss_buffer_desc, *gss_buffer_t;$/;"	t	typeref:struct:gss_buffer_desc_struct
gss_channel_bindings_struct	pgssapi.h	/^typedef struct gss_channel_bindings_struct {$/;"	s
gss_channel_bindings_t	pgssapi.h	/^} *gss_channel_bindings_t;$/;"	t	typeref:struct:gss_channel_bindings_struct
gss_cred_id_t	pgssapi.h	/^typedef void * gss_cred_id_t;$/;"	t
gss_ctx_id_t	pgssapi.h	/^typedef void * gss_ctx_id_t;$/;"	t
gss_init	unix/uxgss.c	/^static void gss_init(struct ssh_gss_library *lib, void *dlhandle,$/;"	f	file:
gss_mech_krb5	windows/wingss.c	/^const Ssh_gss_buf gss_mech_krb5={9,"\\x2A\\x86\\x48\\x86\\xF7\\x12\\x01\\x02\\x02"};$/;"	v
gss_mech_krb5_desc	pgssapi.c	/^static gss_OID_desc gss_mech_krb5_desc =$/;"	v	file:
gss_name_t	pgssapi.h	/^typedef void * gss_name_t;$/;"	t
gss_qop_t	pgssapi.h	/^typedef OM_uint32 gss_qop_t;$/;"	t
gssapi	sshgss.h	/^	struct gssapi_functions gssapi;$/;"	m	union:ssh_gss_library::__anon89	typeref:struct:ssh_gss_library::__anon89::gssapi_functions
gssapi_functions	pgssapi.h	/^struct gssapi_functions {$/;"	s
gssapi_ssh_gss_ctx	sshgssc.h	/^typedef struct gssapi_ssh_gss_ctx {$/;"	s
gssapi_ssh_gss_ctx	sshgssc.h	/^} gssapi_ssh_gss_ctx;$/;"	t	typeref:struct:gssapi_ssh_gss_ctx
gsslibkeywords	fuzzterm.c	/^const struct keyvalwhere gsslibkeywords[0] = { };$/;"	v	typeref:struct:keyvalwhere
gsslibkeywords	nogss.c	/^const struct keyvalwhere gsslibkeywords[1] = { { "dummy", 0, -1, -1 } };$/;"	v	typeref:struct:keyvalwhere
gsslibkeywords	unix/uxgss.c	/^const struct keyvalwhere gsslibkeywords[] = {$/;"	v	typeref:struct:keyvalwhere
gsslibkeywords	windows/wingss.c	/^const struct keyvalwhere gsslibkeywords[] = {$/;"	v	typeref:struct:keyvalwhere
gsslibnames	fuzzterm.c	/^const char *const gsslibnames[0] = { };$/;"	v
gsslibnames	nogss.c	/^const char *const gsslibnames[1] = { "dummy" };$/;"	v
gsslibnames	unix/uxgss.c	/^const char *const gsslibnames[1] = {$/;"	v
gsslibnames	unix/uxgss.c	/^const char *const gsslibnames[4] = {$/;"	v
gsslibnames	windows/wingss.c	/^const char *const gsslibnames[3] = {$/;"	v
gsslibs	ssh.c	/^    struct ssh_gss_liblist *gsslibs;$/;"	m	struct:ssh_tag	typeref:struct:ssh_tag::ssh_gss_liblist	file:
gsslist_handler	config.c	/^static void gsslist_handler(union control *ctrl, void *dlg,$/;"	f	file:
gsslogmsg	sshgss.h	/^    const char *gsslogmsg;$/;"	m	struct:ssh_gss_library
gsslogmsg	windows/wingss.c	/^const char *gsslogmsg = NULL;$/;"	v
gtk1_widget_set_unset_flag	unix/gtkcompat.h	16;"	d
gtk_adjustment_get_value	unix/gtkcompat.h	67;"	d
gtk_adjustment_set_lower	unix/gtkcompat.h	62;"	d
gtk_adjustment_set_page_increment	unix/gtkcompat.h	65;"	d
gtk_adjustment_set_page_size	unix/gtkcompat.h	64;"	d
gtk_adjustment_set_step_increment	unix/gtkcompat.h	66;"	d
gtk_adjustment_set_upper	unix/gtkcompat.h	63;"	d
gtk_askpass_cleanup	unix/gtkask.c	/^static void gtk_askpass_cleanup(struct askpass_ctx *ctx)$/;"	f	file:
gtk_askpass_main	unix/gtkask.c	/^char *gtk_askpass_main(const char *display, const char *wintitle,$/;"	f
gtk_askpass_setup	unix/gtkask.c	/^static const char *gtk_askpass_setup(struct askpass_ctx *ctx,$/;"	f	file:
gtk_bin_get_child	unix/gtkcompat.h	55;"	d
gtk_color_selection_dialog_get_color_selection	unix/gtkcompat.h	56;"	d
gtk_color_selection_set_has_opacity_control	unix/gtkcompat.h	45;"	d
gtk_combo_box_new_with_model_and_entry	unix/gtkcompat.h	169;"	d
gtk_container_get_border_width	unix/gtkcompat.h	54;"	d
gtk_dialog_get_action_area	unix/gtkcompat.h	49;"	d
gtk_dialog_get_content_area	unix/gtkcompat.h	48;"	d
gtk_dialog_set_can_default	unix/gtkcompat.h	50;"	d
gtk_hbox_new	unix/gtkcompat.h	188;"	d
gtk_hseparator_new	unix/gtkcompat.h	184;"	d
gtk_notebook_set_current_page	unix/gtkcompat.h	44;"	d
gtk_radio_button_get_group	unix/gtkcompat.h	43;"	d
gtk_selection_data_get_data	unix/gtkcompat.h	59;"	d
gtk_selection_data_get_data_type	unix/gtkcompat.h	58;"	d
gtk_selection_data_get_format	unix/gtkcompat.h	61;"	d
gtk_selection_data_get_length	unix/gtkcompat.h	60;"	d
gtk_selection_data_get_target	unix/gtkcompat.h	57;"	d
gtk_setup_config_box	unix/gtkcfg.c	/^void gtk_setup_config_box(struct controlbox *b, int midsession, void *win)$/;"	f
gtk_vbox_new	unix/gtkcompat.h	190;"	d
gtk_vscrollbar_new	unix/gtkcompat.h	192;"	d
gtk_widget_get_mapped	unix/gtkcompat.h	76;"	d
gtk_widget_get_parent	unix/gtkcompat.h	52;"	d
gtk_widget_get_realized	unix/gtkcompat.h	77;"	d
gtk_widget_get_state	unix/gtkcompat.h	78;"	d
gtk_widget_get_visible	unix/gtkcompat.h	75;"	d
gtk_widget_get_window	unix/gtkcompat.h	51;"	d
gtk_widget_set_allocation	unix/gtkcompat.h	53;"	d
gtk_widget_set_can_default	unix/gtkcompat.h	73;"	d
gtk_widget_set_has_window	unix/gtkcompat.h	69;"	d
gtk_widget_set_mapped	unix/gtkcompat.h	71;"	d
gtk_widget_set_size_request	unix/gtkcompat.h	42;"	d
gtkargvstart	unix/gtkmain.c	/^static char *progname, **gtkargvstart;$/;"	v	file:
gtkcomm_setup	unix/gtkcomm.c	/^void gtkcomm_setup(void)$/;"	f
gui_data	unix/gtkwin.c	/^struct gui_data {$/;"	s	file:
h	ssh.h	/^    uint32 h[4];$/;"	m	struct:__anon92
h	ssh.h	/^    uint32 h[5];$/;"	m	struct:__anon93
h	ssh.h	/^    uint32 h[8];$/;"	m	struct:__anon94
h	ssh.h	/^    uint64 h[8];$/;"	m	struct:__anon95
h	sshccp.c	/^    bigval h;$/;"	m	struct:poly1305	file:
h	sshcrcda.c	/^    uint16 *h;$/;"	m	struct:crcda_ctx	file:
h	unix/gtkcols.h	/^    gint x, y, w, h;           \/* used during an individual size computation *\/$/;"	m	struct:ColumnsChild_tag
h	windows/winhandl.c	/^    HANDLE h;			       \/* the handle itself *\/$/;"	m	struct:handle_foreign	file:
h	windows/winhandl.c	/^    HANDLE h;			       \/* the handle itself *\/$/;"	m	struct:handle_generic	file:
h	windows/winhandl.c	/^    HANDLE h;			       \/* the handle itself *\/$/;"	m	struct:handle_input	file:
h	windows/winhandl.c	/^    HANDLE h;			       \/* the handle itself *\/$/;"	m	struct:handle_output	file:
h	windows/winsftp.c	/^    HANDLE h;$/;"	m	struct:DirHandle	file:
h	windows/winsftp.c	/^    HANDLE h;$/;"	m	struct:RFile	file:
h	windows/winsftp.c	/^    HANDLE h;$/;"	m	struct:WFile	file:
h	windows/winsftp.c	/^    HANDLE h;$/;"	m	struct:WildcardMatcher	file:
h1 	doc/chm.css	/^h1 { font-weight: bold; font-size: 150%; }$/;"	s
h2 	doc/chm.css	/^h2 { font-weight: bold; font-size: 130%; }$/;"	s
h3 	doc/chm.css	/^h3 { font-weight: bold; font-size: 120%; }$/;"	s
hHash	ssh.h	/^    unsigned long hHash;$/;"	m	struct:MD5Context
halfchannels	sshshare.c	/^    tree234 *halfchannels;         \/* stores 'struct share_halfchannel' *\/$/;"	m	struct:ssh_sharing_connstate	file:
halfopen	ssh.c	/^    int halfopen;$/;"	m	struct:ssh_channel	file:
halftone	icons/mkicon.py	/^    def halftone(col1, col2):$/;"	f
halibutescape	licence.pl	/^sub halibutescape {$/;"	s
handle	sshgss.h	/^    void *handle;$/;"	m	struct:ssh_gss_library
handle	windows/winhandl.c	/^struct handle {$/;"	s	file:
handle_add_foreign_event	windows/winhandl.c	/^struct handle *handle_add_foreign_event(HANDLE event,$/;"	f
handle_backlog	windows/winhandl.c	/^int handle_backlog(struct handle *h)$/;"	f
handle_cmp_evtomain	windows/winhandl.c	/^static int handle_cmp_evtomain(void *av, void *bv)$/;"	f	file:
handle_destroy	windows/winhandl.c	/^static void handle_destroy(struct handle *h)$/;"	f	file:
handle_find_evtomain	windows/winhandl.c	/^static int handle_find_evtomain(void *av, void *bv)$/;"	f	file:
handle_foreign	windows/winhandl.c	/^struct handle_foreign {$/;"	s	file:
handle_free	windows/winhandl.c	/^void handle_free(struct handle *h)$/;"	f
handle_generic	windows/winhandl.c	/^struct handle_generic {$/;"	s	file:
handle_get_events	windows/winhandl.c	/^HANDLE *handle_get_events(int *nevents)$/;"	f
handle_get_privdata	windows/winhandl.c	/^void *handle_get_privdata(struct handle *h)$/;"	f
handle_got_event	windows/winhandl.c	/^void handle_got_event(HANDLE event)$/;"	f
handle_gotdata	windows/winhsock.c	/^static int handle_gotdata(struct handle *h, void *data, int len)$/;"	f	file:
handle_input	windows/winhandl.c	/^struct handle_input {$/;"	s	file:
handle_input_new	windows/winhandl.c	/^struct handle *handle_input_new(HANDLE handle, handle_inputfn_t gotdata,$/;"	f
handle_input_threadfunc	windows/winhandl.c	/^static DWORD WINAPI handle_input_threadfunc(void *param)$/;"	f	file:
handle_inputfn_t	windows/winstuff.h	/^typedef int (*handle_inputfn_t)(struct handle *h, void *data, int len);$/;"	t
handle_output	windows/winhandl.c	/^struct handle_output {$/;"	s	file:
handle_output_new	windows/winhandl.c	/^struct handle *handle_output_new(HANDLE handle, handle_outputfn_t sentdata,$/;"	f
handle_output_threadfunc	windows/winhandl.c	/^static DWORD WINAPI handle_output_threadfunc(void *param)$/;"	f	file:
handle_outputfn_t	windows/winstuff.h	/^typedef void (*handle_outputfn_t)(struct handle *h, int new_backlog);$/;"	t
handle_prefslist	windows/winctrls.c	/^int handle_prefslist(struct prefslist *hdl,$/;"	f
handle_sentdata	windows/winhsock.c	/^static void handle_sentdata(struct handle *h, int new_backlog)$/;"	f	file:
handle_socket_unfreeze	windows/winhsock.c	/^static void handle_socket_unfreeze(void *psv)$/;"	f	file:
handle_stderr	windows/winhsock.c	/^static int handle_stderr(struct handle *h, void *data, int len)$/;"	f	file:
handle_throttle	windows/winhandl.c	/^static void handle_throttle(struct handle_input *ctx, int backlog)$/;"	f	file:
handle_try_output	windows/winhandl.c	/^static void handle_try_output(struct handle_output *ctx)$/;"	f	file:
handle_unthrottle	windows/winhandl.c	/^void handle_unthrottle(struct handle *h, int backlog)$/;"	f
handle_write	windows/winhandl.c	/^int handle_write(struct handle *h, const void *data, int len)$/;"	f
handle_write_eof	windows/winhandl.c	/^void handle_write_eof(struct handle *h)$/;"	f
handler	dialog.h	/^	handler_fn handler;$/;"	m	struct:control::__anon18
handler	ssh.c	/^    cchandler_fn_t handler;$/;"	m	struct:outstanding_channel_request	file:
handler	ssh.c	/^    chandler_fn_t handler;$/;"	m	struct:queued_handler	file:
handler_fn	dialog.h	/^typedef void (*handler_fn)(union control *ctrl, void *dlg,$/;"	t
handler_fn_t	ssh.c	/^typedef void (*handler_fn_t)(Ssh ssh, struct Packet *pktin);$/;"	t	file:
handles_by_evtomain	windows/winhandl.c	/^static tree234 *handles_by_evtomain;$/;"	v	file:
has_compat	terminal.c	67;"	d	file:
has_focus	terminal.h	/^    int has_focus;$/;"	m	struct:terminal_tag
has_glyph	unix/gtkfont.c	/^    int (*has_glyph)(unifont *font, wchar_t glyph);$/;"	m	struct:unifont_vtable	file:
has_help	windows/winhelp.c	/^int has_help(void)$/;"	f
has_list	dialog.h	/^	int has_list;$/;"	m	struct:control::__anon21
has_security	windows/winpgnt.c	/^static int has_security;$/;"	v	file:
hash	ssh.h	/^    const struct ssh_hash *hash;$/;"	m	struct:ssh_kex	typeref:struct:ssh_kex::ssh_hash
hash	sshecc.c	/^    const struct ssh_hash *hash;$/;"	m	struct:ecsign_extra	typeref:struct:ecsign_extra::ssh_hash	file:
hash_mpint	ssh.c	/^static void hash_mpint(const struct ssh_hash *h, void *s, Bignum b)$/;"	f	file:
hash_string	ssh.c	/^static void hash_string(const struct ssh_hash *h, void *s, void *str, int len)$/;"	f	file:
hash_uint32	ssh.c	/^static void hash_uint32(const struct ssh_hash *h, void *s, unsigned i)$/;"	f	file:
hashtab	sshzlib.c	/^    struct HashEntry hashtab[HASHMAX];$/;"	m	struct:LZ77InternalContext	typeref:struct:LZ77InternalContext::HashEntry	file:
hashval	sshzlib.c	/^    short hashval;$/;"	m	struct:WindowEntry	file:
hat	icons/mkicon.py	/^def hat(size):$/;"	f
have_controlling_tty	unix/uxpgnt.c	/^int have_controlling_tty(void)$/;"	f
have_ssh_host_key	unix/uxstore.c	/^int have_ssh_host_key(const char *hostname, int port,$/;"	f
have_ssh_host_key	windows/winstore.c	/^int have_ssh_host_key(const char *hostname, int port,$/;"	f
hbox	unix/gtkwin.c	/^    GtkBox *hbox;$/;"	m	struct:gui_data	file:
hclen	sshzlib.c	/^    int sym, hlit, hdist, hclen, lenptr, lenextrabits, lenaddon, len,$/;"	m	struct:zlib_decompress_ctx	file:
hdist	sshzlib.c	/^    int sym, hlit, hdist, hclen, lenptr, lenextrabits, lenaddon, len,$/;"	m	struct:zlib_decompress_ctx	file:
head	contrib/cygtermd/sel.c	/^    struct bufchain_granule *head, *tail;$/;"	m	struct:bufchain_tag	typeref:struct:bufchain_tag::bufchain_granule	file:
head	misc.h	/^    struct bufchain_granule *head, *tail;$/;"	m	struct:bufchain_tag	typeref:struct:bufchain_tag::bufchain_granule
head	sftp.c	/^    struct req *head, *tail;$/;"	m	struct:fxp_xfer	typeref:struct:fxp_xfer::req	file:
height	dialog.h	/^	int height;		       \/* height in lines *\/$/;"	m	struct:control::__anon25
height	unix/gtkask.c	/^    int width, height, current;$/;"	m	struct:drawing_area_ctx	file:
height	unix/gtkfont.h	/^    int width, height, ascent, descent;$/;"	m	struct:unifont
height	unix/gtkwin.c	/^    int width, height;$/;"	m	struct:gui_data	file:
height	windows/winstuff.h	/^    int height;$/;"	m	struct:FontSpec
help	cmdgen.c	/^void help(void)$/;"	f
help	unix/gtkmain.c	/^static void help(FILE *fp) {$/;"	f	file:
help_handler	windows/wincfg.c	/^static void help_handler(union control *ctrl, void *dlg,$/;"	f	file:
help_has_contents	windows/winhelp.c	/^static int help_has_contents;$/;"	v	file:
help_path	windows/winhelp.c	/^static char *help_path;$/;"	v	file:
helpctx	dialog.h	/^	intorptr helpctx;$/;"	m	struct:control::__anon18
hex	unix/uxstore.c	/^static const char hex[16] = "0123456789ABCDEF";$/;"	v	file:
hex	windows/winstore.c	/^static const char hex[16] = "0123456789ABCDEF";$/;"	v	file:
hexstr	testdata/bignum.py	/^def hexstr(n):$/;"	f
hi	int64.h	/^    unsigned long hi, lo;$/;"	m	struct:__anon35
hidemany	windows/winpgen.c	/^static void hidemany(HWND hwnd, const int *ids, int hideit)$/;"	f	file:
hinst	windows/winstuff.h	/^GLOBAL HINSTANCE hinst;$/;"	v
hk	ssh.c	/^        } hk;$/;"	m	union:kexinit_algorithm::__anon83	typeref:struct:kexinit_algorithm::__anon83::__anon85	file:
hklist_handler	config.c	/^static void hklist_handler(union control *ctrl, void *dlg,$/;"	f	file:
hknames	settings.c	/^static const struct keyvalwhere hknames[] = {$/;"	v	typeref:struct:keyvalwhere	file:
hlen	sftp.h	/^    int hlen;$/;"	m	struct:fxp_handle
hlen	ssh.h	/^    int hlen; \/* output length in bytes *\/$/;"	m	struct:ssh_hash
hlit	sshzlib.c	/^    int sym, hlit, hdist, hclen, lenptr, lenextrabits, lenaddon, len,$/;"	m	struct:zlib_decompress_ctx	file:
hmac_sha1_simple	sshsha.c	/^void hmac_sha1_simple(void *key, int keylen, void *data, int datalen,$/;"	f
hmacmd5_bytes	sshmd5.c	/^static void hmacmd5_bytes(void *handle, unsigned char const *blk, int len)$/;"	f	file:
hmacmd5_chap	cproxy.c	/^static void hmacmd5_chap(const unsigned char *challenge, int challen,$/;"	f	file:
hmacmd5_do_hmac	sshmd5.c	/^void hmacmd5_do_hmac(void *handle, unsigned char const *blk, int len,$/;"	f
hmacmd5_do_hmac_internal	sshmd5.c	/^static void hmacmd5_do_hmac_internal(void *handle,$/;"	f	file:
hmacmd5_do_hmac_ssh	sshmd5.c	/^static void hmacmd5_do_hmac_ssh(void *handle, unsigned char const *blk, int len,$/;"	f	file:
hmacmd5_free_context	sshmd5.c	/^void hmacmd5_free_context(void *handle)$/;"	f
hmacmd5_generate	sshmd5.c	/^static void hmacmd5_generate(void *handle, unsigned char *blk, int len,$/;"	f	file:
hmacmd5_genresult	sshmd5.c	/^static void hmacmd5_genresult(void *handle, unsigned char *hmac)$/;"	f	file:
hmacmd5_key	sshmd5.c	/^void hmacmd5_key(void *handle, void const *keyv, int len)$/;"	f
hmacmd5_key_16	sshmd5.c	/^static void hmacmd5_key_16(void *handle, unsigned char *key)$/;"	f	file:
hmacmd5_make_context	sshmd5.c	/^void *hmacmd5_make_context(void *cipher_ctx)$/;"	f
hmacmd5_start	sshmd5.c	/^static void hmacmd5_start(void *handle)$/;"	f	file:
hmacmd5_verify	sshmd5.c	/^static int hmacmd5_verify(void *handle, unsigned char *blk, int len,$/;"	f	file:
hmacmd5_verresult	sshmd5.c	/^static int hmacmd5_verresult(void *handle, unsigned char const *hmac)$/;"	f	file:
hmacsha1_96_genresult	sshsha.c	/^static void hmacsha1_96_genresult(void *handle, unsigned char *hmac)$/;"	f	file:
hmacsha1_96_verresult	sshsha.c	/^static int hmacsha1_96_verresult(void *handle, unsigned char const *hmac)$/;"	f	file:
hmacsha1_bytes	sshsha.c	/^static void hmacsha1_bytes(void *handle, unsigned char const *blk, int len)$/;"	f	file:
hmacsha1_genresult	sshsha.c	/^static void hmacsha1_genresult(void *handle, unsigned char *hmac)$/;"	f	file:
hmacsha1_start	sshsha.c	/^static void hmacsha1_start(void *handle)$/;"	f	file:
hmacsha1_verresult	sshsha.c	/^static int hmacsha1_verresult(void *handle, unsigned char const *hmac)$/;"	f	file:
hmacsha256_bytes	sshsh256.c	/^static void hmacsha256_bytes(void *handle, unsigned char const *blk, int len)$/;"	f	file:
hmacsha256_genresult	sshsh256.c	/^static void hmacsha256_genresult(void *handle, unsigned char *hmac)$/;"	f	file:
hmacsha256_start	sshsh256.c	/^static void hmacsha256_start(void *handle)$/;"	f	file:
hmacsha256_verresult	sshsh256.c	/^static int hmacsha256_verresult(void *handle, unsigned char const *hmac)$/;"	f	file:
homedir	psftp.c	/^char *pwd, *homedir;$/;"	v
host	config.c	/^    union control *host, *port;$/;"	m	struct:hostport	typeref:union:hostport::control	file:
host	sshshare.c	/^    char *host;$/;"	m	struct:share_forwarding	file:
host_alias	Makefile	/^host_alias = $/;"	m
host_strchr	misc.c	/^char *host_strchr(const char *s, int c)$/;"	f
host_strchr_internal	misc.c	/^static const char *host_strchr_internal(const char *s, const char *set,$/;"	f	file:
host_strcspn	misc.c	/^size_t host_strcspn(const char *s, const char *set)$/;"	f
host_strduptrim	misc.c	/^char *host_strduptrim(const char *s)$/;"	f
host_strrchr	misc.c	/^char *host_strrchr(const char *s, int c)$/;"	f
hostkey	ssh.c	/^            const struct ssh_signkey *hostkey;$/;"	m	struct:kexinit_algorithm::__anon83::__anon85	typeref:struct:kexinit_algorithm::__anon83::__anon85::ssh_signkey	file:
hostkey	ssh.c	/^    const struct ssh_signkey *hostkey;$/;"	m	struct:ssh_tag	typeref:struct:ssh_tag::ssh_signkey	file:
hostkey_algs	ssh.c	/^const static struct ssh_signkey_with_user_pref_id hostkey_algs[] = {$/;"	v	typeref:struct:ssh_signkey_with_user_pref_id	file:
hostkey_regname	windows/winstore.c	/^static void hostkey_regname(char *buffer, const char *hostname,$/;"	f	file:
hostkey_str	ssh.c	/^    char *hostkey_str; \/* string representation, for easy checking in rekeys *\/$/;"	m	struct:ssh_tag	file:
hostname	portfwd.c	/^    char *hostname;$/;"	m	struct:PortForwarding	file:
hostname	portfwd.c	/^    char *hostname;$/;"	m	struct:PortListener	file:
hostname	ssh.h	/^    char *hostname;$/;"	m	struct:X11Display
hostname	unix/uxnet.c	/^    char hostname[512];		       \/* Store an unresolved host name. *\/$/;"	m	struct:SockAddr_tag	file:
hostname	windows/winnet.c	/^    char hostname[512];		       \/* Store an unresolved host name. *\/$/;"	m	struct:SockAddr_tag	file:
hostport	config.c	/^struct hostport {$/;"	s	file:
hprinter	windows/winprint.c	/^    HANDLE hprinter;$/;"	m	struct:printer_job_tag	file:
hscroll	dialog.h	/^        int hscroll;$/;"	m	struct:control::__anon25
hstring	sftp.h	/^    char *hstring;$/;"	m	struct:fxp_handle
htmldir	Makefile	/^htmldir = ${docdir}$/;"	m
hwnd	windows/winstuff.h	/^    HWND hwnd;			       \/* the hwnd of the dialog box *\/$/;"	m	struct:dlgparam
hwnd	windows/winstuff.h	/^    HWND hwnd;$/;"	m	struct:ctlpos
hwnd	windows/winstuff.h	/^GLOBAL HWND hwnd;	\/* the main terminal window *\/$/;"	v
i	conf.c	/^	int i;$/;"	m	union:constkey::__anon9	file:
i	conf.c	/^	int i;$/;"	m	union:key::__anon8	file:
i	dialog.h	/^typedef union { void *p; int i; } intorptr;$/;"	m	union:__anon16
i	network.h	/^typedef union { void *p; int i; } accept_ctx_t;$/;"	m	union:__anon40
i	ssh.c	/^    int i;$/;"	m	struct:rdpkt1_state_tag	file:
i	ssh.c	/^    int i;$/;"	m	struct:rdpkt2_bare_state_tag	file:
i	ssh.c	/^    int i;$/;"	m	struct:rdpkt2_state_tag	file:
i	ssharcf.c	/^    unsigned char i, j, s[256];$/;"	m	struct:__anon72	file:
i	unix/uxsftp.c	/^    int i;$/;"	m	struct:WildcardMatcher	file:
i	windows/winhandl.c	/^	struct handle_input i;$/;"	m	union:handle::__anon148	typeref:struct:handle::__anon148::handle_input	file:
i	windows/winstore.c	/^    int i;$/;"	m	struct:enumsettings	file:
i0	doc/AppendixE.html	/^<a name="i0"><\/a>We create <a name="i1"><\/a>GPG signatures for all the PuTTY files distributed from our web site, so that users can be confident that the files have not been tampered with. Here we identify our public keys, and explain our signature policy so you can have an accurate idea of what each signature guarantees. This description is provided as both a web page on the PuTTY site, and an appendix in the PuTTY manual.$/;"	a
i0	doc/Chapter1.html	/^Multi-user operating systems, such as Unix and VMS, usually present a <a name="i0"><\/a>command-line interface to the user, much like the &#8216;<a name="i1"><\/a>Command Prompt&#8217; or &#8216;<a name="i2"><\/a>MS-DOS Prompt&#8217; in Windows. The system prints a prompt, and you type commands which the system will obey.$/;"	a
i0	doc/Chapter3.html	/^<a name="i0"><\/a>Often in a PuTTY session you will find text on your terminal screen which you want to type in again. Like most other terminal emulators, PuTTY allows you to copy and paste the text rather than having to type it again. Also, copy and paste uses the <a name="i1"><\/a>Windows <a name="i2"><\/a>clipboard, so that you can paste (for example) URLs into a web browser, or paste from a word processor or spreadsheet into your terminal session.$/;"	a
i0	doc/Chapter4.html	/^This chapter describes all the <a name="i0"><\/a>configuration options in PuTTY.$/;"	a
i0	doc/index.html	/^<em>Note to Unix users:<\/em> this manual currently primarily documents the Windows versions of the PuTTY utilities. Some options are therefore mentioned that are absent from the <a name="i0"><\/a>Unix version; the Unix version has features not described here; and the <a name="i1"><\/a><code>pterm<\/code> and command-line <code>puttygen<\/code> utilities are not described at all. The only Unix-specific documentation that currently exists is the <a name="i2"><\/a>man pages.$/;"	a
i1	doc/AppendixA.html	/^<a name="i1"><\/a>In general, if you want to know if PuTTY supports a particular feature, you should look for it on the <a href="https:\/\/www.chiark.greenend.org.uk\/~sgtatham\/putty\/">PuTTY web site<\/a>. In particular:$/;"	a
i1	doc/AppendixC.html	/^PuTTY is <a name="i1"><\/a>copyright 1997-2017 Simon Tatham.$/;"	a
i1	doc/Chapter10.html	/^If you see this message and you know that your installation of PuTTY <em>has<\/em> connected to the same server before, it may have been recently upgraded to SSH protocol version 2. SSH protocols 1 and 2 use separate host keys, so when you first use <a name="i1"><\/a>SSH-2 with a server you have only used SSH-1 with before, you will see this message again. You should verify the correctness of the key as before.$/;"	a
i1	doc/Chapter2.html	/^When you start PuTTY, you will see a <a name="i1"><\/a>dialog box. This dialog box allows you to control everything PuTTY can do. See <a href="Chapter4.html#config">chapter 4<\/a> for details of all the things you can control.$/;"	a
i1	doc/Chapter5.html	/^<a name="i1"><\/a>PSCP, the PuTTY Secure Copy client, is a tool for <a name="i2"><\/a>transferring files securely between computers using an SSH connection.$/;"	a
i1	doc/Chapter6.html	/^<a name="i1"><\/a>PSFTP, the PuTTY SFTP client, is a tool for <a name="i2"><\/a>transferring files securely between computers using an SSH connection.$/;"	a
i1	doc/Chapter7.html	/^<a name="i1"><\/a>Plink is a command-line connection tool similar to UNIX <code>ssh<\/code>. It is mostly used for <a name="i2"><\/a>automated operations, such as making CVS access a repository on a remote server.$/;"	a
i1	doc/Chapter8.html	/^In conventional password authentication, you prove you are who you claim to be by proving that you know the correct password. The only way to prove you know the password is to tell the server what you think the password is. This means that if the server has been hacked, or <a name="i1"><\/a><em>spoofed<\/em> (see <a href="Chapter2.html#gs-hostkey">section 2.2<\/a>), an attacker can learn your password.$/;"	a
i1	doc/Chapter9.html	/^Pageant is an SSH <a name="i1"><\/a>authentication agent. It holds your <a name="i2"><\/a>private keys in memory, already decoded, so that you can use them often <a name="i3"><\/a>without needing to type a <a name="i4"><\/a>passphrase.$/;"	a
i10	doc/Chapter1.html	/^you want to use a <a name="i10"><\/a>bulletin board system, talker or MUD which can be accessed using Telnet.$/;"	a
i10	doc/Chapter2.html	/^If you are not using the <a name="i10"><\/a>SSH protocol, you can skip this section.$/;"	a
i10	doc/Chapter4.html	/^To save your default settings: first set up the settings the way you want them saved. Then come back to the Session panel. Select the &#8216;<a name="i10"><\/a>Default Settings&#8217; entry in the saved sessions list, with a single click. Then press the &#8216;Save&#8217; button.$/;"	a
i10	doc/Chapter5.html	/^This is due to a <a name="i10"><\/a>fundamental insecurity in the old-style <a name="i11"><\/a>SCP protocol: the client sends the wildcard string (<code>*.c<\/code>) to the server, and the server sends back a sequence of file names that match the wildcard pattern. However, there is nothing to stop the server sending back a <em>different<\/em> pattern and writing over one of your other files: if you request <code>*.c<\/code>, the server might send back the file name <code>AUTOEXEC.BAT<\/code> and install a virus for you. Since the wildcard matching rules are decided by the server, the client cannot reliably verify that the filenames sent back match the pattern.$/;"	a
i10	doc/Chapter8.html	/^There is more than one <a name="i10"><\/a>public-key algorithm available. The most common are <a name="i11"><\/a>RSA and <a name="i12"><\/a>ECDSA, but others exist, notably <a name="i13"><\/a>DSA (otherwise known as DSS), the USA's federal Digital Signature Standard. The key types supported by PuTTY are described in <a href="#puttygen-keytype">section 8.2.2<\/a>.$/;"	a
i102	doc/Chapter3.html	/^A lot of <a name="i102"><\/a>Internet protocols are composed of commands and responses in plain text. For example, <a name="i103"><\/a>SMTP (the protocol used to transfer e-mail), <a name="i104"><\/a>NNTP (the protocol used to transfer Usenet news), and <a name="i105"><\/a>HTTP (the protocol used to serve Web pages) all consist of commands in readable plain text.$/;"	a
i104	doc/Chapter4.html	/^NOTE that this feature is a <em>potential <a name="i104"><\/a>security hazard<\/em>. If a malicious application can write data to your terminal (for example, if you merely <code>cat<\/code> a file owned by someone else on the server machine), it can change your window title (unless you have disabled this as mentioned in <a href="#config-features-retitle">section 4.6.5<\/a>) and then use this service to have the new window title sent back to the server as if typed at the keyboard. This allows an attacker to fake keypresses and potentially cause your server-side applications to do things you didn't want. Therefore this feature is disabled by default, and we recommend you do not set it to &#8216;Window title&#8217; unless you <em>really<\/em> know what you are doing.$/;"	a
i106	doc/Chapter3.html	/^In order to make a debugging connection to a service of this type, you simply select the fourth protocol name, <a name="i106"><\/a>&#8216;Raw&#8217;, from the &#8216;Protocol&#8217; buttons in the &#8216;Session&#8217; configuration panel. (See <a href="Chapter4.html#config-hostname">section 4.1.1<\/a>.) You can then enter a host name and a port number, and make the connection.$/;"	a
i107	doc/Chapter3.html	/^PuTTY can be made to do various things without user intervention by supplying <a name="i107"><\/a>command-line arguments (e.g., from a <a name="i108"><\/a>command prompt window, or a <a name="i109"><\/a>Windows shortcut).$/;"	a
i108	doc/Chapter4.html	/^PuTTY has the ability to change its character set configuration in response to commands from the server. Some programs send these commands unexpectedly or inconveniently. In particular, <a name="i108"><\/a>BitchX (an IRC client) seems to have a habit of reconfiguring the character set to something other than the user intended.$/;"	a
i11	doc/AppendixA.html	/^However, it is possible in theory to compile the existing PuTTY source in such a way that it will run under <a name="i11"><\/a>Win32s (an extension to Windows 3.1 to let you run 32-bit programs). In order to do this you'll need the right kind of C compiler - modern versions of Visual C at least have stopped being backwards compatible to Win32s. Also, the last time we tried this it didn't work very well.$/;"	a
i11	doc/Chapter1.html	/^This list summarises some of the <a name="i11"><\/a>differences between SSH, Telnet and Rlogin.$/;"	a
i11	doc/Chapter2.html	/^This is a feature of the SSH protocol. It is designed to protect you against a network attack known as <a name="i11"><\/a><em>spoofing<\/em>: secretly redirecting your connection to a different computer, so that you send your password to the wrong machine. Using this technique, an attacker would be able to learn the password that guards your login account, and could then log in as if they were you and use the account for their own purposes.$/;"	a
i11	doc/Chapter4.html	/^Saved sessions are stored in the <a name="i11"><\/a>Registry, at the location$/;"	a
i11	doc/Chapter6.html	/^Any line starting with a <code>#<\/code> will be treated as a <a name="i11"><\/a>comment and ignored.$/;"	a
i11	doc/Chapter9.html	/^You do this by specifying the <a name="i11"><\/a><code>-c<\/code> option followed by the command, like this:$/;"	a
i110	doc/Chapter3.html	/^<a name="i110"><\/a><a name="i111"><\/a><a name="i112"><\/a><a name="i113"><\/a><a name="i114"><\/a>These options allow you to bypass the configuration window and launch straight into a session.$/;"	a
i110	doc/Chapter4.html	/^PuTTY supports shaping of Arabic text, which means that if your server sends text written in the basic <a name="i110"><\/a>Unicode Arabic alphabet then it will convert it to the correct display forms before printing it on the screen.$/;"	a
i111	doc/Chapter4.html	/^If you are using full-screen software which was not expecting this to happen (especially if you are not an Arabic speaker and you unexpectedly find yourself dealing with Arabic text files in applications which are not Arabic-aware), you might find that the <a name="i111"><\/a>display becomes corrupted. By ticking this box, you can disable Arabic text shaping so that PuTTY displays precisely the characters it is told to display.$/;"	a
i113	doc/Chapter4.html	/^PuTTY supports bidirectional text display, which means that if your server sends text written in a language which is usually displayed from right to left (such as <a name="i113"><\/a>Arabic or <a name="i114"><\/a>Hebrew) then PuTTY will automatically flip it round so that it is displayed in the right direction on the screen.$/;"	a
i115	doc/Chapter3.html	/^If this syntax is used, settings are taken from the <a name="i115"><\/a>Default Settings (see <a href="Chapter4.html#config-saving">section 4.1.2<\/a>); <code>user<\/code> overrides these settings if supplied. Also, you can specify a protocol, which will override the default protocol (see <a href="#using-cmdline-protocol">section 3.8.3.2<\/a>).$/;"	a
i115	doc/Chapter4.html	/^If you are using full-screen software which was not expecting this to happen (especially if you are not an Arabic speaker and you unexpectedly find yourself dealing with Arabic text files in applications which are not Arabic-aware), you might find that the <a name="i115"><\/a>display becomes corrupted. By ticking this box, you can disable bidirectional text display, so that PuTTY displays text from left to right in all situations.$/;"	a
i116	doc/Chapter3.html	/^For telnet sessions, the following alternative syntax is supported (this makes PuTTY suitable for use as a URL handler for <a name="i116"><\/a>telnet URLs in <a name="i117"><\/a>web browsers):$/;"	a
i116	doc/Chapter4.html	/^The Window configuration panel allows you to control aspects of the <a name="i116"><\/a>PuTTY window.$/;"	a
i118	doc/Chapter4.html	/^The &#8216;<a name="i118"><\/a>Columns&#8217; and &#8216;<a name="i119"><\/a>Rows&#8217; boxes let you set the PuTTY window to a precise size. Of course you can also <a name="i120"><\/a>drag the window to a new size while a session is running.$/;"	a
i119	doc/Chapter3.html	/^If invoked with the <code>-cleanup<\/code> option, rather than running as normal, PuTTY will remove its <a name="i119"><\/a>registry entries and <a name="i120"><\/a>random seed file from the local machine (after confirming with the user). It will also attempt to remove information about recently launched sessions stored in the &#8216;jump list&#8217; on Windows 7 and up.$/;"	a
i12	doc/Chapter1.html	/^SSH (which stands for &#8216;<a name="i12"><\/a>secure shell&#8217;) is a recently designed, high-security protocol. It uses strong cryptography to protect your connection against eavesdropping, hijacking and other attacks. Telnet and Rlogin are both older protocols offering minimal security.$/;"	a
i12	doc/Chapter2.html	/^PuTTY <a name="i12"><\/a>records the host key for each server you connect to, in the Windows <a name="i13"><\/a>Registry. Every time you connect to a server, it checks that the host key presented by the server is the same host key as it was the last time you connected. If it is not, you will see a warning, and you will have the chance to abandon your connection before you type any private information (such as a password) into it.$/;"	a
i12	doc/Chapter3.html	/^If you <a name="i12"><\/a>double-click the left mouse button, PuTTY will <a name="i13"><\/a>select a whole word. If you double-click, hold down the second click, and drag the mouse, PuTTY will select a sequence of whole words. (You can adjust precisely what PuTTY considers to be part of a word; see <a href="Chapter4.html#config-charclasses">section 4.11.5<\/a>.) If you <em>triple<\/em>-click, or <a name="i14"><\/a>triple-click and drag, then PuTTY will <a name="i15"><\/a>select a whole line or sequence of lines.$/;"	a
i12	doc/Chapter5.html	/^PSCP will attempt to use the newer <a name="i12"><\/a>SFTP protocol (part of SSH-2) where possible, which does not suffer from this security flaw. If you are talking to an SSH-2 server which supports SFTP, you will never see this warning. (You can force use of the SFTP protocol, if available, with <code>-sftp<\/code> - see <a href="#pscp-usage-options-backend">section 5.2.2.6<\/a>.)$/;"	a
i12	doc/Chapter7.html	/^If you specify the <code>-s<\/code> option, Plink passes the specified command as the name of an SSH &#8216;<a name="i12"><\/a>subsystem&#8217; rather than an ordinary command line.$/;"	a
i121	doc/Chapter3.html	/^Note that on <a name="i121"><\/a>multi-user systems, <code>-cleanup<\/code> only removes registry entries and files associated with the currently logged-in user.$/;"	a
i121	doc/Chapter4.html	/^These options allow you to control what happens when the user tries to <a name="i121"><\/a>resize the PuTTY window using its window furniture.$/;"	a
i122	doc/Chapter4.html	/^&#8216;Change the size of the font&#8217;: the number of rows and columns in the terminal will stay the same, and the <a name="i122"><\/a>font size will change.$/;"	a
i123	doc/Chapter3.html	/^<a name="i123"><\/a>The <code>-load<\/code> option causes PuTTY to load configuration details out of a saved session. If these details include a host name, then this option is all you need to make PuTTY start a session.$/;"	a
i123	doc/Chapter4.html	/^&#8216;Change font size when maximised&#8217;: when the window is resized, the number of rows and columns will change, <em>except<\/em> when the window is <a name="i123"><\/a>maximised (or restored), when the font size will change. (In this mode, holding down the Alt key while resizing will also cause the font size to change.)$/;"	a
i124	doc/Chapter3.html	/^If you want to create a <a name="i124"><\/a>Windows shortcut to start a PuTTY saved session, this is the option you should use: your shortcut should call something like$/;"	a
i125	doc/Chapter3.html	/^(Note that PuTTY itself supports an alternative form of this option, for backwards compatibility. If you execute <a name="i125"><\/a><code>putty @sessionname<\/code> it will have the same effect as <code>putty -load "sessionname"<\/code>. With the <code>@<\/code> form, no double quotes are required, and the <code>@<\/code> sign must be the very first thing on the command line. This form of the option is deprecated.)$/;"	a
i125	doc/Chapter4.html	/^The &#8216;Lines of scrollback&#8217; box lets you configure how many lines of text PuTTY keeps. The &#8216;Display scrollbar&#8217; options allow you to hide the <a name="i125"><\/a>scrollbar (although you can still view the scrollback using the keyboard as described in <a href="Chapter3.html#using-scrollback">section 3.1.2<\/a>). You can separately configure whether the scrollbar is shown in <a name="i126"><\/a>full-screen mode and in normal modes.$/;"	a
i126	doc/Chapter3.html	/^<a name="i126"><\/a><code>-ssh<\/code> selects the SSH protocol.$/;"	a
i127	doc/Chapter3.html	/^<a name="i127"><\/a><code>-telnet<\/code> selects the Telnet protocol.$/;"	a
i127	doc/Chapter4.html	/^If the application switches to the <a name="i127"><\/a>alternate screen (see <a href="#config-features-altscreen">section 4.6.4<\/a> for more about this), then the contents of the primary screen will be visible in the scrollback until the application switches back again.$/;"	a
i128	doc/Chapter3.html	/^<a name="i128"><\/a><code>-rlogin<\/code> selects the Rlogin protocol.$/;"	a
i128	doc/Chapter4.html	/^The Appearance configuration panel allows you to control aspects of the appearance of <a name="i128"><\/a>PuTTY's window.$/;"	a
i129	doc/Chapter3.html	/^<a name="i129"><\/a><code>-raw<\/code> selects the raw protocol.$/;"	a
i13	doc/Chapter1.html	/^SSH and Rlogin both allow you to <a name="i13"><\/a>log in to the server without having to type a password. (Rlogin's method of doing this is insecure, and can allow an attacker to access your account on the server. SSH's method is much more secure, and typically breaking the security requires the attacker to have gained access to your actual client machine.)$/;"	a
i13	doc/Chapter4.html	/^Finally in the Session panel, there is an option labelled &#8216;Close Window on Exit&#8217;. This controls whether the PuTTY <a name="i13"><\/a>terminal window disappears as soon as the session inside it terminates. If you are likely to want to copy and paste text out of the session after it has terminated, or restart the session, you should arrange for this option to be off.$/;"	a
i13	doc/Chapter5.html	/^If you really need to use a server-side wildcard with an SSH-1 server, you can use the <a name="i13"><\/a><code>-unsafe<\/code> command line option with PSCP:$/;"	a
i13	doc/Chapter6.html	/^Sometimes you will need to specify <a name="i13"><\/a>file names that <em>contain<\/em> spaces. In order to do this, you can surround the file name with double quotes. This works equally well for local file names and remote file names:$/;"	a
i13	doc/Chapter9.html	/^Note that at present, agent forwarding in SSH-2 is only available when your SSH server is <a name="i13"><\/a>OpenSSH. The <a name="i14"><\/a><code>ssh.com<\/code> server uses a different agent protocol, which PuTTY does not yet support.$/;"	a
i130	doc/Chapter3.html	/^<a name="i130"><\/a><code>-serial<\/code> selects a serial connection.$/;"	a
i130	doc/Chapter4.html	/^The &#8216;<a name="i130"><\/a>Cursor blinks&#8217; option makes the cursor blink on and off. This works in any of the cursor modes.$/;"	a
i131	doc/Chapter3.html	/^These options are equivalent to the <a name="i131"><\/a>protocol selection buttons in the Session panel of the PuTTY configuration box (see <a href="Chapter4.html#config-hostname">section 4.1.1<\/a>).$/;"	a
i132	doc/Chapter4.html	/^This option allows you to choose what font, in what <a name="i132"><\/a>size, the PuTTY terminal window uses to display the text in the session.$/;"	a
i133	doc/Chapter3.html	/^<a name="i133"><\/a>Most of the PuTTY tools can be made to tell you more about what they are doing by supplying the <code>-v<\/code> option. If you are having trouble when making a connection, or you're simply curious, you can turn this switch on and hope to find out more about what is happening.$/;"	a
i135	doc/Chapter4.html	/^The Behaviour configuration panel allows you to control aspects of the behaviour of <a name="i135"><\/a>PuTTY's window.$/;"	a
i137	doc/Chapter4.html	/^The &#8216;Window title&#8217; edit box allows you to set the title of the PuTTY window. By default the window title will contain the <a name="i137"><\/a>host name followed by &#8216;PuTTY&#8217;, for example <code>server1.example.com - PuTTY<\/code>. If you want a different window title, this is where to set it.$/;"	a
i138	doc/Chapter4.html	/^PuTTY allows the server to send <code>xterm<\/code> <a name="i138"><\/a>control sequences which modify the title of the window in mid-session (unless this is disabled - see <a href="#config-features-retitle">section 4.6.5<\/a>); the title string set here is therefore only the <em>initial<\/em> window title.$/;"	a
i139	doc/Chapter4.html	/^As well as the <em>window<\/em> title, there is also an <code>xterm<\/code> sequence to modify the <a name="i139"><\/a>title of the window's <em>icon<\/em>. This makes sense in a windowing system where the window becomes an icon when minimised, such as Windows 3.1 or most X Window System setups; but in the Windows 95-like user interface it isn't as applicable.$/;"	a
i14	doc/AppendixA.html	/^PuTTY also supports some terminal <a name="i14"><\/a>control sequences not supported by the real <code>xterm<\/code>: notably the Linux console sequences that reconfigure the colour palette, and the title bar control sequences used by <a name="i15"><\/a><code>DECterm<\/code> (which are different from the <code>xterm<\/code> ones; PuTTY supports both).$/;"	a
i14	doc/Chapter10.html	/^In this context MAC stands for <a name="i14"><\/a>Message Authentication Code. It's a cryptographic term, and it has nothing at all to do with Ethernet MAC (Media Access Control) addresses, or with the Apple computer.$/;"	a
i14	doc/Chapter2.html	/^However, when you connect to a server you have not connected to before, PuTTY has no way of telling whether the host key is the right one or not. So it gives the warning shown above, and asks you whether you want to <a name="i14"><\/a>trust this host key or not.$/;"	a
i14	doc/Chapter4.html	/^&#8216;Close Window On Exit&#8217; has three settings. &#8216;Always&#8217; means always close the window on exit; &#8216;Never&#8217; means never close on exit (always leave the window open, but <a name="i14"><\/a>inactive). The third setting, and the default one, is &#8216;Only on clean exit&#8217;. In this mode, a session which terminates normally will cause its window to close, but one which is aborted unexpectedly by network trouble or a confusing message from the server will leave the window up.$/;"	a
i14	doc/Chapter5.html	/^The <a name="i14"><\/a>login name on the remote server. If this is omitted, and <code>host<\/code> is a PuTTY saved session, PSCP will use any username specified by that saved session. Otherwise, PSCP will attempt to use the local Windows username.$/;"	a
i14	doc/Chapter6.html	/^Several commands in PSFTP support &#8216;<a name="i14"><\/a>wildcards&#8217; to select multiple files.$/;"	a
i140	doc/Chapter3.html	/^To <a name="i140"><\/a>forward a local port (say 5110) to a remote destination (say <code>popserver.example.com<\/code> port 110), you can write something like one of these:$/;"	a
i140	doc/Chapter4.html	/^By default, PuTTY only uses the server-supplied <em>window<\/em> title, and ignores the icon title entirely. If for some reason you want to see both titles, check the box marked &#8216;Separate window and icon titles&#8217;. If you do this, PuTTY's window title and Taskbar <a name="i140"><\/a>caption will change into the server-supplied icon title if you <a name="i141"><\/a>minimise the PuTTY window, and change back to the server-supplied window title if you restore it. (If the server has not bothered to supply a window or icon title, none of this will happen.)$/;"	a
i141	doc/Chapter3.html	/^To forward a <a name="i141"><\/a>remote port to a local destination, just use the <code>-R<\/code> option instead of <code>-L<\/code>:$/;"	a
i142	doc/Chapter3.html	/^To <a name="i142"><\/a>specify an IP address for the listening end of the tunnel, prepend it to the argument:$/;"	a
i143	doc/Chapter3.html	/^To set up <a name="i143"><\/a>SOCKS-based dynamic port forwarding on a local port, use the <code>-D<\/code> option. For this one you only have to pass the port number:$/;"	a
i143	doc/Chapter4.html	/^If you press the <a name="i143"><\/a>Close button in a PuTTY window that contains a running session, PuTTY will put up a warning window asking if you really meant to close the window. A window whose session has already terminated can always be closed without a warning.$/;"	a
i145	doc/Chapter4.html	/^By default, pressing ALT-F4 causes the <a name="i145"><\/a>window to close (or a warning box to appear; see <a href="#config-warnonclose">section 4.9.2<\/a>). If you disable the &#8216;Window closes on ALT-F4&#8217; option, then pressing ALT-F4 will simply send a key sequence to the server.$/;"	a
i146	doc/Chapter3.html	/^The <a name="i146"><\/a><code>-m<\/code> option performs a similar function to the &#8216;<a name="i147"><\/a>Remote command&#8217; box in the SSH panel of the PuTTY configuration box (see <a href="Chapter4.html#config-command">section 4.18.1<\/a>). However, the <code>-m<\/code> option expects to be given a local file name, and it will read a command from that file.$/;"	a
i148	doc/Chapter3.html	/^With some servers (particularly Unix systems), you can even put multiple lines in this file and execute more than one command in sequence, or a whole shell script; but this is arguably an abuse, and cannot be expected to work on all servers. In particular, it is known <em>not<\/em> to work with certain &#8216;embedded&#8217; servers, such as <a name="i148"><\/a>Cisco routers.$/;"	a
i148	doc/Chapter4.html	/^Some <a name="i148"><\/a>accessibility programs for Windows may need this option enabling to be able to control PuTTY's window successfully. For instance, <a name="i149"><\/a>Dragon NaturallySpeaking requires it both to open the system menu via voice, and to close, minimise, maximise and restore the window.$/;"	a
i15	doc/Chapter10.html	/^However, the most common reason to see this message is if you are connecting through a <a name="i15"><\/a>firewall or a <a name="i16"><\/a>NAT router which has timed the connection out. See <a href="AppendixA.html#faq-idleout">question A.7.8<\/a> in the FAQ for more details. You may be able to improve the situation by using keepalives; see <a href="Chapter4.html#config-keepalive">section 4.13.1<\/a> for details on this.$/;"	a
i15	doc/Chapter2.html	/^Whether or not to trust the host key is your choice. If you are connecting within a company network, you might feel that all the network users are on the same side and spoofing attacks are unlikely, so you might choose to trust the key without checking it. If you are connecting across a hostile network (such as the Internet), you should check with your system administrator, perhaps by telephone or in person. (Many servers have more than one host key. If the system administrator sends you more than one <a name="i15"><\/a>fingerprint, you should make sure the one PuTTY shows you is on the list, but it doesn't matter which one it is.)$/;"	a
i15	doc/Chapter4.html	/^The Logging configuration panel allows you to save <a name="i15"><\/a>log files of your PuTTY sessions, for debugging, analysis or future reference.$/;"	a
i15	doc/Chapter6.html	/^For <em>remote<\/em> file specifications (such as the first argument to <code>get<\/code>), PSFTP uses a standard wildcard syntax (similar to <a name="i15"><\/a>POSIX wildcards):$/;"	a
i15	doc/Chapter8.html	/^PuTTYgen is a key generator. It <a name="i15"><\/a>generates pairs of public and private keys to be used with PuTTY, PSCP, and Plink, as well as the PuTTY authentication agent, Pageant (see <a href="Chapter9.html#pageant">chapter 9<\/a>). PuTTYgen generates RSA, DSA, ECDSA, and Ed25519 keys.$/;"	a
i15	doc/Chapter9.html	/^In addition, if you have a private key on one of the SSH servers, you can send it all the way back to Pageant using the local <a name="i15"><\/a><code>ssh-add<\/code> command:$/;"	a
i154	doc/Chapter4.html	/^The full-screen feature is also available from the <a name="i154"><\/a>System menu, even when it is configured not to be available on the Alt-Enter key. See <a href="Chapter3.html#using-fullscreen">section 3.1.3.7<\/a>.$/;"	a
i155	doc/Chapter3.html	/^See <a href="Chapter9.html#pageant">chapter 9<\/a> for general information on <a name="i155"><\/a>Pageant.$/;"	a
i155	doc/Chapter4.html	/^The Translation configuration panel allows you to control the translation between the <a name="i155"><\/a>character set understood by the server and the character set understood by PuTTY.$/;"	a
i156	doc/Chapter4.html	/^By default PuTTY will use the <a name="i156"><\/a>UTF-8 encoding of <a name="i157"><\/a>Unicode, which can represent pretty much any character; data coming from the server is interpreted as UTF-8, and keystrokes are sent UTF-8 encoded. This is what most modern distributions of Linux will expect by default. However, if this is wrong for your server, you can select a different character set using this control.$/;"	a
i158	doc/Chapter4.html	/^The <a name="i158"><\/a>ISO-8859 series are all standard character sets that include various accented characters appropriate for different sets of languages.$/;"	a
i159	doc/Chapter3.html	/^See <a href="Chapter9.html#pageant">chapter 9<\/a> for general information on <a name="i159"><\/a>Pageant, and <a href="Chapter9.html#pageant-forward">section 9.4<\/a> for information on agent forwarding. Note that there is a security risk involved with enabling this option; see <a href="Chapter9.html#pageant-security">section 9.5<\/a> for details.$/;"	a
i159	doc/Chapter4.html	/^The <a name="i159"><\/a>Win125x series are defined by Microsoft, for similar purposes. In particular Win1252 is almost equivalent to ISO-8859-1, but contains a few extra characters such as matched quotes and the Euro symbol.$/;"	a
i16	doc/AppendixA.html	/^On Windows, PuTTY stores most of its data (saved sessions, SSH host keys) in the <a name="i16"><\/a>Registry. The precise location is$/;"	a
i16	doc/Chapter3.html	/^If you want to select a <a name="i16"><\/a>rectangular region instead of selecting to the end of each line, you can do this by holding down Alt when you make your selection. You can also configure rectangular selection to be the default, and then holding down Alt gives the normal behaviour instead: see <a href="Chapter4.html#config-rectselect">section 4.11.4<\/a> for details.$/;"	a
i16	doc/Chapter4.html	/^<a name="i16"><\/a>&#8216;SSH packets&#8217;. In this mode (which is only used by SSH connections), the SSH message packets sent over the encrypted connection are written to the log file (as well as <a name="i17"><\/a>Event Log entries). You might need this to debug a network-level problem, or more likely to send to the PuTTY authors as part of a bug report. <em>BE WARNED<\/em> that if you log in using a password, the password can appear in the log file; see <a href="#config-logssh">section 4.2.4<\/a> for options that may help to remove sensitive material from the log file before you send it to anyone else.$/;"	a
i16	doc/Chapter5.html	/^One or more source files. <a name="i16"><\/a>Wildcards are allowed. The syntax of wildcards depends on the system to which they apply, so if you are copying <em>from<\/em> a Windows system <em>to<\/em> a UNIX system, you should use Windows wildcard syntax (e.g. <code>*.*<\/code>), but if you are copying <em>from<\/em> a UNIX system <em>to<\/em> a Windows system, you would use the wildcard syntax allowed by your UNIX shell (e.g. <code>*<\/code>).$/;"	a
i16	doc/Chapter8.html	/^An <a name="i16"><\/a>RSA key for use with the SSH-1 protocol.$/;"	a
i16	doc/Chapter9.html	/^<a name="i16"><\/a>Using Pageant for public-key authentication gives you the convenience of being able to open multiple SSH sessions without having to type a passphrase every time, but also gives you the security benefit of never storing a decrypted private key on disk. Many people feel this is a good compromise between security and convenience.$/;"	a
i160	doc/Chapter4.html	/^If you want the old IBM PC character set with block graphics and line-drawing characters, you can select &#8216;<a name="i160"><\/a>CP437&#8217;.$/;"	a
i161	doc/Chapter4.html	/^If you need support for a numeric <a name="i161"><\/a>code page which is not listed in the drop-down list, such as code page 866, then you can try entering its name manually (<a name="i162"><\/a><code>CP866<\/code> for example) in the list box. If the underlying version of Windows has the appropriate translation table installed, PuTTY will use it.$/;"	a
i164	doc/Chapter4.html	/^There are <a name="i164"><\/a>some Unicode characters whose <a name="i165"><\/a>width is not well-defined. In most contexts, such characters should be treated as single-width for the purposes of <a name="i166"><\/a>wrapping and so on; however, in some CJK contexts, they are better treated as double-width for historical reasons, and some server-side applications may expect them to be displayed as such. Setting this option will cause PuTTY to take the double-width interpretation.$/;"	a
i167	doc/Chapter4.html	/^This option only has any effect in <a name="i167"><\/a>UTF-8 mode (see <a href="#config-charset">section 4.10.1<\/a>).$/;"	a
i17	doc/AppendixA.html	/^PuTTY also requires a random number seed file, to improve the unpredictability of randomly chosen data needed as part of the SSH cryptography. This is stored by default in a file called <a name="i17"><\/a><code>PUTTY.RND<\/code>; this is stored by default in the &#8216;Application Data&#8217; directory, or failing that, one of a number of fallback locations. If you want to change the location of the random number seed file, you can put your chosen pathname in the Registry, at$/;"	a
i17	doc/Chapter10.html	/^<a name="i17"><\/a>Unix also generates this error when it tries to send data down a connection and contact with the server has been completely lost during a connection. (There is a delay of minutes before Unix gives up on receiving a reply from the server.) This can occur if you type things into PuTTY while the network is down, but it can also occur if PuTTY decides of its own accord to send data: due to a repeat key exchange in SSH-2 (see <a href="Chapter4.html#config-ssh-kex-rekey">section 4.19.2<\/a>) or due to keepalives (<a href="Chapter4.html#config-keepalive">section 4.13.1<\/a>).$/;"	a
i17	doc/Chapter2.html	/^After you have connected, and perhaps verified the server's host key, you will be asked to log in, probably using a <a name="i17"><\/a>username and a <a name="i18"><\/a>password. Your system administrator should have provided you with these. Enter the username and the password, and the server should grant you access and begin your session. If you have <a name="i19"><\/a>mistyped your password, most servers will give you several chances to get it right.$/;"	a
i17	doc/Chapter3.html	/^If you have a <a name="i17"><\/a>middle mouse button, then you can use it to <a name="i18"><\/a>adjust an existing selection if you selected something slightly wrong. (If you have configured the middle mouse button to paste, then the right mouse button does this instead.) Click the button on the screen, and you can pick up the nearest end of the selection and drag it to somewhere else.$/;"	a
i17	doc/Chapter5.html	/^If the source is a remote server and you do not specify a full pathname (in UNIX, a pathname beginning with a <code>\/<\/code> (slash) character), what you specify as a source will be interpreted relative to your <a name="i17"><\/a>home directory on the remote server.$/;"	a
i17	doc/Chapter7.html	/^To use Plink with CVS, you need to set the environment variable <a name="i17"><\/a><code>CVS_RSH<\/code> to point to Plink:$/;"	a
i17	doc/Chapter8.html	/^A <a name="i17"><\/a>DSA key for use with the SSH-2 protocol.$/;"	a
i17	doc/Chapter9.html	/^Windows unfortunately provides no way to protect pieces of memory from being written to the system <a name="i17"><\/a>swap file. So if Pageant is holding your private keys for a long period of time, it's possible that decrypted private key data may be written to the system swap file, and an attacker who gained access to your hard disk later on might be able to recover that data. (However, if you stored an unencrypted key in a disk file they would <em>certainly<\/em> be able to recover it.)$/;"	a
i170	doc/Chapter4.html	/^This feature allows you to switch between a US\/UK keyboard layout and a Cyrillic keyboard layout by using the Caps Lock key, if you need to type (for example) <a name="i170"><\/a>Russian and English side by side in the same document.$/;"	a
i172	doc/Chapter4.html	/^VT100-series terminals allow the server to send <a name="i172"><\/a>control sequences that shift temporarily into a separate character set for drawing simple lines and boxes. However, there are a variety of ways in which PuTTY can attempt to find appropriate characters, and the right one to use depends on the locally configured <a name="i173"><\/a>font. In general you should probably try lots of options until you find one that your particular font supports.$/;"	a
i174	doc/Chapter4.html	/^&#8216;Use Unicode line drawing code points&#8217; tries to use the box characters that are present in <a name="i174"><\/a>Unicode. For good Unicode-supporting fonts this is probably the most reliable and functional option.$/;"	a
i175	doc/Chapter3.html	/^The <code>-1<\/code> and <code>-2<\/code> options force PuTTY to use version <a name="i175"><\/a>1 or version <a name="i176"><\/a>2 of the SSH protocol. These options are only meaningful if you are using SSH.$/;"	a
i176	doc/Chapter4.html	/^By default, when you copy and paste a piece of the PuTTY screen that contains VT100 line and box drawing characters, PuTTY will paste them in the form they appear on the screen: either <a name="i176"><\/a>Unicode line drawing code points, or the &#8216;poor man's&#8217; line-drawing characters <code>+<\/code>, <code>-<\/code> and <code>|<\/code>. The checkbox &#8216;Copy and paste VT100 line drawing chars as lqqqk&#8217; disables this feature, so line-drawing characters will be pasted as the <a name="i177"><\/a>ASCII characters that were printed to produce them. This will typically mean they come out mostly as <code>q<\/code> and <code>x<\/code>, with a scattering of <code>jklmntuvw<\/code> at the corners. This might be useful if you were trying to recreate the same box layout in another program, for example.$/;"	a
i178	doc/Chapter4.html	/^The Selection panel allows you to control the way <a name="i178"><\/a>copy and paste work in the PuTTY window.$/;"	a
i18	doc/Chapter6.html	/^To <a name="i18"><\/a>download a file from the server and store it on your local PC, you use the <code>get<\/code> command.$/;"	a
i18	doc/Chapter8.html	/^An <a name="i18"><\/a>ECDSA (<a name="i19"><\/a>elliptic curve DSA) key for use with the SSH-2 protocol.$/;"	a
i180	doc/Chapter3.html	/^The <code>-4<\/code> and <code>-6<\/code> options force PuTTY to use the older Internet protocol <a name="i180"><\/a>IPv4 or the newer <a name="i181"><\/a>IPv6 for most outgoing connections.$/;"	a
i180	doc/Chapter4.html	/^If you enable &#8216;Paste to clipboard in RTF as well as plain text&#8217;, PuTTY will write formatting information to the clipboard as well as the actual text you copy. The effect of this is that if you paste into (say) a word processor, the text will appear in the word processor in the same <a name="i180"><\/a>font, <a name="i181"><\/a>colour, and style (e.g. bold, underline) PuTTY was using to display it.$/;"	a
i182	doc/Chapter4.html	/^PuTTY's copy and paste mechanism is by default modelled on the Unix <code>xterm<\/code> application. The X Window System uses a three-button mouse, and the convention is that the <a name="i182"><\/a>left button <a name="i183"><\/a>selects, the <a name="i184"><\/a>right button extends an existing selection, and the <a name="i185"><\/a>middle button pastes.$/;"	a
i184	doc/Chapter3.html	/^The <code>-i<\/code> option allows you to specify the name of a private key file in <code>*.<a name="i184"><\/a>PPK<\/code> format which PuTTY will use to authenticate with the server. This option is only meaningful if you are using SSH.$/;"	a
i185	doc/Chapter3.html	/^For general information on <a name="i185"><\/a>public-key authentication, see <a href="Chapter8.html#pubkey">chapter 8<\/a>.$/;"	a
i186	doc/Chapter4.html	/^Windows often only has two mouse buttons, so in PuTTY's default configuration (&#8216;Compromise&#8217;), the <em>right<\/em> button pastes, and the <em>middle<\/em> button (if you have one) <a name="i186"><\/a>extends a selection.$/;"	a
i187	doc/Chapter4.html	/^If you have a <a name="i187"><\/a>three-button mouse and you are already used to the <code>xterm<\/code> arrangement, you can select it using the &#8216;Action of mouse buttons&#8217; control.$/;"	a
i188	doc/Chapter3.html	/^This option overrides PuTTY's normal SSH <a name="i188"><\/a>host key caching policy by telling it the name of the host you expect your connection to end up at (in cases where this differs from the location PuTTY thinks it's connecting to). It can be a plain host name, or a host name followed by a colon and a port number. See <a href="Chapter4.html#config-loghost">section 4.13.5<\/a> for more detail on this.$/;"	a
i188	doc/Chapter4.html	/^Alternatively, with the &#8216;Windows&#8217; option selected, the middle button extends, and the right button brings up a <a name="i188"><\/a>context menu (on which one of the options is &#8216;Paste&#8217;). (This context menu is always available by holding down Ctrl and right-clicking, regardless of the setting of this option.)$/;"	a
i189	doc/Chapter4.html	/^PuTTY allows the server to send <a name="i189"><\/a>control codes that let it <a name="i190"><\/a>take over the mouse and use it for purposes other than <a name="i191"><\/a>copy and paste. Applications which use this feature include the text-mode web browser <code>links<\/code>, the Usenet newsreader <code>trn<\/code> version 4, and the file manager <code>mc<\/code> (Midnight Commander).$/;"	a
i19	doc/Chapter3.html	/^It's possible for the server to ask to <a name="i19"><\/a>handle mouse clicks in the PuTTY window itself. If this happens, the <a name="i20"><\/a>mouse pointer will turn into an arrow, and using the mouse to copy and paste will only work if you hold down Shift. See <a href="Chapter4.html#config-features-mouse">section 4.6.2<\/a> and <a href="Chapter4.html#config-mouseshift">section 4.11.3<\/a> for details of this feature and how to configure it.$/;"	a
i19	doc/Chapter6.html	/^To fetch an entire directory <a name="i19"><\/a>recursively, you can use the <code>-r<\/code> option:$/;"	a
i191	doc/Chapter3.html	/^This option overrides PuTTY's normal SSH <a name="i191"><\/a>host key caching policy by telling it exactly what host key to expect, which can be useful if the normal automatic host key store in the Registry is unavailable. The argument to this option should be either a host key fingerprint, or an SSH-2 public key blob. See <a href="Chapter4.html#config-ssh-kex-manual-hostkeys">section 4.20.2<\/a> for more information.$/;"	a
i192	doc/Chapter4.html	/^Normally, you have to hold down Alt while dragging the mouse to select a rectangular block. Using the &#8216;Default selection mode&#8217; control, you can set <a name="i192"><\/a>rectangular selection as the default, and then you have to hold down Alt to get the <em>normal<\/em> behaviour.$/;"	a
i194	doc/Chapter3.html	/^This option causes the PuTTY tools not to run as normal, but instead to display the fingerprints of the PuTTY PGP Master Keys, in order to aid with <a name="i194"><\/a>verifying new versions. See <a href="AppendixE.html#pgpkeys">appendix E<\/a> for more information.$/;"	a
i194	doc/Chapter4.html	/^PuTTY will select a word at a time in the terminal window if you <a name="i194"><\/a>double-click to begin the drag. This panel allows you to control precisely what is considered to be a word.$/;"	a
i195	doc/Chapter4.html	/^In the default configuration, the <a name="i195"><\/a>character classes are:$/;"	a
i196	doc/Chapter4.html	/^Class 0 contains <a name="i196"><\/a>white space and control characters.$/;"	a
i197	doc/Chapter4.html	/^Class 1 contains most <a name="i197"><\/a>punctuation.$/;"	a
i198	doc/Chapter4.html	/^Character class definitions can be modified by <a name="i198"><\/a>control sequences sent by the server. This configuration option controls the <em>default<\/em> state, which will be restored when you reset the terminal (see <a href="Chapter3.html#reset-terminal">section 3.1.3.6<\/a>). However, if you modify this option in mid-session using &#8216;Change Settings&#8217;, it will take effect immediately.$/;"	a
i199	doc/Chapter4.html	/^The Colours panel allows you to control PuTTY's use of <a name="i199"><\/a>colour.$/;"	a
i2	doc/AppendixB.html	/^The PuTTY contact email address is a private <a name="i2"><\/a>mailing list containing four or five core developers. Don't be put off by it being a mailing list: if you need to send confidential data as part of a bug report, you can trust the people on the list to respect that confidence. Also, the archives aren't publicly available, so you shouldn't be letting yourself in for any spam by sending us mail.$/;"	a
i2	doc/AppendixE.html	/^As of release 0.58, all of the PuTTY executables contain fingerprint material (usually accessed via the <a name="i2"><\/a><code>-pgpfp<\/code> command-line option), such that if you have an executable you trust, you can use it to establish a trust path, for instance to a newer version downloaded from the Internet.$/;"	a
i2	doc/Chapter10.html	/^By default, PuTTY only supports connecting to SSH servers that implement <a name="i2"><\/a>SSH protocol version 2. If you see this message, the server you're trying to connect to only supports the older SSH-1 protocol.$/;"	a
i2	doc/Chapter2.html	/^In the &#8216;Host Name&#8217; box, enter the Internet <a name="i2"><\/a>host name of the server you want to connect to. You should have been told this by the provider of your login account.$/;"	a
i2	doc/Chapter4.html	/^The &#8216;Host Name&#8217; box is where you type the name, or the <a name="i2"><\/a>IP address, of the server you want to connect to.$/;"	a
i2	doc/Chapter8.html	/^Public key authentication solves this problem. You generate a <a name="i2"><\/a><em>key pair<\/em>, consisting of a <a name="i3"><\/a>public key (which everybody is allowed to know) and a <a name="i4"><\/a>private key (which you keep secret and do not give to anybody). The private key is able to generate <a name="i5"><\/a><em>signatures<\/em>. A signature created using your private key cannot be forged by anybody who does not have that key; but anybody who has your public key can verify that a particular signature is genuine.$/;"	a
i20	doc/Chapter2.html	/^If you are using SSH, be careful not to type your username wrongly, because you will not have a chance to correct it after you press Return; many SSH servers do not permit you to make two login attempts using <a name="i20"><\/a>different usernames. If you type your username wrongly, you must close PuTTY and start again.$/;"	a
i20	doc/Chapter4.html	/^The Terminal configuration panel allows you to control the behaviour of PuTTY's <a name="i20"><\/a>terminal emulation.$/;"	a
i20	doc/Chapter6.html	/^To <a name="i20"><\/a>upload a file to the server from your local PC, you use the <code>put<\/code> command.$/;"	a
i20	doc/Chapter8.html	/^An <a name="i20"><\/a>Ed25519 key (another elliptic curve algorithm) for use with the SSH-2 protocol.$/;"	a
i200	doc/Chapter3.html	/^These options cause the PuTTY network tools to write out a <a name="i200"><\/a>log file. Each of them expects a file name as an argument, e.g. &#8216;<code>-sshlog putty.log<\/code>&#8217; causes an SSH packet log to be written to a file called &#8216;<code>putty.log<\/code>&#8217;. The three different options select different logging modes, all available from the GUI too:$/;"	a
i201	doc/Chapter4.html	/^This option is enabled by default. If it is disabled, PuTTY will ignore any <a name="i201"><\/a>control sequences sent by the server to request coloured text.$/;"	a
i202	doc/Chapter3.html	/^This option enables PuTTY's mode for running a <a name="i202"><\/a>command on the local machine and using it as a proxy for the network connection. It expects a shell command string as an argument.$/;"	a
i203	doc/Chapter4.html	/^If you have an application which is supposed to use 256-colour mode and it isn't working, you may find you need to tell your server that your terminal supports 256 colours. On Unix, you do this by ensuring that the setting of <a name="i203"><\/a><code>TERM<\/code> describes a 256-colour-capable terminal. You can check this using a command such as <code>infocmp<\/code>:$/;"	a
i204	doc/Chapter4.html	/^When the server sends a <a name="i204"><\/a>control sequence indicating that some text should be displayed in <a name="i205"><\/a>bold, PuTTY can handle this in several ways. It can either change the <a name="i206"><\/a>font for a bold version, or use the same font in a brighter colour, or it can do both (brighten the colour <em>and<\/em> embolden the font). This control lets you choose which.$/;"	a
i207	doc/Chapter4.html	/^Some applications rely on &#8216;<a name="i207"><\/a>bold black&#8217; being distinguishable from a black background; if you choose &#8216;The font&#8217;, their text may become invisible.$/;"	a
i209	doc/Chapter4.html	/^Logical palettes are a mechanism by which a Windows application running on an <a name="i209"><\/a>8-bit colour display can select precisely the colours it wants instead of going with the Windows standard defaults.$/;"	a
i21	doc/Chapter2.html	/^After you log in to the server, what happens next is up to the server! Most servers will print some sort of login message and then present a <a name="i21"><\/a>prompt, at which you can type <a name="i22"><\/a>commands which the server will carry out. Some servers will offer you on-line help; others might not. If you are in doubt about what to do next, consult your system administrator.$/;"	a
i21	doc/Chapter4.html	/^<a name="i21"><\/a>Auto wrap mode controls what happens when text printed in a PuTTY window reaches the right-hand edge of the window.$/;"	a
i21	doc/Chapter6.html	/^To send an entire directory <a name="i21"><\/a>recursively, you can use the <code>-r<\/code> option:$/;"	a
i211	doc/Chapter4.html	/^Enabling this option will cause PuTTY to ignore the configured colours for <a name="i211"><\/a><a name="i212"><\/a>&#8216;Default Background\/Foreground&#8217; and <a name="i213"><\/a>&#8216;Cursor Colour\/Text&#8217; (see <a href="#config-colourcfg">section 4.12.6<\/a>), instead going with the system-wide defaults.$/;"	a
i214	doc/Chapter4.html	/^Note that non-bold and <a name="i214"><\/a>bold text will be the same colour if this option is enabled. You might want to change to indicating bold text by font changes (see <a href="#config-boldcolour">section 4.12.3<\/a>).$/;"	a
i216	doc/Chapter4.html	/^The main colour control allows you to specify exactly what colours things should be displayed in. To modify one of the PuTTY colours, use the list box to select which colour you want to modify. The <a name="i216"><\/a>RGB values for that colour will appear on the right-hand side of the list box. Now, if you press the &#8216;Modify&#8217; button, you will be presented with a colour selector, in which you can choose a new colour to go in place of the old one. (You may also edit the RGB values directly in the edit boxes, if you wish; each value is an integer from 0 to 255.)$/;"	a
i217	doc/Chapter4.html	/^PuTTY allows you to set the <a name="i217"><\/a>cursor colour, the <a name="i218"><\/a>default foreground and <a name="i219"><\/a>background, and the precise shades of all the <a name="i220"><\/a>ANSI configurable colours (black, red, green, yellow, blue, magenta, cyan, and white). You can also modify the precise shades used for the <a name="i221"><\/a>bold versions of these colours; these are used to display bold text if you have chosen to indicate that by colour (see <a href="#config-boldcolour">section 4.12.3<\/a>), and can also be used if the server asks specifically to use them. (Note that &#8216;Default Bold Background&#8217; is <em>not<\/em> the background colour used for bold text; it is only used if the server specifically asks for a bold background.)$/;"	a
i22	doc/Chapter3.html	/^PuTTY keeps track of text that has scrolled up off the top of the terminal. So if something appears on the screen that you want to read, but it scrolls too fast and it's gone by the time you try to look for it, you can use the <a name="i22"><\/a>scrollbar on the right side of the window to look back up the session <a name="i23"><\/a>history and find it again.$/;"	a
i22	doc/Chapter4.html	/^Auto wrap mode can be turned on and off by <a name="i22"><\/a>control sequences sent by the server. This configuration option controls the <em>default<\/em> state, which will be restored when you reset the terminal (see <a href="Chapter3.html#reset-terminal">section 3.1.3.6<\/a>). However, if you modify this option in mid-session using &#8216;Change Settings&#8217;, it will take effect immediately.$/;"	a
i22	doc/Chapter5.html	/^By default, files copied with PSCP are <a name="i22"><\/a>timestamped with the date and time they were copied. The <code>-p<\/code> option preserves the original timestamp on copied files.$/;"	a
i22	doc/Chapter6.html	/^Every argument to <code>mget<\/code> is treated as the name of a file to fetch (unlike <code>get<\/code>, which will interpret at most one argument like that, and a second argument will be treated as an alternative name under which to store the retrieved file), or a <a name="i22"><\/a>wildcard expression matching more than one file.$/;"	a
i222	doc/Chapter4.html	/^The Connection panel allows you to configure options that apply to more than one type of <a name="i222"><\/a>connection.$/;"	a
i224	doc/Chapter4.html	/^Some network <a name="i224"><\/a>routers and <a name="i225"><\/a>firewalls need to keep track of all connections through them. Usually, these firewalls will assume a connection is dead if no data is transferred in either direction after a certain time interval. This can cause PuTTY sessions to be unexpectedly closed by the firewall if no traffic is seen in the session for some time.$/;"	a
i226	doc/Chapter4.html	/^The keepalive option (&#8216;Seconds between keepalives&#8217;) allows you to configure PuTTY to send data through the session at regular intervals, in a way that does not disrupt the actual terminal session. If you find your firewall is cutting <a name="i226"><\/a>idle connections off, you can try entering a non-zero value in this field. The value is measured in seconds; so, for example, if your firewall cuts connections off after ten minutes then you might want to enter 300 seconds (5 minutes) in the box.$/;"	a
i227	doc/Chapter4.html	/^Note that keepalives are not always helpful. They help if you have a firewall which drops your connection after an idle period; but if the network between you and the server suffers from <a name="i227"><\/a>breaks in connectivity then keepalives can actually make things worse. If a session is idle, and connectivity is temporarily lost between the endpoints, but the connectivity is restored before either side tries to send anything, then there will be no problem - neither endpoint will notice that anything was wrong. However, if one side does send something during the break, it will repeatedly try to re-send, and eventually give up and abandon the connection. Then when connectivity is restored, the other side will find that the first side doesn't believe there is an open connection any more. Keepalives can make this sort of problem worse, because they increase the probability that PuTTY will attempt to send data during a break in connectivity. (Other types of periodic network activity can cause this behaviour; in particular, SSH-2 re-keys can have this effect. See <a href="#config-ssh-kex-rekey">section 4.19.2<\/a>.)$/;"	a
i229	doc/Chapter4.html	/^Nagle's algorithm is a detail of TCP\/IP implementations that tries to minimise the number of small data packets sent down a network connection. With Nagle's algorithm enabled, PuTTY's <a name="i229"><\/a>bandwidth usage will be slightly more efficient; with it disabled, you may find you get a faster response to your keystrokes when connecting to some types of server.$/;"	a
i23	doc/AppendixA.html	/^If you're not sure, the <a name="i23"><\/a>32-bit version is generally the safe option. It will run perfectly well on all processors and on all versions of Windows that PuTTY supports. PuTTY doesn't require to run as a 64-bit application to work well, and having a 32-bit PuTTY on a 64-bit system isn't likely to cause you any trouble.$/;"	a
i23	doc/Chapter4.html	/^<a name="i23"><\/a>DEC Origin Mode is a minor option which controls how PuTTY interprets cursor-position <a name="i24"><\/a>control sequences sent by the server.$/;"	a
i23	doc/Chapter8.html	/^The &#8216;Key passphrase&#8217; and &#8216;Confirm passphrase&#8217; boxes allow you to choose a passphrase for your key. The passphrase will be used to <a name="i23"><\/a>encrypt the key on disk, so you will not be able to use the key without first entering the passphrase.$/;"	a
i230	doc/Chapter4.html	/^The Nagle algorithm is disabled by default for <a name="i230"><\/a>interactive connections.$/;"	a
i232	doc/Chapter4.html	/^TCP keepalives may be more useful for ensuring that <a name="i232"><\/a>half-open connections are terminated than for keeping a connection alive.$/;"	a
i234	doc/Chapter4.html	/^This option allows the user to select between the old and new Internet protocols and addressing schemes (<a name="i234"><\/a>IPv4 and <a name="i235"><\/a>IPv6). The selected protocol will be used for most outgoing network connections (including connections to <a name="i236"><\/a>proxies); however, tunnels have their own configuration, for which see <a href="#config-ssh-portfwd-address-family">section 4.26.2<\/a>.$/;"	a
i237	doc/Chapter4.html	/^The default setting is &#8216;Auto&#8217;, which means PuTTY will do something sensible and try to guess which protocol you wanted. (If you specify a literal <a name="i237"><\/a>Internet address, it will use whichever protocol that address implies. If you provide a <a name="i238"><\/a>hostname, it will see what kinds of address exist for that hostname; it will use IPv6 if there is an IPv6 address available, and fall back to IPv4 if not.)$/;"	a
i24	doc/AppendixA.html	/^The 64-bit version (first released in 0.68) will only run if you have a 64-bit processor <em>and<\/em> a <a name="i24"><\/a>64-bit edition of Windows (both of these things are likely to be true of any recent Windows PC). It will run somewhat faster (in particular, the cryptography will be faster, especially during link setup), but it will consume slightly more memory.$/;"	a
i24	doc/Chapter2.html	/^You <em>can<\/em> close a PuTTY session using the <a name="i24"><\/a>Close button in the window border, but this might confuse the server - a bit like hanging up a telephone unexpectedly in the middle of a conversation. We recommend you do not do this unless the server has stopped responding to you and you cannot close the window any other way.$/;"	a
i24	doc/Chapter3.html	/^As well as using the scrollbar, you can also page the scrollback up and down by pressing <a name="i24"><\/a>Shift-PgUp and <a name="i25"><\/a>Shift-PgDn. You can scroll a line at a time using <a name="i26"><\/a>Ctrl-PgUp and <a name="i27"><\/a>Ctrl-PgDn. These are still available if you configure the scrollbar to be invisible.$/;"	a
i24	doc/Chapter8.html	/^If you leave the passphrase fields blank, the key will be saved unencrypted. You should <em>not<\/em> do this without good reason; if you do, your private key file on disk will be all an attacker needs to gain access to any machine configured to accept that key. If you want to be able to <a name="i24"><\/a>log in without having to type a passphrase every time, you should consider using Pageant (<a href="Chapter9.html#pageant">chapter 9<\/a>) so that your decrypted key is only held in memory rather than on disk.$/;"	a
i240	doc/Chapter4.html	/^In normal usage, the second PuTTY will access the <a name="i240"><\/a>host key cache under the host name and port it actually connected to (i.e. <code>localhost<\/code> port 10022 in this example). Using the logical host name option, however, you can configure the second PuTTY to cache the host key under the name of the host <em>you<\/em> know that it's <em>really<\/em> going to end up talking to (here <code>foovax<\/code>).$/;"	a
i242	doc/Chapter4.html	/^In some environments, such as the networks of large organisations implementing <a name="i242"><\/a>single sign-on, a more sensible default may be to use the name of the user logged in to the local operating system (if any); this is particularly likely to be useful with <a name="i243"><\/a>GSSAPI authentication (see <a href="#config-ssh-auth-gssapi">section 4.23<\/a>). This control allows you to change the default behaviour.$/;"	a
i245	doc/Chapter4.html	/^Most servers you might connect to with PuTTY are designed to be connected to from lots of different types of terminal. In order to send the right <a name="i245"><\/a>control sequences to each one, the server will need to know what type of terminal it is dealing with. Therefore, each of the SSH, Telnet and Rlogin protocols allow a text string to be sent down the connection describing the terminal. On a <a name="i246"><\/a>Unix server, this selects an entry from the <a name="i247"><\/a><code>termcap<\/code> or <a name="i248"><\/a><code>terminfo<\/code> database that tells applications what <a name="i249"><\/a>control sequences to send to the terminal, and what character sequences to expect the <a name="i250"><\/a>keyboard to generate.$/;"	a
i25	doc/AppendixA.html	/^If you need to use an external <a name="i25"><\/a>DLL for GSSAPI authentication, that DLL may only be available in a 32-bit or 64-bit form, and that will dictate the version of PuTTY you need to use. (You will probably know if you're doing this; see <a href="Chapter4.html#config-ssh-auth-gssapi-libraries">section 4.23.2<\/a> in the documentation.)$/;"	a
i25	doc/Chapter4.html	/^The server can send a control sequence that restricts the <a name="i25"><\/a>scrolling region of the display. For example, in an editor, the server might reserve a line at the top of the screen and a line at the bottom, and might send a control sequence that causes scrolling operations to affect only the remaining lines.$/;"	a
i25	doc/Chapter6.html	/^<a name="i25"><\/a>PSFTP allows you to modify the file permissions on files and directories on the server. You do this using the <code>chmod<\/code> command, which works very much like the Unix <code>chmod<\/code> command.$/;"	a
i25	doc/Chapter8.html	/^Choosing a good passphrase is difficult. Just as you shouldn't use a dictionary word as a password because it's easy for an attacker to run through a whole dictionary, you should not use a song lyric, quotation or other well-known sentence as a passphrase. <a name="i25"><\/a>DiceWare (<a href="http:\/\/www.diceware.com\/"><code>www.diceware.com<\/code><\/a>) recommends using at least five words each generated randomly by rolling five dice, which gives over 2^64 possible passphrases and is probably not a bad scheme. If you want your passphrase to make grammatical sense, this cuts down the possibilities a lot and you should use a longer one as a result.$/;"	a
i251	doc/Chapter4.html	/^PuTTY attempts to emulate the Unix <a name="i251"><\/a><code>xterm<\/code> program, and by default it reflects this by sending <code>xterm<\/code> as a terminal-type string. If you find this is not doing what you want - perhaps the remote system reports &#8216;Unknown terminal type&#8217; - you could try setting this to something different, such as <a name="i252"><\/a><code>vt220<\/code>.$/;"	a
i254	doc/Chapter4.html	/^This parameter does <em>not<\/em> affect the actual speed of the connection, which is always &#8216;as fast as possible&#8217;; it is just a hint that is sometimes used by server software to modify its behaviour. For instance, if a slow speed is indicated, the server may switch to a less <a name="i254"><\/a>bandwidth-hungry display mode.$/;"	a
i256	doc/Chapter4.html	/^Version 2 of the SSH protocol also provides a similar mechanism, which is easier to implement without security flaws. Newer <a name="i256"><\/a>SSH-2 servers are more likely to support it than older ones.$/;"	a
i257	doc/Chapter4.html	/^The <a name="i257"><\/a>Proxy panel allows you to configure PuTTY to use various types of proxy in order to make its network connections. The settings in this panel affect the primary network connection forming your PuTTY session, and also any extra connections made as a result of SSH <a name="i258"><\/a>port forwarding (see <a href="Chapter3.html#using-port-forwarding">section 3.5<\/a>).$/;"	a
i259	doc/Chapter4.html	/^Selecting <a name="i259"><\/a>&#8216;HTTP&#8217; allows you to proxy your connections through a web server supporting the HTTP <code>CONNECT<\/code> command, as documented in <a href="http:\/\/www.ietf.org\/rfc\/rfc2817.txt">RFC 2817<\/a>.$/;"	a
i26	doc/AppendixA.html	/^This almost always happens because the <a name="i26"><\/a>startup scripts in your account on the server machine are generating output. This is impossible for PSCP, or any other SCP client, to work around. You should never use startup files (<code>.bashrc<\/code>, <code>.cshrc<\/code> and so on) which generate output in non-interactive sessions.$/;"	a
i26	doc/Chapter4.html	/^With DEC Origin Mode on, <a name="i26"><\/a>cursor coordinates are counted from the top of the scrolling region. With it turned off, cursor coordinates are counted from the top of the whole screen regardless of the scrolling region.$/;"	a
i26	doc/Chapter6.html	/^The actual permissions being added or removed. These can be <a name="i26"><\/a><code>r<\/code> (permission to read the file), <a name="i27"><\/a><code>w<\/code> (permission to write to the file), and <a name="i28"><\/a><code>x<\/code> (permission to execute the file, or in the case of a directory, permission to access files within the directory).$/;"	a
i26	doc/Chapter8.html	/^This file is in PuTTY's native format (<code>*.<a name="i26"><\/a>PPK<\/code>); it is the one you will need to tell PuTTY to use for authentication (see <a href="Chapter4.html#config-ssh-privkey">section 4.22.8<\/a>) or tell Pageant to load (see <a href="Chapter9.html#pageant-mainwin-addkey">section 9.2.2<\/a>).$/;"	a
i260	doc/Chapter4.html	/^Selecting &#8216;SOCKS 4&#8217; or &#8216;SOCKS 5&#8217; allows you to proxy your connections through a <a name="i260"><\/a>SOCKS server.$/;"	a
i261	doc/Chapter4.html	/^Many firewalls implement a less formal type of proxy in which a user can make a Telnet connection directly to the firewall machine and enter a command such as <code>connect myhost.com 22<\/code> to connect through to an external host. Selecting <a name="i261"><\/a>&#8216;Telnet&#8217; allows you to tell PuTTY to use this type of proxy.$/;"	a
i262	doc/Chapter4.html	/^Selecting <a name="i262"><\/a>&#8216;Local&#8217; allows you to specify an arbitrary command on the local machine to act as a proxy. When the session is started, instead of creating a TCP connection, PuTTY runs the command (specified in <a href="#config-proxy-command">section 4.15.5<\/a>), and uses its standard input and output streams.$/;"	a
i263	doc/Chapter4.html	/^Connections to the local host (the host name <a name="i263"><\/a><code>localhost<\/code>, and any <a name="i264"><\/a>loopback IP address) are never proxied, even if the proxy exclude list does not explicitly contain them. It is very unlikely that this behaviour would ever cause problems, but if it does you can change it by enabling &#8216;Consider proxying local host connections&#8217;.$/;"	a
i265	doc/Chapter4.html	/^Note that if you are doing <a name="i265"><\/a>DNS at the proxy (see <a href="#config-proxy-dns">section 4.15.3<\/a>), you should make sure that your proxy exclusion settings do not depend on knowing the IP address of a host. If the name is passed on to the proxy without PuTTY looking it up, it will never know the IP address and cannot check it against your list.$/;"	a
i268	doc/Chapter4.html	/^If you are using a proxy to access a private network, it can make a difference whether <a name="i268"><\/a>DNS name resolution is performed by PuTTY itself (on the client machine) or performed by the proxy.$/;"	a
i27	doc/Chapter4.html	/^Most servers send two control characters, <a name="i27"><\/a>CR and <a name="i28"><\/a>LF, to start a <a name="i29"><\/a>new line of the screen. The CR character makes the cursor return to the left-hand side of the screen. The LF character makes the cursor move one line down (and might make the screen scroll).$/;"	a
i27	doc/Chapter8.html	/^RFC 4716 specifies a <a name="i27"><\/a>standard format for storing SSH-2 public keys on disk. Some SSH servers (such as <a name="i28"><\/a><code>ssh.com<\/code>'s) require a public key in this format in order to accept authentication with the corresponding private key. (Others, such as OpenSSH, use a different format; see <a href="#puttygen-pastekey">section 8.2.10<\/a>.)$/;"	a
i271	doc/Chapter4.html	/^If your proxy requires <a name="i271"><\/a>authentication, you can enter a username and a password in the &#8216;Username&#8217; and &#8216;Password&#8217; boxes.$/;"	a
i272	doc/Chapter4.html	/^<a name="i272"><\/a>Note that if you save your session, the proxy password will be saved in plain text, so anyone who can access your PuTTY configuration data will be able to discover it.$/;"	a
i273	doc/Chapter4.html	/^With SOCKS 5, authentication is via <a name="i273"><\/a>CHAP if the proxy supports it (this is not supported in <a name="i274"><\/a>PuTTYtel); otherwise the password is sent to the proxy in <a name="i275"><\/a>plain text.$/;"	a
i276	doc/Chapter4.html	/^With HTTP proxying, the only currently supported authentication method is <a name="i276"><\/a>&#8216;basic&#8217;, where the password is sent to the proxy in <a name="i277"><\/a>plain text.$/;"	a
i278	doc/Chapter4.html	/^If you are using the <a name="i278"><\/a>Telnet proxy type, the usual command required by the firewall's Telnet server is <code>connect<\/code>, followed by a host name and a port number. If your proxy needs a different command, you can enter an alternative here.$/;"	a
i279	doc/Chapter4.html	/^If you are using the <a name="i279"><\/a>Local proxy type, the local command to run is specified here.$/;"	a
i282	doc/Chapter4.html	/^The original Telnet mechanism for passing <a name="i282"><\/a>environment variables was badly specified. At the time the standard (RFC 1408) was written, BSD telnet implementations were already supporting the feature, and the intention of the standard was to describe the behaviour the BSD implementations were already using.$/;"	a
i283	doc/Chapter4.html	/^Sadly there was a typing error in the standard when it was issued, and two vital function codes were specified the wrong way round. BSD implementations did not change, and the standard was not corrected. Therefore, it's possible you might find either <a name="i283"><\/a>BSD or <a name="i284"><\/a>RFC-compliant implementations out there. This switch allows you to choose which one PuTTY claims to be.$/;"	a
i285	doc/Chapter4.html	/^The problem was solved by issuing a second standard, defining a new Telnet mechanism called <a name="i285"><\/a><code>NEW_ENVIRON<\/code>, which behaved exactly like the original <a name="i286"><\/a><code>OLD_ENVIRON<\/code> but was not encumbered by existing implementations. Most Telnet servers now support this, and it's unambiguous. This feature should only be needed if you have trouble passing environment variables to quite an old server.$/;"	a
i288	doc/Chapter4.html	/^In <a name="i288"><\/a><em>active<\/em> mode, PuTTY starts to send negotiations as soon as the connection is opened.$/;"	a
i289	doc/Chapter4.html	/^In <a name="i289"><\/a><em>passive<\/em> mode, PuTTY will wait to negotiate until it sees a negotiation from the server.$/;"	a
i29	doc/Chapter3.html	/^(These options are also available in a <a name="i29"><\/a>context menu brought up by holding Ctrl and clicking with the right mouse button anywhere in the <a name="i30"><\/a>PuTTY window.)$/;"	a
i29	doc/Chapter6.html	/^In addition to all this, there are a few extra special cases for <a name="i29"><\/a>Unix systems. On non-Unix systems these are unlikely to be useful:$/;"	a
i290	doc/Chapter4.html	/^However, sometimes passive mode is required in order to successfully get through certain types of firewall and <a name="i290"><\/a>Telnet proxy server. If you have confusing trouble with a <a name="i291"><\/a>firewall, you could try enabling passive mode to see if it helps.$/;"	a
i293	doc/Chapter4.html	/^the Backspace key on the keyboard will send the <a name="i293"><\/a>Telnet special backspace code;$/;"	a
i294	doc/Chapter4.html	/^Control-C will send the Telnet special <a name="i294"><\/a>Interrupt Process code;$/;"	a
i295	doc/Chapter4.html	/^Control-Z will send the Telnet special <a name="i295"><\/a>Suspend Process code.$/;"	a
i297	doc/Chapter4.html	/^Unlike most other remote login protocols, the Telnet protocol has a special &#8216;<a name="i297"><\/a>new line&#8217; code that is not the same as the usual line endings of Control-M or Control-J. By default, PuTTY sends the Telnet New Line code when you press Return, instead of sending Control-M as it does in most other protocols.$/;"	a
i298	doc/Chapter4.html	/^The <a name="i298"><\/a>Rlogin panel allows you to configure options that only apply to Rlogin sessions.$/;"	a
i3	doc/AppendixB.html	/^Check the <a href="https:\/\/www.chiark.greenend.org.uk\/~sgtatham\/putty\/changes.html">Change Log<\/a> on the PuTTY website, and see if we have already fixed the bug in the <a name="i3"><\/a>development snapshots.$/;"	a
i3	doc/Chapter1.html	/^SSH, Telnet and Rlogin are <a name="i3"><\/a><em>network protocols<\/em> that allow you to do this. On the computer you sit at, you run a <a name="i4"><\/a><em>client<\/em>, which makes a network connection to the other computer (the <a name="i5"><\/a><em>server<\/em>). The network connection carries your keystrokes and commands from the client to the server, and carries the server's responses back to you.$/;"	a
i3	doc/Chapter10.html	/^This occurs when the SSH server does not offer any ciphers which you have configured PuTTY to consider strong enough. By default, PuTTY puts up this warning only for <a name="i3"><\/a>single-DES and <a name="i4"><\/a>Arcfour encryption.$/;"	a
i3	doc/Chapter2.html	/^Now select a login <a name="i3"><\/a>protocol to use, from the &#8216;Connection type&#8217; buttons. For a login session, you should select <a name="i4"><\/a>Telnet, <a name="i5"><\/a>Rlogin or <a name="i6"><\/a>SSH. See <a href="Chapter1.html#which-one">section 1.2<\/a> for a description of the differences between the three protocols, and advice on which one to use. The fourth protocol, <a name="i7"><\/a><em>Raw<\/em>, is not used for interactive login sessions; you would usually use this for debugging other Internet services (see <a href="Chapter3.html#using-rawprot">section 3.6<\/a>). The fifth option, <em>Serial<\/em>, is used for connecting to a local serial line, and works somewhat differently: see <a href="Chapter3.html#using-serial">section 3.7<\/a> for more information on this.$/;"	a
i3	doc/Chapter3.html	/^PuTTY's copy and paste works entirely with the <a name="i3"><\/a>mouse. In order to copy text to the clipboard, you just click the <a name="i4"><\/a>left mouse button in the <a name="i5"><\/a>terminal window, and drag to <a name="i6"><\/a>select text. When you let go of the button, the text is <em>automatically<\/em> copied to the clipboard. You do not need to press Ctrl-C or Ctrl-Ins; in fact, if you do press Ctrl-C, PuTTY will send a Ctrl-C character down your session to the server where it will probably cause a process to be interrupted.$/;"	a
i3	doc/Chapter4.html	/^The &#8216;Connection type&#8217; radio buttons let you choose what type of connection you want to make: a <a name="i3"><\/a>raw connection, a <a name="i4"><\/a>Telnet connection, an <a name="i5"><\/a>Rlogin connection, an <a name="i6"><\/a>SSH connection, or a connection to a local <a name="i7"><\/a>serial line. (See <a href="Chapter1.html#which-one">section 1.2<\/a> for a summary of the differences between SSH, Telnet and rlogin; see <a href="Chapter3.html#using-rawprot">section 3.6<\/a> for an explanation of &#8216;raw&#8217; connections; see <a href="Chapter3.html#using-serial">section 3.7<\/a> for information about using a serial line.)$/;"	a
i3	doc/Chapter5.html	/^PSCP is a command line application. This means that you cannot just double-click on its icon to run it and instead you have to bring up a <a name="i3"><\/a>console window. With Windows 95, 98, and ME, this is called an &#8216;MS-DOS Prompt&#8217; and with Windows NT, 2000, and XP, it is called a &#8216;Command Prompt&#8217;. It should be available from the Programs section of your <a name="i4"><\/a>Start Menu.$/;"	a
i3	doc/Chapter6.html	/^PSCP should work on virtually every SSH server. PSFTP uses the new <a name="i3"><\/a>SFTP protocol, which is a feature of SSH-2 only. (PSCP will also use this protocol if it can, but there is an SSH-1 equivalent it can fall back to if it cannot.)$/;"	a
i3	doc/Chapter7.html	/^Plink is probably not what you want if you want to run an <a name="i3"><\/a>interactive session in a console window.$/;"	a
i30	doc/AppendixA.html	/^This is almost always caused by your <a name="i30"><\/a>login scripts on the server generating output. PSCP or PSFTP will receive that output when they were expecting to see the start of a file transfer protocol, and they will attempt to interpret the output as file-transfer protocol. This will usually lead to an &#8216;out of memory&#8217; error for much the same reasons as given in <a href="#faq-outofmem">question A.7.3<\/a>.$/;"	a
i30	doc/Chapter4.html	/^Some servers only send LF, and expect the terminal to move the cursor over to the left automatically. If you come across a server that does this, you will see a <a name="i30"><\/a>stepped effect on the screen, like this:$/;"	a
i30	doc/Chapter5.html	/^The older <a name="i30"><\/a>SCP protocol does not have a written specification and leaves a lot of detail to the server platform. <a name="i31"><\/a>Wildcards are expanded on the server. The simple design means that any wildcard specification supported by the server platform (such as brace expansion) can be used, but also leads to interoperability issues such as with filename quoting (for instance, where filenames contain spaces), and also the security issue described in <a href="#pscp-usage-basics">section 5.2.1<\/a>.$/;"	a
i30	doc/Chapter6.html	/^You can specify <code>u+s<\/code> and <code>u-s<\/code> to add or remove the Unix <a name="i30"><\/a>set-user-ID bit. This is typically only useful for special purposes; refer to your Unix documentation if you're not sure about it.$/;"	a
i30	doc/Chapter8.html	/^All SSH-1 servers require your public key to be given to it in a one-line format before it will accept authentication with your private key. The <a name="i30"><\/a>OpenSSH server also requires this for SSH-2.$/;"	a
i300	doc/Chapter4.html	/^Rlogin allows an automated (password-free) form of login by means of a file called <a name="i300"><\/a><code>.rhosts<\/code> on the server. You put a line in your <code>.rhosts<\/code> file saying something like <code>jbloggs@pc1.example.com<\/code>, and then when you make an Rlogin connection the client transmits the username of the user running the Rlogin client. The server checks the username and hostname against <code>.rhosts<\/code>, and if they match it <a name="i301"><\/a>does not ask for a password.$/;"	a
i302	doc/Chapter4.html	/^This only works because Unix systems contain a safeguard to stop a user from pretending to be another user in an Rlogin connection. Rlogin connections have to come from <a name="i302"><\/a>port numbers below 1024, and Unix systems prohibit this to unprivileged processes; so when the server sees a connection from a low-numbered port, it assumes the client end of the connection is held by a privileged (and therefore trusted) process, so it believes the claim of who the user is.$/;"	a
i303	doc/Chapter4.html	/^Windows does not have this restriction: <em>any<\/em> user can initiate an outgoing connection from a low-numbered port. Hence, the Rlogin <code>.rhosts<\/code> mechanism is completely useless for securely distinguishing several different users on a Windows machine. If you have a <code>.rhosts<\/code> entry pointing at a Windows PC, you should assume that <em>anyone<\/em> using that PC can <a name="i303"><\/a>spoof your username in an Rlogin connection and access your account on the server.$/;"	a
i304	doc/Chapter4.html	/^The &#8216;Local username&#8217; control allows you to specify what user name PuTTY should claim you have, in case it doesn't match your <a name="i304"><\/a>Windows user name (or in case you didn't bother to set up a Windows user name).$/;"	a
i305	doc/Chapter4.html	/^The <a name="i305"><\/a>SSH panel allows you to configure options that only apply to SSH sessions.$/;"	a
i306	doc/Chapter4.html	/^In SSH, you don't have to run a general shell session on the server. Instead, you can choose to run a single specific command (such as a mail user agent, for example). If you want to do this, enter the command in the &#8216;<a name="i306"><\/a>Remote command&#8217; box.$/;"	a
i309	doc/Chapter4.html	/^If you tick this box, PuTTY will not attempt to run a shell or command after connecting to the remote server. You might want to use this option if you are only using the SSH connection for <a name="i309"><\/a>port forwarding, and your user account on the server does not have the ability to run a shell.$/;"	a
i31	doc/AppendixA.html	/^You almost certainly need to change the &#8216;Use <a name="i31"><\/a>background colour to erase screen&#8217; setting in the Terminal panel. If there is too much black space (the commoner situation), you should enable it, while if there is too much colour, you should disable it. (See <a href="Chapter4.html#config-erase">section 4.3.5<\/a>.)$/;"	a
i31	doc/Chapter4.html	/^Most servers send two control characters, <a name="i31"><\/a>CR and <a name="i32"><\/a>LF, to start a <a name="i33"><\/a>new line of the screen. The CR character makes the cursor return to the left-hand side of the screen. The LF character makes the cursor move one line down (and might make the screen scroll).$/;"	a
i31	doc/Chapter6.html	/^You can specify <code>g+s<\/code> and <code>g-s<\/code> to add or remove the Unix <a name="i31"><\/a>set-group-ID bit. On a file, this works similarly to the set-user-ID bit (see your Unix documentation again); on a directory it ensures that files created in the directory are accessible by members of the group that owns the directory.$/;"	a
i31	doc/Chapter8.html	/^However, SSH-2 private keys have no standard format. <a name="i31"><\/a>OpenSSH and <a name="i32"><\/a><code>ssh.com<\/code> have different formats, and PuTTY's is different again. So a key generated with one client cannot immediately be used with another.$/;"	a
i310	doc/Chapter4.html	/^This feature is only available in <a name="i310"><\/a>SSH protocol version 2 (since the version 1 protocol assumes you will always want to run a shell).$/;"	a
i312	doc/Chapter4.html	/^This enables data compression in the SSH connection: data sent by the server is compressed before sending, and decompressed at the client end. Likewise, data sent by PuTTY to the server is compressed first and the server decompresses it at the other end. This can help make the most of a low-<a name="i312"><\/a>bandwidth connection.$/;"	a
i314	doc/Chapter4.html	/^This allows you to select whether to use <a name="i314"><\/a>SSH protocol version 2 or the older <a name="i315"><\/a>version 1.$/;"	a
i316	doc/Chapter4.html	/^The Kex panel (short for &#8216;<a name="i316"><\/a>key exchange&#8217;) allows you to configure options related to SSH-2 key exchange.$/;"	a
i317	doc/Chapter4.html	/^Key exchange occurs at the start of an SSH connection (and occasionally thereafter); it establishes a <a name="i317"><\/a>shared secret that is used as the basis for all of SSH's security features. It is therefore very important for the security of the connection that the key exchange is secure.$/;"	a
i319	doc/Chapter4.html	/^&#8216;ECDH&#8217;: <a name="i319"><\/a>elliptic curve <a name="i320"><\/a>Diffie-Hellman key exchange.$/;"	a
i32	doc/AppendixA.html	/^Some of the terminal options (notably <a name="i32"><\/a>Auto Wrap and background-colour screen erase) actually represent the <em>default<\/em> setting, rather than the currently active setting. The server can send sequences that modify these options in mid-session, but when the terminal is reset (by server action, or by you choosing &#8216;Reset Terminal&#8217; from the System menu) the defaults are restored.$/;"	a
i32	doc/Chapter3.html	/^You can use the mouse to select one or more lines of the Event Log, and hit the Copy button to copy them to the <a name="i32"><\/a>clipboard. If you are reporting a bug, it's often useful to paste the contents of the Event Log into your bug report.$/;"	a
i32	doc/Chapter5.html	/^The newer <a name="i32"><\/a>SFTP protocol, which is usually associated with SSH-2 servers, is specified in a more platform independent way, and leaves issues such as wildcard syntax up to the client. (PuTTY's SFTP wildcard syntax is described in <a href="Chapter6.html#psftp-wildcards">section 6.2.2<\/a>.) This makes it more consistent across platforms, more suitable for scripting and automation, and avoids security issues with wildcard matching.$/;"	a
i32	doc/Chapter6.html	/^You can specify <code>+t<\/code> and <code>-t<\/code> to add or remove the Unix &#8216;<a name="i32"><\/a>sticky bit&#8217;. When applied to a directory, this means that the owner of a file in that directory can delete the file (whereas normally only the owner of the <em>directory<\/em> would be allowed to).$/;"	a
i321	doc/Chapter4.html	/^&#8216;<a name="i321"><\/a>Group exchange&#8217;: with this method, instead of using a fixed group, PuTTY requests that the server suggest a group to use for key exchange; the server can avoid groups known to be weak, and possibly invent new ones over time, without any changes required to PuTTY's configuration. We recommend use of this method instead of the well-known groups, if possible.$/;"	a
i322	doc/Chapter4.html	/^&#8216;<a name="i322"><\/a>RSA key exchange&#8217;: this requires much less computational effort on the part of the client, and somewhat less on the part of the server, than Diffie-Hellman key exchange.$/;"	a
i324	doc/Chapter4.html	/^You might have a need to disable time-based rekeys completely for the same reasons that <a name="i324"><\/a>keepalives aren't always helpful. If you anticipate suffering a network dropout of several hours in the middle of an SSH connection, but were not actually planning to send <em>data<\/em> down that connection during those hours, then an attempted rekey in the middle of the dropout will probably cause the connection to be abandoned, whereas if rekeys are disabled then the connection should in principle survive (in the absence of interfering <a name="i325"><\/a>firewalls). See <a href="#config-keepalive">section 4.13.1<\/a> for more discussion of these issues; for these purposes, rekeys have much the same properties as keepalives. (Except that rekeys have cryptographic value in themselves, so you should bear that in mind when deciding whether to turn them off.) Note, however, the the SSH <em>server<\/em> can still initiate rekeys.$/;"	a
i326	doc/Chapter4.html	/^Disabling data-based rekeys entirely is a bad idea. The <a name="i326"><\/a>integrity, and to a lesser extent, <a name="i327"><\/a>confidentiality of the SSH-2 protocol depend in part on rekeys occurring before a 32-bit packet sequence number wraps around. Unlike time-based rekeys, data-based rekeys won't occur when the SSH connection is idle, so they shouldn't cause the same problems. The SSH-1 protocol, incidentally, has even weaker integrity protection than SSH-2 without rekeys.$/;"	a
i328	doc/Chapter4.html	/^The Host Keys panel allows you to configure options related to SSH-2 <a name="i328"><\/a>host key management.$/;"	a
i33	doc/Chapter6.html	/^To <a name="i33"><\/a>delete a file on the server, type <code>del<\/code> and then the filename or filenames:$/;"	a
i33	doc/Chapter8.html	/^Using the <a name="i33"><\/a>&#8216;Import&#8217; command from the &#8216;Conversions&#8217; menu, PuTTYgen can load SSH-2 private keys in OpenSSH's format and <code>ssh.com<\/code>'s format. Once you have loaded one of these key types, you can then save it back out as a PuTTY-format key (<code>*.<a name="i34"><\/a>PPK<\/code>) so that you can use it with the PuTTY suite. The passphrase will be unchanged by this process (unless you deliberately change it). You may want to change the key comment before you save the key, since OpenSSH's SSH-2 key format contains no space for a comment and <code>ssh.com<\/code>'s default comment format is long and verbose.$/;"	a
i330	doc/Chapter4.html	/^&#8216;Ed25519&#8217;: <a name="i330"><\/a>Edwards-curve <a name="i331"><\/a>DSA using a twisted Edwards curve with modulus <code>2^255-19<\/code>.$/;"	a
i332	doc/Chapter4.html	/^&#8216;ECDSA&#8217;: <a name="i332"><\/a>elliptic curve <a name="i333"><\/a>DSA using one of the NIST-standardised elliptic curves.$/;"	a
i334	doc/Chapter4.html	/^&#8216;DSA&#8217;: straightforward <a name="i334"><\/a>DSA using modular exponentiation.$/;"	a
i335	doc/Chapter4.html	/^&#8216;RSA&#8217;: the ordinary <a name="i335"><\/a>RSA algorithm.$/;"	a
i337	doc/Chapter4.html	/^If this box contains at least one host key or fingerprint when PuTTY makes an SSH connection, then PuTTY's automated host key management is completely bypassed: the connection will be permitted if and only if the host key presented by the server is one of the keys listed in this box, and the <a name="i337"><\/a>host key store in the Registry will be neither read <em>nor written<\/em>, unless you explicitly do so.$/;"	a
i338	doc/Chapter4.html	/^PuTTY supports a variety of different <a name="i338"><\/a>encryption algorithms, and allows you to choose which one you prefer to use. You can do this by dragging the algorithms up and down in the list box (or moving them using the Up and Down buttons) to specify a preference order. When you make an SSH connection, PuTTY will search down the list from the top until it finds an algorithm supported by the server, and then use that.$/;"	a
i339	doc/Chapter4.html	/^<a name="i339"><\/a>ChaCha20-Poly1305, a combined cipher and <a name="i340"><\/a>MAC (SSH-2 only)$/;"	a
i34	doc/AppendixA.html	/^Some types of <a name="i34"><\/a>firewall, and almost any router doing Network Address Translation (<a name="i35"><\/a>NAT, also known as IP masquerading), will forget about a connection through them if the connection does nothing for too long. This will cause the connection to be rudely cut off when contact is resumed.$/;"	a
i34	doc/Chapter3.html	/^The &#8216;break&#8217; signal can also be invoked from the keyboard with <a name="i34"><\/a>Ctrl-Break.$/;"	a
i34	doc/Chapter5.html	/^PSCP returns an <a name="i34"><\/a><code>ERRORLEVEL<\/code> of zero (success) only if the files were correctly transferred. You can test for this in a <a name="i35"><\/a>batch file, using code such as this:$/;"	a
i34	doc/Chapter6.html	/^To <a name="i34"><\/a>create a directory on the server, type <code>mkdir<\/code> and then the directory name:$/;"	a
i341	doc/Chapter4.html	/^<a name="i341"><\/a>AES (Rijndael) - 256, 192, or 128-bit SDCTR or CBC (SSH-2 only)$/;"	a
i342	doc/Chapter4.html	/^<a name="i342"><\/a>Arcfour (RC4) - 256 or 128-bit stream cipher (SSH-2 only)$/;"	a
i343	doc/Chapter4.html	/^<a name="i343"><\/a>Blowfish - 256-bit SDCTR (SSH-2 only) or 128-bit CBC$/;"	a
i344	doc/Chapter4.html	/^<a name="i344"><\/a>Triple-DES - 168-bit SDCTR (SSH-2 only) or CBC$/;"	a
i345	doc/Chapter4.html	/^<a name="i345"><\/a>Single-DES - 56-bit CBC (see below for SSH-2)$/;"	a
i346	doc/Chapter4.html	/^The Auth panel allows you to configure <a name="i346"><\/a>authentication options for SSH sessions.$/;"	a
i347	doc/Chapter4.html	/^SSH-2 servers can provide a message for clients to display to the prospective user before the user logs in; this is sometimes known as a pre-authentication &#8216;<a name="i347"><\/a>banner&#8217;. Typically this is used to provide information about the server and legal notices.$/;"	a
i35	doc/Chapter3.html	/^The following <a name="i35"><\/a>special commands are available in Telnet:$/;"	a
i35	doc/Chapter4.html	/^Not all terminals agree on what colour to turn the screen when the server sends a &#8216;<a name="i35"><\/a>clear screen&#8217; sequence. Some terminals believe the screen should always be cleared to the <em>default<\/em> background colour. Others believe the screen should be cleared to whatever the server has selected as a background colour.$/;"	a
i35	doc/Chapter6.html	/^To <a name="i35"><\/a>remove a directory on the server, type <code>rmdir<\/code> and then the directory name or names:$/;"	a
i35	doc/Chapter8.html	/^PuTTYgen can also <a name="i35"><\/a>export private keys in OpenSSH format and in <code>ssh.com<\/code> format. To do so, select one of the &#8216;Export&#8217; options from the &#8216;Conversions&#8217; menu. Exporting a key works exactly like saving it (see <a href="#puttygen-savepriv">section 8.2.8<\/a>) - you need to have typed your passphrase in beforehand, and you will be warned if you are about to save a key without a passphrase.$/;"	a
i350	doc/Chapter4.html	/^TIS and CryptoCard authentication are (despite their names) generic forms of simple <a name="i350"><\/a>challenge\/response authentication available in SSH protocol version 1 only. You might use them if you were using <a name="i351"><\/a>S\/Key <a name="i352"><\/a>one-time passwords, for example, or if you had a physical <a name="i353"><\/a>security token that generated responses to authentication challenges. They can even be used to prompt for simple passwords.$/;"	a
i355	doc/Chapter4.html	/^The SSH-2 equivalent of TIS authentication is called &#8216;keyboard-interactive&#8217;. It is a flexible authentication method using an arbitrary sequence of requests and responses; so it is not only useful for <a name="i355"><\/a>challenge\/response mechanisms such as <a name="i356"><\/a>S\/Key, but it can also be used for (for example) asking the user for a <a name="i357"><\/a>new password when the old one has expired.$/;"	a
i359	doc/Chapter4.html	/^This option allows the SSH server to open forwarded connections back to your local copy of <a name="i359"><\/a>Pageant. If you are not running Pageant, this option will do nothing.$/;"	a
i36	doc/Chapter3.html	/^<a name="i36"><\/a>Are You There$/;"	a
i36	doc/Chapter4.html	/^Background-colour erase can be turned on and off by <a name="i36"><\/a>control sequences sent by the server. This configuration option controls the <em>default<\/em> state, which will be restored when you reset the terminal (see <a href="Chapter3.html#reset-terminal">section 3.1.3.6<\/a>). However, if you modify this option in mid-session using &#8216;Change Settings&#8217;, it will take effect immediately.$/;"	a
i36	doc/Chapter8.html	/^If your server is using the SSH-1 protocol, you should change into the <a name="i36"><\/a><code>.ssh<\/code> directory and open the file <a name="i37"><\/a><code>authorized_keys<\/code> with your favourite editor. (You may have to create this file if this is the first key you have put in it). Then switch to the PuTTYgen window, select all of the text in the &#8216;Public key for pasting into authorized_keys file&#8217; box (see <a href="#puttygen-pastekey">section 8.2.10<\/a>), and copy it to the clipboard (<code>Ctrl+C<\/code>). Then, switch back to the PuTTY window and insert the data into the open file, making sure it ends up all on one line. Save the file.$/;"	a
i361	doc/Chapter4.html	/^The SSH-2 protocol <em>does<\/em> allow changes of username, in principle, but does not make it mandatory for SSH-2 servers to accept them. In particular, <a name="i361"><\/a>OpenSSH does not accept a change of username; once you have sent one username, it will reject attempts to try to authenticate as another user. (Depending on the version of OpenSSH, it may quietly return failure for all login attempts, or it may send an error message.)$/;"	a
i363	doc/Chapter4.html	/^This box is where you enter the name of your private key file if you are using <a name="i363"><\/a>public key authentication. See <a href="Chapter8.html#pubkey">chapter 8<\/a> for information about public key authentication in SSH.$/;"	a
i364	doc/Chapter4.html	/^This key must be in PuTTY's native format (<code>*.<a name="i364"><\/a>PPK<\/code>). If you have a private key in another format that you want to use with PuTTY, see <a href="Chapter8.html#puttygen-conversions">section 8.2.12<\/a>.$/;"	a
i365	doc/Chapter4.html	/^You can use the authentication agent <a name="i365"><\/a>Pageant so that you do not need to explicitly configure a key here; see <a href="Chapter9.html#pageant">chapter 9<\/a>.$/;"	a
i367	doc/Chapter4.html	/^The &#8216;GSSAPI&#8217; subpanel of the &#8216;Auth&#8217; panel controls the use of GSSAPI authentication. This is a mechanism which delegates the authentication exchange to a library elsewhere on the client machine, which in principle can authenticate in many different ways but in practice is usually used with the <a name="i367"><\/a>Kerberos <a name="i368"><\/a>single sign-on protocol to implement <a name="i369"><\/a>passwordless login.$/;"	a
i37	doc/Chapter3.html	/^<a name="i37"><\/a>Break$/;"	a
i370	doc/Chapter4.html	/^<a name="i370"><\/a>GSSAPI credential delegation is a mechanism for passing on your Kerberos (or other) identity to the session on the SSH server. If you enable this option, then not only will PuTTY be able to log in automatically to a server that accepts your Kerberos credentials, but also you will be able to connect out from that server to other Kerberos-supporting services and use the same credentials just as automatically.$/;"	a
i371	doc/Chapter4.html	/^On Windows, such libraries are files with a <a name="i371"><\/a><code>.dll<\/code> extension, and must have been built in the same way as the PuTTY executable you're running; if you have a 32-bit DLL, you must run a 32-bit version of PuTTY, and the same with 64-bit (see <a href="AppendixA.html#faq-32bit-64bit">question A.6.10<\/a>). On Unix, shared libraries generally have a <code>.so<\/code> extension.$/;"	a
i373	doc/Chapter4.html	/^When connecting to a <a name="i373"><\/a>Unix system, most <a name="i374"><\/a>interactive shell sessions are run in a <em>pseudo-terminal<\/em>, which allows the Unix system to pretend it's talking to a real physical terminal device but allows the SSH server to catch all the data coming from that fake device and send it back to the client.$/;"	a
i376	doc/Chapter4.html	/^The precise effect of each setting, if any, is up to the server. Their names come from <a name="i376"><\/a>POSIX and other Unix systems, and they are most likely to have a useful effect on such systems. (These are the same settings that can usually be changed using the <a name="i377"><\/a><code>stty<\/code> command once logged in to such servers.)$/;"	a
i378	doc/Chapter4.html	/^<a name="i378"><\/a><code>ERASE<\/code> is the character that when typed by the user will delete one space to the left. When set to &#8216;Auto&#8217; (the default setting), this follows the setting of the local Backspace key in PuTTY (see <a href="#config-backspace">section 4.4.1<\/a>).$/;"	a
i379	doc/Chapter4.html	/^This and other <a name="i379"><\/a>special characters are specified using <code>^C<\/code> notation for Ctrl-C, and so on. Use <code>^&lt;27&gt;<\/code> or <code>^&lt;0x1B&gt;<\/code> to specify a character numerically, and <code>^~<\/code> to get a literal <code>^<\/code>. Other non-control characters are denoted by themselves. Leaving the box entirely blank indicates that <em>no<\/em> character should be assigned to the specified function, although this may not be supported by all servers. $/;"	a
i38	doc/Chapter3.html	/^<a name="i38"><\/a>Synch$/;"	a
i38	doc/Chapter4.html	/^When blinking text is disabled and the server attempts to make some text blink, PuTTY will instead display the text with a <a name="i38"><\/a>bolded background colour.$/;"	a
i38	doc/Chapter8.html	/^If your server is <a name="i38"><\/a>OpenSSH and is using the SSH-2 protocol, you should follow the same instructions, except that in earlier versions of OpenSSH 2 the file might be called <code>authorized_keys2<\/code>. (In modern versions the same <code>authorized_keys<\/code> file is used for both SSH-1 and SSH-2 keys.)$/;"	a
i380	doc/Chapter4.html	/^<a name="i380"><\/a><code>QUIT<\/code> is a special character that usually forcefully ends the current process on the server (<code>SIGQUIT<\/code>). On many servers its default setting is Ctrl-backslash (<code>^\\<\/code>), which is easy to accidentally invoke on many keyboards. If this is getting in your way, you may want to change it to another character or turn it off entirely.$/;"	a
i381	doc/Chapter4.html	/^The boolean mode <a name="i381"><\/a><code>IUTF8<\/code> signals to the server whether the terminal character set is <a name="i382"><\/a>UTF-8 or not, for purposes such as basic line editing; if this is set incorrectly, the backspace key may erase the wrong amount of text, for instance. However, simply setting this is not usually sufficient for the server to use UTF-8; POSIX servers will generally also require the locale to be set (by some server-dependent means), although many newer installations default to UTF-8. Also, since this mode was added to the SSH protocol much later than the others, many servers (particularly older servers) do not honour this mode sent over SSH; indeed, a few poorly-written servers object to its mere presence, so you may find you need to set it to not be sent at all. When set to &#8216;Auto&#8217;, this follows the local configured character set (see <a href="#config-charset">section 4.10.1<\/a>).$/;"	a
i383	doc/Chapter4.html	/^The X11 panel allows you to configure <a name="i383"><\/a>forwarding of X11 over an SSH connection.$/;"	a
i384	doc/Chapter4.html	/^If your server lets you run X Window System <a name="i384"><\/a>graphical applications, X11 forwarding allows you to securely give those applications access to a local X display on your PC.$/;"	a
i386	doc/Chapter4.html	/^The usual authorisation method used for this is called <a name="i386"><\/a><code>MIT-MAGIC-COOKIE-1<\/code>. This is a simple password-style protocol: the X client sends some cookie data to the server, and the server checks that it matches the real cookie. The cookie data is sent over an unencrypted X11 connection; so if you allow a client on a third machine to access the virtual X server, then the cookie will be sent in the clear.$/;"	a
i387	doc/Chapter4.html	/^PuTTY offers the alternative protocol <a name="i387"><\/a><code>XDM-AUTHORIZATION-1<\/code>. This is a cryptographically authenticated protocol: the data sent by the X client is different every time, and it depends on the IP address and port of the client's end of the connection and is also stamped with the current time. So an eavesdropper who captures an <code>XDM-AUTHORIZATION-1<\/code> string cannot immediately re-use it for their own X connection.$/;"	a
i389	doc/Chapter4.html	/^Port forwarding allows you to tunnel other types of <a name="i389"><\/a>network connection down an SSH session. See <a href="Chapter3.html#using-port-forwarding">section 3.5<\/a> for a general discussion of port forwarding and how it works.$/;"	a
i39	doc/Chapter3.html	/^<a name="i39"><\/a>Erase Character$/;"	a
i39	doc/Chapter4.html	/^Blinking text can be turned on and off by <a name="i39"><\/a>control sequences sent by the server. This configuration option controls the <em>default<\/em> state, which will be restored when you reset the terminal (see <a href="Chapter3.html#reset-terminal">section 3.1.3.6<\/a>). However, if you modify this option in mid-session using &#8216;Change Settings&#8217;, it will take effect immediately.$/;"	a
i39	doc/Chapter8.html	/^If your server is <a name="i39"><\/a><code>ssh.com<\/code>'s product and is using SSH-2, you need to save a <em>public<\/em> key file from PuTTYgen (see <a href="#puttygen-savepub">section 8.2.9<\/a>), and copy that into the <a name="i40"><\/a><code>.ssh2<\/code> directory on the server. Then you should go into that <code>.ssh2<\/code> directory, and edit (or create) a file called <code>authorization<\/code>. In this file you should put a line like <code>Key mykey.pub<\/code>, with <code>mykey.pub<\/code> replaced by the name of your key file.$/;"	a
i390	doc/Chapter4.html	/^Set one of the &#8216;Local&#8217; or &#8216;Remote&#8217; radio buttons, depending on whether you want to <a name="i390"><\/a>forward a local port to a remote destination (&#8216;Local&#8217;) or <a name="i391"><\/a>forward a remote port to a local destination (&#8216;Remote&#8217;). Alternatively, select &#8216;Dynamic&#8217; if you want PuTTY to <a name="i392"><\/a>provide a local SOCKS 4\/4A\/5 proxy on a local port (note that this proxy only supports TCP connections; the SSH protocol does not support forwarding <a name="i393"><\/a>UDP).$/;"	a
i394	doc/Chapter4.html	/^Enter a source <a name="i394"><\/a>port number into the &#8216;Source port&#8217; box. For local forwardings, PuTTY will listen on this port of your PC. For remote forwardings, your SSH server will listen on this port of the remote machine. Note that most servers will not allow you to listen on <a name="i395"><\/a>port numbers less than 1024.$/;"	a
i396	doc/Chapter4.html	/^If you have selected &#8216;Local&#8217; or &#8216;Remote&#8217; (this step is not needed with &#8216;Dynamic&#8217;), enter a hostname and port number separated by a colon, in the &#8216;Destination&#8217; box. Connections received on the source port will be directed to this destination. For example, to connect to a POP-3 server, you might enter <code>popserver.example.com:110<\/code>. (If you need to enter a literal <a name="i396"><\/a>IPv6 address, enclose it in square brackets, for instance &#8216;<code>[::1]:2200<\/code>&#8217;.)$/;"	a
i397	doc/Chapter4.html	/^In the &#8216;Source port&#8217; box, you can also optionally enter an <a name="i397"><\/a>IP address to listen on, by specifying (for instance) <code>127.0.0.5:79<\/code>. See <a href="Chapter3.html#using-port-forwarding">section 3.5<\/a> for more information on how this works and its restrictions.$/;"	a
i398	doc/Chapter4.html	/^In place of port numbers, you can enter <a name="i398"><\/a>service names, if they are known to the local system. For instance, in the &#8216;Destination&#8217; box, you could enter <code>popserver.example.com:pop3<\/code>.$/;"	a
i399	doc/Chapter4.html	/^You can <a name="i399"><\/a>modify the currently active set of port forwardings in mid-session using &#8216;Change Settings&#8217; (see <a href="Chapter3.html#using-changesettings">section 3.1.3.4<\/a>). If you delete a local or dynamic port forwarding in mid-session, PuTTY will stop listening for connections on that port, so it can be re-used by another program. If you delete a remote port forwarding, note that:$/;"	a
i4	doc/AppendixB.html	/^Tell us what <a name="i4"><\/a>version of PuTTY you are running. To find this out, use the &#8216;About PuTTY&#8217; option from the System menu. Please <em>do not<\/em> just tell us &#8216;I'm running the latest version&#8217;; e-mail can be delayed and it may not be obvious which version was the latest at the time you sent the message.$/;"	a
i4	doc/Chapter6.html	/^PSFTP allows you to run an interactive file transfer session, much like the Windows <a name="i4"><\/a><code>ftp<\/code> program. You can list the contents of directories, browse around the file system, issue multiple <code>get<\/code> and <code>put<\/code> commands, and eventually log out. By contrast, PSCP is designed to do a single file transfer operation and immediately terminate.$/;"	a
i4	doc/Chapter7.html	/^Plink is a command line application. This means that you cannot just double-click on its icon to run it and instead you have to bring up a <a name="i4"><\/a>console window. In Windows 95, 98, and ME, this is called an &#8216;MS-DOS Prompt&#8217;, and in Windows NT, 2000, and XP, it is called a &#8216;Command Prompt&#8217;. It should be available from the Programs section of your Start Menu.$/;"	a
i4	windows/winprint.c	/^	LPPRINTER_INFO_4 i4;$/;"	m	union:printer_enum_tag::__anon144	file:
i40	doc/Chapter3.html	/^<a name="i40"><\/a>Erase Line$/;"	a
i400	doc/Chapter4.html	/^The SSH-2 protocol does contain such a mechanism, but not all SSH servers support it. (In particular, <a name="i400"><\/a>OpenSSH does not support it in any version earlier than 3.9.)$/;"	a
i401	doc/Chapter4.html	/^The source port for a forwarded connection usually does not accept connections from any machine except the <a name="i401"><\/a>SSH client or server machine itself (for local and remote forwardings respectively). There are controls in the Tunnels panel to change this:$/;"	a
i402	doc/Chapter4.html	/^The &#8216;Remote ports do the same&#8217; option does the same thing for remote-to-local port forwardings (so that machines other than the SSH server machine can connect to the forwarded port.) Note that this feature is only available in the SSH-2 protocol, and not all SSH-2 servers support it (<a name="i402"><\/a>OpenSSH 3.0 does not, for example).$/;"	a
i404	doc/Chapter4.html	/^This switch allows you to select a specific Internet protocol (<a name="i404"><\/a>IPv4 or <a name="i405"><\/a>IPv6) for the local end of a forwarded port. By default, it is set on &#8216;Auto&#8217;, which means that:$/;"	a
i406	doc/Chapter4.html	/^Note that some operating systems may listen for incoming connections in IPv4 even if you specifically asked for IPv6, because their IPv4 and IPv6 protocol stacks are linked together. Apparently <a name="i406"><\/a>Linux does this, and Windows does not. So if you're running PuTTY on Windows and you tick &#8216;IPv6&#8217; for a local or dynamic port forwarding, it will <em>only<\/em> be usable by connecting to it using IPv6; whereas if you do the same on Linux, you can also use it with IPv4. However, ticking &#8216;Auto&#8217; should always give you a port which you can connect to using either protocol.$/;"	a
i409	doc/Chapter4.html	/^An ignore message (SSH_MSG_IGNORE) is a message in the SSH protocol which can be sent from the client to the server, or from the server to the client, at any time. Either side is required to ignore the message whenever it receives it. PuTTY uses ignore messages to <a name="i409"><\/a>hide the password packet in SSH-1, so that a listener cannot tell the length of the user's password; it also uses ignore messages for connection <a name="i410"><\/a>keepalives (see <a href="#config-keepalive">section 4.13.1<\/a>).$/;"	a
i41	doc/Chapter3.html	/^<a name="i41"><\/a>Go Ahead$/;"	a
i41	doc/Chapter4.html	/^This option controls what PuTTY will send back to the server if the server sends it the ^E <a name="i41"><\/a>enquiry character. Normally it just sends the string &#8216;PuTTY&#8217;.$/;"	a
i413	doc/Chapter4.html	/^Some SSH-1 servers cannot deal with RSA authentication messages at all. If <a name="i413"><\/a>Pageant is running and contains any SSH-1 keys, PuTTY will normally automatically try RSA authentication before falling back to passwords, so these servers will crash when they see the RSA attempt.$/;"	a
i415	doc/Chapter4.html	/^An ignore message (SSH_MSG_IGNORE) is a message in the SSH protocol which can be sent from the client to the server, or from the server to the client, at any time. Either side is required to ignore the message whenever it receives it. PuTTY uses ignore messages in SSH-2 to confuse the encrypted data stream and make it harder to cryptanalyse. It also uses ignore messages for connection <a name="i415"><\/a>keepalives (see <a href="#config-keepalive">section 4.13.1<\/a>).$/;"	a
i416	doc/Chapter4.html	/^Versions 2.3.0 and below of the SSH server software from <code>ssh.com<\/code> compute the keys for their <a name="i416"><\/a>HMAC <a name="i417"><\/a>message authentication codes incorrectly. A typical symptom of this problem is that PuTTY dies unexpectedly at the beginning of the session, saying &#8216;Incorrect MAC received on packet&#8217;.$/;"	a
i419	doc/Chapter4.html	/^Versions below 2.0.11 of the SSH server software from <a name="i419"><\/a><code>ssh.com<\/code> compute the keys for the session encryption incorrectly. This problem can cause various error messages, such as &#8216;Incoming packet was garbled on decryption&#8217;, or possibly even &#8216;Out of memory&#8217;.$/;"	a
i42	doc/AppendixA.html	/^The simplest way to investigate this is to find some other terminal environment, in which that function key <em>does<\/em> work; and then investigate what sequence the function key is sending in that situation. One reasonably easy way to do this on a <a name="i42"><\/a>Unix system is to type the command <a name="i43"><\/a><code>cat<\/code>, and then press the function key. This is likely to produce output of the form <code>^[[11~<\/code>. You can also do this in PuTTY, to find out what sequence the function key is producing in that. Then you can mail the PuTTY maintainers and tell us &#8216;I wanted the F1 key to send <code>^[[11~<\/code>, but instead it's sending <code>^[OP<\/code>, can this be done?&#8217;, or something similar.$/;"	a
i42	doc/Chapter3.html	/^<a name="i42"><\/a>No Operation$/;"	a
i42	doc/Chapter4.html	/^Note that this is <em>not<\/em> the feature of PuTTY which the server will typically use to determine your terminal type. That feature is the &#8216;<a name="i42"><\/a>Terminal-type string&#8217; in the Connection panel; see <a href="#config-termtype">section 4.14.3<\/a> for details.$/;"	a
i422	doc/Chapter4.html	/^Versions below 3.3 of <a name="i422"><\/a>OpenSSH require SSH-2 RSA signatures to be padded with zero bytes to the same length as the RSA key modulus. The SSH-2 specification says that an unpadded signature MUST be accepted, so this is a bug. A typical symptom of this problem is that PuTTY mysteriously fails RSA authentication once in every few hundred attempts, and falls back to passwords.$/;"	a
i424	doc/Chapter4.html	/^Versions below 2.3 of <a name="i424"><\/a>OpenSSH require SSH-2 <a name="i425"><\/a>public-key authentication to be done slightly differently: the data to be signed by the client contains the session ID formatted in a different way. If public-key authentication mysteriously does not work but the Event Log (see <a href="Chapter3.html#using-eventlog">section 3.1.3.1<\/a>) thinks it has successfully sent a signature, it might be worth enabling the workaround for this bug to see if it helps.$/;"	a
i426	doc/Chapter4.html	/^Some SSH servers cannot cope with <a name="i426"><\/a>repeat key exchange at all, and will ignore attempts by the client to start one. Since PuTTY pauses the session while performing a repeat key exchange, the effect of this would be to cause the session to hang after an hour (unless you have your rekey timeout set differently; see <a href="#config-ssh-kex-rekey">section 4.19.2<\/a> for more about rekeys). Other, very old, SSH servers handle repeat key exchange even more badly, and disconnect upon receiving a repeat key exchange request.$/;"	a
i428	doc/Chapter4.html	/^If this bug is detected, PuTTY never allows the channel's <a name="i428"><\/a>flow-control window to grow large enough to allow the server to send an over-sized packet. If this bug is enabled when talking to a correct server, the session will work correctly, but download performance will be less than it could be.$/;"	a
i429	doc/Chapter4.html	/^The <a name="i429"><\/a>Serial panel allows you to configure options that only apply when PuTTY is connecting to a local <a name="i430"><\/a><a name="i431"><\/a>serial line.$/;"	a
i43	doc/Chapter3.html	/^<a name="i43"><\/a>Abort Process$/;"	a
i432	doc/Chapter4.html	/^On Windows, the first serial line is called <a name="i432"><\/a><code>COM1<\/code>, and if there is a second it is called <code>COM2<\/code>, and so on.$/;"	a
i434	doc/Chapter4.html	/^PuTTY does not currently support storing its configuration in a file instead of the <a name="i434"><\/a>Registry. However, you can work around this with a couple of <a name="i435"><\/a>batch files.$/;"	a
i44	doc/Chapter3.html	/^<a name="i44"><\/a>Abort Output$/;"	a
i44	doc/Chapter4.html	/^With local echo disabled, characters you type into the PuTTY window are not echoed in the window <em>by PuTTY<\/em>. They are simply sent to the server. (The <em>server<\/em> might choose to <a name="i44"><\/a>echo them back to you; this can't be controlled from the PuTTY control panel.)$/;"	a
i45	doc/AppendixA.html	/^With release 8.0, Red Hat appear to have made <a name="i45"><\/a>UTF-8 the default character set. There appears to be no way for terminal emulators such as PuTTY to know this (as far as we know, the appropriate escape sequence to switch into UTF-8 mode isn't sent).$/;"	a
i45	doc/Chapter3.html	/^<a name="i45"><\/a>Interrupt Process$/;"	a
i46	doc/AppendixA.html	/^PuTTY's terminal emulator has always had the policy that when the &#8216;<a name="i46"><\/a>alternate screen&#8217; is in use, nothing is added to the scrollback. This is because the usual sorts of programs which use the alternate screen are things like text editors, which tend to scroll back and forth in the same document a lot; so (a) they would fill up the scrollback with a large amount of unhelpfully disordered text, and (b) they contain their <em>own<\/em> method for the user to scroll back to the bit they were interested in. We have generally found this policy to do the Right Thing in almost all situations.$/;"	a
i46	doc/Chapter3.html	/^<a name="i46"><\/a>Suspend Process$/;"	a
i46	doc/Chapter4.html	/^Since it is hard to edit a line locally without being able to see it, local line editing is mostly used in conjunction with <a name="i46"><\/a>local echo (<a href="#config-localecho">section 4.3.8<\/a>). This makes it ideal for use in raw mode or when connecting to <a name="i47"><\/a>MUDs or <a name="i48"><\/a>talkers. (Although some more advanced MUDs do occasionally turn local line editing on and turn local echo off, in order to accept a password from the user.)$/;"	a
i47	doc/Chapter3.html	/^<a name="i47"><\/a>End Of Record$/;"	a
i48	doc/AppendixA.html	/^Some people who ask PuTTY to listen on <a name="i48"><\/a>localhost addresses other than <code>127.0.0.1<\/code> to forward services such as <a name="i49"><\/a>SMB and <a name="i50"><\/a>Windows Terminal Services have found that doing so no longer works since they upgraded to WinXP SP2.$/;"	a
i48	doc/Chapter3.html	/^<a name="i48"><\/a>End Of File$/;"	a
i49	doc/Chapter3.html	/^In an SSH connection, the following <a name="i49"><\/a>special commands are available:$/;"	a
i5	doc/AppendixA.html	/^If you have host keys available in the common <a name="i5"><\/a><code>known_hosts<\/code> format, we have a script called <a href="https:\/\/git.tartarus.org\/?p=simon\/putty.git;a=blob;f=contrib\/kh2reg.py;hb=HEAD"><code>kh2reg.py<\/code><\/a> to convert them to a Windows .REG file, which can be installed ahead of time by double-clicking or using <code>REGEDIT<\/code>.$/;"	a
i5	doc/AppendixB.html	/^If you think you can, you're welcome to try to fix the problem yourself. A <a name="i5"><\/a>patch to the code which fixes a bug is an excellent addition to a bug report. However, a patch is never a <em>substitute<\/em> for a good bug report; if your patch is wrong or inappropriate, and you haven't supplied us with full information about the actual bug, then we won't be able to find a better solution.$/;"	a
i5	doc/Chapter10.html	/^This message is produced by an <a name="i5"><\/a>OpenSSH (or <a name="i6"><\/a>Sun SSH) server if it receives more failed authentication attempts than it is willing to tolerate.$/;"	a
i5	doc/Chapter5.html	/^To start PSCP it will need either to be on your <a name="i5"><\/a><code>PATH<\/code> or in your current directory. To add the directory containing PSCP to your <code>PATH<\/code> environment variable, type into the console window:$/;"	a
i5	doc/Chapter6.html	/^The usual way to start PSFTP is from a command prompt, much like PSCP. To do this, it will need either to be on your <a name="i5"><\/a><code>PATH<\/code> or in your current directory. To add the directory containing PSFTP to your <code>PATH<\/code> environment variable, type into the console window:$/;"	a
i5	doc/Chapter7.html	/^In order to use Plink, the file <code>plink.exe<\/code> will need either to be on your <a name="i5"><\/a><code>PATH<\/code> or in your current directory. To add the directory containing Plink to your <code>PATH<\/code> environment variable, type into the console window:$/;"	a
i5	doc/Chapter9.html	/^Before you run Pageant, you need to have a private key in <code>*.<a name="i5"><\/a>PPK<\/code> format. See <a href="Chapter8.html#pubkey">chapter 8<\/a> to find out how to generate and use one.$/;"	a
i5	windows/winprint.c	/^	LPPRINTER_INFO_5 i5;$/;"	m	union:printer_enum_tag::__anon144	file:
i50	doc/Chapter3.html	/^<a name="i50"><\/a><a name="i51"><\/a><a name="i52"><\/a>IGNORE message$/;"	a
i50	doc/Chapter4.html	/^The Keyboard configuration panel allows you to control the behaviour of the <a name="i50"><\/a>keyboard in PuTTY. The correct state for many of these settings depends on what the server to which PuTTY is connecting expects. With a <a name="i51"><\/a>Unix server, this is likely to depend on the <a name="i52"><\/a><code>termcap<\/code> or <a name="i53"><\/a><code>terminfo<\/code> entry it uses, which in turn is likely to be controlled by the &#8216;<a name="i54"><\/a>Terminal-type string&#8217; setting in the Connection panel; see <a href="#config-termtype">section 4.14.3<\/a> for details. If none of the settings here seems to help, you may find <a href="AppendixA.html#faq-keyboard">question A.7.13<\/a> to be useful.$/;"	a
i51	doc/AppendixA.html	/^This is not a bug in PSFTP. There is a known bug in some versions of portable <a name="i51"><\/a>OpenSSH (<a href="http:\/\/bugzilla.mindrot.org\/show_bug.cgi?id=697">bug 697<\/a>) that causes these symptoms; it appears to have been introduced around 3.7.x. It manifests only on certain platforms (AIX is what has been reported to us).$/;"	a
i53	doc/AppendixA.html	/^Recent versions of PuTTY automatically initiate <a name="i53"><\/a>repeat key exchange once per hour, to improve session security. If your client or server machine is slow, you may experience this as a delay of anything up to thirty seconds or so.$/;"	a
i53	doc/Chapter3.html	/^<a name="i53"><\/a>Repeat key exchange$/;"	a
i54	doc/AppendixA.html	/^These <a name="i54"><\/a>delays are inconvenient, but they are there for your protection. If they really cause you a problem, you can choose to turn off periodic rekeying using the &#8216;Kex&#8217; configuration panel (see <a href="Chapter4.html#config-ssh-kex">section 4.19<\/a>), but be aware that you will be sacrificing security for this. (Falling back to SSH-1 would also remove the delays, but would lose a <em>lot<\/em> more security still. We do not recommend it.)$/;"	a
i54	doc/Chapter3.html	/^Only available in SSH-2. Forces a <a name="i54"><\/a>repeat key exchange immediately (and resets associated timers and counters). For more information about repeat key exchanges, see <a href="Chapter4.html#config-ssh-kex-rekey">section 4.19.2<\/a>. $/;"	a
i55	doc/AppendixA.html	/^This is caused by a bug in certain versions of <a name="i55"><\/a>Windows XP which is triggered by PuTTY 0.58. This was fixed in 0.59. The <a href="https:\/\/www.chiark.greenend.org.uk\/~sgtatham\/putty\/wishlist\/xp-wont-run">&#8216;xp-wont-run&#8217;<\/a> entry in PuTTY's wishlist has more details.$/;"	a
i55	doc/Chapter3.html	/^<a name="i55"><\/a>Cache new host key type$/;"	a
i56	doc/Chapter3.html	/^Normally, PuTTY will carry on using a host key it already knows, even if the server offers key formats that PuTTY would otherwise prefer, to avoid host key prompts. As a result, if you've been using a server for some years, you may still be using an older key than a new user would use, due to server upgrades in the meantime. The SSH protocol unfortunately does not have organised facilities for host key migration and rollover, but this allows you to <a name="i56"><\/a>manually upgrade. $/;"	a
i56	doc/Chapter4.html	/^Some terminals believe that the Backspace key should send the same thing to the server as <a name="i56"><\/a>Control-H (ASCII code 8). Other terminals believe that the Backspace key should send ASCII code 127 (usually known as <a name="i57"><\/a>Control-?) so that it can be distinguished from Control-H. This option allows you to choose which code PuTTY generates when you press Backspace.$/;"	a
i57	doc/Chapter3.html	/^<a name="i57"><\/a>Break$/;"	a
i58	doc/Chapter3.html	/^<a name="i58"><\/a>Signals (SIGINT, SIGTERM etc)$/;"	a
i58	doc/Chapter4.html	/^If you are connecting over SSH, PuTTY by default tells the server the value of this option (see <a href="#config-ttymodes">section 4.24.2<\/a>), so you may find that the Backspace key does the right thing either way. Similarly, if you are connecting to a <a name="i58"><\/a>Unix system, you will probably find that the Unix <a name="i59"><\/a><code>stty<\/code> command lets you configure which the server expects to see, so again you might not need to change which one PuTTY generates. On other systems, the server's expectation might be fixed and you might have no choice but to configure PuTTY.$/;"	a
i59	doc/AppendixA.html	/^On 64-bit systems, <code>C:\\WINDOWS\\SYSTEM32<\/code> is intended to contain only 64-bit binaries; Windows' 32-bit binaries live in <code>C:\\WINDOWS\\SYSWOW64<\/code>. When a 32-bit PuTTY executable runs on a 64-bit system, it cannot by default see the &#8216;real&#8217; <code>C:\\WINDOWS\\SYSTEM32<\/code> at all, because the <a href="http:\/\/msdn.microsoft.com\/en-us\/library\/aa384187(v=vs.85).aspx">File System Redirector<\/a> arranges that the running program sees the appropriate kind of binaries in <code>SYSTEM32<\/code>. Thus, operations in the PuTTY suite that involve it accessing its own executables, such as <a name="i59"><\/a>&#8216;New Session&#8217; and &#8216;Duplicate Session&#8217;, will not work.$/;"	a
i59	doc/Chapter3.html	/^With a serial connection, the only available special command is <a name="i59"><\/a>&#8216;Break&#8217;.$/;"	a
i6	doc/Chapter1.html	/^These protocols can also be used for other types of keyboard-based interactive session. In particular, there are a lot of bulletin boards, <a name="i6"><\/a>talker systems and <a name="i7"><\/a>MUDs (Multi-User Dungeons) which support access using Telnet. There are even a few that support SSH.$/;"	a
i6	doc/Chapter5.html	/^This will only work for the lifetime of that particular console window. To set your <code>PATH<\/code> more permanently on Windows NT, 2000, and XP, use the Environment tab of the System Control Panel. On Windows 95, 98, and ME, you will need to edit your <a name="i6"><\/a><code>AUTOEXEC.BAT<\/code> to include a <code>set<\/code> command like the one above.$/;"	a
i6	doc/Chapter7.html	/^This will only work for the lifetime of that particular console window. To set your <code>PATH<\/code> more permanently on Windows NT, 2000, and XP, use the Environment tab of the System Control Panel. On Windows 95, 98, and ME, you will need to edit your <a name="i6"><\/a><code>AUTOEXEC.BAT<\/code> to include a <code>set<\/code> command like the one above.$/;"	a
i6	doc/Chapter8.html	/^There is a problem with this: if your private key is stored unprotected on your own computer, then anybody who gains access to <em>that<\/em> will be able to generate signatures as if they were you. So they will be able to log in to your server under your account. For this reason, your private key is usually <a name="i6"><\/a><em>encrypted<\/em> when it is stored on your local machine, using a <a name="i7"><\/a>passphrase of your choice. In order to generate a signature, PuTTY must decrypt the key, so you have to type your passphrase.$/;"	a
i6	doc/Chapter9.html	/^When you run Pageant, it will put an icon of a computer wearing a hat into the <a name="i6"><\/a>System tray. It will then sit and do nothing, until you load a private key into it.$/;"	a
i60	doc/Chapter3.html	/^Selecting <a name="i60"><\/a>&#8216;New Session&#8217; will start a completely new instance of PuTTY, and bring up the configuration box as normal.$/;"	a
i60	doc/Chapter4.html	/^(Typing <a name="i60"><\/a>Shift-Backspace will cause PuTTY to send whichever code isn't configured here as the default.)$/;"	a
i61	doc/AppendixA.html	/^If you are using PuTTY on a public PC, or somebody else's PC, you might want to clean this information up when you leave. You can do that automatically, by running the command <code>putty -cleanup<\/code>. See <a href="Chapter3.html#using-cleanup">section 3.8.2<\/a> in the documentation for more detail. (Note that this only removes settings for the currently logged-in user on <a name="i61"><\/a>multi-user systems.)$/;"	a
i61	doc/Chapter3.html	/^Selecting <a name="i61"><\/a>&#8216;Duplicate Session&#8217; will start a session in a new window with precisely the same options as your current one - connecting to the same host using the same protocol, with all the same terminal settings and everything.$/;"	a
i62	doc/Chapter3.html	/^In an inactive window, selecting <a name="i62"><\/a>&#8216;Restart Session&#8217; will do the same as &#8216;Duplicate Session&#8217;, but in the current window.$/;"	a
i62	doc/Chapter4.html	/^The Unix terminal emulator <a name="i62"><\/a><code>rxvt<\/code> disagrees with the rest of the world about what character sequences should be sent to the server by the Home and End keys.$/;"	a
i63	doc/Chapter3.html	/^The <a name="i63"><\/a>&#8216;Saved Sessions&#8217; submenu gives you quick access to any sets of stored session details you have previously saved. See <a href="Chapter4.html#config-saving">section 4.1.2<\/a> for details of how to create saved sessions.$/;"	a
i63	doc/Chapter4.html	/^<a name="i63"><\/a><code>xterm<\/code>, and other terminals, send <code>ESC [1~<\/code> for the Home key, and <code>ESC [4~<\/code> for the End key. <code>rxvt<\/code> sends <code>ESC [H<\/code> for the Home key and <code>ESC [Ow<\/code> for the End key.$/;"	a
i65	doc/Chapter3.html	/^If you select <a name="i65"><\/a>&#8216;Change Settings&#8217; from the system menu, PuTTY will display a cut-down version of its initial configuration box. This allows you to adjust most properties of your current session. You can change the terminal size, the font, the actions of various keypresses, the colours, and so on.$/;"	a
i66	doc/Chapter4.html	/^In Linux mode, F6 to F12 behave just like the default mode, but F1 to F5 generate <code>ESC [[A<\/code> through to <code>ESC [[E<\/code>. This mimics the <a name="i66"><\/a>Linux virtual console.$/;"	a
i67	doc/Chapter3.html	/^This system menu option provides a convenient way to copy the whole contents of the terminal screen (up to the last nonempty line) and scrollback to the <a name="i67"><\/a>clipboard in one go.$/;"	a
i67	doc/Chapter4.html	/^In <a name="i67"><\/a>Xterm R6 mode, F5 to F12 behave like the default mode, but F1 to F4 generate <code>ESC OP<\/code> through to <code>ESC OS<\/code>, which are the sequences produced by the top row of the <em>keypad<\/em> on Digital's terminals.$/;"	a
i68	doc/Chapter4.html	/^In <a name="i68"><\/a>VT400 mode, all the function keys behave like the default mode, but the actual top row of the numeric keypad generates <code>ESC OP<\/code> through to <code>ESC OS<\/code>.$/;"	a
i69	doc/Chapter4.html	/^In <a name="i69"><\/a>VT100+ mode, the function keys generate <code>ESC OP<\/code> through to <code>ESC O[<\/code>$/;"	a
i7	doc/AppendixB.html	/^If the PuTTY <a name="i7"><\/a>web site is down (Connection Timed Out), please don't bother mailing us to tell us about it. Most of us read our e-mail on the same machines that host the web site, so if those machines are down then we will notice <em>before<\/em> we read our e-mail. So there's no point telling us our servers are down.$/;"	a
i7	doc/Chapter3.html	/^Pasting is done using the right button (or the middle mouse button, if you have a <a name="i7"><\/a>three-button mouse and have set it up; see <a href="Chapter4.html#config-mouse">section 4.11.2<\/a>). (Pressing <a name="i8"><\/a>Shift-Ins, or selecting &#8216;Paste&#8217; from the <a name="i9"><\/a>Ctrl+right-click <a name="i10"><\/a>context menu, have the same effect.) When you click the <a name="i11"><\/a>right mouse button, PuTTY will read whatever is in the Windows clipboard and paste it into your session, <em>exactly<\/em> as if it had been typed at the keyboard. (Therefore, be careful of pasting formatted text into an editor that does automatic indenting; you may find that the spaces pasted from the clipboard plus the spaces added by the editor add up to too many spaces and ruin the formatting. There is nothing PuTTY can do about this.)$/;"	a
i7	doc/Chapter5.html	/^To <a name="i7"><\/a>receive (a) file(s) from a remote server:$/;"	a
i7	doc/Chapter6.html	/^If you need to do automated tasks with PSFTP, you would probably prefer to <a name="i7"><\/a>specify a set of commands in advance and have them executed automatically. The <code>-b<\/code> option allows you to do this. You use it with a file name containing batch commands. For example, you might create a file called <code>myscript.scr<\/code> containing lines like this:$/;"	a
i7	doc/Chapter7.html	/^You should then be able to log in as normal and run a session. The output sent by the server will be written straight to your command prompt window, which will most likely not interpret terminal <a name="i7"><\/a>control codes in the way the server expects it to. So if you run any full-screen applications, for example, you can expect to see strange characters appearing in your window. Interactive connections like this are not the main point of Plink.$/;"	a
i7	doc/Chapter9.html	/^The <a name="i7"><\/a>fingerprint for the public key. This should be the same fingerprint given by PuTTYgen, and (hopefully) also the same fingerprint shown by remote utilities such as <a name="i8"><\/a><code>ssh-keygen<\/code> when applied to your <code>authorized_keys<\/code> file.$/;"	a
i70	doc/Chapter3.html	/^The <a name="i70"><\/a>&#8216;Clear Scrollback&#8217; option on the system menu tells PuTTY to discard all the lines of text that have been kept after they scrolled off the top of the screen. This might be useful, for example, if you displayed sensitive information and wanted to make sure nobody could look over your shoulder and see it. (Note that this only prevents a casual user from using the scrollbar to view the information; the text is not guaranteed not to still be in PuTTY's memory.)$/;"	a
i70	doc/Chapter4.html	/^In <a name="i70"><\/a>SCO mode, the function keys F1 to F12 generate <code>ESC [M<\/code> through to <code>ESC [X<\/code>. Together with shift, they generate <code>ESC [Y<\/code> through to <code>ESC [j<\/code>. With control they generate <code>ESC [k<\/code> through to <code>ESC [v<\/code>, and with shift and control together they generate <code>ESC [w<\/code> through to <code>ESC [{<\/code>.$/;"	a
i71	doc/Chapter3.html	/^The <a name="i71"><\/a>&#8216;Reset Terminal&#8217; option causes a full reset of the <a name="i72"><\/a>terminal emulation. A VT-series terminal is a complex piece of software and can easily get into a state where all the text printed becomes unreadable. (This can happen, for example, if you accidentally output a binary file to your terminal.) If this happens, selecting Reset Terminal should sort it out.$/;"	a
i73	doc/Chapter4.html	/^In normal mode, the keypad behaves like a normal Windows keypad: with <a name="i73"><\/a>NumLock on, the number keys generate numbers, and with NumLock off they act like the arrow keys and Home, End etc.$/;"	a
i74	doc/Chapter3.html	/^When you are in full-screen mode, you can still access the <a name="i74"><\/a>system menu if you click the left mouse button in the <em>extreme<\/em> top left corner of the screen.$/;"	a
i75	doc/Chapter4.html	/^For some reason, this feature only works properly when <a name="i75"><\/a>Num Lock is on. We don't know why.$/;"	a
i77	doc/Chapter3.html	/^To begin a session log, select &#8216;Change Settings&#8217; from the system menu and go to the Logging panel. Enter a log file name, and select a logging mode. (You can log all session output including the terminal <a name="i77"><\/a>control sequences, or you can just log the printable text. It depends what you want the log for.) Click &#8216;Apply&#8217; and your log will be started. Later on, you can go back to the Logging panel and select &#8216;Logging turned off completely&#8217; to stop logging; then PuTTY will close the log file and you can safely read it.$/;"	a
i77	doc/Chapter4.html	/^DEC terminals have a Compose key, which provides an easy-to-remember way of typing <a name="i77"><\/a>accented characters. You press Compose and then type two more characters. The two characters are &#8216;combined&#8217; to produce an accented character. The choices of character are designed to be easy to remember; for example, composing &#8216;e&#8217; and &#8216;`&#8217; produces the &#8216;&#232;&#8217; character.$/;"	a
i78	doc/Chapter4.html	/^If your keyboard has a Windows <a name="i78"><\/a>Application key, it acts as a Compose key in PuTTY. Alternatively, if you enable the &#8216;<a name="i79"><\/a>AltGr acts as Compose key&#8217; option, the AltGr key will become a Compose key.$/;"	a
i79	doc/Chapter3.html	/^If you find that special characters (<a name="i79"><\/a>accented characters, for example, or <a name="i80"><\/a>line-drawing characters) are not being displayed correctly in your PuTTY session, it may be that PuTTY is interpreting the characters sent by the server according to the wrong <em>character set<\/em>. There are a lot of different character sets available, and no good way for PuTTY to know which to use, so it's entirely possible for this to happen.$/;"	a
i8	doc/AppendixA.html	/^If you look at the source release, you should find a <code>unix<\/code> subdirectory. There are a couple of ways of building it, including the usual <code>configure<\/code>\/<code>make<\/code>; see the file <code>README<\/code> in the source distribution. This should build you Unix ports of Plink, PuTTY itself, PuTTYgen, PSCP, PSFTP, Pageant, and also <a name="i8"><\/a><code>pterm<\/code> - an <code>xterm<\/code>-type program which supports the same terminal emulation as PuTTY.$/;"	a
i8	doc/Chapter1.html	/^your Internet Service Provider provides you with a login account on a <a name="i8"><\/a>web server. (This might also be known as a <a name="i9"><\/a><em>shell account<\/em>. A <em>shell<\/em> is the program that runs on the server and interprets your commands for you.)$/;"	a
i8	doc/Chapter10.html	/^This can also happen in PSCP or PSFTP, if your <a name="i8"><\/a>login scripts on the server generate output: the client program will be expecting an SFTP message starting with a length, and if it receives some text from your login scripts instead it will try to interpret them as a message length. See <a href="AppendixA.html#faq-outofmem2">question A.7.4<\/a> for details of this.$/;"	a
i8	doc/Chapter2.html	/^When you change the selected protocol, the number in the &#8216;Port&#8217; box will change. This is normal: it happens because the various login services are usually provided on different network ports by the server machine. Most servers will use the standard port numbers, so you will not need to change the port setting. If your server provides login services on a non-standard port, your system administrator should have told you which one. (For example, many <a name="i8"><\/a>MUDs run Telnet service on a port other than 23.)$/;"	a
i8	doc/Chapter4.html	/^The &#8216;Port&#8217; box lets you specify which <a name="i8"><\/a>port number on the server to connect to. If you select Telnet, Rlogin, or SSH, this box will be filled in automatically to the usual value, and you will only need to change it if you have an unusual server. If you select Raw mode, you will almost certainly need to fill in the &#8216;Port&#8217; box yourself.$/;"	a
i8	doc/Chapter5.html	/^To <a name="i8"><\/a>send (a) file(s) to a remote server:$/;"	a
i8	doc/Chapter7.html	/^Set the Windows environment variable <a name="i8"><\/a><code>PLINK_PROTOCOL<\/code> to the word <code>ssh<\/code>.$/;"	a
i8	doc/Chapter8.html	/^This can make public-key authentication less convenient than password authentication: every time you log in to the server, instead of typing a short password, you have to type a longer passphrase. One solution to this is to use an <a name="i8"><\/a><em>authentication agent<\/em>, a separate program which holds decrypted private keys and generates signatures on request. PuTTY's authentication agent is called <a name="i9"><\/a>Pageant. When you begin a Windows session, you start Pageant and load your private key into it (typing your passphrase once). For the rest of your session, you can start PuTTY any number of times and Pageant will automatically generate signatures without you having to do anything. When you close your Windows session, Pageant shuts down, without ever having stored your decrypted private key on disk. Many people feel this is a good compromise between security and convenience. See <a href="Chapter9.html#pageant">chapter 9<\/a> for further details.$/;"	a
i81	doc/Chapter4.html	/^The Bell panel controls the <a name="i81"><\/a>terminal bell feature: the server's ability to cause PuTTY to beep at you.$/;"	a
i82	doc/Chapter3.html	/^The SSH protocol has the ability to securely forward X Window System <a name="i82"><\/a>graphical applications over your encrypted SSH connection, so that you can run an application on the SSH server machine and have it put its windows up on your local machine without sending any X network traffic in the clear.$/;"	a
i82	doc/Chapter4.html	/^In the default configuration, when the server sends the character with ASCII code 7 (Control-G), PuTTY will play the <a name="i82"><\/a>Windows Default Beep sound. This is not always what you want the terminal bell feature to do; the Bell panel allows you to configure alternative actions.$/;"	a
i83	doc/Chapter3.html	/^In order to use this feature, you will need an X display server for your Windows machine, such as Cygwin\/X, X-Win32, or Exceed. This will probably install itself as display number 0 on your local machine; if it doesn't, the manual for the <a name="i83"><\/a>X server should tell you what it does do.$/;"	a
i83	doc/Chapter4.html	/^Selecting &#8216;None&#8217; <a name="i83"><\/a>disables the bell completely. In this mode, the server can send as many Control-G characters as it likes and nothing at all will happen.$/;"	a
i84	doc/Chapter3.html	/^You should then tick the &#8216;Enable X11 forwarding&#8217; box in the X11 panel (see <a href="Chapter4.html#config-ssh-x11">section 4.25<\/a>) before starting your SSH session. The <a name="i84"><\/a>&#8216;X display location&#8217; box is blank by default, which means that PuTTY will try to use a sensible default such as <code>:0<\/code>, which is the usual display location where your X server will be installed. If that needs changing, then change it.$/;"	a
i84	doc/Chapter4.html	/^&#8216;<a name="i84"><\/a>Visual bell&#8217; is a silent alternative to a beeping computer. In this mode, when the server sends a Control-G, the whole PuTTY window will flash white for a fraction of a second.$/;"	a
i85	doc/Chapter3.html	/^If the remote system is Unix or Unix-like, you should also be able to see that the <a name="i85"><\/a><code>DISPLAY<\/code> environment variable has been set to point at display 10 or above on the SSH server machine itself:$/;"	a
i85	doc/Chapter4.html	/^&#8216;Beep using the <a name="i85"><\/a>PC speaker&#8217; is self-explanatory.$/;"	a
i86	doc/Chapter4.html	/^&#8216;Play a custom <a name="i86"><\/a>sound file&#8217; allows you to specify a particular sound file to be used by PuTTY alone, or even by a particular individual PuTTY session. This allows you to distinguish your PuTTY beeps from any other beeps on the system. If you select this option, you will also need to enter the name of your sound file in the edit control &#8216;Custom sound file to play as a bell&#8217;.$/;"	a
i87	doc/Chapter3.html	/^The SSH protocol has the ability to forward arbitrary <a name="i87"><\/a>network (TCP) connections over your encrypted SSH connection, to avoid the network traffic being sent in clear. For example, you could use this to connect from your home computer to a <a name="i88"><\/a>POP-3 server on a remote machine without your POP-3 password being visible to network sniffers.$/;"	a
i89	doc/Chapter3.html	/^In order to use port forwarding to <a name="i89"><\/a>connect from your local machine to a port on a remote server, you need to:$/;"	a
i9	doc/AppendixA.html	/^If you don't have <a name="i9"><\/a>Gtk, you should still be able to build the command-line tools.$/;"	a
i9	doc/Chapter5.html	/^You can use <a name="i9"><\/a>wildcards to transfer multiple files in either direction, like this:$/;"	a
i9	doc/Chapter7.html	/^To avoid being prompted for a password, you should almost certainly set up <a name="i9"><\/a>public-key authentication. (See <a href="Chapter8.html#pubkey">chapter 8<\/a> for a general introduction to public-key authentication.) Again, you can do this in two ways:$/;"	a
i9	doc/Chapter9.html	/^Pageant can be made to do things automatically when it starts up, by <a name="i9"><\/a>specifying instructions on its command line. If you're starting Pageant from the Windows GUI, you can arrange this by editing the properties of the <a name="i10"><\/a>Windows shortcut that it was started from.$/;"	a
i90	doc/Chapter3.html	/^Choose a <a name="i90"><\/a>port number on your local machine where PuTTY should listen for incoming connections. There are likely to be plenty of unused port numbers above 3000. (You can also use a local loopback address here; see below for more details.)$/;"	a
i90	doc/Chapter4.html	/^To try to avoid this behaviour, or any other cause of excessive beeping, PuTTY includes a bell overload management feature. In the default configuration, receiving more than five bell characters in a two-second period will cause the overload feature to activate. Once the overload feature is active, further bells will <a name="i90"><\/a> have no effect at all, so the rest of your binary file will be sent to the screen in silence. After a period of five seconds during which no further bells are received, the overload feature will turn itself off again and bells will be re-enabled.$/;"	a
i91	doc/Chapter3.html	/^You can also forward ports in the other direction: arrange for a particular port number on the <em>server<\/em> machine to be <a name="i91"><\/a>forwarded back to your PC as a connection to a service on your PC or near it. To do this, just select the &#8216;Remote&#8217; radio button instead of the &#8216;Local&#8217; one. The &#8216;Source port&#8217; box will now specify a port number on the <em>server<\/em> (note that most servers will not allow you to use <a name="i92"><\/a>port numbers under 1024 for this purpose).$/;"	a
i91	doc/Chapter4.html	/^PuTTY's <a name="i91"><\/a>terminal emulation is very highly featured, and can do a lot of things under remote server control. Some of these features can cause problems due to buggy or strangely configured server applications.$/;"	a
i92	doc/Chapter4.html	/^<a name="i92"><\/a>Application keypad mode (see <a href="#config-appkeypad">section 4.4.5<\/a>) and <a name="i93"><\/a>application cursor keys mode (see <a href="#config-appcursor">section 4.4.4<\/a>) alter the behaviour of the keypad and cursor keys. Some applications enable these modes but then do not deal correctly with the modified keys. You can force these modes to be permanently disabled no matter what the server tries to do.$/;"	a
i93	doc/Chapter3.html	/^An alternative way to forward local connections to remote hosts is to use <a name="i93"><\/a>dynamic SOCKS proxying. In this mode, PuTTY acts as a SOCKS server, which SOCKS-aware programs can connect to and open forwarded connections to the destination of their choice, so this can be an alternative to long lists of static forwardings. To use this mode, you will need to select the &#8216;Dynamic&#8217; radio button instead of &#8216;Local&#8217;, and then you should not enter anything into the &#8216;Destination&#8217; box (it will be ignored). PuTTY will then listen for SOCKS connections on the port you have specified. Most <a name="i94"><\/a>web browsers can be configured to connect to this SOCKS proxy service; also, you can forward other PuTTY connections through it by setting up the Proxy control panel (see <a href="Chapter4.html#config-proxy">section 4.15<\/a> for details).$/;"	a
i95	doc/Chapter3.html	/^The source port for a forwarded connection usually does not accept connections from any machine except the <a name="i95"><\/a>SSH client or server machine itself (for local and remote forwardings respectively). There are controls in the Tunnels panel to change this:$/;"	a
i95	doc/Chapter4.html	/^PuTTY allows the server to send <a name="i95"><\/a>control codes that let it take over the mouse and use it for purposes other than <a name="i96"><\/a>copy and paste. Applications which use this feature include the text-mode web browser <a name="i97"><\/a><code>links<\/code>, the Usenet newsreader <a name="i98"><\/a><code>trn<\/code> version 4, and the file manager <a name="i99"><\/a><code>mc<\/code> (Midnight Commander).$/;"	a
i96	doc/Chapter3.html	/^The &#8216;Remote ports do the same&#8217; option does the same thing for remote-to-local port forwardings (so that machines other than the SSH server machine can connect to the forwarded port.) Note that this feature is only available in the SSH-2 protocol, and not all SSH-2 servers honour it (in <a name="i96"><\/a>OpenSSH, for example, it's usually disabled by default).$/;"	a
i97	doc/Chapter3.html	/^You can also specify an <a name="i97"><\/a>IP address to <a name="i98"><\/a>listen on. Typically a Windows machine can be asked to listen on any single IP address in the <code>127.*.*.*<\/code> range, and all of these are <a name="i99"><\/a>loopback addresses available only to the local machine. So if you forward (for example) <code>127.0.0.5:79<\/code> to a remote machine's <a name="i100"><\/a><code>finger<\/code> port, then you should be able to run commands such as <code>finger fred@127.0.0.5<\/code>. This can be useful if the program connecting to the forwarded port doesn't allow you to change the port number it uses. This feature is available for local-to-remote forwarded ports; SSH-1 is unable to support it for remote-to-local ports, while SSH-2 can support it in theory but servers will not necessarily cooperate.$/;"	a
icon_name	windows/window.c	/^static char *window_name, *icon_name;$/;"	v	file:
icontitle	unix/gtkwin.c	/^    char *icontitle;$/;"	m	struct:gui_data	file:
ictx	sshzlib.c	/^    struct LZ77InternalContext *ictx;$/;"	m	struct:LZ77Context	typeref:struct:LZ77Context::LZ77InternalContext	file:
id	sftp.c	/^    unsigned id;$/;"	m	struct:sftp_request	file:
id	ssh.c	/^    int id;$/;"	m	struct:ssh_signkey_with_user_pref_id	file:
id	sshgss.h	/^    int id;$/;"	m	struct:ssh_gss_library
id	sshshare.c	/^    unsigned id;    \/* used to identify this downstream in log messages *\/$/;"	m	struct:ssh_sharing_connstate	file:
id	unix/uxsel.c	/^    uxsel_id *id;                      \/* for uxsel_input_remove *\/$/;"	m	struct:fd	file:
id	windows/winctrls.c	/^struct radio { char *text; int id; };$/;"	m	struct:radio	file:
id_string	terminal.h	/^    char id_string[1024];$/;"	m	struct:terminal_tag
idle_fn_scheduled	unix/gtkcomm.c	/^static int idle_fn_scheduled;$/;"	v	file:
idle_toplevel_callback_func	unix/gtkcomm.c	/^static gint idle_toplevel_callback_func(gpointer data)$/;"	f	file:
ignore_sbar	unix/gtkwin.c	/^    int ignore_sbar;$/;"	m	struct:gui_data	file:
ignore_selchange	unix/gtkdlg.c	/^    int ignore_selchange;$/;"	m	struct:eventlog_stuff	file:
imc	unix/gtkask.c	/^    GtkIMContext *imc;$/;"	m	struct:askpass_ctx	file:
imc	unix/gtkwin.c	/^    GtkIMContext *imc;$/;"	m	struct:gui_data	file:
import_encrypted	import.c	/^int import_encrypted(const Filename *filename, int type, char **comment)$/;"	f
import_name	pgssapi.h	/^    t_gss_import_name import_name;$/;"	m	struct:gssapi_functions
import_name	sshgss.h	/^    t_ssh_gss_import_name import_name;$/;"	m	struct:ssh_gss_library
import_possible	import.c	/^int import_possible(int type)$/;"	f
import_ssh1	import.c	/^int import_ssh1(const Filename *filename, int type,$/;"	f
import_ssh2	import.c	/^struct ssh2_userkey *import_ssh2(const Filename *filename, int type,$/;"	f
import_target_type	import.c	/^int import_target_type(int type)$/;"	f
in	windows/winser.c	/^    struct handle *out, *in;$/;"	m	struct:serial_backend_data	typeref:struct:serial_backend_data::	file:
in6addr_any	windows/winnet.c	/^const struct in6_addr in6addr_any = IN6ADDR_ANY_INIT;$/;"	v	typeref:struct:in6_addr
in6addr_loopback	windows/winnet.c	/^const struct in6_addr in6addr_loopback = IN6ADDR_LOOPBACK_INIT;$/;"	v	typeref:struct:in6_addr
in_commasep_string	ssh.c	/^static int in_commasep_string(char const *needle, char const *haystack,$/;"	f	file:
in_synch	telnet.c	/^    int in_synch;$/;"	m	struct:telnet_tag	file:
in_term_out	terminal.h	/^    int in_term_out;$/;"	m	struct:terminal_tag
in_utf	terminal.h	328;"	d
in_vbell	terminal.h	/^    int in_vbell;$/;"	m	struct:terminal_tag
inbuf	terminal.h	/^    bufchain inbuf;		       \/* terminal input buffer *\/$/;"	m	struct:terminal_tag
inbuffer	ssh.c	/^            bufchain inbuffer;$/;"	m	struct:ssh_channel::__anon80::ssh_agent_channel	file:
inbufsize	unix/uxser.c	/^    int inbufsize;$/;"	m	struct:serial_backend_data	file:
includedir	Makefile	/^includedir = ${prefix}\/include$/;"	m
incoming	sshrand.c	/^    unsigned char incoming[HASHSIZE];$/;"	m	struct:RandPool	file:
incoming_data_size	ssh.c	/^    unsigned long incoming_data_size, outgoing_data_size, deferred_data_size;$/;"	m	struct:ssh_tag	file:
incoming_sequence	ssh.c	/^    unsigned long incoming_sequence;$/;"	m	struct:rdpkt2_bare_state_tag	file:
incoming_sequence	ssh.c	/^    unsigned long incoming_sequence;$/;"	m	struct:rdpkt2_state_tag	file:
incomingb	sshrand.c	/^    unsigned char incomingb[HASHINPUT];$/;"	m	struct:RandPool	file:
incomingeof	unix/uxnet.c	/^    int incomingeof;$/;"	m	struct:Socket_tag	file:
incomingpos	sshrand.c	/^    int incomingpos;$/;"	m	struct:RandPool	file:
incpos	terminal.c	24;"	d	file:
index	contrib/cygtermd/telnet.c	/^    int index;			       \/* index into telnet->opt_states[] *\/$/;"	m	struct:Opt	file:
index	minibidi.c	/^    unsigned short index;$/;"	m	struct:bidi_char	file:
index	putty.h	/^    unsigned short index;$/;"	m	struct:bidi_char
index	telnet.c	/^    int index;			       \/* index into telnet->opt_states[] *\/$/;"	m	struct:Opt	file:
index	unix/gtkfont.c	/^    int index;$/;"	m	struct:fontinfo	file:
index234	tree234.c	/^void *index234(tree234 * t, int index)$/;"	f
indexflip	unix/gtkfont.c	/^    int rowsize, allsize, indexflip;$/;"	m	struct:x11font_individual	file:
indicate_mech	sshgss.h	/^    t_ssh_gss_indicate_mech indicate_mech;$/;"	m	struct:ssh_gss_library
infinity	ssh.h	/^    unsigned char infinity;$/;"	m	struct:ec_point
info	windows/winprint.c	/^    } info;$/;"	m	struct:printer_enum_tag	typeref:union:printer_enum_tag::__anon144	file:
infodir	Makefile	/^infodir = ${datarootdir}\/info$/;"	m
inhandle	windows/winplink.c	/^HANDLE inhandle, outhandle, errhandle;$/;"	v
inhibit_response	unix/gtkfont.c	/^    int inhibit_response;  \/* inhibit callbacks when we change GUI controls *\/$/;"	m	struct:unifontsel_internal	file:
init	putty.h	/^    const char *(*init) (void *frontend_handle, void **backend_handle,$/;"	m	struct:backend_tag
init	ssh.h	/^    void *(*init)(void); \/* also allocates context *\/$/;"	m	struct:ssh_hash
init_clipboard	unix/gtkwin.c	/^void init_clipboard(struct gui_data *inst)$/;"	f
init_common_controls	windows/winctrls.c	/^void init_common_controls(void)$/;"	f
init_fonts	windows/window.c	/^static void init_fonts(int pick_width, int pick_height)$/;"	f	file:
init_help	windows/winhelp.c	/^void init_help(void)$/;"	f
init_palette	windows/window.c	/^static void init_palette(void)$/;"	f	file:
init_sec_context	pgssapi.h	/^    t_gss_init_sec_context init_sec_context;$/;"	m	struct:gssapi_functions
init_sec_context	sshgss.h	/^    t_ssh_gss_init_sec_context init_sec_context;$/;"	m	struct:ssh_gss_library
init_timers	timing.c	/^static void init_timers(void)$/;"	f	file:
init_ucs	unix/uxucs.c	/^int init_ucs(struct unicode_data *ucsdata, char *linecharset,$/;"	f
init_ucs	windows/winucs.c	/^void init_ucs(Conf *conf, struct unicode_data *ucsdata)$/;"	f
init_winfuncs	windows/window.c	/^static void init_winfuncs(void)$/;"	f	file:
init_winfuncs	windows/winprint.c	/^static void init_winfuncs(void)$/;"	f	file:
init_winver	windows/winmisc.c	/^BOOL init_winver(void)$/;"	f
initial	ssh.c	/^            int initial;$/;"	m	struct:ssh_channel::__anon80::ssh_x11_channel	file:
initial_menuitems_count	windows/winpgnt.c	/^static int initial_menuitems_count;$/;"	v	file:
initial_state	contrib/cygtermd/telnet.c	/^    } initial_state;$/;"	m	struct:Opt	typeref:enum:Opt::__anon12	file:
initial_state	telnet.c	/^    } initial_state;$/;"	m	struct:Opt	typeref:enum:Opt::__anon105	file:
initial_treeview_collapse	unix/gtkdlg.c	/^void initial_treeview_collapse(struct dlgparam *dp, GtkWidget *tree)$/;"	f
initialise_ecurve	sshecc.c	/^static void initialise_ecurve(struct ec_curve *curve, int bits,$/;"	f	file:
initialise_mcurve	sshecc.c	/^static void initialise_mcurve(struct ec_curve *curve, int bits,$/;"	f	file:
initialise_wcurve	sshecc.c	/^static void initialise_wcurve(struct ec_curve *curve, int bits,$/;"	f	file:
initiator_address	pgssapi.h	/^    gss_buffer_desc initiator_address;$/;"	m	struct:gss_channel_bindings_struct
initiator_addrtype	pgssapi.h	/^    OM_uint32 initiator_addrtype;$/;"	m	struct:gss_channel_bindings_struct
input_event_time	unix/gtkwin.c	/^    guint32 input_event_time; \/* Timestamp of the most recent input event. *\/$/;"	m	struct:gui_data	file:
input_method_commit_event	unix/gtkask.c	/^static void input_method_commit_event(GtkIMContext *imc, gchar *str,$/;"	f	file:
input_method_commit_event	unix/gtkwin.c	/^void input_method_commit_event(GtkIMContext *imc, gchar *str, gpointer data)$/;"	f
inputdata	windows/winhsock.c	/^    bufchain inputdata;$/;"	m	struct:Socket_handle_tag	file:
insch	terminal.c	/^static void insch(Terminal *term, int n)$/;"	f	file:
insert	terminal.h	/^    int insert;			       \/* insert-mode flag *\/$/;"	m	struct:terminal_tag
inst	unix/gtkwin.c	/^    struct gui_data *inst;$/;"	m	struct:clipboard_data_instance	typeref:struct:clipboard_data_instance::gui_data	file:
inst	unix/gtkwin.c	/^    struct gui_data *inst;$/;"	m	struct:draw_ctx	typeref:struct:draw_ctx::gui_data	file:
install_sh	Makefile	/^install_sh = ${SHELL} \/media\/B\/cjn\/putty-0.70\/install-sh$/;"	m
install_sh_DATA	Makefile	/^install_sh_DATA = $(install_sh) -c -m 644$/;"	m
install_sh_PROGRAM	Makefile	/^install_sh_PROGRAM = $(install_sh) -c$/;"	m
install_sh_SCRIPT	Makefile	/^install_sh_SCRIPT = $(install_sh) -c$/;"	m
instr_reqd	putty.h	/^    int instr_reqd;	\/* Display of `instruction' required or optional? *\/$/;"	m	struct:__anon67
instruction	putty.h	/^    char *instruction;	\/* Long description, maybe with embedded newlines *\/$/;"	m	struct:__anon67
intendedsize	unix/gtkfont.c	/^    int selsize, intendedsize;$/;"	m	struct:unifontsel_internal	file:
internal_add	sshbn.c	/^static BignumCarry internal_add(const BignumInt *a, const BignumInt *b,$/;"	f	file:
internal_add_shifted	sshbn.c	/^static void internal_add_shifted(BignumInt *number,$/;"	f	file:
internal_addtest	tree234.c	/^void internal_addtest(void *elem, int index, void *realret)$/;"	f
internal_mod	sshbn.c	/^static void internal_mod(BignumInt *a, int alen,$/;"	f	file:
internal_mul	sshbn.c	/^static void internal_mul(const BignumInt *a, const BignumInt *b,$/;"	f	file:
internal_mul_low	sshbn.c	/^static void internal_mul_low(const BignumInt *a, const BignumInt *b,$/;"	f	file:
internal_sub	sshbn.c	/^static void internal_sub(const BignumInt *a, const BignumInt *b,$/;"	f	file:
interval	pinger.c	/^    int interval;$/;"	m	struct:pinger_tag	file:
interval	wcwidth.c	/^struct interval {$/;"	s	file:
intorptr	dialog.h	/^typedef union { void *p; int i; } intorptr;$/;"	t	typeref:union:__anon16
intro	doc/Chapter1.html	/^<h1><a name="intro"><\/a><a name="C1"><\/a>Chapter 1: Introduction to PuTTY<\/h1>$/;"	a
intval	conf.c	/^	int intval;$/;"	m	union:value::__anon10	file:
invent_firstbits	sshprime.c	/^void invent_firstbits(unsigned *one, unsigned *two)$/;"	f
invent_guid	mkfiles.pl	/^sub invent_guid($) {$/;"	s
invkeysched	sshaes.c	/^    word32 invkeysched[(MAX_NR + 1) * MAX_NB];$/;"	m	struct:AESContext	file:
ipv4_is_local_addr	windows/winnet.c	/^static int ipv4_is_local_addr(struct in_addr addr)$/;"	f	file:
ipv4_is_loopback	unix/uxnet.c	391;"	d	file:
ipv4_is_loopback	windows/winnet.c	35;"	d	file:
iqmp	ssh.h	/^    Bignum iqmp;$/;"	m	struct:RSAKey
is_agent_action	unix/uxpgnt.c	/^int is_agent_action(keyact action)$/;"	f
is_alt_pressed	windows/window.c	/^static int is_alt_pressed(void)$/;"	f	file:
is_dbcs_leadbyte	unix/uxucs.c	/^int is_dbcs_leadbyte(int codepage, char byte)$/;"	f
is_dbcs_leadbyte	windows/winucs.c	/^int is_dbcs_leadbyte(int codepage, char byte)$/;"	f
is_dots	pscp.c	/^static int is_dots(char *str)$/;"	f	file:
is_full_screen	windows/window.c	/^static int is_full_screen()$/;"	f	file:
is_iconic	fuzzterm.c	/^int is_iconic(void *frontend) { return 0; }$/;"	f
is_iconic	unix/gtkwin.c	/^int is_iconic(void *frontend)$/;"	f
is_iconic	windows/window.c	/^int is_iconic(void *frontend)$/;"	f
is_interactive	unix/uxcons.c	/^int is_interactive(void)$/;"	f
is_rtl	minibidi.c	/^int is_rtl(int c)$/;"	f
is_wildcard	psftp.c	/^int is_wildcard(char *name)$/;"	f
isbase64	import.c	146;"	d	file:
isbold	windows/winstuff.h	/^    int isbold;$/;"	m	struct:FontSpec
iscancel	dialog.h	/^	int iscancel;$/;"	m	struct:control::__anon24
isdefault	dialog.h	/^	int isdefault;$/;"	m	struct:control::__anon24
iso_8859_1	windows/winucs.c	/^static const wchar_t iso_8859_1[] = {$/;"	v	file:
iso_8859_10	windows/winucs.c	/^static const wchar_t iso_8859_10[] = {$/;"	v	file:
iso_8859_11	windows/winucs.c	/^static const wchar_t iso_8859_11[] = {$/;"	v	file:
iso_8859_13	windows/winucs.c	/^static const wchar_t iso_8859_13[] = {$/;"	v	file:
iso_8859_14	windows/winucs.c	/^static const wchar_t iso_8859_14[] = {$/;"	v	file:
iso_8859_15	windows/winucs.c	/^static const wchar_t iso_8859_15[] = {$/;"	v	file:
iso_8859_16	windows/winucs.c	/^static const wchar_t iso_8859_16[] = {$/;"	v	file:
iso_8859_2	windows/winucs.c	/^static const wchar_t iso_8859_2[] = {$/;"	v	file:
iso_8859_3	windows/winucs.c	/^static const wchar_t iso_8859_3[] = {$/;"	v	file:
iso_8859_4	windows/winucs.c	/^static const wchar_t iso_8859_4[] = {$/;"	v	file:
iso_8859_5	windows/winucs.c	/^static const wchar_t iso_8859_5[] = {$/;"	v	file:
iso_8859_6	windows/winucs.c	/^static const wchar_t iso_8859_6[] = {$/;"	v	file:
iso_8859_7	windows/winucs.c	/^static const wchar_t iso_8859_7[] = {$/;"	v	file:
iso_8859_8	windows/winucs.c	/^static const wchar_t iso_8859_8[] = {$/;"	v	file:
iso_8859_9	windows/winucs.c	/^static const wchar_t iso_8859_9[] = {$/;"	v	file:
ispeed	ssh.c	/^    int ospeed, ispeed;		       \/* temporaries *\/$/;"	m	struct:ssh_tag	file:
iswritable	contrib/cygtermd/telnet.c	116;"	d	file:
iswritable	telnet.c	112;"	d	file:
iv	import.c	/^    char iv[32];$/;"	m	struct:openssh_pem_key	file:
iv	sshaes.c	/^    word32 iv[MAX_NB];$/;"	m	struct:AESContext	file:
iv0	sshblowf.c	/^    word32 iv0, iv1;		       \/* for CBC mode *\/$/;"	m	struct:BlowfishContext	file:
iv0	sshdes.c	/^    word32 iv0, iv1;$/;"	m	struct:__anon88	file:
iv1	sshblowf.c	/^    word32 iv0, iv1;		       \/* for CBC mode *\/$/;"	m	struct:BlowfishContext	file:
iv1	sshdes.c	/^    word32 iv0, iv1;$/;"	m	struct:__anon88	file:
j	ssharcf.c	/^    unsigned char i, j, s[256];$/;"	m	struct:__anon72	file:
k0246	sshdes.c	/^    word32 k0246[16], k1357[16];$/;"	m	struct:__anon88	file:
k1357	sshdes.c	/^    word32 k0246[16], k1357[16];$/;"	m	struct:__anon88	file:
kbd_codepage	windows/window.c	/^static int kbd_codepage;$/;"	v	file:
kdf	import.c	/^    openssh_new_kdf kdf;$/;"	m	struct:openssh_new_key	file:
kdfopts	import.c	/^    } kdfopts;$/;"	m	struct:openssh_new_key	typeref:union:openssh_new_key::__anon33	file:
keepalive	unix/uxnet.c	/^    int nodelay, keepalive;            \/* for connect()-type sockets *\/$/;"	m	struct:Socket_tag	file:
keepalive	windows/winnet.c	/^    int oobinline, nodelay, keepalive, privport;$/;"	m	struct:Socket_tag	file:
kex	ssh.c	/^	    const struct ssh_kex *kex;$/;"	m	struct:kexinit_algorithm::__anon83::__anon84	typeref:struct:kexinit_algorithm::__anon83::__anon84::ssh_kex	file:
kex	ssh.c	/^	} kex;$/;"	m	union:kexinit_algorithm::__anon83	typeref:struct:kexinit_algorithm::__anon83::__anon84	file:
kex	ssh.c	/^    const struct ssh_kex *kex;$/;"	m	struct:ssh_tag	typeref:struct:ssh_tag::ssh_kex	file:
kex_ctx	ssh.c	/^    void *kex_ctx;$/;"	m	struct:ssh_tag	file:
kex_extra_curve25519	sshecc.c	/^static const struct eckex_extra kex_extra_curve25519 = { ec_curve25519 };$/;"	v	typeref:struct:eckex_extra	file:
kex_extra_nistp256	sshecc.c	/^const struct eckex_extra kex_extra_nistp256 = { ec_p256 };$/;"	v	typeref:struct:eckex_extra
kex_extra_nistp384	sshecc.c	/^const struct eckex_extra kex_extra_nistp384 = { ec_p384 };$/;"	v	typeref:struct:eckex_extra
kex_extra_nistp521	sshecc.c	/^const struct eckex_extra kex_extra_nistp521 = { ec_p521 };$/;"	v	typeref:struct:eckex_extra
kex_in_progress	ssh.c	/^    int kex_in_progress;$/;"	m	struct:ssh_tag	file:
kexinit_algorithm	ssh.c	/^struct kexinit_algorithm {$/;"	s	file:
kexlist_handler	config.c	/^static void kexlist_handler(union control *ctrl, void *dlg,$/;"	f	file:
kexnames	settings.c	/^static const struct keyvalwhere kexnames[] = {$/;"	v	typeref:struct:keyvalwhere	file:
key	conf.c	/^    struct key key;$/;"	m	struct:conf_entry	typeref:struct:conf_entry::key	file:
key	conf.c	/^struct key {$/;"	s	file:
key	icons/mkicon.py	/^def key(size):$/;"	f
key	unix/uxstore.c	/^    const char *key;$/;"	m	struct:skeyval	file:
key	windows/winpgen.c	/^        struct RSAKey *key;$/;"	m	union:rsa_key_thread_params::__anon140	typeref:struct:rsa_key_thread_params::__anon140::RSAKey	file:
key	windows/winpgen.c	/^        struct RSAKey key;$/;"	m	union:MainDlgState::__anon141	typeref:struct:MainDlgState::__anon141::RSAKey	file:
key	windows/winstore.c	/^    HKEY key;$/;"	m	struct:enumsettings	file:
key2val	settings.c	/^static int key2val(const struct keyvalwhere *mapping,$/;"	f	file:
key_bits	windows/winpgen.c	/^    int key_bits, curve_bits;$/;"	m	struct:MainDlgState	file:
key_bits	windows/winpgen.c	/^    int key_bits;		       \/* bits in key modulus (RSA, DSA) *\/$/;"	m	struct:rsa_key_thread_params	file:
key_event	unix/gtkask.c	/^static gint key_event(GtkWidget *widget, GdkEventKey *event, gpointer data)$/;"	f	file:
key_event	unix/gtkwin.c	/^gint key_event(GtkWidget *widget, GdkEventKey *event, gpointer data)$/;"	f
key_exists	windows/winpgen.c	/^    int key_exists;$/;"	m	struct:MainDlgState	file:
key_find_callback	unix/uxpgnt.c	/^void key_find_callback(void *vctx, const char *fingerprint,$/;"	f
key_find_ctx	unix/uxpgnt.c	/^struct key_find_ctx {$/;"	s	file:
key_list_callback	unix/uxpgnt.c	/^void key_list_callback(void *ctx, const char *fingerprint,$/;"	f
key_type	sshpubk.c	/^int key_type(const Filename *filename)$/;"	f
key_type_fp	sshpubk.c	/^static int key_type_fp(FILE *fp)$/;"	f	file:
key_type_to_str	sshpubk.c	/^const char *key_type_to_str(int type)$/;"	f
key_wanted	import.c	/^    int nkeys, key_wanted;$/;"	m	struct:openssh_new_key	file:
keyact	unix/uxpgnt.c	/^} keyact;$/;"	t	typeref:enum:__anon124	file:
keyact_head	unix/uxpgnt.c	/^struct cmdline_key_action *keyact_head = NULL, *keyact_tail = NULL;$/;"	v	typeref:struct:cmdline_key_action
keyact_tail	unix/uxpgnt.c	/^struct cmdline_key_action *keyact_head = NULL, *keyact_tail = NULL;$/;"	v	typeref:struct:
keyblob	import.c	/^    unsigned char *keyblob;$/;"	m	struct:openssh_new_key	file:
keyblob	import.c	/^    unsigned char *keyblob;$/;"	m	struct:openssh_pem_key	file:
keyblob	import.c	/^    unsigned char *keyblob;$/;"	m	struct:sshcom_key	file:
keyblob_len	import.c	/^    int keyblob_len, keyblob_size;$/;"	m	struct:openssh_new_key	file:
keyblob_len	import.c	/^    int keyblob_len, keyblob_size;$/;"	m	struct:openssh_pem_key	file:
keyblob_len	import.c	/^    int keyblob_len, keyblob_size;$/;"	m	struct:sshcom_key	file:
keyblob_size	import.c	/^    int keyblob_len, keyblob_size;$/;"	m	struct:openssh_new_key	file:
keyblob_size	import.c	/^    int keyblob_len, keyblob_size;$/;"	m	struct:openssh_pem_key	file:
keyblob_size	import.c	/^    int keyblob_len, keyblob_size;$/;"	m	struct:sshcom_key	file:
keyboard	unix/gtkask.c	/^    GdkDevice *keyboard;               \/* for gdk_device_grab *\/$/;"	m	struct:askpass_ctx	file:
keybox	config.c	/^    union control *addbutton, *rembutton, *listbox, *keybox;$/;"	m	struct:manual_hostkey_data	typeref:union:manual_hostkey_data::	file:
keycmp	unix/uxstore.c	/^int keycmp(void *av, void *bv)$/;"	f
keylen	ssh.h	/^    int len, keylen;$/;"	m	struct:ssh_mac
keylist	windows/winpgnt.c	/^static HWND keylist;$/;"	v	file:
keylist_update	unix/uxpgnt.c	/^void keylist_update(void)$/;"	f
keylist_update	windows/winpgnt.c	/^void keylist_update(void)$/;"	f
keymenu	windows/winpgen.c	/^    HMENU filemenu, keymenu, cvtmenu;$/;"	m	struct:MainDlgState	file:
keypath	windows/winpgnt.c	/^static filereq *keypath = NULL;$/;"	v	file:
keysched	sshaes.c	/^    word32 keysched[(MAX_NR + 1) * MAX_NB];$/;"	m	struct:AESContext	file:
keysym	unix/xkeysym.c	/^    unsigned short keysym;$/;"	m	struct:keysym	file:
keysym	unix/xkeysym.c	/^struct keysym {$/;"	s	file:
keysym_to_unicode	unix/xkeysym.c	/^int keysym_to_unicode(int keysym)$/;"	f
keysyms	unix/xkeysym.c	/^static struct keysym keysyms[] = {$/;"	v	typeref:struct:keysym	file:
keytype	import.c	/^    openssh_pem_keytype keytype;$/;"	m	struct:openssh_pem_key	file:
keytype	ssh.h	/^    const char *keytype;               \/* for host key cache *\/$/;"	m	struct:ssh_signkey
keytype	windows/winpgen.c	/^    keytype keytype;$/;"	m	struct:MainDlgState	file:
keytype	windows/winpgen.c	/^    keytype keytype;$/;"	m	struct:rsa_key_thread_params	file:
keytype	windows/winpgen.c	/^typedef enum {RSA, DSA, ECDSA, ED25519} keytype;$/;"	t	typeref:enum:__anon139	file:
keyvalwhere	putty.h	/^struct keyvalwhere {$/;"	s
kids	tree234.c	/^    node234 *kids[4];$/;"	m	struct:node234_Tag	file:
koi8_u	windows/winucs.c	/^static const wchar_t koi8_u[] = {$/;"	v	file:
l	ssh.h	/^    Bignum l, d;$/;"	m	struct:ec_ecurve
lParam	windows/window.c	/^    LPARAM lParam;$/;"	m	struct:wm_netevent_params	file:
label	dialog.h	/^	char *label;$/;"	m	struct:control::__anon18
label	unix/gtkdlg.c	/^    GtkWidget *label;         \/* for dlg_label_change *\/$/;"	m	struct:uctrl	file:
label_sizealloc	unix/gtkdlg.c	/^static void label_sizealloc(GtkWidget *widget, GtkAllocation *alloc,$/;"	f	file:
last	wcwidth.c	/^  unsigned int last;$/;"	m	struct:interval	file:
last_char_len	unix/gtkask.c	/^static int last_char_len(struct askpass_ctx *ctx)$/;"	f	file:
last_rekey	ssh.c	/^    unsigned long next_rekey, last_rekey;$/;"	m	struct:ssh_tag	file:
lastact	windows/window.c	/^static int dbltime, lasttime, lastact;$/;"	v	file:
lastat	windows/windlg.c	/^    HTREEITEM lastat[4];$/;"	m	struct:treeview_faff	file:
lastbeep	terminal.h	/^    long lastbeep;$/;"	m	struct:terminal_tag
lastbtn	windows/window.c	/^static Mouse_Button lastbtn;$/;"	v	file:
lastfocus	unix/gtkdlg.c	/^    union control *currfocus, *lastfocus;$/;"	m	struct:dlgparam	typeref:union:dlgparam::	file:
lastfocused	windows/winstuff.h	/^    union control *focused, *lastfocused; \/* which ctrl has focus now\/before *\/$/;"	m	struct:dlgparam	typeref:union:dlgparam::
lasttime	windows/window.c	/^static int dbltime, lasttime, lastact;$/;"	v	file:
lattr	terminal.h	/^    unsigned short lattr;$/;"	m	struct:termline
launch_duplicate_session	unix/gtkapp.c	/^void launch_duplicate_session(Conf *conf) {}$/;"	f
launch_duplicate_session	unix/gtkapp.c	/^void launch_duplicate_session(Conf *conf)$/;"	f
launch_duplicate_session	unix/gtkmain.c	/^void launch_duplicate_session(Conf *conf)$/;"	f
launch_help	windows/winhelp.c	/^void launch_help(HWND hwnd, const char *topic)$/;"	f
launch_new_session	unix/gtkapp.c	/^void launch_new_session(void) {}$/;"	f
launch_new_session	unix/gtkapp.c	/^void launch_new_session(void)$/;"	f
launch_new_session	unix/gtkmain.c	/^void launch_new_session(void)$/;"	f
launch_saved_session	unix/gtkapp.c	/^void launch_saved_session(const char *str) {}$/;"	f
launch_saved_session	unix/gtkapp.c	/^void launch_saved_session(const char *str)$/;"	f
launch_saved_session	unix/gtkmain.c	/^void launch_saved_session(const char *str)$/;"	f
layout_ctrls	unix/gtkdlg.c	/^GtkWidget *layout_ctrls(struct dlgparam *dp, struct Shortcuts *scs,$/;"	f
ldisc	putty.h	/^    int (*ldisc) (void *handle, int);$/;"	m	struct:backend_tag
ldisc	ssh.c	/^    void *ldisc;$/;"	m	struct:ssh_tag	file:
ldisc	telnet.c	/^    void *ldisc;$/;"	m	struct:telnet_tag	file:
ldisc	terminal.h	/^    void *ldisc;$/;"	m	struct:terminal_tag
ldisc	unix/gtkwin.c	/^    void *ldisc;$/;"	m	struct:gui_data	file:
ldisc	windows/window.c	/^static void *ldisc;$/;"	v	file:
ldisc_configure	ldisc.c	/^void ldisc_configure(void *handle, Conf *conf)$/;"	f
ldisc_create	ldisc.c	/^void *ldisc_create(Conf *conf, Terminal *term,$/;"	f
ldisc_echoedit_update	fuzzterm.c	/^void ldisc_echoedit_update(void *handle) {}$/;"	f
ldisc_echoedit_update	ldisc.c	/^void ldisc_echoedit_update(void *handle)$/;"	f
ldisc_echoedit_update	pscp.c	/^void ldisc_echoedit_update(void *handle) { }$/;"	f
ldisc_echoedit_update	psftp.c	/^void ldisc_echoedit_update(void *handle) { }$/;"	f
ldisc_free	ldisc.c	/^void ldisc_free(void *handle)$/;"	f
ldisc_send	fuzzterm.c	/^void ldisc_send(void *handle, const char *buf, int len, int interactive) {}$/;"	f
ldisc_send	ldisc.c	/^void ldisc_send(void *handle, const char *buf, int len, int interactive)$/;"	f
ldisc_tag	ldisc.h	/^typedef struct ldisc_tag {$/;"	s
leastGreaterEven	minibidi.c	50;"	d	file:
leastGreaterOdd	minibidi.c	49;"	d	file:
len	misc.c	/^    int len, size;$/;"	m	struct:strbuf	file:
len	pageant.c	/^    int len;$/;"	m	struct:blob	file:
len	pageant.c	/^    unsigned len, got;$/;"	m	struct:pageant_conn_state	file:
len	putty.h	/^    int len;$/;"	m	struct:logblank_t
len	sftp.c	/^    int len, retlen, complete;$/;"	m	struct:req	file:
len	ssh.c	/^    long len, pad, biglen, to_read;$/;"	m	struct:rdpkt1_state_tag	file:
len	ssh.c	/^    long len, pad, payload, packetlen, maclen;$/;"	m	struct:rdpkt2_state_tag	file:
len	ssh.h	/^    int len, keylen;$/;"	m	struct:ssh_mac
len	ssh.h	/^    uint32 len[4];$/;"	m	struct:__anon95
len	sshzlib.c	/^    int distance, len;$/;"	m	struct:Match	file:
len	sshzlib.c	/^    int sym, hlit, hdist, hclen, lenptr, lenextrabits, lenaddon, len,$/;"	m	struct:zlib_decompress_ctx	file:
len	terminal.c	/^    int len, size;$/;"	m	struct:buf	file:
len	unix/osxlaunch.c	/^    int len, prefixlen;$/;"	m	struct:node	file:
len	windows/window.c	/^    int len;$/;"	m	struct:agent_callback	file:
len	windows/winhandl.c	/^    DWORD len;			       \/* how much data that was *\/$/;"	m	struct:handle_input	file:
len	windows/winhandl.c	/^    DWORD len;			       \/* how much data there is *\/$/;"	m	struct:handle_output	file:
len	windows/winplink.c	/^    int len;$/;"	m	struct:agent_callback	file:
lenaddon	sshzlib.c	/^    int sym, hlit, hdist, hclen, lenptr, lenextrabits, lenaddon, len,$/;"	m	struct:zlib_decompress_ctx	file:
lenbuf	pageant.c	/^    unsigned char lenbuf[4], pktbuf[AGENT_MAX_MSGLEN];$/;"	m	struct:pageant_conn_state	file:
lencodes	sshzlib.c	/^static const coderecord lencodes[] = {$/;"	v	file:
lenextrabits	sshzlib.c	/^    int sym, hlit, hdist, hclen, lenptr, lenextrabits, lenaddon, len,$/;"	m	struct:zlib_decompress_ctx	file:
length	pgssapi.h	/^    OM_uint32 length;$/;"	m	struct:gss_OID_desc_struct
length	pgssapi.h	/^    size_t length;$/;"	m	struct:gss_buffer_desc_struct
length	sftp.c	/^    unsigned length, maxlen;$/;"	m	struct:sftp_packet	file:
length	ssh.c	/^    char length[4];$/;"	m	struct:rdpkt2_bare_state_tag	file:
length	ssh.c	/^    long length;	    \/* length of packet: see below *\/$/;"	m	struct:Packet	file:
lengths	sshzlib.c	/^    unsigned char lengths[286 + 32];$/;"	m	struct:zlib_decompress_ctx	file:
lenhi	ssh.h	/^    uint32 lenhi, lenlo;$/;"	m	struct:__anon93
lenhi	ssh.h	/^    uint32 lenhi, lenlo;$/;"	m	struct:__anon94
lenlen	sshzlib.c	/^    unsigned char lenlen[19];$/;"	m	struct:zlib_decompress_ctx	file:
lenlentable	sshzlib.c	/^    struct zlib_table *currlentable, *currdisttable, *lenlentable;$/;"	m	struct:zlib_decompress_ctx	typeref:struct:zlib_decompress_ctx::	file:
lenlo	ssh.h	/^    uint32 lenhi, lenlo;$/;"	m	struct:__anon93
lenlo	ssh.h	/^    uint32 lenhi, lenlo;$/;"	m	struct:__anon94
lenof	charset/internal.h	9;"	d
lenof	misc.h	149;"	d
lenof	ssh.h	65;"	d
lenof	tree234.c	1309;"	d	file:
lenptr	sshzlib.c	/^    int sym, hlit, hdist, hclen, lenptr, lenextrabits, lenaddon, len,$/;"	m	struct:zlib_decompress_ctx	file:
lenrep	sshzlib.c	/^	lenrep;$/;"	m	struct:zlib_decompress_ctx	file:
lenwritten	windows/winhandl.c	/^    DWORD lenwritten;		       \/* how much data we actually wrote *\/$/;"	m	struct:handle_output	file:
lfhascr	terminal.h	/^    int lfhascr;$/;"	m	struct:terminal_tag
lfont	windows/window.c	/^static LOGFONT lfont;$/;"	v	file:
lgfp	logging.c	/^    FILE *lgfp;$/;"	m	struct:LogContext	file:
libdir	Makefile	/^libdir = ${exec_prefix}\/lib$/;"	m
libexecdir	Makefile	/^libexecdir = ${exec_prefix}\/libexec$/;"	m
libraries	sshgss.h	/^    struct ssh_gss_library *libraries;$/;"	m	struct:ssh_gss_liblist	typeref:struct:ssh_gss_liblist::ssh_gss_library
libversion_a_AR	Makefile	/^libversion_a_AR = $(AR) $(ARFLAGS)$/;"	m
libversion_a_CFLAGS	Makefile	/^libversion_a_CFLAGS = $(COMPAT) $(XFLAGS) $(WARNINGOPTS) \\$/;"	m
libversion_a_LIBADD	Makefile	/^libversion_a_LIBADD =$/;"	m
libversion_a_OBJECTS	Makefile	/^libversion_a_OBJECTS = $(am_libversion_a_OBJECTS)$/;"	m
libversion_a_SOURCES	Makefile	/^libversion_a_SOURCES = version.c$/;"	m
licence	doc/AppendixC.html	/^<h1><a name="licence"><\/a><a name="AC"><\/a>Appendix C: PuTTY <a name="i0"><\/a>Licence<\/h1>$/;"	a
licence_clicked	unix/gtkdlg.c	/^static void licence_clicked(GtkButton *button, gpointer data)$/;"	f	file:
life	unix/uxpgnt.c	/^} life = LIFE_UNSPEC;$/;"	v	typeref:enum:__anon125
lightning	icons/mkicon.py	/^def lightning(size):$/;"	f
line	windows/winsftp.c	/^    char *line;$/;"	m	struct:command_read_ctx	file:
line_codepage	putty.h	/^    int line_codepage;$/;"	m	struct:unicode_data
linedist	icons/mkicon.py	/^def linedist(x1,y1, x2,y2, x,y):$/;"	f
lineptr	terminal.c	/^static termline *lineptr(Terminal *term, int y, int lineno, int screen)$/;"	f	file:
lineptr	terminal.c	1081;"	d	file:
lines	terminal.h	/^    int lines; \/* Number of lines to scroll by - +ve is forwards. *\/$/;"	m	struct:scrollregion
link_font	windows/winucs.c	/^static void link_font(WCHAR * line_tbl, WCHAR * font_tbl, WCHAR attr)$/;"	f	file:
list	pscp.c	/^static int list = 0;$/;"	v	file:
list	ssh.h	/^    const struct ssh2_cipher *const *list;$/;"	m	struct:ssh2_ciphers
list	ssh.h	/^    const struct ssh_kex *const *list;$/;"	m	struct:ssh_kexes
list	unix/gtkdlg.c	/^    GtkWidget *list;	      \/* for listbox (in GTK1), combobox (<=GTK2.3) *\/$/;"	m	struct:uctrl	file:
list_selchange	unix/gtkdlg.c	/^static void list_selchange(GtkList *list, gpointer data)$/;"	f	file:
listbox	config.c	/^    union control *addbutton, *rembutton, *listbox, *keybox;$/;"	m	struct:manual_hostkey_data	typeref:union:manual_hostkey_data::	file:
listbox	config.c	/^    union control *addbutton, *rembutton, *listbox;$/;"	m	struct:portfwd_data	typeref:union:portfwd_data::	file:
listbox	config.c	/^    union control *editbox, *listbox, *loadbutton, *savebutton, *delbutton;$/;"	m	struct:sessionsaver_data	typeref:union:sessionsaver_data::	file:
listbox	config.c	/^    union control *listbox, *editbox, *button;$/;"	m	struct:charclass_data	typeref:union:charclass_data::control	file:
listbox	config.c	/^    union control *listbox, *redit, *gedit, *bedit, *button;$/;"	m	struct:colour_data	typeref:union:colour_data::control	file:
listbox	config.c	/^    union control *valradio, *valbox, *setbutton, *listbox;$/;"	m	struct:ttymodes_data	typeref:union:ttymodes_data::	file:
listbox	config.c	/^    union control *varbox, *valbox, *addbutton, *rembutton, *listbox;$/;"	m	struct:environ_data	typeref:union:environ_data::	file:
listbox	dialog.h	/^    } listbox;$/;"	m	union:control	typeref:struct:control::__anon25
listbox	windows/winctrls.c	/^void listbox(struct ctlpos *cp, char *stext,$/;"	f
listbox_doubleclick	unix/gtkdlg.c	/^static void listbox_doubleclick(GtkTreeView *treeview, GtkTreePath *path,$/;"	f	file:
listbox_reorder	unix/gtkdlg.c	/^static void listbox_reorder(GtkTreeModel *treemodel, GtkTreePath *path,$/;"	f	file:
listbox_selchange	unix/gtkdlg.c	/^static void listbox_selchange(GtkTreeSelection *treeselection,$/;"	f	file:
listctrl	unix/gtkdlg.c	/^    union control *listctrl;$/;"	m	struct:eventlog_stuff	typeref:union:eventlog_stuff::control	file:
listed	psftp.c	/^    int listed;			       \/* do we list this in primary help? *\/$/;"	m	struct:sftp_cmd_lookup	file:
listener	unix/uxnet.c	/^    int listener;$/;"	m	struct:Socket_tag	file:
listensock	pageant.c	/^    Socket listensock;$/;"	m	struct:pageant_listen_state	file:
listensock	sshshare.c	/^    Socket listensock;               \/* the master listening Socket *\/$/;"	m	struct:ssh_sharing_state	file:
listid	windows/winstuff.h	/^    int listid, upbid, dnbid;$/;"	m	struct:prefslist
listitem_button_press	unix/gtkdlg.c	/^static gboolean listitem_button_press(GtkWidget *item, GdkEventButton *event,$/;"	f	file:
listitem_button_release	unix/gtkdlg.c	/^static gboolean listitem_button_release(GtkWidget *item, GdkEventButton *event,$/;"	f	file:
listitem_key	unix/gtkdlg.c	/^static gboolean listitem_key(GtkWidget *item, GdkEventKey *event,$/;"	f	file:
listitem_multi_key	unix/gtkdlg.c	/^static gboolean listitem_multi_key(GtkWidget *item, GdkEventKey *event,$/;"	f	file:
listitem_single_key	unix/gtkdlg.c	/^static gboolean listitem_single_key(GtkWidget *item, GdkEventKey *event,$/;"	f	file:
listmodel	unix/gtkdlg.c	/^    GtkListStore *listmodel;  \/* for all types of list box *\/$/;"	m	struct:uctrl	file:
literal	sshzlib.c	/^    void (*literal) (struct LZ77Context * ctx, unsigned char c);$/;"	m	struct:LZ77Context	file:
live	sshshare.c	/^    int live;$/;"	m	struct:share_xchannel	file:
lo	int64.h	/^    unsigned long hi, lo;$/;"	m	struct:__anon35
load_key_file	windows/winpgen.c	/^void load_key_file(HWND hwnd, struct MainDlgState *state,$/;"	f
load_open_settings	settings.c	/^void load_open_settings(void *sesskey, Conf *conf)$/;"	f
load_openssh_new_key	import.c	/^static struct openssh_new_key *load_openssh_new_key(const Filename *filename,$/;"	f	file:
load_openssh_pem_key	import.c	/^static struct openssh_pem_key *load_openssh_pem_key(const Filename *filename,$/;"	f	file:
load_rgba	icons/macicon.py	/^def load_rgba(filename):$/;"	f
load_selected_session	config.c	/^static int load_selected_session(struct sessionsaver_data *ssd,$/;"	f	file:
load_settings	settings.c	/^void load_settings(const char *section, Conf *conf)$/;"	f
load_sshcom_key	import.c	/^static struct sshcom_key *load_sshcom_key(const Filename *filename,$/;"	f	file:
load_system32_dll	windows/winmisc.c	/^HMODULE load_system32_dll(const char *libname)$/;"	f
loadbutton	config.c	/^    union control *editbox, *listbox, *loadbutton, *savebutton, *delbutton;$/;"	m	struct:sessionsaver_data	typeref:union:sessionsaver_data::	file:
loaded_session	putty.h	/^GLOBAL int loaded_session;$/;"	v
loadrsakey	sshpubk.c	/^int loadrsakey(const Filename *filename, struct RSAKey *key,$/;"	f
loadrsakey_main	sshpubk.c	/^static int loadrsakey_main(FILE * fp, struct RSAKey *key, int pub_only,$/;"	f	file:
local	ssh.c	/^    struct PortListener *local;$/;"	m	struct:ssh_portfwd	typeref:struct:ssh_portfwd::PortListener	file:
local_interfaces	windows/winnet.c	/^static INTERFACE_INFO local_interfaces[16];$/;"	v	file:
local_tty	unix/uxplink.c	/^static int local_tty = FALSE; \/* do we have a local tty? *\/$/;"	v	file:
localauthdata	ssh.h	/^    unsigned char *localauthdata;$/;"	m	struct:X11Display
localauthdatalen	ssh.h	/^    int localauthdatalen;$/;"	m	struct:X11Display
localauthproto	ssh.h	/^    int localauthproto;$/;"	m	struct:X11Display
localecho	ldisc.h	/^    int telnet_keyboard, telnet_newline, protocol, localecho, localedit;$/;"	m	struct:ldisc_tag
localedir	Makefile	/^localedir = ${datarootdir}\/locale$/;"	m
localedit	ldisc.h	/^    int telnet_keyboard, telnet_newline, protocol, localecho, localedit;$/;"	m	struct:ldisc_tag
localencs	charset/localenc.c	/^} localencs[] = {$/;"	v	typeref:struct:__anon6	file:
localhost_only	unix/uxnet.c	/^    int localhost_only;		       \/* for listening sockets *\/$/;"	m	struct:Socket_tag	file:
localhost_only	windows/winnet.c	/^    int localhost_only;		       \/* for listening sockets *\/$/;"	m	struct:Socket_tag	file:
localid	ssh.c	/^    unsigned remoteid, localid;$/;"	m	struct:ssh_channel	file:
localproxy_by_errfd	unix/uxproxy.c	/^static tree234 *localproxy_by_errfd;$/;"	v	file:
localproxy_by_fromfd	unix/uxproxy.c	/^static tree234 *localproxy_by_fromfd;$/;"	v	file:
localproxy_by_tofd	unix/uxproxy.c	/^static tree234 *localproxy_by_tofd;$/;"	v	file:
localproxy_errfd_cmp	unix/uxproxy.c	/^static int localproxy_errfd_cmp(void *av, void *bv)$/;"	f	file:
localproxy_errfd_find	unix/uxproxy.c	/^static int localproxy_errfd_find(void *av, void *bv)$/;"	f	file:
localproxy_fromfd_cmp	unix/uxproxy.c	/^static int localproxy_fromfd_cmp(void *av, void *bv)$/;"	f	file:
localproxy_fromfd_find	unix/uxproxy.c	/^static int localproxy_fromfd_find(void *av, void *bv)$/;"	f	file:
localproxy_select_result	unix/uxproxy.c	/^static void localproxy_select_result(int fd, int event)$/;"	f	file:
localproxy_tofd_cmp	unix/uxproxy.c	/^static int localproxy_tofd_cmp(void *av, void *bv)$/;"	f	file:
localproxy_tofd_find	unix/uxproxy.c	/^static int localproxy_tofd_find(void *av, void *bv)$/;"	f	file:
localproxy_try_send	unix/uxproxy.c	/^static int localproxy_try_send(Local_Proxy_Socket ps)$/;"	f	file:
localstatedir	Makefile	/^localstatedir = ${prefix}\/var$/;"	m
locmaxwin	ssh.c	/^	    int locwindow, locmaxwin;$/;"	m	struct:ssh_channel::__anon78::ssh2_data_channel	file:
locwindow	ssh.c	/^	    int locwindow, locmaxwin;$/;"	m	struct:ssh_channel::__anon78::ssh2_data_channel	file:
log	network.h	/^    void (*log)(Plug p, int type, SockAddr addr, int port,$/;"	m	struct:plug_function_table
log_eventlog	cmdgen.c	/^void log_eventlog(void *handle, const char *event)$/;"	f
log_eventlog	logging.c	/^void log_eventlog(void *handle, const char *event)$/;"	f
log_eventlog	unix/uxpgnt.c	/^void log_eventlog(void *handle, const char *event) {}$/;"	f
log_free	logging.c	/^void log_free(void *handle)$/;"	f
log_init	logging.c	/^void *log_init(void *frontend, Conf *conf)$/;"	f
log_option	telnet.c	/^static void log_option(Telnet telnet, const char *sender, int cmd, int option)$/;"	f	file:
log_packet	logging.c	/^void log_packet(void *handle, int direction, int type,$/;"	f
log_proxy_stderr	be_misc.c	/^void log_proxy_stderr(Plug plug, bufchain *buf, const void *vdata, int len)$/;"	f
log_reconfig	logging.c	/^void log_reconfig(void *handle, Conf *conf)$/;"	f
logblank_t	putty.h	/^struct logblank_t {$/;"	s
logbox	windows/winstuff.h	/^GLOBAL HWND logbox;$/;"	v
logctx	pageant.c	/^    void *logctx;$/;"	m	struct:pageant_conn_state	file:
logctx	pageant.c	/^    void *logctx;$/;"	m	struct:pageant_listen_state	file:
logctx	ssh.c	/^    void *logctx;$/;"	m	struct:ssh_tag	file:
logctx	terminal.h	/^    void *logctx;$/;"	m	struct:terminal_tag
logctx	unix/gtkwin.c	/^    void *logctx;$/;"	m	struct:gui_data	file:
logctx	unix/uxplink.c	/^static void *logctx;$/;"	v	file:
logctx	windows/winstuff.h	/^GLOBAL void *logctx;$/;"	v
logevent	fuzzterm.c	/^void logevent(void *frontend, const char *msg) { }$/;"	f
logevent	ssh.c	1004;"	d	file:
logevent	unix/gtkwin.c	/^void logevent(void *frontend, const char *string)$/;"	f
logevent	unix/uxcons.c	/^void logevent(void *frontend, const char *string)$/;"	f
logevent	windows/wincons.c	/^void logevent(void *frontend, const char *string)$/;"	f
logevent	windows/windlg.c	/^void logevent(void *frontend, const char *string)$/;"	f
logevent_dlg	unix/gtkdlg.c	/^void logevent_dlg(void *estuff, const char *string)$/;"	f
logeventf	ssh.c	/^static void logeventf(Ssh ssh, const char *fmt, ...)$/;"	f	file:
logfclose	logging.c	/^void logfclose(void *handle)$/;"	f
logflush	logging.c	/^void logflush(void *handle) {$/;"	f
logflush	terminal.h	/^    int logflush;$/;"	m	struct:terminal_tag
logfn	pageant.c	/^    pageant_logfn_t logfn;$/;"	m	struct:pageant_conn_state	file:
logfn	pageant.c	/^    pageant_logfn_t logfn;$/;"	m	struct:pageant_listen_state	file:
logfopen	logging.c	/^void logfopen(void *handle)$/;"	f
logfopen_callback	logging.c	/^static void logfopen_callback(void *handle, int mode)$/;"	f	file:
loggingbuttons_handler	config.c	/^static void loggingbuttons_handler(union control *ctrl, void *dlg,$/;"	f	file:
logomitdata	ssh.c	/^    int logomitdata;$/;"	m	struct:ssh_tag	file:
logpal	windows/window.c	/^static LPLOGPALETTE logpal;$/;"	v	file:
logprintf	logging.c	/^static void logprintf(struct LogContext *ctx, const char *fmt, ...)$/;"	f	file:
logtraffic	logging.c	/^void logtraffic(void *handle, unsigned char c, int logmode)$/;"	f
logtype	logging.c	/^    int logtype;		       \/* cached out of conf *\/$/;"	m	struct:LogContext	file:
logtype	terminal.h	/^    int logtype;$/;"	m	struct:terminal_tag
logwrite	logging.c	/^static void logwrite(struct LogContext *ctx, void *data, int len)$/;"	f	file:
longhelp	psftp.c	/^    const char *longhelp;$/;"	m	struct:sftp_cmd_lookup	file:
longname	sftp.h	/^    char *filename, *longname;$/;"	m	struct:fxp_name
longtohex	contrib/kh2reg.py	/^def longtohex(n):$/;"	f
lookup_command	psftp.c	/^const struct sftp_cmd_lookup *lookup_command(const char *name)$/;"	f
loop_backend	testback.c	/^Backend loop_backend = {$/;"	v
loop_free	testback.c	/^static void loop_free(void *handle)$/;"	f	file:
loop_init	testback.c	/^static const char *loop_init(void *frontend_handle, void **backend_handle,$/;"	f	file:
loop_send	testback.c	/^static int loop_send(void *handle, char *buf, int len) {$/;"	f	file:
loop_state	testback.c	/^struct loop_state {$/;"	s	file:
lpVtbl	windows/winjump.c	/^    ICustomDestinationListVtbl *lpVtbl;$/;"	m	struct:ICustomDestinationList	file:
lpVtbl	windows/winjump.c	/^    IObjectArrayVtbl *lpVtbl;$/;"	m	struct:IObjectArray	file:
lpVtbl	windows/winjump.c	/^    IObjectCollectionVtbl *lpVtbl;$/;"	m	struct:IObjectCollection	file:
lpVtbl	windows/winjump.c	/^    IPropertyStoreVtbl *lpVtbl;$/;"	m	struct:IPropertyStore	file:
lpVtbl	windows/winjump.c	/^    IShellLinkVtbl *lpVtbl;$/;"	m	struct:IShellLink	file:
lpage_send	ldiscucs.c	/^void lpage_send(void *handle,$/;"	f
ltemp	terminal.h	/^    termchar *ltemp;$/;"	m	struct:terminal_tag
ltemp_size	terminal.h	/^    int ltemp_size;$/;"	m	struct:terminal_tag
ltime	time.c	/^struct tm ltime(void)$/;"	f
ltime	windows/wintime.c	/^struct tm ltime(void)$/;"	f
luni_send	ldiscucs.c	/^void luni_send(void *handle, const wchar_t *widebuf, int len, int interactive)$/;"	f
lz77_advance	sshzlib.c	/^static void lz77_advance(struct LZ77InternalContext *st,$/;"	f	file:
lz77_compress	sshzlib.c	/^static void lz77_compress(struct LZ77Context *ctx,$/;"	f	file:
lz77_hash	sshzlib.c	/^static int lz77_hash(unsigned char *data)$/;"	f	file:
lz77_init	sshzlib.c	/^static int lz77_init(struct LZ77Context *ctx)$/;"	f	file:
m	ssh.h	/^        struct ec_mcurve m;$/;"	m	union:ec_curve::__anon91	typeref:struct:ec_curve::__anon91::ec_mcurve
m	testdata/bignum.py	/^            m = sqrt(2**(m+1))$/;"	v
mac	ssh.c	/^	    const struct ssh_mac *mac;$/;"	m	struct:kexinit_algorithm::__anon83::__anon87	typeref:struct:kexinit_algorithm::__anon83::__anon87::ssh_mac	file:
mac	ssh.c	/^	} mac;$/;"	m	union:kexinit_algorithm::__anon83	typeref:struct:kexinit_algorithm::__anon83::__anon87	file:
mac	sshccp.c	/^    struct poly1305 mac;$/;"	m	struct:ccp_context	typeref:struct:ccp_context::poly1305	file:
mac_initialised	sshccp.c	/^    int mac_initialised; \/* Where we have got to in filling mac_iv *\/$/;"	m	struct:ccp_context	file:
mac_iv	sshccp.c	/^    unsigned char mac_iv[8];$/;"	m	struct:ccp_context	file:
macencs	charset/macenc.c	/^} macencs[] = {$/;"	v	typeref:struct:__anon2	file:
maclen	ssh.c	/^    long len, pad, payload, packetlen, maclen;$/;"	m	struct:rdpkt2_state_tag	file:
macs	ssh.c	/^const static struct ssh_mac *const macs[] = {$/;"	v	file:
main	charset/utf8.c	/^int main(void)$/;"	f
main	cmdgen.c	/^int main(int argc, char **argv)$/;"	f
main	cmdgen.c	1109;"	d	file:
main	cmdgen.c	63;"	d	file:
main	contrib/cygtermd/main.c	/^int main(int argc, char **argv)$/;"	f
main	fuzzterm.c	/^int main(int argc, char **argv)$/;"	f
main	int64.c	/^int main(void)$/;"	f
main	minibidi.c	/^int main(int argc, char **argv)$/;"	f
main	misc.c	/^int main(void)$/;"	f
main	sshcrc.c	/^int main(void)$/;"	f
main	sshdes.c	/^int main(int argc, char **argv)$/;"	f
main	sshsh256.c	/^int main(void) {$/;"	f
main	sshsh512.c	/^int main(void) {$/;"	f
main	sshzlib.c	/^int main(int argc, char **argv)$/;"	f
main	testbn.c	/^int main(int argc, char **argv)$/;"	f
main	tree234.c	/^int main(void)$/;"	f
main	unix/gtkapp.c	/^int main(int argc, char **argv)$/;"	f
main	unix/gtkask.c	/^int main(int argc, char **argv)$/;"	f
main	unix/gtkfont.c	/^    unifont *main;$/;"	m	struct:multifont	file:
main	unix/gtkmain.c	/^int main(int argc, char **argv)$/;"	f
main	unix/osxlaunch.c	/^int main(int argc, char **argv)$/;"	f
main	unix/uxpgnt.c	/^int main(int argc, char **argv)$/;"	f
main	unix/uxplink.c	/^int main(int argc, char **argv)$/;"	f
main	unix/uxsftp.c	/^int main(int argc, char *argv[])$/;"	f
main	wildcard.c	/^int main(void)$/;"	f
main	windows/winplink.c	/^int main(int argc, char **argv)$/;"	f
main	windows/winsftp.c	/^int main(int argc, char *argv[])$/;"	f
main	windows/winutils.c	/^int main(int argc, char **argv)$/;"	f
main_cmd_is_sftp	pscp.c	/^static int main_cmd_is_sftp = 0;$/;"	v	file:
main_icon	unix/xpmpterm.c	/^const char *const *const main_icon[] = {$/;"	v
main_icon	unix/xpmputty.c	/^const char *const *const main_icon[] = {$/;"	v
main_icon_0	unix/xpmpterm.c	/^static const char *const main_icon_0[] = {$/;"	v	file:
main_icon_0	unix/xpmputty.c	/^static const char *const main_icon_0[] = {$/;"	v	file:
main_icon_1	unix/xpmpterm.c	/^static const char *const main_icon_1[] = {$/;"	v	file:
main_icon_1	unix/xpmputty.c	/^static const char *const main_icon_1[] = {$/;"	v	file:
main_icon_2	unix/xpmpterm.c	/^static const char *const main_icon_2[] = {$/;"	v	file:
main_icon_2	unix/xpmputty.c	/^static const char *const main_icon_2[] = {$/;"	v	file:
main_thread_id	windows/winplink.c	/^static DWORD main_thread_id;$/;"	v	file:
main_type	ssh.h	/^    enum { KEXTYPE_DH, KEXTYPE_RSA, KEXTYPE_ECDH } main_type;$/;"	m	struct:ssh_kex	typeref:enum:ssh_kex::__anon96
mainchan	ssh.c	/^    struct ssh_channel *mainchan;      \/* primary session channel *\/$/;"	m	struct:ssh_tag	typeref:struct:ssh_tag::ssh_channel	file:
maj_stat	sshgssc.h	/^    OM_uint32 maj_stat;$/;"	m	struct:gssapi_ssh_gss_ctx
maj_stat	windows/wingss.c	/^    unsigned long maj_stat;$/;"	m	struct:winSsh_gss_ctx	file:
make_chunk	icons/macicon.py	/^def make_chunk(chunkid, data):$/;"	f
make_colour_icon	icons/macicon.py	/^def make_colour_icon(size, rgba):$/;"	f
make_colour_mask	icons/macicon.py	/^def make_colour_mask(size, rgba):$/;"	f
make_context	ssh.h	/^    void *(*make_context)(void *);$/;"	m	struct:ssh_mac
make_context	ssh.h	/^    void *(*make_context)(void);$/;"	m	struct:ssh2_cipher
make_context	ssh.h	/^    void *(*make_context)(void);$/;"	m	struct:ssh_cipher
make_default_wintitle	unix/uxpterm.c	/^char *make_default_wintitle(char *hostname)$/;"	f
make_default_wintitle	unix/uxputty.c	/^char *make_default_wintitle(char *hostname)$/;"	f
make_dir_and_check_ours	unix/uxmisc.c	/^char *make_dir_and_check_ours(const char *dirname)$/;"	f
make_dir_path	unix/uxmisc.c	/^char *make_dir_path(const char *path, mode_t mode)$/;"	f
make_dirname	unix/uxshare.c	/^static char *make_dirname(const char *pi_name, char **logtext)$/;"	f	file:
make_dummy_depfile	depcomp	/^make_dummy_depfile ()$/;"	f
make_filename	unix/uxstore.c	/^static char *make_filename(int index, const char *subname)$/;"	f	file:
make_full_screen	windows/window.c	/^static void make_full_screen()$/;"	f	file:
make_gtk_toplevel_window	unix/gtkapp.c	/^GtkWidget *make_gtk_toplevel_window(void *frontend) { return NULL; }$/;"	f
make_gtk_toplevel_window	unix/gtkapp.c	/^GtkWidget *make_gtk_toplevel_window(void *frontend)$/;"	f
make_gtk_toplevel_window	unix/gtkmain.c	/^GtkWidget *make_gtk_toplevel_window(void *frontend)$/;"	f
make_handle_socket	windows/winhsock.c	/^Socket make_handle_socket(HANDLE send_H, HANDLE recv_H, HANDLE stderr_H,$/;"	f
make_mono_icon	icons/macicon.py	/^def make_mono_icon(size, rgba):$/;"	f
make_mouse_ptr	unix/gtkwin.c	/^GdkCursor *make_mouse_ptr(struct gui_data *inst, int cursor_val)$/;"	f
make_name	windows/winshare.c	/^static char *make_name(const char *prefix, const char *name)$/;"	f	file:
make_parentdir_name	unix/uxshare.c	/^static char *make_parentdir_name(void)$/;"	f	file:
make_private_security_descriptor	windows/winsecur.c	/^int make_private_security_descriptor(DWORD permissions,$/;"	f
make_shell_link	windows/winjump.c	/^static IShellLink *make_shell_link(const char *appname,$/;"	f	file:
makekey	sshrsa.c	/^int makekey(const unsigned char *data, int len, struct RSAKey *result,$/;"	f
makeliteral_attr	terminal.c	/^static void makeliteral_attr(struct buf *b, termchar *c, unsigned long *state)$/;"	f	file:
makeliteral_cc	terminal.c	/^static void makeliteral_cc(struct buf *b, termchar *c, unsigned long *state)$/;"	f	file:
makeliteral_chr	terminal.c	/^static void makeliteral_chr(struct buf *b, termchar *c, unsigned long *state)$/;"	f	file:
makeprivate	sshrsa.c	/^int makeprivate(const unsigned char *data, int len, struct RSAKey *result)$/;"	f
makerle	terminal.c	/^static void makerle(struct buf *b, termline *ldata,$/;"	f	file:
man1_MANS	Makefile	/^man1_MANS = doc\/plink.1 doc\/pscp.1 doc\/psftp.1 doc\/puttygen.1 \\$/;"	m
man1dir	Makefile	/^man1dir = $(mandir)\/man1$/;"	m
mandir	Makefile	/^mandir = ${datarootdir}\/man$/;"	m
manpages	mkfiles.pl	/^sub manpages {$/;"	s
manual_hostkey_data	config.c	/^struct manual_hostkey_data {$/;"	s	file:
manual_hostkey_handler	config.c	/^static void manual_hostkey_handler(union control *ctrl, void *dlg,$/;"	f	file:
marg_b	terminal.h	/^    int marg_t, marg_b;		       \/* scroll margins *\/$/;"	m	struct:terminal_tag
marg_t	terminal.h	/^    int marg_t, marg_b;		       \/* scroll margins *\/$/;"	m	struct:terminal_tag
mask	sshzlib.c	/^    int mask;			       \/* mask applied to input bit stream *\/$/;"	m	struct:zlib_table	file:
master	contrib/cygtermd/pty.c	/^int master = -1;$/;"	v
master_fd	unix/gtkwin.c	/^    int master_fd, master_func_id;$/;"	m	struct:gui_data	file:
master_fd	unix/uxpty.c	/^    int master_fd, slave_fd;$/;"	m	struct:pty_tag	file:
master_func_id	unix/gtkwin.c	/^    int master_fd, master_func_id;$/;"	m	struct:gui_data	file:
match	sshzlib.c	/^    void (*match) (struct LZ77Context * ctx, int distance, int len);$/;"	m	struct:LZ77Context	file:
match_comment	unix/uxpgnt.c	/^    int match_fp, match_comment;$/;"	m	struct:key_find_ctx	file:
match_fingerprint_string	unix/uxpgnt.c	/^int match_fingerprint_string(const char *string, const char *fingerprint)$/;"	f
match_fp	unix/uxpgnt.c	/^    int match_fp, match_comment;$/;"	m	struct:key_find_ctx	file:
match_ssh_id	misc.c	/^int match_ssh_id(int stringlen, const void *string, const char *id)$/;"	f
matched_something	pscp.c	/^    int matched_something;	       \/* wildcard match set was non-empty *\/$/;"	m	struct:scp_sftp_dirstack	file:
math	icons/mkicon.py	/^import math$/;"	i
max	misc.h	156;"	d
max	sshzlib.c	/^    int min, max;$/;"	m	struct:__anon102	file:
max_data_size	ssh.c	/^    unsigned long max_data_size;$/;"	m	struct:ssh_tag	file:
maxlen	sftp.c	/^    unsigned length, maxlen;$/;"	m	struct:sftp_packet	file:
maxlen	ssh.c	/^    long maxlen;	    \/* amount of storage allocated for `data' *\/$/;"	m	struct:Packet	file:
mazovia	windows/winucs.c	/^static const wchar_t mazovia[] = {$/;"	v	file:
mb_to_wc	unix/uxucs.c	/^int mb_to_wc(int codepage, int flags, const char *mbstr, int mblen,$/;"	f
mb_to_wc	windows/winucs.c	/^int mb_to_wc(int codepage, int flags, const char *mbstr, int mblen,$/;"	f
memoisedsqrt	icons/mkicon.py	/^def memoisedsqrt(x):$/;"	f
menu	unix/gtkdlg.c	/^    GtkWidget *menu;	      \/* for optionmenu (==droplist) *\/$/;"	m	struct:uctrl	file:
menu	unix/gtkwin.c	/^    GtkWidget *menu, *specialsmenu, *specialsitem1, *specialsitem2,$/;"	m	struct:gui_data	file:
menu	windows/window.c	/^    HMENU menu;$/;"	m	struct:__anon134	file:
menubar	unix/gtkwin.c	/^    GtkWidget *area, *menubar;$/;"	m	struct:find_app_menu_bar_ctx	file:
menuitem_activate	unix/gtkdlg.c	/^static void menuitem_activate(GtkMenuItem *item, gpointer data)$/;"	f	file:
message_box	windows/winutils.c	/^int message_box(LPCTSTR text, LPCTSTR caption, DWORD style, DWORD helpctxid)$/;"	f
message_box_help_callback	windows/winutils.c	/^static VOID CALLBACK message_box_help_callback(LPHELPINFO lpHelpInfo)$/;"	f	file:
messagebox	unix/gtkdlg.c	/^int messagebox(GtkWidget *parentwin, const char *title, const char *msg,$/;"	f
messagebox_handler	unix/gtkdlg.c	/^static void messagebox_handler(union control *ctrl, void *dlg,$/;"	f	file:
meta_mod_mask	unix/gtkwin.c	/^    int meta_mod_mask;$/;"	m	struct:gui_data	file:
mfval	mkfiles.pl	/^sub mfval($) {$/;"	s
midsession	config.c	/^    int midsession;$/;"	m	struct:sessionsaver_data	file:
mimeencs	charset/mimeenc.c	/^} mimeencs[] = {$/;"	v	typeref:struct:__anon5	file:
min	misc.h	153;"	d
min	sshzlib.c	/^    int min, max;$/;"	m	struct:__anon102	file:
min_stat	sshgssc.h	/^    OM_uint32 min_stat;$/;"	m	struct:gssapi_ssh_gss_ctx
min_stat	windows/wingss.c	/^    unsigned long min_stat;$/;"	m	struct:winSsh_gss_ctx	file:
minefield_admin	windows/winmisc.c	/^static unsigned short *minefield_admin = NULL;$/;"	v	file:
minefield_admin_hide	windows/winmisc.c	/^static void minefield_admin_hide(int hide)$/;"	f	file:
minefield_alloc	windows/winmisc.c	/^static void *minefield_alloc(int size)$/;"	f	file:
minefield_bomb	windows/winmisc.c	/^static void minefield_bomb(void)$/;"	f	file:
minefield_c_free	windows/winmisc.c	/^void minefield_c_free(void *p)$/;"	f
minefield_c_malloc	windows/winmisc.c	/^void *minefield_c_malloc(size_t size)$/;"	f
minefield_c_realloc	windows/winmisc.c	/^void *minefield_c_realloc(void *p, size_t size)$/;"	f
minefield_curpos	windows/winmisc.c	/^static long minefield_curpos = 0;$/;"	v	file:
minefield_free	windows/winmisc.c	/^static void minefield_free(void *ptr)$/;"	f	file:
minefield_get_size	windows/winmisc.c	/^static int minefield_get_size(void *ptr)$/;"	f	file:
minefield_init	windows/winmisc.c	/^static void minefield_init(void)$/;"	f	file:
minefield_initialised	windows/winmisc.c	/^static int minefield_initialised = 0;$/;"	v	file:
minefield_npages	windows/winmisc.c	/^static long minefield_npages = 0;$/;"	v	file:
minefield_pages	windows/winmisc.c	/^static void *minefield_pages = NULL;$/;"	v	file:
minefield_region	windows/winmisc.c	/^static void *minefield_region = NULL;$/;"	v	file:
minefield_size	windows/winmisc.c	/^static long minefield_size = 0;$/;"	v	file:
mirrorbytes	sshzlib.c	/^static const unsigned char mirrorbytes[256] = {$/;"	v	file:
mk_wcswidth	wcwidth.c	/^int mk_wcswidth(const unsigned int *pwcs, size_t n)$/;"	f
mk_wcswidth_cjk	wcwidth.c	/^int mk_wcswidth_cjk(const unsigned int *pwcs, size_t n)$/;"	f
mk_wcwidth	wcwidth.c	/^int mk_wcwidth(unsigned int ucs)$/;"	f
mk_wcwidth_cjk	wcwidth.c	/^int mk_wcwidth_cjk(unsigned int ucs)$/;"	f
mkdir_p	Makefile	/^mkdir_p = $(MKDIR_P)$/;"	m
mkinstalldirs	Makefile	/^mkinstalldirs = $(install_sh) -d$/;"	m
mkstr	sftp.c	/^static char *mkstr(char *s, int len)$/;"	f	file:
mlog	misc.c	/^void mlog(char *file, int line)$/;"	f
mlog_file	misc.c	/^static char *mlog_file = NULL;$/;"	v	file:
mlog_line	misc.c	/^static int mlog_line = 0;$/;"	v	file:
modal_about_box	windows/windlg.c	/^void modal_about_box(HWND hwnd)$/;"	f
modalfatalbox	cmdgen.c	/^void modalfatalbox(const char *p, ...)$/;"	f
modalfatalbox	fuzzterm.c	/^void modalfatalbox(const char *fmt, ...) { exit(0); }$/;"	f
modalfatalbox	misc.c	/^void modalfatalbox(const char *fmt, ...) {}$/;"	f
modalfatalbox	pscp.c	/^void modalfatalbox(const char *fmt, ...)$/;"	f
modalfatalbox	psftp.c	/^void modalfatalbox(const char *fmt, ...)$/;"	f
modalfatalbox	testbn.c	/^void modalfatalbox(const char *p, ...)$/;"	f
modalfatalbox	unix/gtkask.c	/^void modalfatalbox(const char *p, ...)$/;"	f
modalfatalbox	unix/gtkwin.c	/^void modalfatalbox(const char *p, ...)$/;"	f
modalfatalbox	unix/uxpgnt.c	/^void modalfatalbox(const char *p, ...)$/;"	f
modalfatalbox	unix/uxplink.c	/^void modalfatalbox(const char *p, ...)$/;"	f
modalfatalbox	windows/window.c	/^void modalfatalbox(const char *fmt, ...)$/;"	f
modalfatalbox	windows/winpgen.c	/^void modalfatalbox(const char *fmt, ...)$/;"	f
modalfatalbox	windows/winpgnt.c	/^void modalfatalbox(const char *fmt, ...)$/;"	f
modalfatalbox	windows/winplink.c	/^void modalfatalbox(const char *p, ...)$/;"	f
mode	ssh.c	/^    const char* const mode;$/;"	m	struct:ssh_ttymode	file:
modinv	sshbn.c	/^Bignum modinv(Bignum number, Bignum modulus)$/;"	f
modmul	sshbn.c	/^Bignum modmul(Bignum p, Bignum q, Bignum mod)$/;"	f
modpow	sshbn.c	/^Bignum modpow(Bignum base_in, Bignum exp, Bignum mod)$/;"	f
modpow_simple	sshbn.c	/^Bignum modpow_simple(Bignum base_in, Bignum exp, Bignum mod)$/;"	f
modsub	sshbn.c	/^Bignum modsub(const Bignum a, const Bignum b, const Bignum n)$/;"	f
modulus	ssh.h	/^    Bignum modulus;$/;"	m	struct:RSAKey
modulus	ssh.h	/^    unsigned char *modulus;$/;"	m	struct:RSAKey
modulus	testdata/bignum.py	/^        modulus = modulus - 1$/;"	v
modulus	testdata/bignum.py	/^    modulus = sqrt(1<<(2*i-1)) | 1$/;"	v
monitor	icons/mkicon.py	/^def monitor(size):$/;"	f
monty_reduce	sshbn.c	/^static void monty_reduce(BignumInt *x, const BignumInt *n,$/;"	f	file:
moribund	windows/winhandl.c	/^    int moribund;		       \/* are we going to kill this soon? *\/$/;"	m	struct:handle_foreign	file:
moribund	windows/winhandl.c	/^    int moribund;		       \/* are we going to kill this soon? *\/$/;"	m	struct:handle_generic	file:
moribund	windows/winhandl.c	/^    int moribund;		       \/* are we going to kill this soon? *\/$/;"	m	struct:handle_input	file:
moribund	windows/winhandl.c	/^    int moribund;		       \/* are we going to kill this soon? *\/$/;"	m	struct:handle_output	file:
motion_event	unix/gtkwin.c	/^gint motion_event(GtkWidget *widget, GdkEventMotion *event, gpointer data)$/;"	f
mouse_is_down	terminal.h	/^    int mouse_is_down;		       \/* used while tracking mouse buttons *\/$/;"	m	struct:terminal_tag
mouse_override	terminal.h	/^    int mouse_override;$/;"	m	struct:terminal_tag
mouseptr_visible	unix/gtkwin.c	/^    int mouseptr_visible;$/;"	m	struct:gui_data	file:
move	cmdgen.c	/^static int move(char *from, char *to)$/;"	f	file:
move	terminal.c	/^static void move(Terminal *term, int x, int y, int marg_clip)$/;"	f	file:
move_termchar	terminal.c	/^static void move_termchar(termline *line, termchar *dest, termchar *src)$/;"	f	file:
move_window	fuzzterm.c	/^void move_window(void *frontend, int x, int y) { }$/;"	f
move_window	unix/gtkwin.c	/^void move_window(void *frontend, int x, int y)$/;"	f
move_window	windows/window.c	/^void move_window(void *frontend, int x, int y)$/;"	f
mpint	contrib/encodelib.py	/^def mpint(m):$/;"	f
mpint_pos	import.c	/^struct mpint_pos { void *start; int bytes; };$/;"	s	file:
msg1	ssh.c	/^    int msg1, msg2;$/;"	m	struct:queued_handler	file:
msg2	ssh.c	/^    int msg1, msg2;$/;"	m	struct:queued_handler	file:
msghead	sshshare.c	/^    struct share_xchannel_message *msghead, *msgtail;$/;"	m	struct:share_xchannel	typeref:struct:share_xchannel::share_xchannel_message	file:
msgtail	sshshare.c	/^    struct share_xchannel_message *msghead, *msgtail;$/;"	m	struct:share_xchannel	typeref:struct:share_xchannel::	file:
mtime	pscp.c	/^    unsigned long atime, mtime;	       \/* access times for the file *\/$/;"	m	struct:scp_sink_action	file:
mtime	sftp.h	/^    unsigned long mtime;$/;"	m	struct:fxp_attrs
mul_compute_scratch	sshbn.c	/^static int mul_compute_scratch(int len)$/;"	f	file:
muladd	contrib/make1305.py	/^    def muladd(self, m1, m2, *addends):$/;"	m	class:CodegenTarget
mulby2	sshaes.c	39;"	d	file:
mult	windows/winpgen.c	/^	unsigned mult;		       \/* if linear *\/$/;"	m	struct:progress::__anon138	file:
multifont	unix/gtkfont.c	/^struct multifont {$/;"	s	file:
multifont_create	unix/gtkfont.c	/^unifont *multifont_create(GtkWidget *widget, const char *name,$/;"	f
multifont_destroy	unix/gtkfont.c	/^static void multifont_destroy(unifont *font)$/;"	f	file:
multifont_draw_combining	unix/gtkfont.c	/^static void multifont_draw_combining(unifont_drawctx *ctx, unifont *font,$/;"	f	file:
multifont_draw_main	unix/gtkfont.c	/^static void multifont_draw_main(unifont_drawctx *ctx, unifont *font, int x,$/;"	f	file:
multifont_draw_text	unix/gtkfont.c	/^static void multifont_draw_text(unifont_drawctx *ctx, unifont *font, int x,$/;"	f	file:
multifont_size_increment	unix/gtkfont.c	/^static char *multifont_size_increment(unifont *font, int increment)$/;"	f	file:
multifont_vtable	unix/gtkfont.c	/^static const struct unifont_vtable multifont_vtable = {$/;"	v	typeref:struct:unifont_vtable	file:
multisel	dialog.h	/^	int multisel;$/;"	m	struct:control::__anon25
mungestr	unix/uxstore.c	/^static char *mungestr(const char *in)$/;"	f	file:
mungestr	windows/winstore.c	/^static void mungestr(const char *in, char *out)$/;"	f	file:
mycmp	tree234.c	/^int mycmp(void *av, void *bv)$/;"	f
n	ssh.h	/^    Bignum a, b, n;$/;"	m	struct:ec_wcurve
n	sshcrcda.c	/^    uint32 n;$/;"	m	struct:crcda_ctx	file:
n	testdata/bignum.py	/^                    n = nbase - (nbase % d) + modulus$/;"	v
n	windows/winpgen.c	/^	unsigned param, current, n;    \/* if exponential *\/$/;"	m	struct:progress::__anon138	file:
n_cfg_icon	unix/xpmptcfg.c	/^const int n_cfg_icon = 3;$/;"	v
n_cfg_icon	unix/xpmpucfg.c	/^const int n_cfg_icon = 3;$/;"	v
n_ec_nist_curve_lengths	sshecc.c	/^const int n_ec_nist_curve_lengths = lenof(ec_nist_curve_lengths);$/;"	v
n_filter_buttons	unix/gtkfont.c	/^    int n_filter_buttons;$/;"	m	struct:unifontsel_internal	file:
n_local_interfaces	windows/winnet.c	/^static int n_local_interfaces;       \/* 0=not yet, -1=failed, >0=number *\/$/;"	v	file:
n_main_icon	unix/xpmpterm.c	/^const int n_main_icon = 3;$/;"	v
n_main_icon	unix/xpmputty.c	/^const int n_main_icon = 3;$/;"	v
n_prompts	putty.h	/^    size_t n_prompts;   \/* May be zero (in which case display the foregoing,$/;"	m	struct:__anon67
n_specials	windows/window.c	/^static int n_specials = 0;$/;"	v	file:
n_uncert_hostkeys	ssh.c	/^    int n_uncert_hostkeys;$/;"	m	struct:ssh_tag	file:
naddresses	unix/uxnet.c	/^    int naddresses;$/;"	m	struct:SockAddr_tag	file:
naddresses	windows/winnet.c	/^    int naddresses;$/;"	m	struct:SockAddr_tag	file:
nak	contrib/cygtermd/telnet.c	/^    int ack, nak;		       \/* +ve and -ve acknowledgements *\/$/;"	m	struct:Opt	file:
nak	telnet.c	/^    int ack, nak;		       \/* +ve and -ve acknowledgements *\/$/;"	m	struct:Opt	file:
name	charset/localenc.c	/^    const char *name;$/;"	m	struct:__anon6	file:
name	charset/mimeenc.c	/^    const char *name;$/;"	m	struct:__anon5	file:
name	charset/xenc.c	/^    const char *name;$/;"	m	struct:__anon1	file:
name	pscp.c	/^    char *name;			       \/* filename or dirname (not ENDDIR) *\/$/;"	m	struct:scp_sink_action	file:
name	psftp.c	/^    const char *name;$/;"	m	struct:sftp_cmd_lookup	file:
name	putty.h	/^    char *name;		\/* Short description, perhaps for dialog box title *\/$/;"	m	struct:__anon67
name	putty.h	/^    const char *name;$/;"	m	struct:backend_tag
name	putty.h	/^    const char *name;$/;"	m	struct:telnet_special
name	ssh.c	/^    const char *name;$/;"	m	struct:kexinit_algorithm	file:
name	ssh.h	/^    const char *name, *etm_name;$/;"	m	struct:ssh_mac
name	ssh.h	/^    const char *name, *groupname;$/;"	m	struct:ssh_kex
name	ssh.h	/^    const char *name, *textname;$/;"	m	struct:ec_curve
name	ssh.h	/^    const char *name;$/;"	m	struct:ssh2_cipher
name	ssh.h	/^    const char *name;$/;"	m	struct:ssh_compress
name	ssh.h	/^    const char *name;$/;"	m	struct:ssh_signkey
name	unix/unix.h	/^    char *name;    \/* may be "" to indicate no selected font at all *\/$/;"	m	struct:FontSpec
name	unix/uxpty.c	/^    char name[FILENAME_MAX];$/;"	m	struct:pty_tag	file:
name	unix/uxsftp.c	/^    char *name;$/;"	m	struct:WFile	file:
name	windows/winsftp.c	/^    char *name;$/;"	m	struct:DirHandle	file:
name	windows/winsftp.c	/^    char *name;$/;"	m	struct:WildcardMatcher	file:
name	windows/winstuff.h	/^    char *name;$/;"	m	struct:FontSpec
name	windows/winucs.c	/^    char *name;$/;"	m	struct:cp_list_item	file:
name_list	contrib/encodelib.py	/^def name_list(ns):$/;"	f
name_lookup	proxy.c	/^SockAddr name_lookup(const char *host, int port, char **canonicalname,$/;"	f
name_reqd	putty.h	/^    int name_reqd;	\/* Display of `name' required or optional? *\/$/;"	m	struct:__anon67
named_pipe_accept	windows/winnps.c	/^static Socket named_pipe_accept(accept_ctx_t ctx, Plug plug)$/;"	f	file:
named_pipe_accept_loop	windows/winnps.c	/^static void named_pipe_accept_loop(Named_Pipe_Server_Socket ps,$/;"	f	file:
named_pipe_connect_callback	windows/winnps.c	/^static void named_pipe_connect_callback(void *vps)$/;"	f	file:
namedpipe	windows/winnet.c	/^    int namedpipe; \/* indicates that this SockAddr is phony, holding a Windows$/;"	m	struct:SockAddr_tag	file:
namedtuple	contrib/make1305.py	/^from collections import namedtuple$/;"	i
namelen	pscp.c	/^    int namepos, namelen;$/;"	m	struct:scp_sftp_dirstack	file:
namepos	pscp.c	/^    int namepos, namelen;$/;"	m	struct:scp_sftp_dirstack	file:
namepos	psftp.c	/^    int namepos;$/;"	m	struct:SftpWildcardMatcher	file:
names	pscp.c	/^    struct fxp_name *names;$/;"	m	struct:scp_sftp_dirstack	typeref:struct:scp_sftp_dirstack::fxp_name	file:
names	psftp.c	/^    struct fxp_names *names;$/;"	m	struct:SftpWildcardMatcher	typeref:struct:SftpWildcardMatcher::fxp_names	file:
names	sftp.h	/^    struct fxp_name *names;$/;"	m	struct:fxp_names	typeref:struct:fxp_names::fxp_name
nbase	testdata/bignum.py	/^                nbase = sqrt(3<<(2*nsize)) + (nprefix<<nsize)$/;"	v
nbeeps	terminal.h	/^    int nbeeps;$/;"	m	struct:terminal_tag
nbits	sshzlib.c	/^    int nbits;$/;"	m	struct:zlib_decompress_ctx	file:
nbits	sshzlib.c	/^    unsigned char nbits;$/;"	m	struct:zlib_tableentry	file:
nbuttons	dialog.h	/^	int nbuttons;$/;"	m	struct:control::__anon22
nbuttons	unix/gtkdlg.c	/^    GtkWidget **buttons; int nbuttons; \/* for radio buttons *\/$/;"	m	struct:uctrl	file:
nciphers	ssh.h	/^    int nciphers;$/;"	m	struct:ssh2_ciphers
nclicks	unix/gtkdlg.c	/^    int nclicks;$/;"	m	struct:uctrl	file:
ncmode	ssh.c	/^    int ncmode;			       \/* is primary channel direct-tcpip? *\/$/;"	m	struct:ssh_tag	file:
ncols	dialog.h	/^	int ncols;		       \/* number of columns *\/$/;"	m	struct:control::__anon25
ncols	dialog.h	/^	int ncols;		       \/* number of columns *\/$/;"	m	struct:control::__anon27
ncols	unix/gtkcols.h	/^    gint ncols;$/;"	m	struct:ColumnsChild_tag
ncolumns	dialog.h	/^	int ncolumns;$/;"	m	struct:control::__anon22
ncolumns	dialog.h	/^    int ncolumns;		       \/* current no. of columns at bottom *\/$/;"	m	struct:controlset
ncontrols	dialog.h	/^    int ncontrols;		       \/* number of `union control' in array *\/$/;"	m	struct:controlset
nctrlsets	dialog.h	/^    int nctrlsets;		       \/* number of ctrlsets *\/$/;"	m	struct:controlbox
nctrltrees	windows/winstuff.h	/^    int nctrltrees;$/;"	m	struct:dlgparam
negotiate	proxy.h	/^    int (*negotiate) (Proxy_Socket \/* this *\/, int \/* change type *\/);$/;"	m	struct:Socket_proxy_tag
negsize	unix/gtkdlg.c	/^    int nevents, negsize;$/;"	m	struct:eventlog_stuff	file:
negsize	windows/windlg.c	/^static int nevents = 0, negsize = 0;$/;"	v	file:
nenvvars	contrib/cygtermd/telnet.h	/^    int nenvvars;$/;"	m	struct:shell_data
nerrs	unix/x11misc.c	/^int nerrs, errsize;$/;"	v
net	contrib/cygtermd/telnet.c	/^    sel_wfd *net, *pty;$/;"	m	struct:telnet_tag	file:
net_readdata	contrib/cygtermd/main.c	/^void net_readdata(sel_rfd *rfd, void *data, size_t len)$/;"	f
net_readerr	contrib/cygtermd/main.c	/^void net_readerr(sel_rfd *rfd, int error)$/;"	f
net_select_result	unix/uxnet.c	/^static void net_select_result(int fd, int event)$/;"	f	file:
net_service_lookup	unix/uxnet.c	/^int net_service_lookup(char *service)$/;"	f
net_service_lookup	windows/winnet.c	/^int net_service_lookup(char *service)$/;"	f
net_writeerr	contrib/cygtermd/main.c	/^void net_writeerr(sel_wfd *wfd, int error)$/;"	f
net_written	contrib/cygtermd/main.c	/^void net_written(sel_wfd *wfd, size_t bufsize)$/;"	f
netevent	windows/winplink.c	/^WSAEVENT netevent;$/;"	v
netevent	windows/winsftp.c	/^static HANDLE netevent = INVALID_HANDLE_VALUE;$/;"	v	file:
nethack_keypad	terminal.h	/^    int nethack_keypad;$/;"	m	struct:terminal_tag
netr	contrib/cygtermd/main.c	/^sel_rfd *netr, *ptyr, *sigr;$/;"	v
netw	contrib/cygtermd/main.c	/^sel_wfd *netw, *ptyw;$/;"	v
networksid	windows/winsecur.c	/^static PSID worldsid, networksid, usersid;$/;"	v	file:
nevents	unix/gtkdlg.c	/^    int nevents, negsize;$/;"	m	struct:eventlog_stuff	file:
nevents	windows/windlg.c	/^static int nevents = 0, negsize = 0;$/;"	v	file:
new_app_win	unix/gtkapp.c	/^void new_app_win(GtkApplication *app)$/;"	f
new_connection	proxy.c	/^Socket new_connection(SockAddr addr, const char *hostname,$/;"	f
new_environ_done	contrib/cygtermd/telnet.c	/^    int old_environ_done, new_environ_done, ttype_done;$/;"	m	struct:telnet_tag	file:
new_error_socket	errsock.c	/^Socket new_error_socket(const char *errmsg, Plug plug)$/;"	f
new_listener	proxy.c	/^Socket new_listener(const char *srcaddr, int port, Plug plug,$/;"	f
new_named_pipe_client	windows/winnpc.c	/^Socket new_named_pipe_client(const char *pipename, Plug plug)$/;"	f
new_named_pipe_listener	windows/winnps.c	/^Socket new_named_pipe_listener(const char *pipename, Plug plug)$/;"	f
new_node	unix/osxlaunch.c	/^struct node *new_node(struct node *prev_head, const char *string, int len)$/;"	f
new_portfwd_state	portfwd.c	/^static struct PortForwarding *new_portfwd_state(void)$/;"	f	file:
new_portlistener_state	portfwd.c	/^static struct PortListener *new_portlistener_state(void)$/;"	f	file:
new_prompts	misc.c	/^prompts_t *new_prompts(void *frontend)$/;"	f
new_pty_struct	unix/uxpty.c	/^static Pty new_pty_struct(void)$/;"	f	file:
new_session	unix/uxpterm.c	/^const int new_session = 0, saved_sessions = 0;   \/* or these *\/$/;"	v
new_session	unix/uxputty.c	/^const int use_event_log = 1, new_session = 1, saved_sessions = 1;$/;"	v
new_session_menuitem	unix/gtkwin.c	/^void new_session_menuitem(GtkMenuItem *item, gpointer data)$/;"	f
new_session_window	unix/gtkwin.c	/^struct gui_data *new_session_window(Conf *conf, const char *geometry_string)$/;"	f
new_sock_channel	ssh.c	/^void *new_sock_channel(void *handle, struct PortForwarding *pf)$/;"	f
new_unix_listener	unix/uxnet.c	/^Socket new_unix_listener(SockAddr listenaddr, Plug plug)$/;"	f
new_value	contrib/make1305.py	/^    def new_value(self, formatstr=None, *deps):$/;"	m	class:CodegenTarget
newbn	sshbn.c	/^static Bignum newbn(int length)$/;"	f	file:
newkey	ssh.h	/^    void *(*newkey) (const struct ssh_signkey *self,$/;"	m	struct:ssh_signkey
newline	terminal.c	/^static termline *newline(Terminal *term, int cols, int bce)$/;"	f	file:
newtree234	tree234.c	/^tree234 *newtree234(cmpfn234 cmp)$/;"	f
newwin_cb	unix/gtkapp.c	/^static void newwin_cb(GSimpleAction *action,$/;"	f	file:
next	callback.c	/^    struct callback *next;$/;"	m	struct:callback	typeref:struct:callback::callback	file:
next	contrib/cygtermd/sel.c	/^    sel_rfd *prev, *next;$/;"	m	struct:sel_rfd	file:
next	contrib/cygtermd/sel.c	/^    sel_wfd *prev, *next;$/;"	m	struct:sel_wfd	file:
next	contrib/cygtermd/sel.c	/^    struct bufchain_granule *next;$/;"	m	struct:bufchain_granule	typeref:struct:bufchain_granule::bufchain_granule	file:
next	misc.c	/^    struct bufchain_granule *next;$/;"	m	struct:bufchain_granule	typeref:struct:bufchain_granule::bufchain_granule	file:
next	pinger.c	/^    unsigned long when_set, next;$/;"	m	struct:pinger_tag	file:
next	pscp.c	/^    struct scp_sftp_dirstack *next;$/;"	m	struct:scp_sftp_dirstack	typeref:struct:scp_sftp_dirstack::scp_sftp_dirstack	file:
next	sftp.c	/^    struct req *next, *prev;$/;"	m	struct:req	typeref:struct:req::req	file:
next	ssh.c	/^    struct outstanding_channel_request *next;$/;"	m	struct:outstanding_channel_request	typeref:struct:outstanding_channel_request::outstanding_channel_request	file:
next	ssh.c	/^    struct queued_handler *next;$/;"	m	struct:queued_handler	typeref:struct:queued_handler::queued_handler	file:
next	sshshare.c	/^    struct share_globreq *next;$/;"	m	struct:share_globreq	typeref:struct:share_globreq::share_globreq	file:
next	sshshare.c	/^    struct share_xchannel_message *next;$/;"	m	struct:share_xchannel_message	typeref:struct:share_xchannel_message::share_xchannel_message	file:
next	sshzlib.c	/^    short next, prev;		       \/* array indices within the window *\/$/;"	m	struct:WindowEntry	file:
next	terminal.h	/^    struct beeptime *next;$/;"	m	struct:beeptime	typeref:struct:beeptime::beeptime
next	terminal.h	/^    struct scrollregion *next;$/;"	m	struct:scrollregion	typeref:struct:scrollregion::scrollregion
next	unix/osxlaunch.c	/^    struct node *next;$/;"	m	struct:node	typeref:struct:node::node	file:
next	unix/uxpgnt.c	/^    struct cmdline_key_action *next;$/;"	m	struct:cmdline_key_action	typeref:struct:cmdline_key_action::cmdline_key_action	file:
next_bucket	unix/osxlaunch.c	/^    struct bucket *next_bucket;$/;"	m	struct:bucket	typeref:struct:bucket::bucket	file:
next_cblink	terminal.h	/^    long next_tblink, next_cblink;$/;"	m	struct:terminal_tag
next_fd	unix/uxsel.c	/^int next_fd(int *state, int *rwx)$/;"	f
next_flash	windows/window.c	/^static long next_flash;$/;"	v	file:
next_noise_collection	sshrand.c	/^long next_noise_collection;$/;"	v
next_rekey	ssh.c	/^    unsigned long next_rekey, last_rekey;$/;"	m	struct:ssh_tag	file:
next_socket	windows/winnet.c	/^SOCKET next_socket(int *state)$/;"	f
next_tblink	terminal.h	/^    long next_tblink, next_cblink;$/;"	m	struct:terminal_tag
next_update	terminal.h	/^    long next_update;$/;"	m	struct:terminal_tag
nextid	sshshare.c	/^    unsigned nextid;                 \/* preferred id for next connstate *\/$/;"	m	struct:ssh_sharing_state	file:
nexttable	sshzlib.c	/^    struct zlib_table *nexttable;$/;"	m	struct:zlib_tableentry	typeref:struct:zlib_tableentry::zlib_table	file:
nfound	unix/uxpgnt.c	/^    int nfound;$/;"	m	struct:key_find_ctx	file:
nfrees	dialog.h	/^    int nfrees;$/;"	m	struct:controlbox
nglyphs	unix/gtkfont.c	/^    int nglyphs;$/;"	m	struct:x11font_individual	file:
ngsslibs	fuzzterm.c	/^const int ngsslibs = 0;$/;"	v
ngsslibs	nogss.c	/^const int ngsslibs = 0;$/;"	v
ngsslibs	unix/uxgss.c	/^const int ngsslibs = 1;$/;"	v
ngsslibs	unix/uxgss.c	/^const int ngsslibs = 4;$/;"	v
ngsslibs	windows/wingss.c	/^const int ngsslibs = 3;$/;"	v
ngtkargs	unix/gtkmain.c	/^static int ngtkargs;$/;"	v	file:
nistp256_oid	sshecc.c	/^static const unsigned char nistp256_oid[] = {$/;"	v	file:
nistp384_oid	sshecc.c	/^static const unsigned char nistp384_oid[] = {$/;"	v	file:
nistp521_oid	sshecc.c	/^static const unsigned char nistp521_oid[] = {$/;"	v	file:
nkexes	ssh.h	/^    int nkexes;$/;"	m	struct:ssh_kexes
nkeys	import.c	/^    int nkeys, key_wanted;$/;"	m	struct:openssh_new_key	file:
nlibraries	sshgss.h	/^    int nlibraries;$/;"	m	struct:ssh_gss_liblist
nnames	sftp.h	/^    int nnames;$/;"	m	struct:fxp_names
no_alt_screen	terminal.h	/^    int no_alt_screen;$/;"	m	struct:terminal_tag
no_applic_c	terminal.h	/^    int no_applic_c;$/;"	m	struct:terminal_tag
no_applic_k	terminal.h	/^    int no_applic_k;$/;"	m	struct:terminal_tag
no_data_sent_to_x_client	x11fwd.c	/^    int no_data_sent_to_x_client;$/;"	m	struct:X11Connection	file:
no_dbackspace	terminal.h	/^    int no_dbackspace;$/;"	m	struct:terminal_tag
no_mouse_rep	terminal.h	/^    int no_mouse_rep;$/;"	m	struct:terminal_tag
no_nonblock	unix/uxmisc.c	/^int no_nonblock(int fd) {$/;"	f
no_progress	cmdgen.c	/^static void no_progress(void *param, int action, int phase, int iprogress)$/;"	f	file:
no_remote_charset	terminal.h	/^    int no_remote_charset;$/;"	m	struct:terminal_tag
no_remote_clearscroll	terminal.h	/^    int no_remote_clearscroll;$/;"	m	struct:terminal_tag
no_remote_resize	terminal.h	/^    int no_remote_resize;$/;"	m	struct:terminal_tag
no_remote_wintitle	terminal.h	/^    int no_remote_wintitle;$/;"	m	struct:terminal_tag
node	unix/osxlaunch.c	/^struct node {$/;"	s	file:
node234	tree234.c	/^typedef struct node234_Tag node234;$/;"	t	typeref:struct:node234_Tag	file:
node234_Tag	tree234.c	/^struct node234_Tag {$/;"	s	file:
nodelay	unix/uxnet.c	/^    int nodelay, keepalive;            \/* for connect()-type sockets *\/$/;"	m	struct:Socket_tag	file:
nodelay	windows/winnet.c	/^    int oobinline, nodelay, keepalive, privport;$/;"	m	struct:Socket_tag	file:
noinst_LIBRARIES	Makefile	/^noinst_LIBRARIES = libversion.a$/;"	m
noinst_PROGRAMS	Makefile	/^noinst_PROGRAMS = cgtest$(EXEEXT) fuzzterm$(EXEEXT) \\$/;"	m
noise_consumer_t	storage.h	/^typedef void (*noise_consumer_t) (void *data, int len);$/;"	t
noise_get_heavy	unix/uxnoise.c	/^void noise_get_heavy(void (*func) (void *, int))$/;"	f
noise_get_heavy	windows/winnoise.c	/^void noise_get_heavy(void (*func) (void *, int))$/;"	f
noise_get_light	unix/uxnoise.c	/^void noise_get_light(void (*func) (void *, int))$/;"	f
noise_get_light	windows/winnoise.c	/^void noise_get_light(void (*func) (void *, int))$/;"	f
noise_regular	unix/uxnoise.c	/^void noise_regular(void)$/;"	f
noise_regular	windows/winnoise.c	/^void noise_regular(void)$/;"	f
noise_ultralight	be_nos_s.c	/^void noise_ultralight(unsigned long data)$/;"	f
noise_ultralight	be_nossh.c	/^void noise_ultralight(unsigned long data)$/;"	f
noise_ultralight	unix/uxnoise.c	/^void noise_ultralight(unsigned long data)$/;"	f
noise_ultralight	unix/uxpgnt.c	/^void noise_ultralight(unsigned long data) {}$/;"	f
noise_ultralight	windows/winnoise.c	/^void noise_ultralight(unsigned long data)$/;"	f
nokey_ids	windows/winpgen.c	/^static const int nokey_ids[] = { IDC_NOKEY, 0 };$/;"	v	file:
nonblock	unix/uxmisc.c	/^int nonblock(int fd) {$/;"	f
nonce	sshccp.c	/^    unsigned char nonce[16];$/;"	m	struct:poly1305	file:
noncloexec	unix/uxmisc.c	/^void noncloexec(int fd) {$/;"	f
nonfatal	cmdgen.c	/^void nonfatal(const char *p, ...)$/;"	f
nonfatal	fuzzterm.c	/^void nonfatal(const char *fmt, ...) { }$/;"	f
nonfatal	pscp.c	/^void nonfatal(const char *fmt, ...)$/;"	f
nonfatal	psftp.c	/^void nonfatal(const char *fmt, ...)$/;"	f
nonfatal	unix/gtkdlg.c	/^void nonfatal(const char *p, ...)$/;"	f
nonfatal	unix/uxpgnt.c	/^void nonfatal(const char *p, ...)$/;"	f
nonfatal	unix/uxplink.c	/^void nonfatal(const char *p, ...)$/;"	f
nonfatal	windows/window.c	/^void nonfatal(const char *fmt, ...)$/;"	f
nonfatal	windows/winpgen.c	/^void nonfatal(const char *fmt, ...)$/;"	f
nonfatal	windows/winplink.c	/^void nonfatal(const char *p, ...)$/;"	f
nonfatal_message_box	unix/gtkdlg.c	/^void nonfatal_message_box(void *window, const char *msg)$/;"	f
not	sshsh512.c	28;"	d	file:
not_connected	psftp.c	/^static void not_connected(void)$/;"	f	file:
notify_frontend	callback.c	/^toplevel_callback_notify_fn_t notify_frontend = NULL;$/;"	v
notify_remote_exit	unix/gtkwin.c	/^void notify_remote_exit(void *frontend)$/;"	f
notify_remote_exit	unix/uxcons.c	/^void notify_remote_exit(void *frontend)$/;"	f
notify_remote_exit	windows/wincons.c	/^void notify_remote_exit(void *frontend)$/;"	f
notify_remote_exit	windows/window.c	/^void notify_remote_exit(void *fe)$/;"	f
notify_toplevel_callback	unix/gtkcomm.c	/^static void notify_toplevel_callback(void *frontend)$/;"	f	file:
noutbits	sshzlib.c	/^    int noutbits;$/;"	m	struct:Outbuf	file:
now	timing.c	/^    unsigned long now;$/;"	m	struct:timer	file:
now	timing.c	/^static unsigned long now = 0L;$/;"	v	file:
npending	sshzlib.c	/^    int npending;$/;"	m	struct:LZ77InternalContext	file:
nphases	windows/winpgen.c	/^    int nphases;$/;"	m	struct:progress	file:
nprinters	windows/winprint.c	/^    int nprinters;$/;"	m	struct:printer_enum_tag	file:
nprompts	cmdgen.c	/^int nprompts, promptsgot;$/;"	v
nsaved	cmdline.c	/^    int nsaved, savesize;$/;"	m	struct:cmdline_saved_param_set	file:
nselparams	unix/gtkdlg.c	/^    int nselparams;$/;"	m	struct:dlgparam	file:
nsend	contrib/cygtermd/telnet.c	/^    int nsend;			       \/* -ve send if requested to stop it *\/$/;"	m	struct:Opt	file:
nsend	telnet.c	/^    int nsend;			       \/* -ve send if requested to stop it *\/$/;"	m	struct:Opt	file:
nsessions	putty.h	/^    int nsessions;$/;"	m	struct:sesslist
ntreeitems	unix/gtkdlg.c	/^    int ntreeitems;$/;"	m	struct:dlgparam	file:
null_backend	testback.c	/^Backend null_backend = {$/;"	v
null_cfg_info	testback.c	/^static int null_cfg_info(void *handle)$/;"	f	file:
null_connected	testback.c	/^static int null_connected(void *handle) {$/;"	f	file:
null_exitcode	testback.c	/^static int null_exitcode(void *handle) {$/;"	f	file:
null_free	testback.c	/^static void null_free(void *handle)$/;"	f	file:
null_get_specials	testback.c	/^static const struct telnet_special *null_get_specials (void *handle) {$/;"	f	file:
null_init	testback.c	/^static const char *null_init(void *frontend_handle, void **backend_handle,$/;"	f	file:
null_ldisc	testback.c	/^static int null_ldisc(void *handle, int option) {$/;"	f	file:
null_provide_ldisc	testback.c	/^static void null_provide_ldisc (void *handle, void *ldisc) {$/;"	f	file:
null_provide_logctx	testback.c	/^static void null_provide_logctx(void *handle, void *logctx) {$/;"	f	file:
null_reconfig	testback.c	/^static void null_reconfig(void *handle, Conf *conf) {$/;"	f	file:
null_send	testback.c	/^static int null_send(void *handle, char *buf, int len) {$/;"	f	file:
null_sendbuffer	testback.c	/^static int null_sendbuffer(void *handle) {$/;"	f	file:
null_sendok	testback.c	/^static int null_sendok(void *handle) {$/;"	f	file:
null_size	testback.c	/^static void null_size(void *handle, int width, int height) {$/;"	f	file:
null_special	testback.c	/^static void null_special(void *handle, Telnet_Special code) {$/;"	f	file:
null_unthrottle	testback.c	/^static void null_unthrottle(void *handle, int backlog) {$/;"	f	file:
nullplug_closing	sshshare.c	/^static void nullplug_closing(Plug plug, const char *error_msg, int error_code,$/;"	f	file:
nullplug_receive	sshshare.c	/^static void nullplug_receive(Plug plug, int urgent, char *data, int len) {}$/;"	f	file:
nullplug_sent	sshshare.c	/^static void nullplug_sent(Plug plug, int bufsize) {}$/;"	f	file:
nullplug_socket_log	sshshare.c	/^static void nullplug_socket_log(Plug plug, int type, SockAddr addr, int port,$/;"	f	file:
nullstrcmp	ssh.c	/^static int nullstrcmp(const char *a, const char *b)$/;"	f	file:
num_ids	windows/winstuff.h	/^    int num_ids;$/;"	m	struct:winctrl
numeric_keypad_handler	config.c	/^static void numeric_keypad_handler(union control *ctrl, void *dlg,$/;"	f	file:
nvalid	charset/internal.h	/^    int nvalid;$/;"	m	struct:sbcs_data
nwidthcache	unix/gtkfont.c	/^    unsigned nwidthcache;$/;"	m	struct:pangofont	file:
nwords	contrib/make1305.py	/^    def nwords(self, maxval):$/;"	m	class:CodegenTarget
nwords	psftp.c	/^    int nwords, wordssize;$/;"	m	struct:sftp_command	file:
o	windows/winhandl.c	/^	struct handle_output o;$/;"	m	union:handle::__anon148	typeref:struct:handle::__anon148::handle_output	file:
o_echo	contrib/cygtermd/telnet.c	/^static const struct Opt o_echo =$/;"	v	typeref:struct:Opt	file:
o_echo	telnet.c	/^static const struct Opt o_echo =$/;"	v	typeref:struct:Opt	file:
o_naws	contrib/cygtermd/telnet.c	/^static const struct Opt o_naws =$/;"	v	typeref:struct:Opt	file:
o_naws	telnet.c	/^static const struct Opt o_naws =$/;"	v	typeref:struct:Opt	file:
o_nenv	contrib/cygtermd/telnet.c	/^static const struct Opt o_nenv =$/;"	v	typeref:struct:Opt	file:
o_nenv	telnet.c	/^static const struct Opt o_nenv =$/;"	v	typeref:struct:Opt	file:
o_oenv	contrib/cygtermd/telnet.c	/^static const struct Opt o_oenv =$/;"	v	typeref:struct:Opt	file:
o_oenv	telnet.c	/^static const struct Opt o_oenv =$/;"	v	typeref:struct:Opt	file:
o_they_bin	telnet.c	/^static const struct Opt o_they_bin =$/;"	v	typeref:struct:Opt	file:
o_they_sga	contrib/cygtermd/telnet.c	/^static const struct Opt o_they_sga =$/;"	v	typeref:struct:Opt	file:
o_they_sga	telnet.c	/^static const struct Opt o_they_sga =$/;"	v	typeref:struct:Opt	file:
o_tspeed	telnet.c	/^static const struct Opt o_tspeed =$/;"	v	typeref:struct:Opt	file:
o_ttype	contrib/cygtermd/telnet.c	/^static const struct Opt o_ttype =$/;"	v	typeref:struct:Opt	file:
o_ttype	telnet.c	/^static const struct Opt o_ttype =$/;"	v	typeref:struct:Opt	file:
o_we_bin	telnet.c	/^static const struct Opt o_we_bin =$/;"	v	typeref:struct:Opt	file:
o_we_sga	contrib/cygtermd/telnet.c	/^static const struct Opt o_we_sga =$/;"	v	typeref:struct:Opt	file:
o_we_sga	telnet.c	/^static const struct Opt o_we_sga =$/;"	v	typeref:struct:Opt	file:
oaep_mask	sshrsa.c	/^static void oaep_mask(const struct ssh_hash *h, void *seed, int seedlen,$/;"	f	file:
obey	psftp.c	/^    int (*obey) (struct sftp_command *);	\/* returns <0 to quit *\/$/;"	m	struct:sftp_command	file:
obey	psftp.c	/^    int (*obey) (struct sftp_command *);$/;"	m	struct:sftp_cmd_lookup	file:
obfuscate_name	windows/winshare.c	/^static char *obfuscate_name(const char *realname)$/;"	f	file:
objects	mkfiles.pl	/^sub objects {$/;"	s
offset	putty.h	/^    int offset;$/;"	m	struct:logblank_t
offset	sftp.c	/^    uint64 offset, furthestdata, filesize;$/;"	m	struct:fxp_xfer	file:
offset	sftp.c	/^    uint64 offset;$/;"	m	struct:req	file:
offset_height	windows/window.c	/^static int offset_width, offset_height;$/;"	v	file:
offset_width	windows/window.c	/^static int offset_width, offset_height;$/;"	v	file:
oid	sshecc.c	/^    const unsigned char *oid;$/;"	m	struct:ecsign_extra	file:
oidlen	sshecc.c	/^    int oidlen;$/;"	m	struct:ecsign_extra	file:
oids	pgssapi.c	/^static const gss_OID_desc oids[] = {$/;"	v	file:
ok	unix/gtkdlg.c	/^    struct { unsigned char r, g, b, ok; } coloursel_result;   \/* 0-255 *\/$/;"	m	struct:dlgparam::__anon116	file:
ok	windows/winstuff.h	/^    struct { unsigned char r, g, b, ok; } coloursel_result;   \/* 0-255 *\/$/;"	m	struct:dlgparam::__anon149
ok_button	unix/gtkfont.h	/^    GtkWidget *ok_button, *cancel_button;$/;"	m	struct:unifontsel
okbutton	config.c	/^    union control *okbutton, *cancelbutton;$/;"	m	struct:sessionsaver_data	typeref:union:sessionsaver_data::control	file:
old_environ_done	contrib/cygtermd/telnet.c	/^    int old_environ_done, new_environ_done, ttype_done;$/;"	m	struct:telnet_tag	file:
old_keyfile_warning	unix/gtkdlg.c	/^void old_keyfile_warning(void)$/;"	f
old_keyfile_warning	unix/uxcons.c	/^void old_keyfile_warning(void)$/;"	f
old_keyfile_warning	windows/wincons.c	/^void old_keyfile_warning(void)$/;"	f
old_keyfile_warning	windows/windlg.c	/^void old_keyfile_warning(void)$/;"	f
old_keyfile_warning	windows/winpgen.c	/^void old_keyfile_warning(void)$/;"	f
old_keyfile_warning	windows/winpgnt.c	/^void old_keyfile_warning(void)$/;"	f
oldincludedir	Makefile	/^oldincludedir = \/usr\/include$/;"	m
only_printing	terminal.h	/^    int printing, only_printing;       \/* Are we doing ANSI printing? *\/$/;"	m	struct:terminal_tag
oobdata	unix/uxnet.c	/^    char oobdata[1];$/;"	m	struct:Socket_tag	file:
oobdata	windows/winnet.c	/^    char oobdata[1];$/;"	m	struct:Socket_tag	file:
oobinline	unix/uxnet.c	/^    int oobinline;$/;"	m	struct:Socket_tag	file:
oobinline	windows/winnet.c	/^    int oobinline, nodelay, keepalive, privport;$/;"	m	struct:Socket_tag	file:
oobpending	unix/uxnet.c	/^    int oobpending;		       \/* is there OOB data available to read? *\/$/;"	m	struct:Socket_tag	file:
opcode	ssh.c	/^    int opcode;$/;"	m	struct:ssh_ttymode	file:
open_directory	unix/uxsftp.c	/^DirHandle *open_directory(const char *name)$/;"	f
open_directory	windows/winsftp.c	/^DirHandle *open_directory(const char *name)$/;"	f
open_existing_file	unix/uxsftp.c	/^RFile *open_existing_file(const char *name, uint64 *size,$/;"	f
open_existing_file	windows/winsftp.c	/^RFile *open_existing_file(const char *name, uint64 *size,$/;"	f
open_existing_wfile	unix/uxsftp.c	/^WFile *open_existing_wfile(const char *name, uint64 *size)$/;"	f
open_existing_wfile	windows/winsftp.c	/^WFile *open_existing_wfile(const char *name, uint64 *size)$/;"	f
open_new_file	unix/uxsftp.c	/^WFile *open_new_file(const char *name, long perms)$/;"	f
open_new_file	windows/winsftp.c	/^WFile *open_new_file(const char *name, long perms)$/;"	f
open_settings_r	unix/uxstore.c	/^void *open_settings_r(const char *sessionname)$/;"	f
open_settings_r	windows/winstore.c	/^void *open_settings_r(const char *sessionname)$/;"	f
open_settings_w	unix/uxstore.c	/^void *open_settings_w(const char *sessionname, char **errmsg)$/;"	f
open_settings_w	windows/winstore.c	/^void *open_settings_w(const char *sessionname, char **errmsg)$/;"	f
openssh_auto_write	import.c	/^int openssh_auto_write(const Filename *filename, struct ssh2_userkey *key,$/;"	f
openssh_bcrypt	sshbcrypt.c	/^void openssh_bcrypt(const char *passphrase,$/;"	f
openssh_createkey	ssh.h	/^    void *(*openssh_createkey) (const struct ssh_signkey *self,$/;"	m	struct:ssh_signkey
openssh_fmtkey	ssh.h	/^    int (*openssh_fmtkey) (void *key, unsigned char *blob, int len);$/;"	m	struct:ssh_signkey
openssh_loadpub	sshpubk.c	/^unsigned char *openssh_loadpub(FILE *fp, char **algorithm,$/;"	f
openssh_new_cipher	import.c	/^} openssh_new_cipher;$/;"	t	typeref:enum:__anon31	file:
openssh_new_encrypted	import.c	/^int openssh_new_encrypted(const Filename *filename)$/;"	f
openssh_new_kdf	import.c	/^} openssh_new_kdf;$/;"	t	typeref:enum:__anon32	file:
openssh_new_key	import.c	/^struct openssh_new_key {$/;"	s	file:
openssh_new_read	import.c	/^struct ssh2_userkey *openssh_new_read(const Filename *filename,$/;"	f
openssh_new_write	import.c	/^int openssh_new_write(const Filename *filename, struct ssh2_userkey *key,$/;"	f
openssh_pem_enc	import.c	/^} openssh_pem_enc;$/;"	t	typeref:enum:__anon30	file:
openssh_pem_encrypted	import.c	/^int openssh_pem_encrypted(const Filename *filename)$/;"	f
openssh_pem_key	import.c	/^struct openssh_pem_key {$/;"	s	file:
openssh_pem_keytype	import.c	/^} openssh_pem_keytype;$/;"	t	typeref:enum:__anon29	file:
openssh_pem_read	import.c	/^struct ssh2_userkey *openssh_pem_read(const Filename *filename,$/;"	f
openssh_pem_write	import.c	/^int openssh_pem_write(const Filename *filename, struct ssh2_userkey *key,$/;"	f
openssh_private_npieces	ssh.h	/^    int openssh_private_npieces;$/;"	m	struct:ssh_signkey
opt_states	contrib/cygtermd/telnet.c	/^    int opt_states[NUM_OPTS];$/;"	m	struct:telnet_tag	file:
opt_states	telnet.c	/^    int opt_states[NUM_OPTS];$/;"	m	struct:telnet_tag	file:
option	contrib/cygtermd/telnet.c	/^    int option;			       \/* the option code *\/$/;"	m	struct:Opt	file:
option	telnet.c	/^    int option;			       \/* the option code *\/$/;"	m	struct:Opt	file:
option_side_effects	contrib/cygtermd/telnet.c	/^static void option_side_effects(Telnet telnet, const struct Opt *o, int enabled)$/;"	f	file:
option_side_effects	telnet.c	/^static void option_side_effects(Telnet telnet, const struct Opt *o, int enabled)$/;"	f	file:
optmenu	unix/gtkdlg.c	/^    GtkWidget *optmenu;	      \/* also for optionmenu *\/$/;"	m	struct:uctrl	file:
opts	contrib/cygtermd/telnet.c	/^static const struct Opt *const opts[] = {$/;"	v	file:
opts	telnet.c	/^static const struct Opt *const opts[] = {$/;"	v	file:
orangebackground	icons/mkicon.py	/^            orangebackground = 1$/;"	v
orig_console_mode	windows/winplink.c	/^DWORD orig_console_mode;$/;"	v
orig_termios	unix/uxplink.c	/^static struct termios orig_termios;$/;"	v	typeref:struct:termios	file:
orig_termios_stderr	unix/uxcons.c	/^static struct termios orig_termios_stderr;$/;"	v	typeref:struct:termios	file:
orig_x11_error_handler	unix/x11misc.c	/^static int (*orig_x11_error_handler)(Display *thisdisp, XErrorEvent *err);$/;"	v	file:
origmatrix	unix/gtkfont.h	/^            cairo_matrix_t origmatrix;$/;"	m	struct:unifont_drawctx::__anon127::__anon129
origwc	minibidi.c	/^    unsigned int origwc, wc;$/;"	m	struct:bidi_char	file:
origwc	putty.h	/^    unsigned int origwc, wc;$/;"	m	struct:bidi_char
os	icons/mkicon.py	/^import os$/;"	i
osVersion	windows/winmisc.c	/^OSVERSIONINFO osVersion;$/;"	v
osc_string	terminal.h	/^    char osc_string[OSC_STR_MAX + 1];$/;"	m	struct:terminal_tag
osc_strlen	terminal.h	/^    int osc_strlen;$/;"	m	struct:terminal_tag
osc_w	terminal.h	/^    int osc_w;$/;"	m	struct:terminal_tag
ospeed	ssh.c	/^    int ospeed, ispeed;		       \/* temporaries *\/$/;"	m	struct:ssh_tag	file:
osxlaunch_LDADD	Makefile	/^osxlaunch_LDADD = $(LDADD)$/;"	m
osxlaunch_OBJECTS	Makefile	/^osxlaunch_OBJECTS = $(am_osxlaunch_OBJECTS)$/;"	m
osxlaunch_SOURCES	Makefile	/^osxlaunch_SOURCES = unix\/osxlaunch.c$/;"	m
our_dialog_add_to_content_area	unix/gtkmisc.c	/^void our_dialog_add_to_content_area(GtkWindow *dlg, GtkWidget *w,$/;"	f
our_dialog_make_action_hbox	unix/gtkmisc.c	/^GtkBox *our_dialog_make_action_hbox(GtkWindow *dlg)$/;"	f
our_dialog_new	unix/gtkmisc.c	/^GtkWidget *our_dialog_new(void)$/;"	f
our_dialog_set_action_area	unix/gtkmisc.c	/^void our_dialog_set_action_area(GtkWindow *dlg, GtkWidget *w)$/;"	f
out	windows/winser.c	/^    struct handle *out, *in;$/;"	m	struct:serial_backend_data	typeref:struct:serial_backend_data::handle	file:
outbits	sshzlib.c	/^    unsigned long outbits;$/;"	m	struct:Outbuf	file:
outbits	sshzlib.c	/^static void outbits(struct Outbuf *out, unsigned long bits, int nbits)$/;"	f	file:
outblk	sshzlib.c	/^    unsigned char *outblk;$/;"	m	struct:zlib_decompress_ctx	file:
outbuf	sshzlib.c	/^    unsigned char *outbuf;$/;"	m	struct:Outbuf	file:
outbuffer	ssh.c	/^	    bufchain outbuffer;$/;"	m	struct:ssh_channel::__anon78::ssh2_data_channel	file:
outcharset	charset/sbcsgen.pl	/^sub outcharset($$$) {$/;"	s
outfile	icons/macicon.py	/^        outfile = filename$/;"	v
outgoing_data_size	ssh.c	/^    unsigned long incoming_data_size, outgoing_data_size, deferred_data_size;$/;"	m	struct:ssh_tag	file:
outgoingeof	unix/uxnet.c	/^    enum { EOF_NO, EOF_PENDING, EOF_SENT } outgoingeof;$/;"	m	struct:Socket_tag	typeref:enum:Socket_tag::__anon119	file:
outgoingeof	unix/uxplink.c	/^enum { EOF_NO, EOF_PENDING, EOF_SENT } outgoingeof;$/;"	v	typeref:enum:__anon130
outgoingeof	unix/uxproxy.c	/^    enum { EOF_NO, EOF_PENDING, EOF_SENT } outgoingeof;$/;"	m	struct:Socket_localproxy_tag	typeref:enum:Socket_localproxy_tag::__anon121	file:
outgoingeof	windows/winhandl.c	/^    enum { EOF_NO, EOF_PENDING, EOF_SENT } outgoingeof;$/;"	m	struct:handle_output	typeref:enum:handle_output::__anon147	file:
outgoingeof	windows/winnet.c	/^    enum { EOF_NO, EOF_PENDING, EOF_SENT } outgoingeof;$/;"	m	struct:Socket_tag	typeref:enum:Socket_tag::__anon145	file:
outhandle	windows/winplink.c	/^HANDLE inhandle, outhandle, errhandle;$/;"	v
outlen	charset/fromucs.c	/^    int outlen;$/;"	m	struct:charset_emit_param	file:
outlen	charset/toucs.c	/^    int outlen;$/;"	m	struct:unicode_emit_param	file:
outlen	pscp.c	/^static unsigned outlen;		       \/* how much data required *\/$/;"	v	file:
outlen	psftp.c	/^static unsigned outlen;		       \/* how much data required *\/$/;"	v	file:
outlen	sshzlib.c	/^    int outlen, outsize;$/;"	m	struct:Outbuf	file:
outlen	sshzlib.c	/^    int outlen, outsize;$/;"	m	struct:zlib_decompress_ctx	file:
outpix	icons/mkicon.py	/^    def outpix(colour):$/;"	f
outptr	pscp.c	/^static unsigned char *outptr;	       \/* where to put the data *\/$/;"	v	file:
outptr	psftp.c	/^static unsigned char *outptr;	       \/* where to put the data *\/$/;"	v	file:
output	charset/fromucs.c	/^    char *output;$/;"	m	struct:charset_emit_param	file:
output	charset/toucs.c	/^    wchar_t *output;$/;"	m	struct:unicode_emit_param	file:
output_data	unix/uxnet.c	/^    bufchain output_data;$/;"	m	struct:Socket_tag	file:
output_data	unix/uxpty.c	/^    bufchain output_data;$/;"	m	struct:pty_tag	file:
output_data	unix/uxser.c	/^    bufchain output_data;$/;"	m	struct:serial_backend_data	file:
output_data	windows/winnet.c	/^    bufchain output_data;$/;"	m	struct:Socket_tag	file:
output_type	contrib/kh2reg.py	/^output_type = 'windows'$/;"	v
outsize	sshzlib.c	/^    int outlen, outsize;$/;"	m	struct:Outbuf	file:
outsize	sshzlib.c	/^    int outlen, outsize;$/;"	m	struct:zlib_decompress_ctx	file:
outstanding_channel_request	ssh.c	/^struct outstanding_channel_request {$/;"	s	file:
overall_bufsize	ssh.c	/^    int overall_bufsize;$/;"	m	struct:ssh_tag	file:
overlay	icons/mkicon.py	/^def overlay(src, x, y, dst):$/;"	f
overwrite_env	unix/osxlaunch.c	/^void overwrite_env(const char *name, const char *value)$/;"	f
p	cmdline.c	/^    char *p, *value;$/;"	m	struct:cmdline_saved_param	file:
p	dialog.h	/^typedef union { void *p; int i; } intorptr;$/;"	m	union:__anon16
p	network.h	/^typedef union { void *p; int i; } accept_ctx_t;$/;"	m	union:__anon40
p	ssh.c	/^    unsigned char *p;$/;"	m	struct:rdpkt1_state_tag	file:
p	ssh.h	/^    Bignum p, q, g, y, x;$/;"	m	struct:dss_key
p	ssh.h	/^    Bignum p;$/;"	m	struct:RSAKey
p	ssh.h	/^    Bignum p;$/;"	m	struct:ec_curve
p	sshdh.c	/^    Bignum x, e, p, q, qmask, g;$/;"	m	struct:dh_ctx	file:
packet_dispatch	ssh.c	/^    handler_fn_t packet_dispatch[256];$/;"	m	struct:ssh_tag	file:
packetlen	ssh.c	/^    long len, pad, payload, packetlen, maclen;$/;"	m	struct:rdpkt2_state_tag	file:
packetlen	ssh.c	/^    long packetlen;$/;"	m	struct:rdpkt2_bare_state_tag	file:
pad	ssh.c	/^    long len, pad, biglen, to_read;$/;"	m	struct:rdpkt1_state_tag	file:
pad	ssh.c	/^    long len, pad, payload, packetlen, maclen;$/;"	m	struct:rdpkt2_state_tag	file:
padded_keybytes	ssh.h	/^    int padded_keybytes;$/;"	m	struct:ssh2_cipher
pageant	doc/Chapter9.html	/^<h1><a name="pageant"><\/a><a name="C9"><\/a>Chapter 9: Using <a name="i0"><\/a>Pageant for authentication<\/h1>$/;"	a
pageant-cmdline	doc/Chapter9.html	/^<h2><a name="pageant-cmdline"><\/a><a name="S9.3"><\/a>9.3 The Pageant command line<\/h2>$/;"	a
pageant-cmdline-command	doc/Chapter9.html	/^<h3><a name="pageant-cmdline-command"><\/a><a name="S9.3.2"><\/a>9.3.2 Making Pageant run another program<\/h3>$/;"	a
pageant-cmdline-loadkey	doc/Chapter9.html	/^<h3><a name="pageant-cmdline-loadkey"><\/a><a name="S9.3.1"><\/a>9.3.1 Making Pageant automatically load keys on startup<\/h3>$/;"	a
pageant-forward	doc/Chapter9.html	/^<h2><a name="pageant-forward"><\/a><a name="S9.4"><\/a>9.4 Using <a name="i12"><\/a>agent forwarding<\/h2>$/;"	a
pageant-mainwin	doc/Chapter9.html	/^<h2><a name="pageant-mainwin"><\/a><a name="S9.2"><\/a>9.2 The Pageant main window<\/h2>$/;"	a
pageant-mainwin-addkey	doc/Chapter9.html	/^<h3><a name="pageant-mainwin-addkey"><\/a><a name="S9.2.2"><\/a>9.2.2 The &#8216;Add Key&#8217; button<\/h3>$/;"	a
pageant-mainwin-keylist	doc/Chapter9.html	/^<h3><a name="pageant-mainwin-keylist"><\/a><a name="S9.2.1"><\/a>9.2.1 The key list box<\/h3>$/;"	a
pageant-mainwin-remkey	doc/Chapter9.html	/^<h3><a name="pageant-mainwin-remkey"><\/a><a name="S9.2.3"><\/a>9.2.3 The &#8216;Remove Key&#8217; button<\/h3>$/;"	a
pageant-security	doc/Chapter9.html	/^<h2><a name="pageant-security"><\/a><a name="S9.5"><\/a>9.5 Security considerations<\/h2>$/;"	a
pageant-start	doc/Chapter9.html	/^<h2><a name="pageant-start"><\/a><a name="S9.1"><\/a>9.1 Getting started with Pageant<\/h2>$/;"	a
pageant_DEPENDENCIES	Makefile	/^pageant_DEPENDENCIES = libversion.a \\$/;"	m
pageant_LDADD	Makefile	/^pageant_LDADD = libversion.a $(GTK_LIBS)$/;"	m
pageant_OBJECTS	Makefile	/^pageant_OBJECTS = $(am_pageant_OBJECTS)$/;"	m
pageant_SOURCES	Makefile	/^pageant_SOURCES = aqsync.c be_misc.c be_none.c callback.c cmdline.c conf.c \\$/;"	m
pageant_add_keyfile	pageant.c	/^int pageant_add_keyfile(Filename *filename, const char *passphrase,$/;"	f
pageant_add_ssh1_key	pageant.c	/^int pageant_add_ssh1_key(struct RSAKey *rkey)$/;"	f
pageant_add_ssh2_key	pageant.c	/^int pageant_add_ssh2_key(struct ssh2_userkey *skey)$/;"	f
pageant_conn_closing	pageant.c	/^static void pageant_conn_closing(Plug plug, const char *error_msg,$/;"	f	file:
pageant_conn_log	pageant.c	/^static void pageant_conn_log(void *logctx, const char *fmt, va_list ap)$/;"	f	file:
pageant_conn_receive	pageant.c	/^static void pageant_conn_receive(Plug plug, int urgent, char *data, int len)$/;"	f	file:
pageant_conn_sent	pageant.c	/^static void pageant_conn_sent(Plug plug, int bufsize)$/;"	f	file:
pageant_conn_state	pageant.c	/^struct pageant_conn_state {$/;"	s	file:
pageant_count_ssh1_keys	pageant.c	/^int pageant_count_ssh1_keys(void)$/;"	f
pageant_count_ssh2_keys	pageant.c	/^int pageant_count_ssh2_keys(void)$/;"	f
pageant_delete_all_keys	pageant.c	/^int pageant_delete_all_keys(char **retstr)$/;"	f
pageant_delete_key	pageant.c	/^int pageant_delete_key(struct pageant_pubkey *key, char **retstr)$/;"	f
pageant_delete_ssh1_key	pageant.c	/^int pageant_delete_ssh1_key(struct RSAKey *rkey)$/;"	f
pageant_delete_ssh2_key	pageant.c	/^int pageant_delete_ssh2_key(struct ssh2_userkey *skey)$/;"	f
pageant_enum_keys	pageant.c	/^int pageant_enum_keys(pageant_key_enum_fn_t callback, void *callback_ctx,$/;"	f
pageant_failure_msg	pageant.c	/^void *pageant_failure_msg(int *outlen)$/;"	f
pageant_forget_passphrases	pageant.c	/^void pageant_forget_passphrases(void)$/;"	f
pageant_fork_and_print_env	unix/uxpgnt.c	/^void pageant_fork_and_print_env(int retain_tty)$/;"	f
pageant_get_keylist1	pageant.c	/^void *pageant_get_keylist1(int *length)$/;"	f
pageant_get_keylist2	pageant.c	/^void *pageant_get_keylist2(int *length)$/;"	f
pageant_handle_msg	pageant.c	/^void *pageant_handle_msg(const void *msg, int msglen, int *outlen,$/;"	f
pageant_icon	icons/mkicon.py	/^def pageant_icon(size):$/;"	f
pageant_init	pageant.c	/^void pageant_init(void)$/;"	f
pageant_key_enum_fn_t	pageant.h	/^typedef void (*pageant_key_enum_fn_t)(void *ctx,$/;"	t
pageant_listen_accepting	pageant.c	/^static int pageant_listen_accepting(Plug plug,$/;"	f	file:
pageant_listen_closing	pageant.c	/^static void pageant_listen_closing(Plug plug, const char *error_msg,$/;"	f	file:
pageant_listen_state	pageant.c	/^struct pageant_listen_state {$/;"	s	file:
pageant_listener_free	pageant.c	/^void pageant_listener_free(struct pageant_listen_state *pl)$/;"	f
pageant_listener_got_socket	pageant.c	/^void pageant_listener_got_socket(struct pageant_listen_state *pl, Socket sock)$/;"	f
pageant_listener_new	pageant.c	/^struct pageant_listen_state *pageant_listener_new(void)$/;"	f
pageant_listener_set_logfn	pageant.c	/^void pageant_listener_set_logfn(struct pageant_listen_state *pl,$/;"	f
pageant_local	pageant.c	/^static int pageant_local = FALSE;$/;"	v	file:
pageant_log	unix/uxpgnt.c	/^void pageant_log(void *ctx, const char *fmt, va_list ap)$/;"	f
pageant_logfn_t	pageant.h	/^typedef void (*pageant_logfn_t)(void *logctx, const char *fmt, va_list ap);$/;"	t
pageant_logfp	unix/uxpgnt.c	/^FILE *pageant_logfp = NULL;$/;"	v
pageant_make_keylist1	pageant.c	/^void *pageant_make_keylist1(int *length)$/;"	f
pageant_make_keylist2	pageant.c	/^void *pageant_make_keylist2(int *length)$/;"	f
pageant_nth_ssh1_key	pageant.c	/^struct RSAKey *pageant_nth_ssh1_key(int i)$/;"	f
pageant_nth_ssh2_key	pageant.c	/^struct ssh2_userkey *pageant_nth_ssh2_key(int i)$/;"	f
pageant_print_env	unix/uxpgnt.c	/^void pageant_print_env(int pid)$/;"	f
pageant_pubkey	pageant.h	/^struct pageant_pubkey {$/;"	s
pageant_pubkey_copy	pageant.c	/^struct pageant_pubkey *pageant_pubkey_copy(struct pageant_pubkey *key)$/;"	f
pageant_pubkey_free	pageant.c	/^void pageant_pubkey_free(struct pageant_pubkey *key)$/;"	f
pal	windows/window.c	/^static HPALETTE pal;$/;"	v	file:
palette_reset	fuzzterm.c	/^void palette_reset(void *frontend) { }$/;"	f
palette_reset	unix/gtkwin.c	/^void palette_reset(void *frontend)$/;"	f
palette_reset	windows/window.c	/^void palette_reset(void *frontend)$/;"	f
palette_set	fuzzterm.c	/^void palette_set(void *frontend, int a, int b, int c, int d) { }$/;"	f
palette_set	unix/gtkwin.c	/^void palette_set(void *frontend, int n, int r, int g, int b)$/;"	f
palette_set	windows/window.c	/^void palette_set(void *frontend, int n, int r, int g, int b)$/;"	f
panel	unix/gtkdlg.c	/^    GtkWidget *panel;$/;"	m	struct:selparam	file:
panels	unix/gtkdlg.c	/^    GtkNotebook *panels;$/;"	m	struct:selparam	file:
paneltitle	windows/winctrls.c	/^void paneltitle(struct ctlpos *cp, int id)$/;"	f
pango_cairo_draw_layout	unix/gtkfont.c	/^static void pango_cairo_draw_layout(unifont_drawctx *ctx,$/;"	f	file:
pango_gdk_draw_layout	unix/gtkfont.c	/^static void pango_gdk_draw_layout(unifont_drawctx *ctx,$/;"	f	file:
pangofont	unix/gtkfont.c	/^struct pangofont {$/;"	s	file:
pangofont_canonify_fontname	unix/gtkfont.c	/^static char *pangofont_canonify_fontname(GtkWidget *widget, const char *name,$/;"	f	file:
pangofont_char_width	unix/gtkfont.c	/^static int pangofont_char_width(PangoLayout *layout, struct pangofont *pfont,$/;"	f	file:
pangofont_check_desc_makes_sense	unix/gtkfont.c	/^static int pangofont_check_desc_makes_sense(PangoContext *ctx,$/;"	f	file:
pangofont_create	unix/gtkfont.c	/^static unifont *pangofont_create(GtkWidget *widget, const char *name,$/;"	f	file:
pangofont_create_fallback	unix/gtkfont.c	/^static unifont *pangofont_create_fallback(GtkWidget *widget, int height,$/;"	f	file:
pangofont_create_internal	unix/gtkfont.c	/^static unifont *pangofont_create_internal(GtkWidget *widget,$/;"	f	file:
pangofont_destroy	unix/gtkfont.c	/^static void pangofont_destroy(unifont *font)$/;"	f	file:
pangofont_draw_combining	unix/gtkfont.c	/^static void pangofont_draw_combining(unifont_drawctx *ctx, unifont *font,$/;"	f	file:
pangofont_draw_internal	unix/gtkfont.c	/^static void pangofont_draw_internal(unifont_drawctx *ctx, unifont *font,$/;"	f	file:
pangofont_draw_text	unix/gtkfont.c	/^static void pangofont_draw_text(unifont_drawctx *ctx, unifont *font,$/;"	f	file:
pangofont_enum_fonts	unix/gtkfont.c	/^static void pangofont_enum_fonts(GtkWidget *widget, fontsel_add_entry callback,$/;"	f	file:
pangofont_has_glyph	unix/gtkfont.c	/^static int pangofont_has_glyph(unifont *font, wchar_t glyph)$/;"	f	file:
pangofont_scale_fontname	unix/gtkfont.c	/^static char *pangofont_scale_fontname(GtkWidget *widget, const char *name,$/;"	f	file:
pangofont_size_increment	unix/gtkfont.c	/^static char *pangofont_size_increment(unifont *font, int increment)$/;"	f	file:
pangofont_vtable	unix/gtkfont.c	/^static const struct unifont_vtable pangofont_vtable = {$/;"	v	typeref:struct:unifont_vtable	file:
param	windows/winpgen.c	/^	unsigned param, current, n;    \/* if exponential *\/$/;"	m	struct:progress::__anon138	file:
params	cmdline.c	/^    struct cmdline_saved_param *params;$/;"	m	struct:cmdline_saved_param_set	typeref:struct:cmdline_saved_param_set::cmdline_saved_param	file:
parent	contrib/cygtermd/sel.c	/^    sel *parent;$/;"	m	struct:sel_rfd	file:
parent	contrib/cygtermd/sel.c	/^    sel *parent;$/;"	m	struct:sel_wfd	file:
parent	sshshare.c	/^    struct ssh_sharing_state *parent;$/;"	m	struct:ssh_sharing_connstate	typeref:struct:ssh_sharing_connstate::ssh_sharing_state	file:
parent	tree234.c	/^    node234 *parent;$/;"	m	struct:node234_Tag	file:
parent	unix/uxnet.c	/^    Actual_Socket parent, child;$/;"	m	struct:Socket_tag	file:
parent	windows/winnet.c	/^    Actual_Socket parent, child;$/;"	m	struct:Socket_tag	file:
parent_class	unix/gtkcols.c	/^static GtkContainerClass *parent_class = NULL;$/;"	v	file:
parent_class	unix/gtkcols.h	/^    GtkContainerClass parent_class;$/;"	m	struct:ColumnsClass_tag
parentwin	unix/gtkdlg.c	/^    GtkWidget *parentwin, *window;$/;"	m	struct:eventlog_stuff	file:
parray	sshblowf.c	/^static const word32 parray[] = {$/;"	v	file:
parse	contrib/logparse.pl	/^sub parse {$/;"	s
parse_blocksize	misc.c	/^unsigned long parse_blocksize(const char *bs)$/;"	f
parse_ttymodes	ssh.c	/^static void parse_ttymodes(Ssh ssh,$/;"	f	file:
parseone	contrib/logparse.pl	/^sub parseone {$/;"	s
passes	cmdgen.c	/^int passes, fails;$/;"	v
passlen	unix/gtkask.c	/^    int passlen, passsize;$/;"	m	struct:askpass_ctx	file:
passphrase	unix/gtkask.c	/^    char *passphrase;$/;"	m	struct:askpass_ctx	file:
passphrase	windows/winpgen.c	/^    char **passphrase;$/;"	m	struct:PassphraseProcStruct	file:
passphrase	windows/winpgnt.c	/^    char **passphrase;$/;"	m	struct:PassphraseProcStruct	file:
passphrase_box	windows/winpgnt.c	/^static HWND passphrase_box;$/;"	v	file:
passphrases	pageant.c	/^static tree234 *passphrases = NULL;$/;"	v	file:
passsize	unix/gtkask.c	/^    int passlen, passsize;$/;"	m	struct:askpass_ctx	file:
password	dialog.h	/^	int password;		       \/* details of input are hidden *\/$/;"	m	struct:control::__anon21
paste_buffer	terminal.h	/^    wchar_t *paste_buffer;$/;"	m	struct:terminal_tag
paste_cb	unix/gtkapp.c	/^static void paste_cb(GSimpleAction *action,$/;"	f	file:
paste_len	terminal.h	/^    int paste_len, paste_pos;$/;"	m	struct:terminal_tag
paste_pos	terminal.h	/^    int paste_len, paste_pos;$/;"	m	struct:terminal_tag
pastein_data	unix/gtkwin.c	/^    wchar_t *pastein_data;$/;"	m	struct:gui_data	file:
pastein_data_len	unix/gtkwin.c	/^    int pastein_data_len;$/;"	m	struct:gui_data	file:
pasteout_data	unix/gtkwin.c	/^    char *pasteout_data, *pasteout_data_ctext, *pasteout_data_utf8;$/;"	m	struct:gui_data	file:
pasteout_data_ctext	unix/gtkwin.c	/^    char *pasteout_data, *pasteout_data_ctext, *pasteout_data_utf8;$/;"	m	struct:gui_data	file:
pasteout_data_ctext_len	unix/gtkwin.c	/^    int pasteout_data_len, pasteout_data_ctext_len, pasteout_data_utf8_len;$/;"	m	struct:gui_data	file:
pasteout_data_len	unix/gtkwin.c	/^    int pasteout_data_len, pasteout_data_ctext_len, pasteout_data_utf8_len;$/;"	m	struct:gui_data	file:
pasteout_data_utf8	unix/gtkwin.c	/^    char *pasteout_data, *pasteout_data_ctext, *pasteout_data_utf8;$/;"	m	struct:gui_data	file:
pasteout_data_utf8	unix/gtkwin.c	/^    char *pasteout_data_utf8;$/;"	m	struct:clipboard_data_instance	file:
pasteout_data_utf8_len	unix/gtkwin.c	/^    int pasteout_data_len, pasteout_data_ctext_len, pasteout_data_utf8_len;$/;"	m	struct:gui_data	file:
pasteout_data_utf8_len	unix/gtkwin.c	/^    int pasteout_data_utf8_len;$/;"	m	struct:clipboard_data_instance	file:
path	unix/unix.h	/^    char *path;$/;"	m	struct:Filename
path	windows/winstuff.h	/^    char *path;$/;"	m	struct:Filename
pathname	dialog.h	/^    char *pathname;		       \/* panel path, e.g. "SSH\/Tunnels" *\/$/;"	m	struct:controlset
payload	ssh.c	/^    long len, pad, payload, packetlen, maclen;$/;"	m	struct:rdpkt2_state_tag	file:
pdata	sshdh.c	/^    const unsigned char *pdata, *gdata; \/* NULL means group exchange *\/$/;"	m	struct:dh_extra	file:
pdfdir	Makefile	/^pdfdir = ${docdir}$/;"	m
peer_addr	x11fwd.c	/^    char *peer_addr;$/;"	m	struct:X11Connection	file:
peer_info	network.h	/^    char *(*peer_info) (Socket s);$/;"	m	struct:socket_function_table
peer_port	x11fwd.c	/^    int peer_port;$/;"	m	struct:X11Connection	file:
pending	pinger.c	/^    int pending;$/;"	m	struct:pinger_tag	file:
pending	pscp.c	/^static unsigned char *pending = NULL;  \/* any spare data *\/$/;"	v	file:
pending	psftp.c	/^static unsigned char *pending = NULL;  \/* any spare data *\/$/;"	v	file:
pending	ssh.c	/^            agent_pending_query *pending;$/;"	m	struct:ssh_channel::__anon80::ssh_agent_channel	file:
pending	sshzlib.c	/^    unsigned char pending[HASHCHARS];$/;"	m	struct:LZ77InternalContext	file:
pending_eof	proxy.h	/^    int pending_eof;$/;"	m	struct:Socket_proxy_tag
pending_eof	ssh.c	/^    int pending_eof;$/;"	m	struct:ssh_channel	file:
pending_error	unix/uxnet.c	/^    int pending_error;		       \/* in case send() returns error *\/$/;"	m	struct:Socket_tag	file:
pending_error	windows/winnet.c	/^    int pending_error;		       \/* in case send() returns error *\/$/;"	m	struct:Socket_tag	file:
pending_error_data	unix/uxproxy.c	/^    bufchain pending_error_data;$/;"	m	struct:Socket_localproxy_tag	file:
pending_flush	proxy.h	/^    int pending_flush;$/;"	m	struct:Socket_proxy_tag
pending_input_data	proxy.h	/^    bufchain pending_input_data;$/;"	m	struct:Socket_proxy_tag
pending_input_data	unix/uxproxy.c	/^    bufchain pending_input_data;$/;"	m	struct:Socket_localproxy_tag	file:
pending_oob_output_data	proxy.h	/^    bufchain pending_oob_output_data;$/;"	m	struct:Socket_proxy_tag
pending_output_data	proxy.h	/^    bufchain pending_output_data;$/;"	m	struct:Socket_proxy_tag
pending_output_data	unix/uxproxy.c	/^    bufchain pending_output_data;$/;"	m	struct:Socket_localproxy_tag	file:
pendlen	pscp.c	/^static unsigned pendlen = 0, pendsize = 0;	\/* length and phys. size of buffer *\/$/;"	v	file:
pendlen	psftp.c	/^static unsigned pendlen = 0, pendsize = 0;	\/* length and phys. size of buffer *\/$/;"	v	file:
pendsize	pscp.c	/^static unsigned pendlen = 0, pendsize = 0;	\/* length and phys. size of buffer *\/$/;"	v	file:
pendsize	psftp.c	/^static unsigned pendlen = 0, pendsize = 0;	\/* length and phys. size of buffer *\/$/;"	v	file:
percentages	dialog.h	/^	int *percentages;	       \/* % width of each column *\/$/;"	m	struct:control::__anon25
percentages	dialog.h	/^	int *percentages;	       \/* % width of each column *\/$/;"	m	struct:control::__anon27
percentages	unix/gtkcols.h	/^    gint *percentages;$/;"	m	struct:ColumnsChild_tag
percentwidth	dialog.h	/^	int percentwidth;$/;"	m	struct:control::__anon21
percentwidth	dialog.h	/^	int percentwidth;$/;"	m	struct:control::__anon25
permissions	pscp.c	/^    long permissions;  	       \/* access permissions (not ENDDIR) *\/$/;"	m	struct:scp_sink_action	file:
permissions	sftp.h	/^    unsigned long permissions;$/;"	m	struct:fxp_attrs
pf	ssh.c	/^            struct PortForwarding *pf;$/;"	m	struct:ssh_channel::__anon80::ssh_pfd_channel	typeref:struct:ssh_channel::__anon80::ssh_pfd_channel::PortForwarding	file:
pfd	ssh.c	/^	} pfd;$/;"	m	union:ssh_channel::__anon80	typeref:struct:ssh_channel::__anon80::ssh_pfd_channel	file:
pfd_close	portfwd.c	/^void pfd_close(struct PortForwarding *pf)$/;"	f
pfd_closing	portfwd.c	/^static void pfd_closing(Plug plug, const char *error_msg, int error_code,$/;"	f	file:
pfd_confirm	portfwd.c	/^void pfd_confirm(struct PortForwarding *pf)$/;"	f
pfd_connect	portfwd.c	/^char *pfd_connect(struct PortForwarding **pf_ret, char *hostname,int port,$/;"	f
pfd_log	portfwd.c	/^static void pfd_log(Plug plug, int type, SockAddr addr, int port,$/;"	f	file:
pfd_override_throttle	portfwd.c	/^void pfd_override_throttle(struct PortForwarding *pf, int enable)$/;"	f
pfd_receive	portfwd.c	/^static void pfd_receive(Plug plug, int urgent, char *data, int len)$/;"	f	file:
pfd_send	portfwd.c	/^int pfd_send(struct PortForwarding *pf, char *data, int len)$/;"	f
pfd_send_eof	portfwd.c	/^void pfd_send_eof(struct PortForwarding *pf)$/;"	f
pfd_sent	portfwd.c	/^static void pfd_sent(Plug plug, int bufsize)$/;"	f	file:
pfd_unthrottle	portfwd.c	/^void pfd_unthrottle(struct PortForwarding *pf)$/;"	f
pfl_accepting	portfwd.c	/^static int pfl_accepting(Plug p, accept_fn_t constructor, accept_ctx_t ctx)$/;"	f	file:
pfl_closing	portfwd.c	/^static void pfl_closing(Plug plug, const char *error_msg, int error_code,$/;"	f	file:
pfl_listen	portfwd.c	/^char *pfl_listen(char *desthost, int destport, char *srcaddr,$/;"	f
pfl_log	portfwd.c	/^static void pfl_log(Plug plug, int type, SockAddr addr, int port,$/;"	f	file:
pfl_terminate	portfwd.c	/^void pfl_terminate(struct PortListener *pl)$/;"	f
pfrec	ssh.c	/^    struct ssh_portfwd *pfrec;$/;"	m	struct:ssh_rportfwd	typeref:struct:ssh_rportfwd::ssh_portfwd	file:
pgp_fingerprints	unix/uxmisc.c	/^void pgp_fingerprints(void)$/;"	f
pgp_fingerprints	windows/wincons.c	/^void pgp_fingerprints(void)$/;"	f
pgp_fingerprints	windows/winutils.c	/^void pgp_fingerprints(void)$/;"	f
pgpkeys	doc/AppendixE.html	/^<h1><a name="pgpkeys"><\/a><a name="AE"><\/a>Appendix E: PuTTY download keys and signatures<\/h1>$/;"	a
pgpkeys-contact	doc/AppendixE.html	/^<h3><a name="pgpkeys-contact"><\/a><a name="SE.2.3"><\/a>E.2.3 The Secure Contact Key<\/h3>$/;"	a
pgpkeys-master	doc/AppendixE.html	/^<h3><a name="pgpkeys-master"><\/a><a name="SE.2.4"><\/a>E.2.4 The Master Keys<\/h3>$/;"	a
pgpkeys-pubkey	doc/AppendixE.html	/^<h2><a name="pgpkeys-pubkey"><\/a><a name="SE.1"><\/a>E.1 Public keys<\/h2>$/;"	a
pgpkeys-release	doc/AppendixE.html	/^<h3><a name="pgpkeys-release"><\/a><a name="SE.2.2"><\/a>E.2.2 The Releases key<\/h3>$/;"	a
pgpkeys-rollover	doc/AppendixE.html	/^<h2><a name="pgpkeys-rollover"><\/a><a name="SE.3"><\/a>E.3 Key rollover<\/h2>$/;"	a
pgpkeys-security	doc/AppendixE.html	/^<h2><a name="pgpkeys-security"><\/a><a name="SE.2"><\/a>E.2 Security details<\/h2>$/;"	a
pgpkeys-snapshot	doc/AppendixE.html	/^<h3><a name="pgpkeys-snapshot"><\/a><a name="SE.2.1"><\/a>E.2.1 The Development Snapshots key<\/h3>$/;"	a
phase	cmdgen.c	/^    int phase, current;$/;"	m	struct:progress	file:
phases	windows/winpgen.c	/^    } phases[MAXPHASE];$/;"	m	struct:progress	typeref:struct:progress::__anon138	file:
pid	windows/winjump.c	/^    DWORD pid;$/;"	m	struct:_tagpropertykey	file:
pinger	ssh.c	/^    Pinger pinger;$/;"	m	struct:ssh_tag	file:
pinger	telnet.c	/^    Pinger pinger;$/;"	m	struct:telnet_tag	file:
pinger_free	pinger.c	/^void pinger_free(Pinger pinger)$/;"	f
pinger_new	pinger.c	/^Pinger pinger_new(Conf *conf, Backend *back, void *backhandle)$/;"	f
pinger_reconfig	pinger.c	/^void pinger_reconfig(Pinger pinger, Conf *oldconf, Conf *newconf)$/;"	f
pinger_schedule	pinger.c	/^static void pinger_schedule(Pinger pinger)$/;"	f	file:
pinger_tag	pinger.c	/^struct pinger_tag {$/;"	s	file:
pinger_timer	pinger.c	/^static void pinger_timer(void *ctx, unsigned long now)$/;"	f	file:
pipehandle	windows/winnps.c	/^    HANDLE pipehandle;$/;"	m	struct:Socket_named_pipe_server_tag	file:
pipename	windows/winnps.c	/^    char *pipename;$/;"	m	struct:Socket_named_pipe_server_tag	file:
pixel	icons/mkicon.py	/^def pixel(x, y, colour, canvas):$/;"	f
pixheight	unix/gtkfont.c	/^    int pixwidth, pixheight, pixoriginx, pixoriginy;$/;"	m	struct:x11font_individual	file:
pixmap	unix/gtkfont.c	/^    Pixmap pixmap;$/;"	m	struct:x11font_individual	file:
pixmap	unix/gtkwin.c	/^    GdkPixmap *pixmap;$/;"	m	struct:gui_data	file:
pixoriginx	unix/gtkfont.c	/^    int pixwidth, pixheight, pixoriginx, pixoriginy;$/;"	m	struct:x11font_individual	file:
pixoriginy	unix/gtkfont.c	/^    int pixwidth, pixheight, pixoriginx, pixoriginy;$/;"	m	struct:x11font_individual	file:
pixvals	icons/mkicon.py	/^    pixvals = [$/;"	v
pixwidth	unix/gtkfont.c	/^    int pixwidth, pixheight, pixoriginx, pixoriginy;$/;"	m	struct:x11font_individual	file:
pkgdatadir	Makefile	/^pkgdatadir = $(datadir)\/putty$/;"	m
pkgincludedir	Makefile	/^pkgincludedir = $(includedir)\/putty$/;"	m
pkglibdir	Makefile	/^pkglibdir = $(libdir)\/putty$/;"	m
pkglibexecdir	Makefile	/^pkglibexecdir = $(libexecdir)\/putty$/;"	m
pkt_actx	ssh.c	/^    Pkt_ACtx pkt_actx;$/;"	m	struct:ssh_tag	file:
pkt_kctx	ssh.c	/^    Pkt_KCtx pkt_kctx;$/;"	m	struct:ssh_tag	file:
pktbuf	pageant.c	/^    unsigned char lenbuf[4], pktbuf[AGENT_MAX_MSGLEN];$/;"	m	struct:pageant_conn_state	file:
pktin	ssh.c	/^    struct Packet *pktin;$/;"	m	struct:rdpkt1_state_tag	typeref:struct:rdpkt1_state_tag::Packet	file:
pktin	ssh.c	/^    struct Packet *pktin;$/;"	m	struct:rdpkt2_bare_state_tag	typeref:struct:rdpkt2_bare_state_tag::Packet	file:
pktin	ssh.c	/^    struct Packet *pktin;$/;"	m	struct:rdpkt2_state_tag	typeref:struct:rdpkt2_state_tag::Packet	file:
pl_itemfrompt	windows/winctrls.c	/^int pl_itemfrompt(HWND hwnd, POINT cursor, BOOL scroll)$/;"	f
pl_moveitem	windows/winctrls.c	/^static void pl_moveitem(HWND hwnd, int listid, int src, int dst)$/;"	f	file:
platform_default_filename	fuzzterm.c	/^Filename *platform_default_filename(const char *name)$/;"	f
platform_default_filename	unix/gtkwin.c	/^Filename *platform_default_filename(const char *name)$/;"	f
platform_default_filename	unix/uxpgnt.c	/^Filename *platform_default_filename(const char *name) { return filename_from_str(""); }$/;"	f
platform_default_filename	unix/uxplink.c	/^Filename *platform_default_filename(const char *name)$/;"	f
platform_default_filename	unix/uxsftp.c	/^Filename *platform_default_filename(const char *name)$/;"	f
platform_default_filename	windows/windefs.c	/^Filename *platform_default_filename(const char *name)$/;"	f
platform_default_fontspec	fuzzterm.c	/^FontSpec *platform_default_fontspec(const char *name)$/;"	f
platform_default_fontspec	unix/gtkwin.c	/^FontSpec *platform_default_fontspec(const char *name)$/;"	f
platform_default_fontspec	unix/uxpgnt.c	/^FontSpec *platform_default_fontspec(const char *name) { return fontspec_new(""); }$/;"	f
platform_default_fontspec	unix/uxplink.c	/^FontSpec *platform_default_fontspec(const char *name)$/;"	f
platform_default_fontspec	unix/uxsftp.c	/^FontSpec *platform_default_fontspec(const char *name)$/;"	f
platform_default_fontspec	windows/windefs.c	/^FontSpec *platform_default_fontspec(const char *name)$/;"	f
platform_default_i	fuzzterm.c	/^int platform_default_i(const char *name, int def)$/;"	f
platform_default_i	unix/gtkwin.c	/^int platform_default_i(const char *name, int def)$/;"	f
platform_default_i	unix/uxpgnt.c	/^int platform_default_i(const char *name, int def) { return def; }$/;"	f
platform_default_i	unix/uxplink.c	/^int platform_default_i(const char *name, int def)$/;"	f
platform_default_i	unix/uxsftp.c	/^int platform_default_i(const char *name, int def)$/;"	f
platform_default_i	windows/windefs.c	/^int platform_default_i(const char *name, int def)$/;"	f
platform_default_s	fuzzterm.c	/^char *platform_default_s(const char *name)$/;"	f
platform_default_s	unix/gtkwin.c	/^char *platform_default_s(const char *name)$/;"	f
platform_default_s	unix/uxpgnt.c	/^char *platform_default_s(const char *name) { return NULL; }$/;"	f
platform_default_s	unix/uxplink.c	/^char *platform_default_s(const char *name)$/;"	f
platform_default_s	unix/uxsftp.c	/^char *platform_default_s(const char *name)$/;"	f
platform_default_s	windows/windefs.c	/^char *platform_default_s(const char *name)$/;"	f
platform_get_x11_auth	unix/ux_x11.c	/^void platform_get_x11_auth(struct X11Display *disp, Conf *conf)$/;"	f
platform_get_x11_auth	unix/uxsftp.c	/^void platform_get_x11_auth(struct X11Display *display, Conf *conf)$/;"	f
platform_get_x11_auth	windows/winsftp.c	/^void platform_get_x11_auth(struct X11Display *display, Conf *conf)$/;"	f
platform_get_x11_auth	windows/winx11.c	/^void platform_get_x11_auth(struct X11Display *disp, Conf *conf)$/;"	f
platform_get_x11_unix_address	unix/uxnet.c	/^SockAddr platform_get_x11_unix_address(const char *sockpath, int displaynum)$/;"	f
platform_get_x11_unix_address	windows/winnet.c	/^SockAddr platform_get_x11_unix_address(const char *display, int displaynum,$/;"	f
platform_get_x_display	unix/uxcons.c	/^char *platform_get_x_display(void) {$/;"	f
platform_get_x_display	unix/uxputty.c	/^char *platform_get_x_display(void) {$/;"	f
platform_get_x_display	windows/winmisc.c	/^char *platform_get_x_display(void) {$/;"	f
platform_new_connection	pproxy.c	/^Socket platform_new_connection(SockAddr addr, const char *hostname,$/;"	f
platform_new_connection	unix/uxproxy.c	/^Socket platform_new_connection(SockAddr addr, const char *hostname,$/;"	f
platform_new_connection	windows/winproxy.c	/^Socket platform_new_connection(SockAddr addr, const char *hostname,$/;"	f
platform_psftp_pre_conn_setup	unix/uxsftp.c	/^void platform_psftp_pre_conn_setup(void) {}$/;"	f
platform_psftp_pre_conn_setup	windows/winsftp.c	/^void platform_psftp_pre_conn_setup(void)$/;"	f
platform_ssh_share	noshare.c	/^int platform_ssh_share(const char *name, Conf *conf,$/;"	f
platform_ssh_share	unix/uxshare.c	/^int platform_ssh_share(const char *pi_name, Conf *conf,$/;"	f
platform_ssh_share	windows/winshare.c	/^int platform_ssh_share(const char *pi_name, Conf *conf,$/;"	f
platform_ssh_share_cleanup	noshare.c	/^void platform_ssh_share_cleanup(const char *name)$/;"	f
platform_ssh_share_cleanup	unix/uxshare.c	/^void platform_ssh_share_cleanup(const char *name)$/;"	f
platform_ssh_share_cleanup	windows/winshare.c	/^void platform_ssh_share_cleanup(const char *name)$/;"	f
platform_uses_x11_unix_by_default	unix/ux_x11.c	/^const int platform_uses_x11_unix_by_default = TRUE;$/;"	v
platform_uses_x11_unix_by_default	unix/uxsftp.c	/^const int platform_uses_x11_unix_by_default = TRUE;$/;"	v
platform_uses_x11_unix_by_default	windows/winsftp.c	/^const int platform_uses_x11_unix_by_default = TRUE;$/;"	v
platform_uses_x11_unix_by_default	windows/winx11.c	/^const int platform_uses_x11_unix_by_default = FALSE;$/;"	v
plen	ldisc.c	/^static int plen(Ldisc ldisc, unsigned char c)$/;"	f	file:
plen	sshdh.c	/^    int plen, glen;$/;"	m	struct:dh_extra	file:
plink	doc/Chapter7.html	/^<h1><a name="plink"><\/a><a name="C7"><\/a>Chapter 7: Using the command-line connection tool <a name="i0"><\/a>Plink<\/h1>$/;"	a
plink-batch	doc/Chapter7.html	/^<h2><a name="plink-batch"><\/a><a name="S7.3"><\/a>7.3 Using Plink in <a name="i14"><\/a>batch files and <a name="i15"><\/a>scripts<\/h2>$/;"	a
plink-cvs	doc/Chapter7.html	/^<h2><a name="plink-cvs"><\/a><a name="S7.4"><\/a>7.4 Using Plink with <a name="i16"><\/a>CVS<\/h2>$/;"	a
plink-option-batch	doc/Chapter7.html	/^<h4><a name="plink-option-batch"><\/a><a name="S7.2.3.1"><\/a>7.2.3.1 <a name="i10"><\/a><code>-batch<\/code>: disable all interactive prompts<\/h4>$/;"	a
plink-option-s	doc/Chapter7.html	/^<h4><a name="plink-option-s"><\/a><a name="S7.2.3.2"><\/a>7.2.3.2 <a name="i11"><\/a><code>-s<\/code>: remote command is SSH subsystem<\/h4>$/;"	a
plink-option-shareexists	doc/Chapter7.html	/^<h4><a name="plink-option-shareexists"><\/a><a name="S7.2.3.3"><\/a>7.2.3.3 <a name="i13"><\/a><code>-shareexists<\/code>: test for connection-sharing upstream<\/h4>$/;"	a
plink-options	doc/Chapter7.html	/^<h3><a name="plink-options"><\/a><a name="S7.2.3"><\/a>7.2.3 Plink command line options<\/h3>$/;"	a
plink-starting	doc/Chapter7.html	/^<h2><a name="plink-starting"><\/a><a name="S7.1"><\/a>7.1 Starting Plink<\/h2>$/;"	a
plink-usage	doc/Chapter7.html	/^<h2><a name="plink-usage"><\/a><a name="S7.2"><\/a>7.2 Using Plink<\/h2>$/;"	a
plink-usage-batch	doc/Chapter7.html	/^<h3><a name="plink-usage-batch"><\/a><a name="S7.2.2"><\/a>7.2.2 Using Plink for automated connections<\/h3>$/;"	a
plink-usage-interactive	doc/Chapter7.html	/^<h3><a name="plink-usage-interactive"><\/a><a name="S7.2.1"><\/a>7.2.1 Using Plink for interactive logins<\/h3>$/;"	a
plink-wincvs	doc/Chapter7.html	/^<h2><a name="plink-wincvs"><\/a><a name="S7.5"><\/a>7.5 Using Plink with <a name="i18"><\/a>WinCVS<\/h2>$/;"	a
plink_DEPENDENCIES	Makefile	/^plink_DEPENDENCIES = libversion.a$/;"	m
plink_LDADD	Makefile	/^plink_LDADD = libversion.a$/;"	m
plink_OBJECTS	Makefile	/^plink_OBJECTS = $(am_plink_OBJECTS)$/;"	m
plink_SOURCES	Makefile	/^plink_SOURCES = aqsync.c be_all_s.c be_misc.c callback.c cmdline.c conf.c \\$/;"	m
plog	pageant.c	/^static void plog(void *logctx, pageant_logfn_t logfn, const char *fmt, ...)$/;"	f	file:
plug	errsock.c	/^    Plug plug;$/;"	m	struct:Socket_error_tag	file:
plug	network.h	/^    Plug(*plug) (Socket s, Plug p);$/;"	m	struct:socket_function_table
plug	proxy.h	/^    Plug plug;$/;"	m	struct:Socket_proxy_tag
plug	unix/uxnet.c	/^    Plug plug;$/;"	m	struct:Socket_tag	file:
plug	unix/uxproxy.c	/^    Plug plug;$/;"	m	struct:Socket_localproxy_tag	file:
plug	windows/winhsock.c	/^    Plug plug;$/;"	m	struct:Socket_handle_tag	file:
plug	windows/winnet.c	/^    Plug plug;$/;"	m	struct:Socket_tag	file:
plug	windows/winnps.c	/^    Plug plug;$/;"	m	struct:Socket_named_pipe_server_tag	file:
plug_accepting	network.h	162;"	d
plug_closing	network.h	159;"	d
plug_function_table	network.h	/^struct plug_function_table {$/;"	s
plug_log	network.h	158;"	d
plug_proxy_accepting	proxy.c	/^static int plug_proxy_accepting(Plug p,$/;"	f	file:
plug_proxy_closing	proxy.c	/^static void plug_proxy_closing (Plug p, const char *error_msg,$/;"	f	file:
plug_proxy_log	proxy.c	/^static void plug_proxy_log(Plug plug, int type, SockAddr addr, int port,$/;"	f	file:
plug_proxy_receive	proxy.c	/^static void plug_proxy_receive (Plug p, int urgent, char *data, int len)$/;"	f	file:
plug_proxy_sent	proxy.c	/^static void plug_proxy_sent (Plug p, int bufsize)$/;"	f	file:
plug_receive	network.h	160;"	d
plug_sent	network.h	161;"	d
poly1305	sshccp.c	/^struct poly1305 {$/;"	s	file:
poly1305_feed	sshccp.c	/^static void poly1305_feed(struct poly1305 *ctx,$/;"	f	file:
poly1305_feed_chunk	sshccp.c	/^static void poly1305_feed_chunk(struct poly1305 *ctx,$/;"	f	file:
poly1305_finalise	sshccp.c	/^static void poly1305_finalise(struct poly1305 *ctx, unsigned char *mac)$/;"	f	file:
poly1305_init	sshccp.c	/^static void poly1305_init(struct poly1305 *ctx)$/;"	f	file:
poly1305_key	sshccp.c	/^static void poly1305_key(struct poly1305 *ctx, const unsigned char *key)$/;"	f	file:
poly_bytes	sshccp.c	/^static void poly_bytes(void *handle, unsigned char const *blk, int len)$/;"	f	file:
poly_free_context	sshccp.c	/^static void poly_free_context(void *ctx)$/;"	f	file:
poly_generate	sshccp.c	/^static void poly_generate(void *handle, unsigned char *blk, int len, unsigned long seq)$/;"	f	file:
poly_genresult	sshccp.c	/^static void poly_genresult(void *handle, unsigned char *blk)$/;"	f	file:
poly_make_context	sshccp.c	/^static void *poly_make_context(void *ctx)$/;"	f	file:
poly_op	sshccp.c	/^static void poly_op(void *handle, unsigned char *blk, int len, unsigned long seq)$/;"	f	file:
poly_setkey	sshccp.c	/^static void poly_setkey(void *ctx, unsigned char *key)$/;"	f	file:
poly_start	sshccp.c	/^static void poly_start(void *handle)$/;"	f	file:
poly_verify	sshccp.c	/^static int poly_verify(void *handle, unsigned char *blk, int len, unsigned long seq)$/;"	f	file:
poly_verresult	sshccp.c	/^static int poly_verresult(void *handle, unsigned char const *blk)$/;"	f	file:
pool	sshrand.c	/^    unsigned char pool[POOLSIZE];$/;"	m	struct:RandPool	file:
pool	sshrand.c	/^static struct RandPool pool;$/;"	v	typeref:struct:RandPool	file:
poolpos	sshrand.c	/^    int poolpos;$/;"	m	struct:RandPool	file:
popup_menus	windows/window.c	/^} popup_menus[2];$/;"	v	typeref:struct:__anon134	file:
port	config.c	/^    union control *host, *port;$/;"	m	struct:hostport	typeref:union:hostport::	file:
port	portfwd.c	/^    int port;$/;"	m	struct:PortForwarding	file:
port	portfwd.c	/^    int port;$/;"	m	struct:PortListener	file:
port	ssh.h	/^    int port;$/;"	m	struct:X11Display
port	sshshare.c	/^    int port;$/;"	m	struct:share_forwarding	file:
port	unix/uxnet.c	/^    int privport, port;                \/* and again *\/$/;"	m	struct:Socket_tag	file:
port	windows/winnet.c	/^    int port;$/;"	m	struct:Socket_tag	file:
port	windows/winser.c	/^    HANDLE port;$/;"	m	struct:serial_backend_data	file:
portfwd_data	config.c	/^struct portfwd_data {$/;"	s	file:
portfwd_handler	config.c	/^static void portfwd_handler(union control *ctrl, void *dlg,$/;"	f	file:
portfwds	ssh.c	/^    tree234 *rportfwds, *portfwds;$/;"	m	struct:ssh_tag	file:
pos	terminal.c	/^    size_t pos;		\/* cursor position *\/$/;"	m	struct:term_userpass_state	file:
pos	terminal.h	/^} pos;$/;"	t	typeref:struct:__anon109
posPle	terminal.c	22;"	d	file:
posPlt	terminal.c	21;"	d	file:
posdiff	terminal.c	18;"	d	file:
poseq	terminal.c	17;"	d	file:
posle	terminal.c	16;"	d	file:
poslt	terminal.c	15;"	d	file:
post_bidi_cache	terminal.h	/^    struct bidi_cache_entry *pre_bidi_cache, *post_bidi_cache;$/;"	m	struct:terminal_tag	typeref:struct:terminal_tag::
post_main	unix/gtkcomm.c	/^void post_main(void)$/;"	f
postmsg	unix/uxcons.c	/^void postmsg(struct termios *cf)$/;"	f
power_on	terminal.c	/^static void power_on(Terminal *term, int clear)$/;"	f	file:
pp_keyword	contrib/make1305.py	/^    pp_keyword = "#elif"$/;"	v
pp_keyword	contrib/make1305.py	/^pp_keyword = "#if"$/;"	v
pre_bidi_cache	terminal.h	/^    struct bidi_cache_entry *pre_bidi_cache, *post_bidi_cache;$/;"	m	struct:terminal_tag	typeref:struct:terminal_tag::bidi_cache_entry
preferred_drawtype	unix/gtkfont.h	/^    int preferred_drawtype;$/;"	m	struct:unifont
prefix	Makefile	/^prefix = \/usr\/local$/;"	m
prefix	psftp.c	/^    char *wildcard, *prefix;$/;"	m	struct:SftpWildcardMatcher	file:
prefix	unix/gtkfont.c	/^    const char *prefix;$/;"	m	struct:unifont_vtable	file:
prefix	unix/osxlaunch.c	/^char *prefix, *prefixset, *prefixunset;$/;"	v
prefixes	testdata/bignum.py	/^prefixes = [2**63, int(2**63.5), 2**64-1]$/;"	v
prefixlen	unix/osxlaunch.c	/^    int len, prefixlen;$/;"	m	struct:node	file:
prefixlen	unix/osxlaunch.c	/^    int prefixlen;$/;"	m	struct:bucket	file:
prefixset	unix/osxlaunch.c	/^char *prefix, *prefixset, *prefixunset;$/;"	v
prefixunset	unix/osxlaunch.c	/^char *prefix, *prefixset, *prefixunset;$/;"	v
prefslist	windows/winctrls.c	/^void prefslist(struct prefslist *hdl, struct ctlpos *cp, int lines,$/;"	f
prefslist	windows/winstuff.h	/^struct prefslist {$/;"	s
premsg	unix/uxcons.c	/^void premsg(struct termios *cf)$/;"	f
preserve	pscp.c	/^static int preserve = 0;$/;"	v	file:
prev	contrib/cygtermd/sel.c	/^    sel_rfd *prev, *next;$/;"	m	struct:sel_rfd	file:
prev	contrib/cygtermd/sel.c	/^    sel_wfd *prev, *next;$/;"	m	struct:sel_wfd	file:
prev	sftp.c	/^    struct req *next, *prev;$/;"	m	struct:req	typeref:struct:req::	file:
prev	sshzlib.c	/^    short next, prev;		       \/* array indices within the window *\/$/;"	m	struct:WindowEntry	file:
prev_cols	windows/window.c	/^static int prev_rows, prev_cols;$/;"	v	file:
prev_rows	windows/window.c	/^static int prev_rows, prev_cols;$/;"	v	file:
prev_stats_len	pscp.c	/^static int prev_stats_len = 0;$/;"	v	file:
preview_area	unix/gtkfont.c	/^    GtkWidget *preview_area;$/;"	m	struct:unifontsel_internal	file:
preview_bg	unix/gtkfont.c	/^    GdkColor preview_fg, preview_bg;$/;"	m	struct:unifontsel_internal	file:
preview_fg	unix/gtkfont.c	/^    GdkColor preview_fg, preview_bg;$/;"	m	struct:unifontsel_internal	file:
preview_height	unix/gtkfont.c	/^    int preview_width, preview_height;$/;"	m	struct:unifontsel_internal	file:
preview_pixmap	unix/gtkfont.c	/^    GdkPixmap *preview_pixmap;$/;"	m	struct:unifontsel_internal	file:
preview_width	unix/gtkfont.c	/^    int preview_width, preview_height;$/;"	m	struct:unifontsel_internal	file:
primary	conf.c	/^    int primary;$/;"	m	struct:constkey	file:
primary	conf.c	/^    int primary;$/;"	m	struct:key	file:
primegen	sshprime.c	/^Bignum primegen(int bits, int modulus, int residue, Bignum factor,$/;"	f
primes	sshprime.c	/^static const unsigned short primes[] = {$/;"	v	file:
print_job	terminal.h	/^    printer_job *print_job;$/;"	m	struct:terminal_tag
print_state	terminal.h	/^    int print_state;		       \/* state of print-end-sequence scan *\/$/;"	m	struct:terminal_tag
print_stats	pscp.c	/^static void print_stats(const char *name, uint64 size, uint64 done,$/;"	f	file:
printer_add_enum	windows/winprint.c	/^static int printer_add_enum(int param, DWORD level, char **buffer,$/;"	f	file:
printer_buf	terminal.h	/^    bufchain printer_buf;	       \/* buffered data for printer *\/$/;"	m	struct:terminal_tag
printer_enum	putty.h	/^typedef struct printer_enum_tag printer_enum;$/;"	t	typeref:struct:printer_enum_tag
printer_enum_tag	windows/winprint.c	/^struct printer_enum_tag {$/;"	s	file:
printer_finish_enum	noprint.c	/^void printer_finish_enum(printer_enum *pe)$/;"	f
printer_finish_enum	unix/uxprint.c	/^void printer_finish_enum(printer_enum *pe) { }$/;"	f
printer_finish_enum	windows/winprint.c	/^void printer_finish_enum(printer_enum *pe)$/;"	f
printer_finish_job	noprint.c	/^void printer_finish_job(printer_job *pj)$/;"	f
printer_finish_job	unix/uxprint.c	/^void printer_finish_job(printer_job *pj)$/;"	f
printer_finish_job	windows/winprint.c	/^void printer_finish_job(printer_job *pj)$/;"	f
printer_get_name	noprint.c	/^char *printer_get_name(printer_enum *pe, int i)$/;"	f
printer_get_name	unix/uxprint.c	/^char *printer_get_name(printer_enum *pe, int i) { return NULL;$/;"	f
printer_get_name	windows/winprint.c	/^char *printer_get_name(printer_enum *pe, int i)$/;"	f
printer_job	putty.h	/^typedef struct printer_job_tag printer_job;$/;"	t	typeref:struct:printer_job_tag
printer_job_data	noprint.c	/^void printer_job_data(printer_job *pj, void *data, int len)$/;"	f
printer_job_data	unix/uxprint.c	/^void printer_job_data(printer_job *pj, void *data, int len)$/;"	f
printer_job_data	windows/winprint.c	/^void printer_job_data(printer_job *pj, void *data, int len)$/;"	f
printer_job_tag	noprint.c	/^struct printer_job_tag {$/;"	s	file:
printer_job_tag	unix/uxprint.c	/^struct printer_job_tag {$/;"	s	file:
printer_job_tag	windows/winprint.c	/^struct printer_job_tag {$/;"	s	file:
printer_start_enum	noprint.c	/^printer_enum *printer_start_enum(int *nprinters_ptr)$/;"	f
printer_start_enum	unix/uxprint.c	/^printer_enum *printer_start_enum(int *nprinters_ptr) {$/;"	f
printer_start_enum	windows/winprint.c	/^printer_enum *printer_start_enum(int *nprinters_ptr)$/;"	f
printer_start_job	noprint.c	/^printer_job *printer_start_job(char *printer)$/;"	f
printer_start_job	unix/uxprint.c	/^printer_job *printer_start_job(char *printer)$/;"	f
printer_start_job	windows/winprint.c	/^printer_job *printer_start_job(char *printer)$/;"	f
printerbox_handler	config.c	/^static void printerbox_handler(union control *ctrl, void *dlg,$/;"	f	file:
printing	terminal.h	/^    int printing, only_printing;       \/* Are we doing ANSI printing? *\/$/;"	m	struct:terminal_tag
privateKey	ssh.h	/^    Bignum privateKey;$/;"	m	struct:ec_key
private_blob	ssh.h	/^    unsigned char *(*private_blob) (void *key, int *len);$/;"	m	struct:ssh_signkey
private_exponent	ssh.h	/^    Bignum private_exponent;$/;"	m	struct:RSAKey
privatelen	import.c	/^    int privatelen;$/;"	m	struct:openssh_new_key	file:
privatestr	import.c	/^    unsigned char *privatestr;$/;"	m	struct:openssh_new_key	file:
privdata	windows/winhandl.c	/^    void *privdata;		       \/* for client to remember who they are *\/$/;"	m	struct:handle_foreign	file:
privdata	windows/winhandl.c	/^    void *privdata;		       \/* for client to remember who they are *\/$/;"	m	struct:handle_generic	file:
privdata	windows/winhandl.c	/^    void *privdata;		       \/* for client to remember who they are *\/$/;"	m	struct:handle_input	file:
privdata	windows/winhandl.c	/^    void *privdata;		       \/* for client to remember who they are *\/$/;"	m	struct:handle_output	file:
privdata	windows/winstuff.h	/^    tree234 *privdata;		       \/* stores per-control private data *\/$/;"	m	struct:dlgparam
privport	unix/uxnet.c	/^    int privport, port;                \/* and again *\/$/;"	m	struct:Socket_tag	file:
privport	windows/winnet.c	/^    int oobinline, nodelay, keepalive, privport;$/;"	m	struct:Socket_tag	file:
proc_rec_opt	contrib/cygtermd/telnet.c	/^static void proc_rec_opt(Telnet telnet, int cmd, int option)$/;"	f	file:
proc_rec_opt	telnet.c	/^static void proc_rec_opt(Telnet telnet, int cmd, int option)$/;"	f	file:
process_clipdata	windows/window.c	/^static int process_clipdata(HGLOBAL clipdata, int unicode)$/;"	f	file:
process_nonoption_arg	unix/uxpterm.c	/^int process_nonoption_arg(const char *arg, Conf *conf, int *allow_launch)$/;"	f
process_nonoption_arg	unix/uxputty.c	/^int process_nonoption_arg(const char *arg, Conf *conf, int *allow_launch)$/;"	f
process_subneg	contrib/cygtermd/telnet.c	/^static void process_subneg(Telnet telnet)$/;"	f	file:
process_subneg	telnet.c	/^static void process_subneg(Telnet telnet)$/;"	f	file:
progbar	windows/winpgen.c	/^    HWND progbar;$/;"	m	struct:progress	file:
progfn_t	ssh.h	/^typedef void (*progfn_t) (void *param, int action, int phase, int progress);$/;"	t
progname	unix/gtkmain.c	/^static char *progname, **gtkargvstart;$/;"	v	file:
prognames	mkfiles.pl	/^sub prognames {$/;"	s
program_details	missing	/^program_details ()$/;"	f
program_transform_name	Makefile	/^program_transform_name = s,x,x,$/;"	m
progrealnames	mkfiles.pl	/^sub progrealnames {$/;"	s
progress	cmdgen.c	/^struct progress {$/;"	s	file:
progress	windows/winpgen.c	/^struct progress {$/;"	s	file:
progress_update	cmdgen.c	/^static void progress_update(void *param, int action, int phase, int iprogress)$/;"	f	file:
progress_update	windows/winpgen.c	/^static void progress_update(void *param, int action, int phase, int iprogress)$/;"	f	file:
progressbar	windows/winctrls.c	/^void progressbar(struct ctlpos *cp, int id)$/;"	f
progressbar	windows/winpgen.c	/^    HWND progressbar;		       \/* notify this with progress *\/$/;"	m	struct:rsa_key_thread_params	file:
prompt	putty.h	/^    char *prompt;$/;"	m	struct:__anon66
prompt	rlogin.c	/^    prompts_t *prompt;$/;"	m	struct:rlogin_tag	file:
prompt_add_keyfile	windows/winpgnt.c	/^static void prompt_add_keyfile(void)$/;"	f	file:
prompt_ensure_result_size	misc.c	/^void prompt_ensure_result_size(prompt_t *pr, int newlen)$/;"	f
prompt_keyfile	windows/winpgen.c	/^static int prompt_keyfile(HWND hwnd, char *dlgtitle,$/;"	f	file:
prompt_set_result	misc.c	/^void prompt_set_result(prompt_t *pr, const char *newstr)$/;"	f
prompt_t	putty.h	/^} prompt_t;$/;"	t	typeref:struct:__anon66
promptlabel	unix/gtkask.c	/^    GtkWidget *dialog, *promptlabel;$/;"	m	struct:askpass_ctx	file:
prompts	cmdgen.c	/^const char *prompts[3];$/;"	v
prompts	putty.h	/^    prompt_t **prompts;$/;"	m	struct:__anon67
prompts_t	putty.h	/^} prompts_t;$/;"	t	typeref:struct:__anon67
promptsgot	cmdgen.c	/^int nprompts, promptsgot;$/;"	v
proto	ssh.h	/^    int proto;$/;"	m	struct:X11FakeAuth
protocol	ldisc.h	/^    int telnet_keyboard, telnet_newline, protocol, localecho, localedit;$/;"	m	struct:ldisc_tag
protocol	putty.h	/^    int protocol;$/;"	m	struct:backend_tag
protocol	ssh.c	/^    void (*protocol) (Ssh ssh, const void *vin, int inlen,$/;"	m	struct:ssh_tag	file:
protocol_initial_phase_done	ssh.c	/^    int protocol_initial_phase_done;$/;"	m	struct:ssh_tag	file:
protoname	ssh.h	/^    char *protoname;$/;"	m	struct:X11FakeAuth
prototypes	configure	/^   function prototypes and stuff, but not '\\xHH' hex character constants.$/;"	f
provide_ldisc	putty.h	/^    void (*provide_ldisc) (void *handle, void *ldisc);$/;"	m	struct:backend_tag
provide_logctx	putty.h	/^    void (*provide_logctx) (void *handle, void *logctx);$/;"	m	struct:backend_tag
provide_xrm_string	unix/uxstore.c	/^void provide_xrm_string(char *string)$/;"	f
proxy_activate	proxy.c	/^void proxy_activate (Proxy_Socket p)$/;"	f
proxy_for_destination	proxy.c	/^int proxy_for_destination (SockAddr addr, const char *hostname,$/;"	f
proxy_http_negotiate	proxy.c	/^int proxy_http_negotiate (Proxy_Socket p, int change)$/;"	f
proxy_socket	proxy.h	/^    Proxy_Socket proxy_socket;$/;"	m	struct:Plug_proxy_tag
proxy_socks4_negotiate	proxy.c	/^int proxy_socks4_negotiate (Proxy_Socket p, int change)$/;"	f
proxy_socks5_handlechap	cproxy.c	/^int proxy_socks5_handlechap (Proxy_Socket p)$/;"	f
proxy_socks5_handlechap	nocproxy.c	/^int proxy_socks5_handlechap (Proxy_Socket p)$/;"	f
proxy_socks5_negotiate	proxy.c	/^int proxy_socks5_negotiate (Proxy_Socket p, int change)$/;"	f
proxy_socks5_offerencryptedauth	cproxy.c	/^void proxy_socks5_offerencryptedauth(char *command, int *len)$/;"	f
proxy_socks5_offerencryptedauth	nocproxy.c	/^void proxy_socks5_offerencryptedauth(char * command, int * len)$/;"	f
proxy_socks5_selectchap	cproxy.c	/^int proxy_socks5_selectchap(Proxy_Socket p)$/;"	f
proxy_socks5_selectchap	nocproxy.c	/^int proxy_socks5_selectchap(Proxy_Socket p)$/;"	f
proxy_telnet_negotiate	proxy.c	/^int proxy_telnet_negotiate (Proxy_Socket p, int change)$/;"	f
pscp	doc/Chapter5.html	/^<h1><a name="pscp"><\/a><a name="C5"><\/a>Chapter 5: Using <a name="i0"><\/a>PSCP to transfer files securely<\/h1>$/;"	a
pscp-pubkey	doc/Chapter5.html	/^<h3><a name="pscp-pubkey"><\/a><a name="S5.2.4"><\/a>5.2.4 Using <a name="i36"><\/a>public key authentication with PSCP<\/h3>$/;"	a
pscp-retval	doc/Chapter5.html	/^<h3><a name="pscp-retval"><\/a><a name="S5.2.3"><\/a>5.2.3 <a name="i33"><\/a>Return value<\/h3>$/;"	a
pscp-starting	doc/Chapter5.html	/^<h2><a name="pscp-starting"><\/a><a name="S5.1"><\/a>5.1 Starting PSCP<\/h2>$/;"	a
pscp-usage	doc/Chapter5.html	/^<h2><a name="pscp-usage"><\/a><a name="S5.2"><\/a>5.2 PSCP Usage<\/h2>$/;"	a
pscp-usage-basics	doc/Chapter5.html	/^<h3><a name="pscp-usage-basics"><\/a><a name="S5.2.1"><\/a>5.2.1 The basics<\/h3>$/;"	a
pscp-usage-basics-host	doc/Chapter5.html	/^<h4><a name="pscp-usage-basics-host"><\/a><a name="S5.2.1.2"><\/a>5.2.1.2 <a name="i15"><\/a><code>host<\/code><\/h4>$/;"	a
pscp-usage-basics-source	doc/Chapter5.html	/^<h4><a name="pscp-usage-basics-source"><\/a><a name="S5.2.1.3"><\/a>5.2.1.3 <code>source<\/code><\/h4>$/;"	a
pscp-usage-basics-target	doc/Chapter5.html	/^<h4><a name="pscp-usage-basics-target"><\/a><a name="S5.2.1.4"><\/a>5.2.1.4 <code>target<\/code><\/h4>$/;"	a
pscp-usage-basics-user	doc/Chapter5.html	/^<h4><a name="pscp-usage-basics-user"><\/a><a name="S5.2.1.1"><\/a>5.2.1.1 <code>user<\/code><\/h4>$/;"	a
pscp-usage-options	doc/Chapter5.html	/^<h3><a name="pscp-usage-options"><\/a><a name="S5.2.2"><\/a>5.2.2 Options<\/h3>$/;"	a
pscp-usage-options-backend	doc/Chapter5.html	/^<h4><a name="pscp-usage-options-backend"><\/a><a name="S5.2.2.6"><\/a>5.2.2.6 <a name="i28"><\/a><code>-sftp<\/code>, <a name="i29"><\/a><code>-scp<\/code> force use of particular protocol<\/h4>$/;"	a
pscp-usage-options-batch	doc/Chapter5.html	/^<h4><a name="pscp-usage-options-batch"><\/a><a name="S5.2.2.5"><\/a>5.2.2.5 <a name="i27"><\/a><code>-batch<\/code> avoid interactive prompts<\/h4>$/;"	a
pscp-usage-options-ls	doc/Chapter5.html	/^<h4><a name="pscp-usage-options-ls"><\/a><a name="S5.2.2.1"><\/a>5.2.2.1 <a name="i18"><\/a><code>-ls<\/code> <a name="i19"><\/a>list remote files<\/h4>$/;"	a
pscp-usage-options-p	doc/Chapter5.html	/^<h4><a name="pscp-usage-options-p"><\/a><a name="S5.2.2.2"><\/a>5.2.2.2 <a name="i20"><\/a><code>-p<\/code> <a name="i21"><\/a>preserve file attributes<\/h4>$/;"	a
pscp-usage-options-q	doc/Chapter5.html	/^<h4><a name="pscp-usage-options-q"><\/a><a name="S5.2.2.3"><\/a>5.2.2.3 <a name="i23"><\/a><code>-q<\/code> quiet, don't show <a name="i24"><\/a>statistics<\/h4>$/;"	a
pscp-usage-options-r	doc/Chapter5.html	/^<h4><a name="pscp-usage-options-r"><\/a><a name="S5.2.2.4"><\/a>5.2.2.4 <a name="i25"><\/a><code>-r<\/code> copies directories <a name="i26"><\/a>recursively<\/h4>$/;"	a
pscp_DEPENDENCIES	Makefile	/^pscp_DEPENDENCIES = libversion.a$/;"	m
pscp_LDADD	Makefile	/^pscp_LDADD = libversion.a$/;"	m
pscp_OBJECTS	Makefile	/^pscp_OBJECTS = $(am_pscp_OBJECTS)$/;"	m
pscp_SOURCES	Makefile	/^pscp_SOURCES = aqsync.c be_misc.c be_ssh.c callback.c cmdline.c conf.c \\$/;"	m
pscp_icon	icons/mkicon.py	/^def pscp_icon(size):$/;"	f
psd	windows/winnps.c	/^    PSECURITY_DESCRIPTOR psd;$/;"	m	struct:Socket_named_pipe_server_tag	file:
psdir	Makefile	/^psdir = ${docdir}$/;"	m
psftp	doc/Chapter6.html	/^<h1><a name="psftp"><\/a><a name="C6"><\/a>Chapter 6: Using <a name="i0"><\/a>PSFTP to transfer files securely<\/h1>$/;"	a
psftp-cmd-cd	doc/Chapter6.html	/^<h3><a name="psftp-cmd-cd"><\/a><a name="S6.2.7"><\/a>6.2.7 The <code>cd<\/code> and <code>pwd<\/code> commands: changing the remote <a name="i16"><\/a>working directory<\/h3>$/;"	a
psftp-cmd-chmod	doc/Chapter6.html	/^<h3><a name="psftp-cmd-chmod"><\/a><a name="S6.2.14"><\/a>6.2.14 The <code>chmod<\/code> command: change permissions on remote files<\/h3>$/;"	a
psftp-cmd-close	doc/Chapter6.html	/^<h3><a name="psftp-cmd-close"><\/a><a name="S6.2.5"><\/a>6.2.5 The <code>close<\/code> command: close your connection<\/h3>$/;"	a
psftp-cmd-del	doc/Chapter6.html	/^<h3><a name="psftp-cmd-del"><\/a><a name="S6.2.15"><\/a>6.2.15 The <code>del<\/code> command: delete remote files<\/h3>$/;"	a
psftp-cmd-dir	doc/Chapter6.html	/^<h3><a name="psftp-cmd-dir"><\/a><a name="S6.2.13"><\/a>6.2.13 The <code>dir<\/code> command: <a name="i24"><\/a>list remote files<\/h3>$/;"	a
psftp-cmd-get	doc/Chapter6.html	/^<h3><a name="psftp-cmd-get"><\/a><a name="S6.2.9"><\/a>6.2.9 The <code>get<\/code> command: fetch a file from the server<\/h3>$/;"	a
psftp-cmd-help	doc/Chapter6.html	/^<h3><a name="psftp-cmd-help"><\/a><a name="S6.2.6"><\/a>6.2.6 The <code>help<\/code> command: get quick online help<\/h3>$/;"	a
psftp-cmd-lcd	doc/Chapter6.html	/^<h3><a name="psftp-cmd-lcd"><\/a><a name="S6.2.8"><\/a>6.2.8 The <code>lcd<\/code> and <code>lpwd<\/code> commands: changing the local <a name="i17"><\/a>working directory<\/h3>$/;"	a
psftp-cmd-mgetput	doc/Chapter6.html	/^<h3><a name="psftp-cmd-mgetput"><\/a><a name="S6.2.11"><\/a>6.2.11 The <code>mget<\/code> and <code>mput<\/code> commands: fetch or send multiple files<\/h3>$/;"	a
psftp-cmd-mkdir	doc/Chapter6.html	/^<h3><a name="psftp-cmd-mkdir"><\/a><a name="S6.2.16"><\/a>6.2.16 The <code>mkdir<\/code> command: create remote directories<\/h3>$/;"	a
psftp-cmd-mv	doc/Chapter6.html	/^<h3><a name="psftp-cmd-mv"><\/a><a name="S6.2.18"><\/a>6.2.18 The <code>mv<\/code> command: move and <a name="i36"><\/a>rename remote files<\/h3>$/;"	a
psftp-cmd-open	doc/Chapter6.html	/^<h3><a name="psftp-cmd-open"><\/a><a name="S6.2.3"><\/a>6.2.3 The <code>open<\/code> command: start a session<\/h3>$/;"	a
psftp-cmd-pling	doc/Chapter6.html	/^<h3><a name="psftp-cmd-pling"><\/a><a name="S6.2.19"><\/a>6.2.19 The <code>!<\/code> command: run a <a name="i37"><\/a>local Windows command<\/h3>$/;"	a
psftp-cmd-put	doc/Chapter6.html	/^<h3><a name="psftp-cmd-put"><\/a><a name="S6.2.10"><\/a>6.2.10 The <code>put<\/code> command: send a file to the server<\/h3>$/;"	a
psftp-cmd-quit	doc/Chapter6.html	/^<h3><a name="psftp-cmd-quit"><\/a><a name="S6.2.4"><\/a>6.2.4 The <code>quit<\/code> command: end your session<\/h3>$/;"	a
psftp-cmd-regetput	doc/Chapter6.html	/^<h3><a name="psftp-cmd-regetput"><\/a><a name="S6.2.12"><\/a>6.2.12 The <code>reget<\/code> and <code>reput<\/code> commands: <a name="i23"><\/a>resuming file transfers<\/h3>$/;"	a
psftp-cmd-rmdir	doc/Chapter6.html	/^<h3><a name="psftp-cmd-rmdir"><\/a><a name="S6.2.17"><\/a>6.2.17 The <code>rmdir<\/code> command: remove remote directories<\/h3>$/;"	a
psftp-commands	doc/Chapter6.html	/^<h2><a name="psftp-commands"><\/a><a name="S6.2"><\/a>6.2 Running PSFTP<\/h2>$/;"	a
psftp-option-b	doc/Chapter6.html	/^<h3><a name="psftp-option-b"><\/a><a name="S6.1.1"><\/a>6.1.1 <a name="i6"><\/a><code>-b<\/code>: specify a file containing batch commands<\/h3>$/;"	a
psftp-option-bc	doc/Chapter6.html	/^<h3><a name="psftp-option-bc"><\/a><a name="S6.1.2"><\/a>6.1.2 <a name="i8"><\/a><code>-bc<\/code>: display batch commands as they are run<\/h3>$/;"	a
psftp-option-be	doc/Chapter6.html	/^<h3><a name="psftp-option-be"><\/a><a name="S6.1.3"><\/a>6.1.3 <a name="i9"><\/a><code>-be<\/code>: continue batch processing on errors<\/h3>$/;"	a
psftp-pubkey	doc/Chapter6.html	/^<h2><a name="psftp-pubkey"><\/a><a name="S6.3"><\/a>6.3 Using <a name="i38"><\/a>public key authentication with PSFTP<\/h2>$/;"	a
psftp-quoting	doc/Chapter6.html	/^<h3><a name="psftp-quoting"><\/a><a name="S6.2.1"><\/a>6.2.1 <a name="i12"><\/a>General quoting rules for PSFTP commands<\/h3>$/;"	a
psftp-starting	doc/Chapter6.html	/^<h2><a name="psftp-starting"><\/a><a name="S6.1"><\/a>6.1 Starting PSFTP<\/h2>$/;"	a
psftp-usage-options-batch	doc/Chapter6.html	/^<h3><a name="psftp-usage-options-batch"><\/a><a name="S6.1.4"><\/a>6.1.4 <a name="i10"><\/a><code>-batch<\/code>: avoid interactive prompts<\/h3>$/;"	a
psftp-wildcards	doc/Chapter6.html	/^<h3><a name="psftp-wildcards"><\/a><a name="S6.2.2"><\/a>6.2.2 Wildcards in PSFTP<\/h3>$/;"	a
psftp_DEPENDENCIES	Makefile	/^psftp_DEPENDENCIES = libversion.a$/;"	m
psftp_LDADD	Makefile	/^psftp_LDADD = libversion.a$/;"	m
psftp_OBJECTS	Makefile	/^psftp_OBJECTS = $(am_psftp_OBJECTS)$/;"	m
psftp_SOURCES	Makefile	/^psftp_SOURCES = aqsync.c be_misc.c be_ssh.c callback.c cmdline.c conf.c \\$/;"	m
psftp_connect	psftp.c	/^static int psftp_connect(char *userhost, char *user, int portnumber)$/;"	f	file:
psftp_getcwd	unix/uxsftp.c	/^char *psftp_getcwd(void)$/;"	f
psftp_getcwd	windows/winsftp.c	/^char *psftp_getcwd(void)$/;"	f
psftp_lcd	unix/uxsftp.c	/^char *psftp_lcd(char *dir)$/;"	f
psftp_lcd	windows/winsftp.c	/^char *psftp_lcd(char *dir)$/;"	f
psftp_main	pscp.c	/^int psftp_main(int argc, char *argv[])$/;"	f
psftp_main	psftp.c	/^int psftp_main(int argc, char *argv[])$/;"	f
pterm_DEPENDENCIES	Makefile	/^pterm_DEPENDENCIES = libversion.a $(am__DEPENDENCIES_1)$/;"	m
pterm_LDADD	Makefile	/^pterm_LDADD = libversion.a $(GTK_LIBS)$/;"	m
pterm_OBJECTS	Makefile	/^pterm_OBJECTS = $(am_pterm_OBJECTS)$/;"	m
pterm_SOURCES	Makefile	/^pterm_SOURCES = be_none.c callback.c charset\/fromucs.c charset\/localenc.c \\$/;"	m
pterm_icon	icons/mkicon.py	/^def pterm_icon(size):$/;"	f
ptermapp_DEPENDENCIES	Makefile	/^ptermapp_DEPENDENCIES = libversion.a \\$/;"	m
ptermapp_LDADD	Makefile	/^ptermapp_LDADD = libversion.a $(GTK_LIBS)$/;"	m
ptermapp_OBJECTS	Makefile	/^ptermapp_OBJECTS = $(am_ptermapp_OBJECTS)$/;"	m
ptermapp_SOURCES	Makefile	/^ptermapp_SOURCES = be_none.c callback.c charset\/fromucs.c charset\/localenc.c \\$/;"	m
ptermcfg_icon	icons/mkicon.py	/^def ptermcfg_icon(size):$/;"	f
pty	contrib/cygtermd/telnet.c	/^    sel_wfd *net, *pty;$/;"	m	struct:telnet_tag	file:
pty_argv	unix/uxpty.c	/^char **pty_argv;$/;"	v
pty_argv	unix/uxputty.c	/^char **pty_argv;		       \/* never used *\/$/;"	v
pty_backend	unix/uxpty.c	/^Backend pty_backend = {$/;"	v
pty_cfg_info	unix/uxpty.c	/^static int pty_cfg_info(void *handle)$/;"	f	file:
pty_close	unix/uxpty.c	/^static void pty_close(Pty pty)$/;"	f	file:
pty_compare_by_fd	unix/uxpty.c	/^static int pty_compare_by_fd(void *av, void *bv)$/;"	f	file:
pty_compare_by_pid	unix/uxpty.c	/^static int pty_compare_by_pid(void *av, void *bv)$/;"	f	file:
pty_connected	unix/uxpty.c	/^static int pty_connected(void *handle)$/;"	f	file:
pty_exitcode	unix/uxpty.c	/^static int pty_exitcode(void *handle)$/;"	f	file:
pty_find_by_fd	unix/uxpty.c	/^static int pty_find_by_fd(void *av, void *bv)$/;"	f	file:
pty_find_by_pid	unix/uxpty.c	/^static int pty_find_by_pid(void *av, void *bv)$/;"	f	file:
pty_free	unix/uxpty.c	/^static void pty_free(void *handle)$/;"	f	file:
pty_get_specials	unix/uxpty.c	/^static const struct telnet_special *pty_get_specials(void *handle)$/;"	f	file:
pty_init	unix/uxpty.c	/^static const char *pty_init(void *frontend, void **backend_handle, Conf *conf,$/;"	f	file:
pty_ldisc	unix/uxpty.c	/^static int pty_ldisc(void *handle, int option)$/;"	f	file:
pty_open_master	unix/uxpty.c	/^static void pty_open_master(Pty pty)$/;"	f	file:
pty_open_slave	unix/uxpty.c	/^static int pty_open_slave(Pty pty)$/;"	f	file:
pty_osx_envrestore_prefix	unix/uxpty.c	/^char *pty_osx_envrestore_prefix;$/;"	v
pty_osx_envrestore_prefix	unix/uxputty.c	/^char *pty_osx_envrestore_prefix;$/;"	v
pty_pre_init	unix/uxpty.c	/^void pty_pre_init(void)$/;"	f
pty_preinit	contrib/cygtermd/pty.c	/^void pty_preinit(void)$/;"	f
pty_provide_ldisc	unix/uxpty.c	/^static void pty_provide_ldisc(void *handle, void *ldisc)$/;"	f	file:
pty_provide_logctx	unix/uxpty.c	/^static void pty_provide_logctx(void *handle, void *logctx)$/;"	f	file:
pty_readdata	contrib/cygtermd/main.c	/^void pty_readdata(sel_rfd *rfd, void *data, size_t len)$/;"	f
pty_readerr	contrib/cygtermd/main.c	/^void pty_readerr(sel_rfd *rfd, int error)$/;"	f
pty_real_select_result	unix/uxpty.c	/^void pty_real_select_result(Pty pty, int event, int status)$/;"	f
pty_reconfig	unix/uxpty.c	/^static void pty_reconfig(void *handle, Conf *conf)$/;"	f	file:
pty_resize	contrib/cygtermd/pty.c	/^void pty_resize(int w, int h)$/;"	f
pty_select_result	unix/uxpty.c	/^void pty_select_result(int fd, int event)$/;"	f
pty_send	unix/uxpty.c	/^static int pty_send(void *handle, const char *buf, int len)$/;"	f	file:
pty_sendbuffer	unix/uxpty.c	/^static int pty_sendbuffer(void *handle)$/;"	f	file:
pty_sendok	unix/uxpty.c	/^static int pty_sendok(void *handle)$/;"	f	file:
pty_signal_pipe	unix/uxpty.c	/^static int pty_signal_pipe[2] = { -1, -1 };   \/* obviously bogus initial val *\/$/;"	v	file:
pty_size	unix/uxpty.c	/^static void pty_size(void *handle, int width, int height)$/;"	f	file:
pty_special	unix/uxpty.c	/^static void pty_special(void *handle, Telnet_Special code)$/;"	f	file:
pty_stamped_utmp	unix/uxpty.c	/^static int pty_stamped_utmp;$/;"	v	file:
pty_tag	unix/uxpty.c	/^struct pty_tag {$/;"	s	file:
pty_try_write	unix/uxpty.c	/^static void pty_try_write(Pty pty)$/;"	f	file:
pty_unthrottle	unix/uxpty.c	/^static void pty_unthrottle(void *handle, int backlog)$/;"	f	file:
pty_utmp_helper_pid	unix/uxpty.c	/^static pid_t pty_utmp_helper_pid = -1;$/;"	v	file:
pty_utmp_helper_pipe	unix/uxpty.c	/^static int pty_utmp_helper_pipe = -1;$/;"	v	file:
pty_uxsel_setup	unix/uxpty.c	/^static void pty_uxsel_setup(Pty pty)$/;"	f	file:
pty_writeerr	contrib/cygtermd/main.c	/^void pty_writeerr(sel_wfd *wfd, int error)$/;"	f
pty_written	contrib/cygtermd/main.c	/^void pty_written(sel_wfd *wfd, size_t bufsize)$/;"	f
ptyfd	contrib/cygtermd/main.c	/^int ptyfd;$/;"	v
ptyname	contrib/cygtermd/pty.c	/^static char ptyname[FILENAME_MAX];$/;"	v	file:
ptyr	contrib/cygtermd/main.c	/^sel_rfd *netr, *ptyr, *sigr;$/;"	v
ptys_by_fd	unix/uxpty.c	/^static tree234 *ptys_by_fd = NULL;$/;"	v	file:
ptys_by_pid	unix/uxpty.c	/^static tree234 *ptys_by_pid = NULL;$/;"	v	file:
ptyw	contrib/cygtermd/main.c	/^sel_wfd *netw, *ptyw;$/;"	v
pubkey	doc/Chapter8.html	/^<h1><a name="pubkey"><\/a><a name="C8"><\/a>Chapter 8: Using public keys for SSH authentication<\/h1>$/;"	a
pubkey-gettingready	doc/Chapter8.html	/^<h2><a name="pubkey-gettingready"><\/a><a name="S8.3"><\/a>8.3 Getting ready for public key authentication<\/h2>$/;"	a
pubkey-intro	doc/Chapter8.html	/^<h2><a name="pubkey-intro"><\/a><a name="S8.1"><\/a>8.1 <a name="i0"><\/a>Public key authentication - an introduction<\/h2>$/;"	a
pubkey-puttygen	doc/Chapter8.html	/^<h2><a name="pubkey-puttygen"><\/a><a name="S8.2"><\/a>8.2 Using <a name="i14"><\/a>PuTTYgen, the PuTTY key generator<\/h2>$/;"	a
pubkey_bits	ssh.h	/^    int (*pubkey_bits) (const struct ssh_signkey *self,$/;"	m	struct:ssh_signkey
publicKey	ssh.h	/^    struct ec_point publicKey;$/;"	m	struct:ec_key	typeref:struct:ec_key::ec_point
public_blob	ssh.h	/^    unsigned char *(*public_blob) (void *key, int *len);$/;"	m	struct:ssh_signkey
public_charset	unix/gtkfont.h	/^    int public_charset;$/;"	m	struct:unifont
put_mp	import.c	/^static int put_mp(void *target, void *data, int len)$/;"	f	file:
put_string	import.c	/^static int put_string(void *target, const void *data, int len)$/;"	f	file:
put_string_z	import.c	/^static int put_string_z(void *target, const char *string)$/;"	f	file:
put_uint32	import.c	/^static int put_uint32(void *target, unsigned val)$/;"	f	file:
putty_DEPENDENCIES	Makefile	/^putty_DEPENDENCIES = libversion.a $(am__DEPENDENCIES_1)$/;"	m
putty_LDADD	Makefile	/^putty_LDADD = libversion.a $(GTK_LIBS)$/;"	m
putty_OBJECTS	Makefile	/^putty_OBJECTS = $(am_putty_OBJECTS)$/;"	m
putty_SOURCES	Makefile	/^putty_SOURCES = aqsync.c be_all_s.c be_misc.c callback.c charset\/fromucs.c \\$/;"	m
putty_icon	icons/mkicon.py	/^def putty_icon(size):$/;"	f
putty_path	windows/winjump.c	/^static char putty_path[2048];$/;"	v	file:
putty_path	windows/winpgnt.c	/^static char *putty_path;$/;"	v	file:
putty_signal	unix/uxsignal.c	/^void (*putty_signal(int sig, void (*func)(int)))(int) {$/;"	f
puttyapp_DEPENDENCIES	Makefile	/^puttyapp_DEPENDENCIES = libversion.a \\$/;"	m
puttyapp_LDADD	Makefile	/^puttyapp_LDADD = libversion.a $(GTK_LIBS)$/;"	m
puttyapp_OBJECTS	Makefile	/^puttyapp_OBJECTS = $(am_puttyapp_OBJECTS)$/;"	m
puttyapp_SOURCES	Makefile	/^puttyapp_SOURCES = aqsync.c be_all_s.c be_misc.c callback.c \\$/;"	m
puttycfg_icon	icons/mkicon.py	/^def puttycfg_icon(size):$/;"	f
puttygen-comment	doc/Chapter8.html	/^<h3><a name="puttygen-comment"><\/a><a name="S8.2.6"><\/a>8.2.6 Setting a comment for your key<\/h3>$/;"	a
puttygen-conversions	doc/Chapter8.html	/^<h3><a name="puttygen-conversions"><\/a><a name="S8.2.12"><\/a>8.2.12 Dealing with private keys in other formats<\/h3>$/;"	a
puttygen-fingerprint	doc/Chapter8.html	/^<h3><a name="puttygen-fingerprint"><\/a><a name="S8.2.5"><\/a>8.2.5 The &#8216;<a name="i21"><\/a>Key fingerprint&#8217; box<\/h3>$/;"	a
puttygen-generate	doc/Chapter8.html	/^<h3><a name="puttygen-generate"><\/a><a name="S8.2.4"><\/a>8.2.4 The &#8216;Generate&#8217; button<\/h3>$/;"	a
puttygen-generating	doc/Chapter8.html	/^<h3><a name="puttygen-generating"><\/a><a name="S8.2.1"><\/a>8.2.1 Generating a new key<\/h3>$/;"	a
puttygen-keytype	doc/Chapter8.html	/^<h3><a name="puttygen-keytype"><\/a><a name="S8.2.2"><\/a>8.2.2 Selecting the type of key<\/h3>$/;"	a
puttygen-load	doc/Chapter8.html	/^<h3><a name="puttygen-load"><\/a><a name="S8.2.11"><\/a>8.2.11 Reloading a private key<\/h3>$/;"	a
puttygen-passphrase	doc/Chapter8.html	/^<h3><a name="puttygen-passphrase"><\/a><a name="S8.2.7"><\/a>8.2.7 Setting a <a name="i22"><\/a>passphrase for your key<\/h3>$/;"	a
puttygen-pastekey	doc/Chapter8.html	/^<h3><a name="puttygen-pastekey"><\/a><a name="S8.2.10"><\/a>8.2.10 &#8216;Public key for pasting into <a name="i29"><\/a>authorized_keys file&#8217;<\/h3>$/;"	a
puttygen-savepriv	doc/Chapter8.html	/^<h3><a name="puttygen-savepriv"><\/a><a name="S8.2.8"><\/a>8.2.8 Saving your private key to a disk file<\/h3>$/;"	a
puttygen-savepub	doc/Chapter8.html	/^<h3><a name="puttygen-savepub"><\/a><a name="S8.2.9"><\/a>8.2.9 Saving your public key to a disk file<\/h3>$/;"	a
puttygen-strength	doc/Chapter8.html	/^<h3><a name="puttygen-strength"><\/a><a name="S8.2.3"><\/a>8.2.3 Selecting the size (strength) of the key<\/h3>$/;"	a
puttygen_DEPENDENCIES	Makefile	/^puttygen_DEPENDENCIES = libversion.a$/;"	m
puttygen_LDADD	Makefile	/^puttygen_LDADD = libversion.a$/;"	m
puttygen_OBJECTS	Makefile	/^puttygen_OBJECTS = $(am_puttygen_OBJECTS)$/;"	m
puttygen_SOURCES	Makefile	/^puttygen_SOURCES = cmdgen.c conf.c import.c misc.c notiming.c sshaes.c \\$/;"	m
puttygen_icon	icons/mkicon.py	/^def puttygen_icon(size):$/;"	f
puttyins_icon	icons/mkicon.py	/^def puttyins_icon(size):$/;"	f
puttystr	windows/winstore.c	/^static const char *const puttystr = PUTTY_REG_POS "\\\\Sessions";$/;"	v	file:
puttytel_DEPENDENCIES	Makefile	/^puttytel_DEPENDENCIES = libversion.a \\$/;"	m
puttytel_LDADD	Makefile	/^puttytel_LDADD = libversion.a $(GTK_LIBS)$/;"	m
puttytel_OBJECTS	Makefile	/^puttytel_OBJECTS = $(am_puttytel_OBJECTS)$/;"	m
puttytel_SOURCES	Makefile	/^puttytel_SOURCES = be_misc.c be_nos_s.c callback.c charset\/fromucs.c \\$/;"	m
pwd	psftp.c	/^char *pwd, *homedir;$/;"	v
pwrite	ldisc.c	/^static void pwrite(Ldisc ldisc, unsigned char c)$/;"	f	file:
q	ssh.h	/^    Bignum p, q, g, y, x;$/;"	m	struct:dss_key
q	ssh.h	/^    Bignum q;$/;"	m	struct:RSAKey
q	sshdh.c	/^    Bignum x, e, p, q, qmask, g;$/;"	m	struct:dh_ctx	file:
q_saved_handler1	ssh.c	/^    handler_fn_t q_saved_handler1, q_saved_handler2;$/;"	m	struct:ssh_tag	file:
q_saved_handler2	ssh.c	/^    handler_fn_t q_saved_handler1, q_saved_handler2;$/;"	m	struct:ssh_tag	file:
qhead	ssh.c	/^    struct queued_handler *qhead, *qtail;$/;"	m	struct:ssh_tag	typeref:struct:ssh_tag::queued_handler	file:
qmask	sshdh.c	/^    Bignum x, e, p, q, qmask, g;$/;"	m	struct:dh_ctx	file:
qrop	sshccp.c	67;"	d	file:
qrop	sshccp.c	95;"	d	file:
qtail	ssh.c	/^    struct queued_handler *qhead, *qtail;$/;"	m	struct:ssh_tag	typeref:struct:ssh_tag::	file:
quarter	sshccp.c	73;"	d	file:
quarter	sshccp.c	96;"	d	file:
queue	logging.c	/^    bufchain queue;$/;"	m	struct:LogContext	file:
queue	ssh.c	/^    struct Packet **queue;$/;"	m	struct:ssh_tag	typeref:struct:ssh_tag::Packet	file:
queue_toplevel_callback	callback.c	/^void queue_toplevel_callback(toplevel_callback_fn_t fn, void *ctx)$/;"	f
queued_data	windows/winhandl.c	/^    bufchain queued_data;	       \/* data still waiting to be written *\/$/;"	m	struct:handle_output	file:
queued_handler	ssh.c	/^struct queued_handler {$/;"	s	file:
queued_incoming_data	ssh.c	/^    bufchain queued_incoming_data;$/;"	m	struct:ssh_tag	file:
queueing	ssh.c	/^    int queueing;$/;"	m	struct:ssh_tag	file:
queuelen	ssh.c	/^    int queuelen, queuesize;$/;"	m	struct:ssh_tag	file:
queuesize	ssh.c	/^    int queuelen, queuesize;$/;"	m	struct:ssh_tag	file:
quit_cb	unix/gtkapp.c	/^static void quit_cb(GSimpleAction *action,$/;"	f	file:
quit_help	windows/winhelp.c	/^void quit_help(HWND hwnd)$/;"	f
quotenext	ldisc.h	/^    int buflen, bufsiz, quotenext;$/;"	m	struct:ldisc_tag
r	sshccp.c	/^    bigval r;$/;"	m	struct:poly1305	file:
r	unix/gtkdlg.c	/^    struct { unsigned char r, g, b, ok; } coloursel_result;   \/* 0-255 *\/$/;"	m	struct:dlgparam::__anon116	file:
r	windows/winstuff.h	/^    struct { unsigned char r, g, b, ok; } coloursel_result;   \/* 0-255 *\/$/;"	m	struct:dlgparam::__anon149
radio	dialog.h	/^    } radio;$/;"	m	union:control	typeref:struct:control::__anon22
radio	windows/winctrls.c	/^struct radio { char *text; int id; };$/;"	s	file:
radiobig	windows/winctrls.c	/^void radiobig(struct ctlpos *cp, char *text, int id, ...)$/;"	f
radioline	windows/winctrls.c	/^void radioline(struct ctlpos *cp, char *text, int id, int nacross, ...)$/;"	f
radioline_common	windows/winctrls.c	/^static void radioline_common(struct ctlpos *cp, char *text, int id,$/;"	f	file:
random	contrib/encodelib.py	/^import struct, random$/;"	i
random	contrib/samplekex.py	/^import sys, random$/;"	i
random_active	sshrand.c	/^int random_active = 0;$/;"	v
random_add_heavynoise	sshrand.c	/^void random_add_heavynoise(void *noise, int length) { }$/;"	f
random_add_heavynoise	sshrand.c	/^void random_add_heavynoise(void *noise, int length)$/;"	f
random_add_heavynoise_bitbybit	sshrand.c	/^static void random_add_heavynoise_bitbybit(void *noise, int length)$/;"	f	file:
random_add_noise	sshrand.c	/^void random_add_noise(void *noise, int length) { }$/;"	f
random_add_noise	sshrand.c	/^void random_add_noise(void *noise, int length)$/;"	f
random_byte	pageant.c	/^int random_byte(void)$/;"	f
random_byte	sshrand.c	/^int random_byte(void)$/;"	f
random_byte	testbn.c	/^int random_byte(void)$/;"	f
random_destroy_seed	be_nos_s.c	/^void random_destroy_seed(void)$/;"	f
random_destroy_seed	be_nossh.c	/^void random_destroy_seed(void)$/;"	f
random_destroy_seed	unix/uxpgnt.c	/^void random_destroy_seed(void) {}$/;"	f
random_diagnostics	sshrand.c	/^int random_diagnostics = 0;$/;"	v
random_get_savedata	sshrand.c	/^void random_get_savedata(void **data, int *len) { }$/;"	f
random_get_savedata	sshrand.c	/^void random_get_savedata(void **data, int *len)$/;"	f
random_ref	sshrand.c	/^void random_ref(void) { }$/;"	f
random_ref	sshrand.c	/^void random_ref(void)$/;"	f
random_save_seed	be_nos_s.c	/^void random_save_seed(void)$/;"	f
random_save_seed	be_nossh.c	/^void random_save_seed(void)$/;"	f
random_save_seed	unix/uxnoise.c	/^void random_save_seed(void)$/;"	f
random_save_seed	unix/uxpgnt.c	/^void random_save_seed(void) {}$/;"	f
random_save_seed	windows/winnoise.c	/^void random_save_seed(void)$/;"	f
random_stir	sshrand.c	/^static void random_stir(void)$/;"	f	file:
random_timer	sshrand.c	/^static void random_timer(void *ctx, unsigned long now)$/;"	f	file:
random_unref	sshrand.c	/^void random_unref(void) { }$/;"	f
random_unref	sshrand.c	/^void random_unref(void)$/;"	f
randomnumber	tree234.c	/^int randomnumber(unsigned *seed)$/;"	f
range	windows/winpgen.c	/^    unsigned total, divisor, range;$/;"	m	struct:progress	file:
raw_backend	raw.c	/^Backend raw_backend = {$/;"	v
raw_backend_data	raw.c	/^typedef struct raw_backend_data {$/;"	s	file:
raw_cfg_info	raw.c	/^static int raw_cfg_info(void *handle)$/;"	f	file:
raw_check_close	raw.c	/^static void raw_check_close(Raw raw)$/;"	f	file:
raw_closing	raw.c	/^static void raw_closing(Plug plug, const char *error_msg, int error_code,$/;"	f	file:
raw_connected	raw.c	/^static int raw_connected(void *handle)$/;"	f	file:
raw_exitcode	raw.c	/^static int raw_exitcode(void *handle)$/;"	f	file:
raw_free	raw.c	/^static void raw_free(void *handle)$/;"	f	file:
raw_get_specials	raw.c	/^static const struct telnet_special *raw_get_specials(void *handle)$/;"	f	file:
raw_init	raw.c	/^static const char *raw_init(void *frontend_handle, void **backend_handle,$/;"	f	file:
raw_ldisc	raw.c	/^static int raw_ldisc(void *handle, int option)$/;"	f	file:
raw_log	raw.c	/^static void raw_log(Plug plug, int type, SockAddr addr, int port,$/;"	f	file:
raw_provide_ldisc	raw.c	/^static void raw_provide_ldisc(void *handle, void *ldisc)$/;"	f	file:
raw_provide_logctx	raw.c	/^static void raw_provide_logctx(void *handle, void *logctx)$/;"	f	file:
raw_receive	raw.c	/^static void raw_receive(Plug plug, int urgent, char *data, int len)$/;"	f	file:
raw_reconfig	raw.c	/^static void raw_reconfig(void *handle, Conf *conf)$/;"	f	file:
raw_send	raw.c	/^static int raw_send(void *handle, const char *buf, int len)$/;"	f	file:
raw_sendbuffer	raw.c	/^static int raw_sendbuffer(void *handle)$/;"	f	file:
raw_sendok	raw.c	/^static int raw_sendok(void *handle)$/;"	f	file:
raw_sent	raw.c	/^static void raw_sent(Plug plug, int bufsize)$/;"	f	file:
raw_size	raw.c	/^static void raw_size(void *handle, int width, int height)$/;"	f	file:
raw_special	raw.c	/^static void raw_special(void *handle, Telnet_Special code)$/;"	f	file:
raw_unthrottle	raw.c	/^static void raw_unthrottle(void *handle, int backlog)$/;"	f	file:
rawcnp	terminal.h	/^    int rawcnp;$/;"	m	struct:terminal_tag
rawcursor	unix/gtkwin.c	/^    GdkCursor *rawcursor, *textcursor, *blankcursor, *waitcursor, *currcursor;$/;"	m	struct:gui_data	file:
rdpkt1_state	ssh.c	/^    struct rdpkt1_state_tag rdpkt1_state;$/;"	m	struct:ssh_tag	typeref:struct:ssh_tag::rdpkt1_state_tag	file:
rdpkt1_state_tag	ssh.c	/^struct rdpkt1_state_tag {$/;"	s	file:
rdpkt2_bare_state	ssh.c	/^    struct rdpkt2_bare_state_tag rdpkt2_bare_state;$/;"	m	struct:ssh_tag	typeref:struct:ssh_tag::rdpkt2_bare_state_tag	file:
rdpkt2_bare_state_tag	ssh.c	/^struct rdpkt2_bare_state_tag {$/;"	s	file:
rdpkt2_state	ssh.c	/^    struct rdpkt2_state_tag rdpkt2_state;$/;"	m	struct:ssh_tag	typeref:struct:ssh_tag::rdpkt2_state_tag	file:
rdpkt2_state_tag	ssh.c	/^struct rdpkt2_state_tag {$/;"	s	file:
re	contrib/kh2reg.py	/^import re$/;"	i
read	charset/internal.h	/^    void (*read)(charset_spec const *charset, long int input_chr,$/;"	m	struct:charset_spec
read_blob	sshpubk.c	/^static unsigned char *read_blob(FILE * fp, int nlines, int *bloblen)$/;"	f	file:
read_body	sshpubk.c	/^static char *read_body(FILE * fp)$/;"	f	file:
read_clearpkt	contrib/encodelib.py	/^def read_clearpkt(fh):$/;"	f
read_dev_urandom	unix/uxnoise.c	/^static int read_dev_urandom(char *buf, int len)$/;"	f	file:
read_dupsession_data	unix/gtkmain.c	/^int read_dupsession_data(Conf *conf, char *arg)$/;"	f
read_filename	unix/uxsftp.c	/^char *read_filename(DirHandle *dir)$/;"	f
read_filename	windows/winsftp.c	/^char *read_filename(DirHandle *dir)$/;"	f
read_from_file	unix/uxsftp.c	/^int read_from_file(RFile *f, void *buffer, int length)$/;"	f
read_from_file	windows/winsftp.c	/^int read_from_file(RFile *f, void *buffer, int length)$/;"	f
read_header	sshpubk.c	/^static int read_header(FILE * fp, char *header)$/;"	f	file:
read_random_seed	unix/uxstore.c	/^void read_random_seed(noise_consumer_t consumer)$/;"	f
read_random_seed	windows/winstore.c	/^void read_random_seed(noise_consumer_t consumer)$/;"	f
read_sbcs	charset/sbcs.c	/^void read_sbcs(charset_spec const *charset, long int input_chr,$/;"	f
read_setting_filename	unix/uxstore.c	/^Filename *read_setting_filename(void *handle, const char *name)$/;"	f
read_setting_filename	windows/winstore.c	/^Filename *read_setting_filename(void *handle, const char *name)$/;"	f
read_setting_fontspec	unix/uxstore.c	/^FontSpec *read_setting_fontspec(void *handle, const char *name)$/;"	f
read_setting_fontspec	windows/winstore.c	/^FontSpec *read_setting_fontspec(void *handle, const char *name)$/;"	f
read_setting_i	unix/uxstore.c	/^int read_setting_i(void *handle, const char *key, int defvalue)$/;"	f
read_setting_i	windows/winstore.c	/^int read_setting_i(void *handle, const char *key, int defvalue)$/;"	f
read_setting_s	unix/uxstore.c	/^char *read_setting_s(void *handle, const char *key)$/;"	f
read_setting_s	windows/winstore.c	/^char *read_setting_s(void *handle, const char *key)$/;"	f
read_utf8	charset/utf8.c	/^void read_utf8(charset_spec const *charset, long int input_chr,$/;"	f
readdata	contrib/cygtermd/sel.c	/^    sel_readdata_fn_t readdata;$/;"	m	struct:sel_rfd	file:
readerr	contrib/cygtermd/sel.c	/^    sel_readerr_fn_t readerr;$/;"	m	struct:sel_rfd	file:
readerr	windows/winhandl.c	/^    int readerr;		       \/* lets us know about read errors *\/$/;"	m	struct:handle_input	file:
readicon	icons/icon.pl	/^sub readicon {$/;"	s
readliteral_attr	terminal.c	/^static void readliteral_attr(struct buf *b, termchar *c, termline *ldata,$/;"	f	file:
readliteral_cc	terminal.c	/^static void readliteral_cc(struct buf *b, termchar *c, termline *ldata,$/;"	f	file:
readliteral_chr	terminal.c	/^static void readliteral_chr(struct buf *b, termchar *c, termline *ldata,$/;"	f	file:
readpassphrase	cmdgen.c	/^static char *readpassphrase(const char *filename)$/;"	f	file:
readrle	terminal.c	/^static void readrle(struct buf *b, termline *ldata,$/;"	f	file:
ready	portfwd.c	/^    int ready;$/;"	m	struct:PortForwarding	file:
real_charset	unix/gtkfont.c	/^    int real_charset;$/;"	m	struct:x11font	file:
real_keybits	ssh.h	/^    int real_keybits;$/;"	m	struct:ssh2_cipher
real_packet	pageant.c	/^    int real_packet;$/;"	m	struct:pageant_conn_state	file:
real_palette_set	unix/gtkwin.c	/^static void real_palette_set(struct gui_data *inst, int n, int r, int g, int b)$/;"	f	file:
real_palette_set	windows/window.c	/^static void real_palette_set(int n, int r, int g, int b)$/;"	f	file:
realargs	icons/mkicon.py	/^realargs = []$/;"	v
realcrc	ssh.c	/^    unsigned long realcrc, gotcrc;$/;"	m	struct:rdpkt1_state_tag	file:
realhost	ssh.h	/^    char *realhost;$/;"	m	struct:X11Display
really_restrict_process_acl	windows/winsecur.c	/^static int really_restrict_process_acl(char **error)$/;"	f	file:
reallyclose	unix/gtkdlg.c	/^int reallyclose(void *frontend)$/;"	f
realname	unix/gtkfont.c	/^    char *realname;$/;"	m	struct:fontinfo	file:
realname	unix/gtkfont.c	/^    const char *realname;$/;"	m	struct:fontinfo_realname_find	file:
receive	network.h	/^    void (*receive) (Plug p, int urgent, char *data, int len);$/;"	m	struct:plug_function_table
receive_data	proxy.h	/^    char *receive_data;$/;"	m	struct:Socket_proxy_tag
receive_len	proxy.h	/^    int receive_len;$/;"	m	struct:Socket_proxy_tag
receive_urgent	proxy.h	/^    int receive_urgent;$/;"	m	struct:Socket_proxy_tag
reciprocal_word	sshbn.c	/^static BignumInt reciprocal_word(BignumInt d)$/;"	f	file:
reconfig	putty.h	/^    void (*reconfig) (void *handle, Conf *conf);$/;"	m	struct:backend_tag
reconfiguring	unix/gtkwin.c	/^    int reconfiguring;$/;"	m	struct:gui_data	file:
reconfiguring	windows/window.c	/^static int reconfiguring = FALSE;$/;"	v	file:
rect_select	terminal.h	/^    int rect_select;$/;"	m	struct:terminal_tag
recursive	pscp.c	/^static int recursive = 0;$/;"	v	file:
recv_H	windows/winhsock.c	/^    HANDLE send_H, recv_H, stderr_H;$/;"	m	struct:Socket_handle_tag	file:
recv_h	windows/winhsock.c	/^    struct handle *send_h, *recv_h, *stderr_h;$/;"	m	struct:Socket_handle_tag	typeref:struct:Socket_handle_tag::	file:
recvbuf	sshshare.c	/^    unsigned char recvbuf[0x4010];$/;"	m	struct:ssh_sharing_connstate	file:
recvlen	sshshare.c	/^    int recvlen;$/;"	m	struct:ssh_sharing_connstate	file:
redit	config.c	/^    union control *listbox, *redit, *gedit, *bedit, *button;$/;"	m	struct:colour_data	typeref:union:colour_data::	file:
refcount	unix/uxnet.c	/^    int refcount;$/;"	m	struct:SockAddr_tag	file:
refcount	windows/winnet.c	/^    int refcount;$/;"	m	struct:SockAddr_tag	file:
refresh_window	fuzzterm.c	/^void refresh_window(void *frontend) { }$/;"	f
refresh_window	unix/gtkwin.c	/^void refresh_window(void *frontend)$/;"	f
refresh_window	windows/window.c	/^void refresh_window(void *frontend)$/;"	f
refused_option	contrib/cygtermd/telnet.c	/^static void refused_option(Telnet telnet, const struct Opt *o)$/;"	f	file:
refused_option	telnet.c	/^static void refused_option(Telnet telnet, const struct Opt *o)$/;"	f	file:
reg_jumplist_key	windows/winstore.c	/^static const char *const reg_jumplist_key = PUTTY_REG_POS "\\\\Jumplist";$/;"	v	file:
reg_jumplist_value	windows/winstore.c	/^static const char *const reg_jumplist_value = "Recent sessions";$/;"	v	file:
region	charset/macenc.c	/^    int region;$/;"	m	struct:__anon2	file:
registered	sftp.c	/^    int registered;$/;"	m	struct:sftp_request	file:
registry_recursive_remove	windows/winstore.c	/^static void registry_recursive_remove(HKEY key)$/;"	f	file:
release_buffer	pgssapi.h	/^    t_gss_release_buffer release_buffer;$/;"	m	struct:gssapi_functions
release_cred	pgssapi.h	/^    t_gss_release_cred release_cred;$/;"	m	struct:gssapi_functions
release_cred	sshgss.h	/^    t_ssh_gss_release_cred release_cred;$/;"	m	struct:ssh_gss_library
release_name	pgssapi.h	/^    t_gss_release_name release_name;$/;"	m	struct:gssapi_functions
release_name	sshgss.h	/^    t_ssh_gss_release_name release_name;$/;"	m	struct:ssh_gss_library
rembutton	config.c	/^    union control *addbutton, *rembutton, *listbox, *keybox;$/;"	m	struct:manual_hostkey_data	typeref:union:manual_hostkey_data::	file:
rembutton	config.c	/^    union control *addbutton, *rembutton, *listbox;$/;"	m	struct:portfwd_data	typeref:union:portfwd_data::	file:
rembutton	config.c	/^    union control *varbox, *valbox, *addbutton, *rembutton, *listbox;$/;"	m	struct:environ_data	typeref:union:environ_data::	file:
remlocwin	ssh.c	/^	    int remlocwin;$/;"	m	struct:ssh_channel::__anon78::ssh2_data_channel	file:
remmaxpkt	ssh.c	/^	    unsigned remwindow, remmaxpkt;$/;"	m	struct:ssh_channel::__anon78::ssh2_data_channel	file:
remote	ssh.c	/^    struct ssh_rportfwd *remote;$/;"	m	struct:ssh_portfwd	typeref:struct:ssh_portfwd::ssh_rportfwd	file:
remote_addr	proxy.h	/^    SockAddr remote_addr;$/;"	m	struct:Socket_proxy_tag
remote_bugs	ssh.c	/^    int remote_bugs;$/;"	m	struct:ssh_tag	file:
remote_port	proxy.h	/^    int remote_port;$/;"	m	struct:Socket_proxy_tag
remote_qtitle_action	terminal.h	/^    int remote_qtitle_action;$/;"	m	struct:terminal_tag
remoteid	ssh.c	/^    unsigned remoteid, localid;$/;"	m	struct:ssh_channel	file:
remove_from_jumplist_registry	windows/winstore.c	/^int remove_from_jumplist_registry(const char *item)$/;"	f
remove_session_from_jumplist	putty.h	1523;"	d
remove_session_from_jumplist	windows/winjump.c	/^void remove_session_from_jumplist(const char * const sessionname)$/;"	f
remove_session_from_jumplist	windows/winnojmp.c	/^void remove_session_from_jumplist(const char * const sessionname) {}$/;"	f
remwindow	ssh.c	/^	    unsigned remwindow, remmaxpkt;$/;"	m	struct:ssh_channel::__anon78::ssh2_data_channel	file:
render	icons/mkicon.py	/^def render(canvas, minx, miny, maxx, maxy):$/;"	f
repeat_off	terminal.h	/^    int repeat_off, cr_lf_return;$/;"	m	struct:terminal_tag
repeatedly_try_grab	unix/gtkask.c	/^static int repeatedly_try_grab(struct askpass_ctx *ctx, try_grab_fn_t fn)$/;"	f	file:
req	sftp.c	/^struct req {$/;"	s	file:
req_maxsize	sftp.c	/^    int req_totalsize, req_maxsize, eof, err;$/;"	m	struct:fxp_xfer	file:
req_totalsize	sftp.c	/^    int req_totalsize, req_maxsize, eof, err;$/;"	m	struct:fxp_xfer	file:
request_callback_notifications	callback.c	/^void request_callback_notifications(toplevel_callback_notify_fn_t fn,$/;"	f
request_file	windows/winutils.c	/^BOOL request_file(filereq *state, OPENFILENAME *of, int preserve, int save)$/;"	f
request_paste	fuzzterm.c	/^void request_paste(void *frontend) { }$/;"	f
request_paste	unix/gtkwin.c	/^void request_paste(void *frontend)$/;"	f
request_paste	windows/window.c	/^void request_paste(void *frontend)$/;"	f
request_resize	fuzzterm.c	/^void request_resize(void *frontend, int x, int y) { }$/;"	f
request_resize	unix/gtkwin.c	/^void request_resize(void *frontend, int w, int h)$/;"	f
request_resize	windows/window.c	/^void request_resize(void *frontend, int w, int h)$/;"	f
requested_help	windows/winhelp.c	/^static int requested_help;$/;"	v	file:
required_mac	ssh.h	/^    const struct ssh_mac *required_mac;$/;"	m	struct:ssh2_cipher	typeref:struct:ssh2_cipher::ssh_mac
reset-terminal	doc/Chapter3.html	/^<h4><a name="reset-terminal"><\/a><a name="S3.1.3.6"><\/a>3.1.3.6 <a name="i68"><\/a>Clearing and <a name="i69"><\/a>resetting the terminal<\/h4>$/;"	a
reset_132	terminal.h	/^    int reset_132;		       \/* Flag ESC c resets to 80 cols *\/$/;"	m	struct:terminal_tag
reset_terminal_menuitem	unix/gtkwin.c	/^void reset_terminal_menuitem(GtkMenuItem *item, gpointer data)$/;"	f
reset_window	windows/window.c	/^static void reset_window(int reinit) {$/;"	f	file:
resize_ctx	terminal.h	/^    void *resize_ctx;$/;"	m	struct:terminal_tag
resize_fn	terminal.h	/^    void (*resize_fn)(void *, int, int);$/;"	m	struct:terminal_tag
resizeline	terminal.c	/^static void resizeline(Terminal *term, termline *line, int cols)$/;"	f	file:
resizing	windows/window.c	/^static int resizing;$/;"	v	file:
resolved	windows/winnet.c	/^    int resolved;$/;"	m	struct:SockAddr_tag	file:
response	pscp.c	/^static int response(void)$/;"	f	file:
restart_session_menuitem	unix/gtkwin.c	/^void restart_session_menuitem(GtkMenuItem *item, gpointer data)$/;"	f
restartitem	unix/gtkwin.c	/^	*restartitem;$/;"	m	struct:gui_data	file:
restrict_process_acl	windows/winsecur.c	/^void restrict_process_acl(void)$/;"	f
restricted_acl	windows/winstuff.h	/^GLOBAL int restricted_acl;$/;"	v
result	putty.h	/^    char *result;$/;"	m	struct:__anon66
resultsize	putty.h	/^    size_t resultsize;$/;"	m	struct:__anon66
retbuf	unix/uxagentc.c	/^    char *retbuf;$/;"	m	struct:agent_pending_query	file:
retlen	sftp.c	/^    int len, retlen, complete;$/;"	m	struct:req	file:
retlen	unix/uxagentc.c	/^    int retsize, retlen;$/;"	m	struct:agent_pending_query	file:
retrieve_cutbuffer	unix/gtkwin.c	/^static char *retrieve_cutbuffer(int *nbytes)$/;"	f	file:
retsize	unix/uxagentc.c	/^    int retsize, retlen;$/;"	m	struct:agent_pending_query	file:
return_in_enum	charset/localenc.c	/^    int return_in_enum;   \/* enumeration misses some charsets *\/$/;"	m	struct:__anon6	file:
retval	unix/gtkdlg.c	/^    int retval;$/;"	m	struct:dlgparam	file:
rfc4716_loadpub	sshpubk.c	/^unsigned char *rfc4716_loadpub(FILE *fp, char **algorithm,$/;"	f
rhead	contrib/cygtermd/sel.c	/^    sel_rfd *rhead, *rtail;$/;"	m	struct:sel	file:
rlogin_backend	rlogin.c	/^Backend rlogin_backend = {$/;"	v
rlogin_cfg_info	rlogin.c	/^static int rlogin_cfg_info(void *handle)$/;"	f	file:
rlogin_closing	rlogin.c	/^static void rlogin_closing(Plug plug, const char *error_msg, int error_code,$/;"	f	file:
rlogin_connected	rlogin.c	/^static int rlogin_connected(void *handle)$/;"	f	file:
rlogin_exitcode	rlogin.c	/^static int rlogin_exitcode(void *handle)$/;"	f	file:
rlogin_free	rlogin.c	/^static void rlogin_free(void *handle)$/;"	f	file:
rlogin_get_specials	rlogin.c	/^static const struct telnet_special *rlogin_get_specials(void *handle)$/;"	f	file:
rlogin_init	rlogin.c	/^static const char *rlogin_init(void *frontend_handle, void **backend_handle,$/;"	f	file:
rlogin_ldisc	rlogin.c	/^static int rlogin_ldisc(void *handle, int option)$/;"	f	file:
rlogin_log	rlogin.c	/^static void rlogin_log(Plug plug, int type, SockAddr addr, int port,$/;"	f	file:
rlogin_provide_ldisc	rlogin.c	/^static void rlogin_provide_ldisc(void *handle, void *ldisc)$/;"	f	file:
rlogin_provide_logctx	rlogin.c	/^static void rlogin_provide_logctx(void *handle, void *logctx)$/;"	f	file:
rlogin_receive	rlogin.c	/^static void rlogin_receive(Plug plug, int urgent, char *data, int len)$/;"	f	file:
rlogin_reconfig	rlogin.c	/^static void rlogin_reconfig(void *handle, Conf *conf)$/;"	f	file:
rlogin_send	rlogin.c	/^static int rlogin_send(void *handle, const char *buf, int len)$/;"	f	file:
rlogin_sendbuffer	rlogin.c	/^static int rlogin_sendbuffer(void *handle)$/;"	f	file:
rlogin_sendok	rlogin.c	/^static int rlogin_sendok(void *handle)$/;"	f	file:
rlogin_sent	rlogin.c	/^static void rlogin_sent(Plug plug, int bufsize)$/;"	f	file:
rlogin_size	rlogin.c	/^static void rlogin_size(void *handle, int width, int height)$/;"	f	file:
rlogin_special	rlogin.c	/^static void rlogin_special(void *handle, Telnet_Special code)$/;"	f	file:
rlogin_startup	rlogin.c	/^static void rlogin_startup(Rlogin rlogin, const char *ruser)$/;"	f	file:
rlogin_tag	rlogin.c	/^typedef struct rlogin_tag {$/;"	s	file:
rlogin_unthrottle	rlogin.c	/^static void rlogin_unthrottle(void *handle, int backlog)$/;"	f	file:
rol	sshmd5.c	17;"	d	file:
rol	sshsha.c	14;"	d	file:
roman8	windows/winucs.c	/^static const wchar_t roman8[] = {$/;"	v	file:
root	tree234.c	/^    node234 *root;$/;"	m	struct:tree234_Tag	file:
ror	sshsh256.c	13;"	d	file:
rorB	sshsh512.c	19;"	d	file:
rorL	sshsh512.c	21;"	d	file:
rotl	sshccp.c	64;"	d	file:
rotl	sshccp.c	94;"	d	file:
rotl	sshdes.c	284;"	d	file:
rotl28	sshdes.c	285;"	d	file:
rounds	import.c	/^            int rounds;$/;"	m	struct:openssh_new_key::__anon33::__anon34	file:
rows	terminal.h	/^    int rows, cols, savelines;$/;"	m	struct:terminal_tag
rowsize	unix/gtkfont.c	/^    int rowsize, allsize, indexflip;$/;"	m	struct:x11font_individual	file:
rportfwds	ssh.c	/^    tree234 *rportfwds, *portfwds;$/;"	m	struct:ssh_tag	file:
rsa2_createkey	sshrsa.c	/^static void *rsa2_createkey(const struct ssh_signkey *self,$/;"	f	file:
rsa2_fmtkey	sshrsa.c	/^static char *rsa2_fmtkey(void *key)$/;"	f	file:
rsa2_freekey	sshrsa.c	/^static void rsa2_freekey(void *key)$/;"	f	file:
rsa2_newkey	sshrsa.c	/^static void *rsa2_newkey(const struct ssh_signkey *self,$/;"	f	file:
rsa2_openssh_createkey	sshrsa.c	/^static void *rsa2_openssh_createkey(const struct ssh_signkey *self,$/;"	f	file:
rsa2_openssh_fmtkey	sshrsa.c	/^static int rsa2_openssh_fmtkey(void *key, unsigned char *blob, int len)$/;"	f	file:
rsa2_private_blob	sshrsa.c	/^static unsigned char *rsa2_private_blob(void *key, int *len)$/;"	f	file:
rsa2_pubkey_bits	sshrsa.c	/^static int rsa2_pubkey_bits(const struct ssh_signkey *self,$/;"	f	file:
rsa2_public_blob	sshrsa.c	/^static unsigned char *rsa2_public_blob(void *key, int *len)$/;"	f	file:
rsa2_sign	sshrsa.c	/^static unsigned char *rsa2_sign(void *key, const char *data, int datalen,$/;"	f	file:
rsa2_verifysig	sshrsa.c	/^static int rsa2_verifysig(void *key, const char *sig, int siglen,$/;"	f	file:
rsa_fingerprint	sshrsa.c	/^void rsa_fingerprint(char *str, int len, struct RSAKey *key)$/;"	f
rsa_generate	sshrsag.c	/^int rsa_generate(struct RSAKey *key, int bits, progfn_t pfn,$/;"	f
rsa_kex_list	sshrsa.c	/^static const struct ssh_kex *const rsa_kex_list[] = {$/;"	v	file:
rsa_key_thread_params	windows/winpgen.c	/^struct rsa_key_thread_params {$/;"	s	file:
rsa_privkey_op	sshrsa.c	/^static Bignum rsa_privkey_op(Bignum input, struct RSAKey *key)$/;"	f	file:
rsa_public_blob	sshrsa.c	/^unsigned char *rsa_public_blob(struct RSAKey *key, int *len)$/;"	f
rsa_public_blob_len	sshrsa.c	/^int rsa_public_blob_len(void *data, int maxlen)$/;"	f
rsa_signature	sshpubk.c	16;"	d	file:
rsa_verify	sshrsa.c	/^int rsa_verify(struct RSAKey *key)$/;"	f
rsadecrypt	sshrsa.c	/^Bignum rsadecrypt(Bignum input, struct RSAKey *key)$/;"	f
rsaencrypt	sshrsa.c	/^int rsaencrypt(unsigned char *data, int length, struct RSAKey *key)$/;"	f
rsaexp	contrib/samplekex.py	/^rsaexp = 0x10001$/;"	v
rsakey_encrypted	sshpubk.c	/^int rsakey_encrypted(const Filename *filename, char **comment)$/;"	f
rsakey_pubblob	sshpubk.c	/^int rsakey_pubblob(const Filename *filename, void **blob, int *bloblen,$/;"	f
rsakeys	pageant.c	/^static tree234 *rsakeys, *ssh2keys;$/;"	v	file:
rsamod	contrib/samplekex.py	/^rsamod = 0xB98FE0C0BEE1E05B35FDDF5517B3E29D8A9A6A7834378B6783A19536968968F755E341B5822CAE15B465DECB80EE4116CF8D22DB5A6C85444A68D0D45D9D42008329619BE3CAC3B192EF83DD2B75C4BB6B567E11B841073BACE92108DA7E97E543ED7F032F454F7AC3C6D3F27DB34BC9974A85C7963C546662AE300A61CBABEE274481FD041C41D0145704F5FA9C77A5A442CD7A64827BB0F21FB56FDE388B596A20D7A7D1C5F22DA96C6C2171D90A673DABC66596CD99499D75AD82FEFDBE04DEC2CC7E1414A95388F668591B3F4D58249F80489646ED2C318E77D4F4E37EE8A588E79F2960620E6D28BF53653F1C974C91845F0BABFE5D167E1CA7044EE20D$/;"	v
rsastr_fmt	sshrsa.c	/^void rsastr_fmt(char *str, struct RSAKey *key)$/;"	f
rsastr_len	sshrsa.c	/^int rsastr_len(struct RSAKey *key)$/;"	f
rsource	pscp.c	/^static void rsource(const char *src)$/;"	f	file:
rtail	contrib/cygtermd/sel.c	/^    sel_rfd *rhead, *rtail;$/;"	m	struct:sel	file:
run_agent	unix/uxpgnt.c	/^void run_agent(void)$/;"	f
run_client	unix/uxpgnt.c	/^void run_client(void)$/;"	f
run_err	pscp.c	/^static void run_err(const char *fmt, ...)$/;"	f	file:
run_program_in_pty	contrib/cygtermd/pty.c	/^int run_program_in_pty(const struct shell_data *shdata,$/;"	f
run_timers	timing.c	/^int run_timers(unsigned long anow, unsigned long *next)$/;"	f
run_toplevel_callbacks	callback.c	/^void run_toplevel_callbacks(void)$/;"	f
runof3	icons/macicon.py	/^def runof3(string, position):$/;"	f
runstatedir	Makefile	/^runstatedir = ${localstatedir}\/run$/;"	m
rvbell_startpoint	terminal.h	/^    unsigned long rvbell_startpoint;   \/* for ESC[?5hESC[?5l vbell *\/$/;"	m	struct:terminal_tag
rvideo	terminal.h	/^    int rvideo;			       \/* global reverse video flag *\/$/;"	m	struct:terminal_tag
rwx	unix/uxsel.c	/^    int rwx;			       \/* 4=except 2=write 1=read *\/$/;"	m	struct:fd	file:
rxvt_homeend	terminal.h	/^    int rxvt_homeend;$/;"	m	struct:terminal_tag
s	conf.c	/^	char *s;$/;"	m	union:key::__anon8	file:
s	conf.c	/^	const char *s;$/;"	m	union:constkey::__anon9	file:
s	misc.c	/^    char *s;$/;"	m	struct:strbuf	file:
s	portfwd.c	/^    Socket s;$/;"	m	struct:PortForwarding	file:
s	portfwd.c	/^    Socket s;$/;"	m	struct:PortListener	file:
s	putty.h	/^    const char *s;$/;"	m	struct:keyvalwhere
s	raw.c	/^    Socket s;$/;"	m	struct:raw_backend_data	file:
s	rlogin.c	/^    Socket s;$/;"	m	struct:rlogin_tag	file:
s	ssh.c	/^    Socket s;$/;"	m	struct:ssh_tag	file:
s	ssharcf.c	/^    unsigned char i, j, s[256];$/;"	m	struct:__anon72	file:
s	telnet.c	/^    Socket s;$/;"	m	struct:telnet_tag	file:
s	unix/uxnet.c	/^    int s;$/;"	m	struct:Socket_tag	file:
s	windows/winnet.c	/^    SOCKET s;$/;"	m	struct:Socket_tag	file:
s	x11fwd.c	/^    Socket s;$/;"	m	struct:X11Connection	file:
s0	charset/charset.h	/^    unsigned long s0;$/;"	m	struct:__anon4
s_rdpkt	ssh.c	/^    struct Packet *(*s_rdpkt) (Ssh ssh, const unsigned char **data,$/;"	m	struct:ssh_tag	typeref:struct:ssh_tag::s_rdpkt	file:
s_write	ssh.c	/^static int s_write(Ssh ssh, void *data, int len)$/;"	f	file:
s_wrpkt	ssh.c	/^static void s_wrpkt(Ssh ssh, struct Packet *pkt)$/;"	f	file:
s_wrpkt_defer	ssh.c	/^static void s_wrpkt_defer(Ssh ssh, struct Packet *pkt)$/;"	f	file:
s_wrpkt_prepare	ssh.c	/^static int s_wrpkt_prepare(Ssh ssh, struct Packet *pkt, int *offset_p)$/;"	f	file:
sa	unix/uxnet.c	/^    struct sockaddr sa;$/;"	m	union:sockaddr_union	typeref:struct:sockaddr_union::sockaddr	file:
saddr	ssh.c	/^    char *saddr, *daddr;$/;"	m	struct:ssh_portfwd	file:
safefree	minibidi.c	38;"	d	file:
safefree	misc.c	/^void safefree(void *ptr)$/;"	f
safefree	sshdes.c	/^void safefree(void *p) { return free(p); }$/;"	f
safemalloc	minibidi.c	37;"	d	file:
safemalloc	misc.c	/^void *safemalloc(size_t n, size_t size)$/;"	f
safemalloc	sshdes.c	/^void *safemalloc(size_t n, size_t size) { return calloc(n, size); }$/;"	f
saferealloc	misc.c	/^void *saferealloc(void *ptr, size_t n, size_t size)$/;"	f
salt	import.c	/^            const unsigned char *salt;$/;"	m	struct:openssh_new_key::__anon33::__anon34	file:
saltlen	import.c	/^            int saltlen;$/;"	m	struct:openssh_new_key::__anon33::__anon34	file:
same_height_as	unix/gtkcols.h	/^    ColumnsChild *same_height_as;$/;"	m	struct:ColumnsChild_tag
save_attr	terminal.h	/^    int default_attr, curr_attr, save_attr;$/;"	m	struct:terminal_tag
save_csattr	terminal.h	/^    int save_cset, save_csattr;	       \/* saved with cursor position *\/$/;"	m	struct:terminal_tag
save_cset	terminal.h	/^    int save_cset, save_csattr;	       \/* saved with cursor position *\/$/;"	m	struct:terminal_tag
save_cursor	terminal.c	/^static void save_cursor(Terminal *term, int save)$/;"	f	file:
save_open_settings	settings.c	/^void save_open_settings(void *sesskey, Conf *conf)$/;"	f
save_sco_acs	terminal.h	/^    int sco_acs, save_sco_acs;	       \/* CSI 10,11,12m -> OEM charset *\/$/;"	m	struct:terminal_tag
save_scroll	terminal.c	/^static void save_scroll(Terminal *term, int topline, int botline, int lines)$/;"	f	file:
save_settings	settings.c	/^char *save_settings(const char *section, Conf *conf)$/;"	f
save_utf	terminal.h	/^    int save_utf, save_wnext;	       \/* saved with cursor position *\/$/;"	m	struct:terminal_tag
save_wnext	terminal.h	/^    int save_utf, save_wnext;	       \/* saved with cursor position *\/$/;"	m	struct:terminal_tag
savebutton	config.c	/^    union control *editbox, *listbox, *loadbutton, *savebutton, *delbutton;$/;"	m	struct:sessionsaver_data	typeref:union:sessionsaver_data::	file:
savecurs	terminal.h	/^    pos savecurs;		       \/* saved cursor position *\/$/;"	m	struct:terminal_tag
saved_session_freedata	unix/gtkwin.c	/^void saved_session_freedata(GtkMenuItem *item, gpointer data)$/;"	f
saved_session_menuitem	unix/gtkwin.c	/^void saved_session_menuitem(GtkMenuItem *item, gpointer data)$/;"	f
saved_sessions	unix/uxpterm.c	/^const int new_session = 0, saved_sessions = 0;   \/* or these *\/$/;"	v
saved_sessions	unix/uxputty.c	/^const int use_event_log = 1, new_session = 1, saved_sessions = 1;$/;"	v
savedhost	ssh.c	/^    char *savedhost;$/;"	m	struct:ssh_tag	file:
savedport	ssh.c	/^    int savedport;$/;"	m	struct:ssh_tag	file:
savedpos	sftp.c	/^    unsigned savedpos;$/;"	m	struct:sftp_packet	file:
savedpos	ssh.c	/^    long savedpos;	    \/* dual-purpose saved packet position: see below *\/$/;"	m	struct:Packet	file:
savedsess_menu	windows/window.c	/^static HMENU savedsess_menu;$/;"	v	file:
savedsession	config.c	/^    char *savedsession;     \/* the current contents of ssd->editbox *\/$/;"	m	struct:sessionsaver_data	file:
savelines	terminal.h	/^    int rows, cols, savelines;$/;"	m	struct:terminal_tag
saversakey	sshpubk.c	/^int saversakey(const Filename *filename, struct RSAKey *key, char *passphrase)$/;"	f
saves	cmdline.c	/^static struct cmdline_saved_param_set saves[NPRIORITIES];$/;"	v	typeref:struct:cmdline_saved_param_set	file:
savesize	cmdline.c	/^    int nsaved, savesize;$/;"	m	struct:cmdline_saved_param_set	file:
sb_buf	contrib/cygtermd/telnet.c	/^    unsigned char *sb_buf;$/;"	m	struct:telnet_tag	file:
sb_buf	telnet.c	/^    unsigned char *sb_buf;$/;"	m	struct:telnet_tag	file:
sb_len	contrib/cygtermd/telnet.c	/^    int sb_opt, sb_len;$/;"	m	struct:telnet_tag	file:
sb_len	telnet.c	/^    int sb_opt, sb_len;$/;"	m	struct:telnet_tag	file:
sb_opt	contrib/cygtermd/telnet.c	/^    int sb_opt, sb_len;$/;"	m	struct:telnet_tag	file:
sb_opt	telnet.c	/^    int sb_opt, sb_len;$/;"	m	struct:telnet_tag	file:
sb_size	contrib/cygtermd/telnet.c	/^    int sb_size;$/;"	m	struct:telnet_tag	file:
sb_size	telnet.c	/^    int sb_size;$/;"	m	struct:telnet_tag	file:
sbar	unix/gtkwin.c	/^    GtkWidget *window, *area, *sbar;$/;"	m	struct:gui_data	file:
sbar_adjust	unix/gtkwin.c	/^    GtkAdjustment *sbar_adjust;$/;"	m	struct:gui_data	file:
sbar_visible	unix/gtkwin.c	/^    gboolean sbar_visible;$/;"	m	struct:gui_data	file:
sbcs2ucs	charset/internal.h	/^    unsigned long sbcs2ucs[256];$/;"	m	struct:sbcs_data
sbcs_data	charset/internal.h	/^struct sbcs_data {$/;"	s
sbcs_data	charset/internal.h	/^typedef struct sbcs_data sbcs_data;$/;"	t	typeref:struct:sbcs_data
sbindir	Makefile	/^sbindir = ${exec_prefix}\/sbin$/;"	m
sblines	terminal.c	/^static int sblines(Terminal *term)$/;"	f	file:
sbox0	sshblowf.c	/^static const word32 sbox0[] = {$/;"	v	file:
sbox1	sshblowf.c	/^static const word32 sbox1[] = {$/;"	v	file:
sbox2	sshblowf.c	/^static const word32 sbox2[] = {$/;"	v	file:
sbox3	sshblowf.c	/^static const word32 sbox3[] = {$/;"	v	file:
sc	unix/gtkdlg.c	/^    struct Shortcut sc[128];$/;"	m	struct:Shortcuts	typeref:struct:Shortcuts::Shortcut	file:
sc_cipher_ctx	ssh.c	/^    void *cs_cipher_ctx, *sc_cipher_ctx;$/;"	m	struct:ssh_tag	file:
sc_comp_ctx	ssh.c	/^    void *cs_comp_ctx, *sc_comp_ctx;$/;"	m	struct:ssh_tag	file:
sc_mac_ctx	ssh.c	/^    void *cs_mac_ctx, *sc_mac_ctx;$/;"	m	struct:ssh_tag	file:
scale_fontname	unix/gtkfont.c	/^    char *(*scale_fontname)(GtkWidget *widget, const char *name, int size);$/;"	m	struct:unifont_vtable	file:
sccipher	ssh.c	/^    const struct ssh2_cipher *cscipher, *sccipher;$/;"	m	struct:ssh_tag	typeref:struct:ssh_tag::	file:
sccomp	ssh.c	/^    const struct ssh_compress *cscomp, *sccomp;$/;"	m	struct:ssh_tag	typeref:struct:ssh_tag::	file:
schedule_timer	notiming.c	/^unsigned long schedule_timer(int ticks, timer_fn_t fn, void *ctx)$/;"	f
schedule_timer	timing.c	/^unsigned long schedule_timer(int ticks, timer_fn_t fn, void *ctx)$/;"	f
scmac	ssh.c	/^    const struct ssh_mac *csmac, *scmac;$/;"	m	struct:ssh_tag	typeref:struct:ssh_tag::	file:
scmac_etm	ssh.c	/^    int csmac_etm, scmac_etm;$/;"	m	struct:ssh_tag	file:
sco2ansicolour	terminal.c	/^const char sco2ansicolour[] = { 0, 4, 2, 6, 1, 5, 3, 7 };$/;"	v
sco_acs	terminal.h	/^    int sco_acs, save_sco_acs;	       \/* CSI 10,11,12m -> OEM charset *\/$/;"	m	struct:terminal_tag
scp_accept_filexfer	pscp.c	/^int scp_accept_filexfer(void)$/;"	f
scp_finish_filerecv	pscp.c	/^int scp_finish_filerecv(void)$/;"	f
scp_get_sink_action	pscp.c	/^int scp_get_sink_action(struct scp_sink_action *act)$/;"	f
scp_has_times	pscp.c	/^static int scp_has_times;$/;"	v	file:
scp_recv_filedata	pscp.c	/^int scp_recv_filedata(char *data, int len)$/;"	f
scp_restore_remotepath	pscp.c	/^void scp_restore_remotepath(char *data)$/;"	f
scp_save_remotepath	pscp.c	/^char *scp_save_remotepath(void)$/;"	f
scp_send_dirname	pscp.c	/^int scp_send_dirname(const char *name, int modes)$/;"	f
scp_send_enddir	pscp.c	/^int scp_send_enddir(void)$/;"	f
scp_send_errmsg	pscp.c	/^int scp_send_errmsg(char *str)$/;"	f
scp_send_filedata	pscp.c	/^int scp_send_filedata(char *data, int len)$/;"	f
scp_send_filename	pscp.c	/^int scp_send_filename(const char *name, uint64 size, int permissions)$/;"	f
scp_send_filetimes	pscp.c	/^int scp_send_filetimes(unsigned long mtime, unsigned long atime)$/;"	f
scp_send_finish	pscp.c	/^int scp_send_finish(void)$/;"	f
scp_sftp_atime	pscp.c	/^static unsigned long scp_sftp_mtime, scp_sftp_atime;$/;"	v	file:
scp_sftp_currentname	pscp.c	/^static char *scp_sftp_remotepath, *scp_sftp_currentname;$/;"	v	file:
scp_sftp_dirstack	pscp.c	/^static struct scp_sftp_dirstack {$/;"	s	file:
scp_sftp_dirstack_head	pscp.c	/^} *scp_sftp_dirstack_head;$/;"	v	typeref:struct:scp_sftp_dirstack	file:
scp_sftp_donethistarget	pscp.c	/^static int scp_sftp_targetisdir, scp_sftp_donethistarget;$/;"	v	file:
scp_sftp_filehandle	pscp.c	/^static struct fxp_handle *scp_sftp_filehandle;$/;"	v	typeref:struct:fxp_handle	file:
scp_sftp_fileoffset	pscp.c	/^static uint64 scp_sftp_fileoffset;$/;"	v	file:
scp_sftp_listdir	pscp.c	/^void scp_sftp_listdir(const char *dirname)$/;"	f
scp_sftp_mtime	pscp.c	/^static unsigned long scp_sftp_mtime, scp_sftp_atime;$/;"	v	file:
scp_sftp_preserve	pscp.c	/^static int scp_sftp_preserve, scp_sftp_recursive;$/;"	v	file:
scp_sftp_recursive	pscp.c	/^static int scp_sftp_preserve, scp_sftp_recursive;$/;"	v	file:
scp_sftp_remotepath	pscp.c	/^static char *scp_sftp_remotepath, *scp_sftp_currentname;$/;"	v	file:
scp_sftp_targetisdir	pscp.c	/^static int scp_sftp_targetisdir, scp_sftp_donethistarget;$/;"	v	file:
scp_sftp_wildcard	pscp.c	/^static char *scp_sftp_wildcard;$/;"	v	file:
scp_sftp_xfer	pscp.c	/^static struct fxp_xfer *scp_sftp_xfer;$/;"	v	typeref:struct:fxp_xfer	file:
scp_sink_action	pscp.c	/^struct scp_sink_action {$/;"	s	file:
scp_sink_init	pscp.c	/^int scp_sink_init(void)$/;"	f
scp_sink_setup	pscp.c	/^int scp_sink_setup(const char *source, int preserve, int recursive)$/;"	f
scp_source_setup	pscp.c	/^int scp_source_setup(const char *target, int shouldbedir)$/;"	f
scp_unsafe_mode	pscp.c	/^static int scp_unsafe_mode = 0;$/;"	v	file:
screen	terminal.h	/^    tree234 *screen;		       \/* lines on primary screen *\/$/;"	m	struct:terminal_tag
screennum	ssh.h	/^    int screennum;$/;"	m	struct:X11Display
script	charset/macenc.c	/^    int script;$/;"	m	struct:__anon2	file:
scrlineptr	terminal.c	1082;"	d	file:
scroll	terminal.c	/^static void scroll(Terminal *term, int topline, int botline, int lines, int sb)$/;"	f	file:
scroll_display	terminal.c	/^static void scroll_display(Terminal *term, int topline, int botline, int lines)$/;"	f	file:
scroll_event	unix/gtkwin.c	/^gboolean scroll_event(GtkWidget *widget, GdkEventScroll *event, gpointer data)$/;"	f
scroll_internal	unix/gtkwin.c	/^gboolean scroll_internal(struct gui_data *inst, gdouble delta, guint state,$/;"	f
scroll_on_disp	terminal.h	/^    int scroll_on_disp;$/;"	m	struct:terminal_tag
scroll_on_key	terminal.h	/^    int scroll_on_key;$/;"	m	struct:terminal_tag
scrollback	terminal.h	/^    tree234 *scrollback;	       \/* lines scrolled off top of screen *\/$/;"	m	struct:terminal_tag
scrollbar_moved	unix/gtkwin.c	/^void scrollbar_moved(GtkAdjustment *adj, gpointer data)$/;"	f
scrollhead	terminal.h	/^    struct scrollregion *scrollhead, *scrolltail;$/;"	m	struct:terminal_tag	typeref:struct:terminal_tag::scrollregion
scrollregion	terminal.h	/^struct scrollregion {$/;"	s
scrolltail	terminal.h	/^    struct scrollregion *scrollhead, *scrolltail;$/;"	m	struct:terminal_tag	typeref:struct:terminal_tag::
scs	unix/gtkdlg.c	/^    struct Shortcuts scs;$/;"	m	struct:eventlog_stuff	typeref:struct:eventlog_stuff::Shortcuts	file:
seat	unix/gtkask.c	/^    GdkSeat *seat;                     \/* for gdk_seat_grab *\/$/;"	m	struct:askpass_ctx	file:
secondary	conf.c	/^    } secondary;$/;"	m	struct:constkey	typeref:union:constkey::__anon9	file:
secondary	conf.c	/^    } secondary;$/;"	m	struct:key	typeref:union:key::__anon8	file:
seek_file	unix/uxsftp.c	/^int seek_file(WFile *f, uint64 offset, int whence)$/;"	f
seek_file	windows/winsftp.c	/^int seek_file(WFile *f, uint64 offset, int whence)$/;"	f
seen_disp_event	terminal.c	/^static void seen_disp_event(Terminal *term)$/;"	f	file:
seen_disp_event	terminal.h	/^    int seen_disp_event;$/;"	m	struct:terminal_tag
sel	contrib/cygtermd/sel.c	/^struct sel {$/;"	s	file:
sel	contrib/cygtermd/sel.h	/^typedef struct sel sel;$/;"	t	typeref:struct:sel
sel_free	contrib/cygtermd/sel.c	/^void sel_free(sel *sel)$/;"	f
sel_get_ctx	contrib/cygtermd/sel.c	/^void *sel_get_ctx(sel *sel) { return sel->ctx; }$/;"	f
sel_iterate	contrib/cygtermd/sel.c	/^int sel_iterate(sel *sel, long timeout)$/;"	f
sel_new	contrib/cygtermd/sel.c	/^sel *sel_new(void *ctx)$/;"	f
sel_nl	terminal.c	/^const wchar_t sel_nl[] = SEL_NL;$/;"	v
sel_nl_sz	terminal.c	73;"	d	file:
sel_readdata_fn_t	contrib/cygtermd/sel.h	/^typedef void (*sel_readdata_fn_t)(sel_rfd *rfd, void *data, size_t len);$/;"	t
sel_readerr_fn_t	contrib/cygtermd/sel.h	/^typedef void (*sel_readerr_fn_t)(sel_rfd *rfd, int error);$/;"	t
sel_rfd	contrib/cygtermd/sel.c	/^struct sel_rfd {$/;"	s	file:
sel_rfd	contrib/cygtermd/sel.h	/^typedef struct sel_rfd sel_rfd;$/;"	t	typeref:struct:sel_rfd
sel_rfd_add	contrib/cygtermd/sel.c	/^sel_rfd *sel_rfd_add(sel *sel, int fd,$/;"	f
sel_rfd_delete	contrib/cygtermd/sel.c	/^int sel_rfd_delete(sel_rfd *rfd)$/;"	f
sel_rfd_freeze	contrib/cygtermd/sel.c	/^void sel_rfd_freeze(sel_rfd *rfd)$/;"	f
sel_rfd_get_ctx	contrib/cygtermd/sel.c	/^void *sel_rfd_get_ctx(sel_rfd *rfd) { return rfd->ctx; }$/;"	f
sel_rfd_set_ctx	contrib/cygtermd/sel.c	/^void sel_rfd_set_ctx(sel_rfd *rfd, void *ctx) { rfd->ctx = ctx; }$/;"	f
sel_rfd_setfd	contrib/cygtermd/sel.c	/^void sel_rfd_setfd(sel_rfd *rfd, int fd)$/;"	f
sel_rfd_unfreeze	contrib/cygtermd/sel.c	/^void sel_rfd_unfreeze(sel_rfd *rfd)$/;"	f
sel_set_ctx	contrib/cygtermd/sel.c	/^void sel_set_ctx(sel *sel, void *ctx) { sel->ctx = ctx; }$/;"	f
sel_spread	terminal.c	/^static void sel_spread(Terminal *term)$/;"	f	file:
sel_spread_half	terminal.c	/^static pos sel_spread_half(Terminal *term, pos p, int dir)$/;"	f	file:
sel_wfd	contrib/cygtermd/sel.c	/^struct sel_wfd {$/;"	s	file:
sel_wfd	contrib/cygtermd/sel.h	/^typedef struct sel_wfd sel_wfd;$/;"	t	typeref:struct:sel_wfd
sel_wfd_add	contrib/cygtermd/sel.c	/^sel_wfd *sel_wfd_add(sel *sel, int fd,$/;"	f
sel_wfd_delete	contrib/cygtermd/sel.c	/^int sel_wfd_delete(sel_wfd *wfd)$/;"	f
sel_wfd_get_ctx	contrib/cygtermd/sel.c	/^void *sel_wfd_get_ctx(sel_wfd *wfd) { return wfd->ctx; }$/;"	f
sel_wfd_set_ctx	contrib/cygtermd/sel.c	/^void sel_wfd_set_ctx(sel_wfd *wfd, void *ctx) { wfd->ctx = ctx; }$/;"	f
sel_wfd_setfd	contrib/cygtermd/sel.c	/^void sel_wfd_setfd(sel_wfd *wfd, int fd)$/;"	f
sel_write	contrib/cygtermd/sel.c	/^size_t sel_write(sel_wfd *wfd, const void *data, size_t len)$/;"	f
sel_writeerr_fn_t	contrib/cygtermd/sel.h	/^typedef void (*sel_writeerr_fn_t)(sel_wfd *wfd, int error);$/;"	t
sel_written_fn_t	contrib/cygtermd/sel.h	/^typedef void (*sel_written_fn_t)(sel_wfd *wfd, size_t bufsize);$/;"	t
selanchor	terminal.h	/^    pos selstart, selend, selanchor;$/;"	m	struct:terminal_tag
seldata	unix/gtkdlg.c	/^    char *seldata;$/;"	m	struct:eventlog_stuff	file:
select_backend	unix/uxpterm.c	/^Backend *select_backend(Conf *conf)$/;"	f
select_backend	unix/uxputty.c	/^Backend *select_backend(Conf *conf)$/;"	f
select_result	unix/uxsel.c	/^void select_result(int fd, int event)$/;"	f
select_result	windows/winnet.c	/^void select_result(WPARAM wParam, LPARAM lParam)$/;"	f
selected	unix/gtkfont.c	/^    fontinfo *selected;$/;"	m	struct:unifontsel_internal	file:
selection_clear	unix/gtkwin.c	/^static gint selection_clear(GtkWidget *widget, GdkEventSelection *seldata,$/;"	f	file:
selection_get	unix/gtkwin.c	/^static void selection_get(GtkWidget *widget, GtkSelectionData *seldata,$/;"	f	file:
selection_received	unix/gtkwin.c	/^static void selection_received(GtkWidget *widget, GtkSelectionData *seldata,$/;"	f	file:
selend	terminal.h	/^    pos selstart, selend, selanchor;$/;"	m	struct:terminal_tag
sellen	unix/gtkdlg.c	/^    int sellen;$/;"	m	struct:eventlog_stuff	file:
selmode	terminal.h	/^    } selmode;$/;"	m	struct:terminal_tag	typeref:enum:terminal_tag::__anon113
selparam	unix/gtkdlg.c	/^struct selparam {$/;"	s	file:
selparams	unix/gtkdlg.c	/^    struct selparam *selparams;$/;"	m	struct:dlgparam	typeref:struct:dlgparam::selparam	file:
selsize	unix/gtkfont.c	/^    int selsize, intendedsize;$/;"	m	struct:unifontsel_internal	file:
selstart	terminal.h	/^    pos selstart, selend, selanchor;$/;"	m	struct:terminal_tag
selstate	terminal.h	/^    } selstate;$/;"	m	struct:terminal_tag	typeref:enum:terminal_tag::__anon111
seltype	terminal.h	/^    } seltype;$/;"	m	struct:terminal_tag	typeref:enum:terminal_tag::__anon112
send	contrib/cygtermd/telnet.c	/^    int send;			       \/* what we initially send *\/$/;"	m	struct:Opt	file:
send	putty.h	/^    int (*send) (void *handle, const char *buf, int len);$/;"	m	struct:backend_tag
send	telnet.c	/^    int send;			       \/* what we initially send *\/$/;"	m	struct:Opt	file:
send_H	windows/winhsock.c	/^    HANDLE send_H, recv_H, stderr_H;$/;"	m	struct:Socket_handle_tag	file:
send_h	windows/winhsock.c	/^    struct handle *send_h, *recv_h, *stderr_h;$/;"	m	struct:Socket_handle_tag	typeref:struct:Socket_handle_tag::handle	file:
send_ok	ssh.c	/^    int send_ok;$/;"	m	struct:ssh_tag	file:
send_opt	contrib/cygtermd/telnet.c	/^static void send_opt(Telnet telnet, int cmd, int option)$/;"	f	file:
send_opt	telnet.c	/^static void send_opt(Telnet telnet, int cmd, int option)$/;"	f	file:
send_packet	ssh.c	/^static void send_packet(Ssh ssh, int pkttype, ...)$/;"	f	file:
send_packet_to_downstream	sshshare.c	/^static void send_packet_to_downstream(struct ssh_sharing_connstate *cs,$/;"	f	file:
send_raw_mouse	unix/gtkwin.c	/^static int send_raw_mouse;$/;"	v	file:
send_raw_mouse	windows/window.c	/^static int send_raw_mouse = 0;$/;"	v	file:
sendbuffer	putty.h	/^    int (*sendbuffer) (void *handle);$/;"	m	struct:backend_tag
sending_oob	unix/uxnet.c	/^    int sending_oob;$/;"	m	struct:Socket_tag	file:
sending_oob	windows/winnet.c	/^    int sending_oob;$/;"	m	struct:Socket_tag	file:
sendok	putty.h	/^    int (*sendok) (void *handle);$/;"	m	struct:backend_tag
sent	network.h	/^    void (*sent) (Plug p, int bufsize);$/;"	m	struct:plug_function_table
sent_bufsize	proxy.h	/^    int sent_bufsize;$/;"	m	struct:Socket_proxy_tag
sent_console_eof	raw.c	/^    int sent_console_eof, sent_socket_eof, session_started;$/;"	m	struct:raw_backend_data	file:
sent_console_eof	ssh.c	/^    int sent_console_eof;$/;"	m	struct:ssh_tag	file:
sent_eof	pscp.c	/^int sent_eof = FALSE;$/;"	v
sent_eof	psftp.c	/^int sent_eof = FALSE;$/;"	v
sent_socket_eof	raw.c	/^    int sent_console_eof, sent_socket_eof, session_started;$/;"	m	struct:raw_backend_data	file:
sent_verstring	sshshare.c	/^    int sent_verstring, got_verstring, curr_packetlen;$/;"	m	struct:ssh_sharing_connstate	file:
sentdata	windows/winhandl.c	/^    handle_outputfn_t sentdata;$/;"	m	struct:handle_output	file:
sequence	ssh.c	/^    unsigned long sequence; \/* SSH-2 incoming sequence number *\/$/;"	m	struct:Packet	file:
ser_setup_config_box	sercfg.c	/^void ser_setup_config_box(struct controlbox *b, int midsession,$/;"	f
serbreak_timer	windows/winser.c	/^static void serbreak_timer(void *ctx, unsigned long now)$/;"	f	file:
serial	unix/x11misc.c	/^    unsigned long serial;$/;"	m	struct:x11_err_to_ignore	file:
serial_backend	unix/uxser.c	/^Backend serial_backend = {$/;"	v
serial_backend	windows/winser.c	/^Backend serial_backend = {$/;"	v
serial_backend_data	unix/uxser.c	/^typedef struct serial_backend_data {$/;"	s	file:
serial_backend_data	windows/winser.c	/^typedef struct serial_backend_data {$/;"	s	file:
serial_by_fd	unix/uxser.c	/^static tree234 *serial_by_fd = NULL;$/;"	v	file:
serial_cfg_info	unix/uxser.c	/^static int serial_cfg_info(void *handle)$/;"	f	file:
serial_cfg_info	windows/winser.c	/^static int serial_cfg_info(void *handle)$/;"	f	file:
serial_close	unix/uxser.c	/^static void serial_close(Serial serial)$/;"	f	file:
serial_compare_by_fd	unix/uxser.c	/^static int serial_compare_by_fd(void *av, void *bv)$/;"	f	file:
serial_configure	unix/uxser.c	/^static const char *serial_configure(Serial serial, Conf *conf)$/;"	f	file:
serial_configure	windows/winser.c	/^static const char *serial_configure(Serial serial, HANDLE serport, Conf *conf)$/;"	f	file:
serial_connected	unix/uxser.c	/^static int serial_connected(void *handle)$/;"	f	file:
serial_connected	windows/winser.c	/^static int serial_connected(void *handle)$/;"	f	file:
serial_exitcode	unix/uxser.c	/^static int serial_exitcode(void *handle)$/;"	f	file:
serial_exitcode	windows/winser.c	/^static int serial_exitcode(void *handle)$/;"	f	file:
serial_find_by_fd	unix/uxser.c	/^static int serial_find_by_fd(void *av, void *bv)$/;"	f	file:
serial_flow_handler	sercfg.c	/^static void serial_flow_handler(union control *ctrl, void *dlg,$/;"	f	file:
serial_free	unix/uxser.c	/^static void serial_free(void *handle)$/;"	f	file:
serial_free	windows/winser.c	/^static void serial_free(void *handle)$/;"	f	file:
serial_get_specials	unix/uxser.c	/^static const struct telnet_special *serial_get_specials(void *handle)$/;"	f	file:
serial_get_specials	windows/winser.c	/^static const struct telnet_special *serial_get_specials(void *handle)$/;"	f	file:
serial_gotdata	windows/winser.c	/^static int serial_gotdata(struct handle *h, void *data, int len)$/;"	f	file:
serial_init	unix/uxser.c	/^static const char *serial_init(void *frontend_handle, void **backend_handle,$/;"	f	file:
serial_init	windows/winser.c	/^static const char *serial_init(void *frontend_handle, void **backend_handle,$/;"	f	file:
serial_ldisc	unix/uxser.c	/^static int serial_ldisc(void *handle, int option)$/;"	f	file:
serial_ldisc	windows/winser.c	/^static int serial_ldisc(void *handle, int option)$/;"	f	file:
serial_parity_handler	sercfg.c	/^static void serial_parity_handler(union control *ctrl, void *dlg,$/;"	f	file:
serial_provide_ldisc	unix/uxser.c	/^static void serial_provide_ldisc(void *handle, void *ldisc)$/;"	f	file:
serial_provide_ldisc	windows/winser.c	/^static void serial_provide_ldisc(void *handle, void *ldisc)$/;"	f	file:
serial_provide_logctx	unix/uxser.c	/^static void serial_provide_logctx(void *handle, void *logctx)$/;"	f	file:
serial_provide_logctx	windows/winser.c	/^static void serial_provide_logctx(void *handle, void *logctx)$/;"	f	file:
serial_reconfig	unix/uxser.c	/^static void serial_reconfig(void *handle, Conf *conf)$/;"	f	file:
serial_reconfig	windows/winser.c	/^static void serial_reconfig(void *handle, Conf *conf)$/;"	f	file:
serial_select_result	unix/uxser.c	/^static void serial_select_result(int fd, int event)$/;"	f	file:
serial_send	unix/uxser.c	/^static int serial_send(void *handle, const char *buf, int len)$/;"	f	file:
serial_send	windows/winser.c	/^static int serial_send(void *handle, const char *buf, int len)$/;"	f	file:
serial_sendbuffer	unix/uxser.c	/^static int serial_sendbuffer(void *handle)$/;"	f	file:
serial_sendbuffer	windows/winser.c	/^static int serial_sendbuffer(void *handle)$/;"	f	file:
serial_sendok	unix/uxser.c	/^static int serial_sendok(void *handle)$/;"	f	file:
serial_sendok	windows/winser.c	/^static int serial_sendok(void *handle)$/;"	f	file:
serial_sentdata	windows/winser.c	/^static void serial_sentdata(struct handle *h, int new_backlog)$/;"	f	file:
serial_size	unix/uxser.c	/^static void serial_size(void *handle, int width, int height)$/;"	f	file:
serial_size	windows/winser.c	/^static void serial_size(void *handle, int width, int height)$/;"	f	file:
serial_special	unix/uxser.c	/^static void serial_special(void *handle, Telnet_Special code)$/;"	f	file:
serial_special	windows/winser.c	/^static void serial_special(void *handle, Telnet_Special code)$/;"	f	file:
serial_terminate	windows/winser.c	/^static void serial_terminate(Serial serial)$/;"	f	file:
serial_try_write	unix/uxser.c	/^static void serial_try_write(Serial serial)$/;"	f	file:
serial_unthrottle	unix/uxser.c	/^static void serial_unthrottle(void *handle, int backlog)$/;"	f	file:
serial_unthrottle	windows/winser.c	/^static void serial_unthrottle(void *handle, int backlog)$/;"	f	file:
serial_uxsel_setup	unix/uxser.c	/^static void serial_uxsel_setup(Serial serial)$/;"	f	file:
server_id	sshshare.c	/^    unsigned downstream_id, upstream_id, server_id;$/;"	m	struct:share_channel	file:
server_id	sshshare.c	/^    unsigned server_id;$/;"	m	struct:share_halfchannel	file:
server_id	sshshare.c	/^    unsigned upstream_id, server_id;$/;"	m	struct:share_xchannel	file:
server_verstring	sshshare.c	/^    char *server_verstring;          \/* server version string after "SSH-" *\/$/;"	m	struct:ssh_sharing_state	file:
session_closed	windows/window.c	/^static int session_closed;$/;"	v	file:
session_key	ssh.c	/^    unsigned char session_key[32];$/;"	m	struct:ssh_tag	file:
session_menu	windows/winpgnt.c	/^static HMENU systray_menu, session_menu;$/;"	v	file:
session_started	raw.c	/^    int sent_console_eof, sent_socket_eof, session_started;$/;"	m	struct:raw_backend_data	file:
session_started	ssh.c	/^    int session_started;$/;"	m	struct:ssh_tag	file:
session_started	telnet.c	/^    int session_started;$/;"	m	struct:telnet_tag	file:
sessioncmp	settings.c	/^static int sessioncmp(const void *av, const void *bv)$/;"	f	file:
sessions	putty.h	/^    const char **sessions;$/;"	m	struct:sesslist
sessionsaver_data	config.c	/^struct sessionsaver_data {$/;"	s	file:
sessionsaver_data_free	config.c	/^static void sessionsaver_data_free(void *ssdv)$/;"	f	file:
sessionsaver_handler	config.c	/^static void sessionsaver_handler(union control *ctrl, void *dlg,$/;"	f	file:
sessionsmenu	unix/gtkwin.c	/^    GtkWidget *sessionsmenu;$/;"	m	struct:gui_data	file:
sesskey	ssh.h	/^    void (*sesskey) (void *, unsigned char *key);	\/* for SSH-1 *\/$/;"	m	struct:ssh_cipher
sesslist	config.c	/^    struct sesslist sesslist;$/;"	m	struct:sessionsaver_data	typeref:struct:sessionsaver_data::sesslist	file:
sesslist	putty.h	/^struct sesslist {$/;"	s
sesslist	windows/window.c	/^static struct sesslist sesslist;       \/* for saved-session menu *\/$/;"	v	typeref:struct:sesslist	file:
setOverrideBits	minibidi.c	/^unsigned char setOverrideBits(unsigned char level, unsigned char override)$/;"	f
set_base_from	depcomp	/^set_base_from ()$/;"	f
set_busy_status	unix/gtkwin.c	/^void set_busy_status(void *frontend, int status)$/;"	f
set_busy_status	unix/uxcons.c	/^void set_busy_status(void *frontend, int status)$/;"	f
set_busy_status	windows/wincons.c	/^void set_busy_status(void *frontend, int status)$/;"	f
set_busy_status	windows/window.c	/^void set_busy_status(void *frontend, int status)$/;"	f
set_dir_from	depcomp	/^set_dir_from ()$/;"	f
set_erase_char	terminal.c	/^static void set_erase_char(Terminal *term)$/;"	f	file:
set_explicit_app_user_model_id	windows/winjump.c	/^BOOL set_explicit_app_user_model_id()$/;"	f
set_file_times	unix/uxsftp.c	/^void set_file_times(WFile *f, unsigned long mtime, unsigned long atime)$/;"	f
set_file_times	windows/winsftp.c	/^void set_file_times(WFile *f, unsigned long mtime, unsigned long atime)$/;"	f
set_frozen	network.h	/^    void (*set_frozen) (Socket s, int is_frozen);$/;"	m	struct:socket_function_table
set_geom_hints	unix/gtkwin.c	/^void set_geom_hints(struct gui_data *inst)$/;"	f
set_gtk_widget_background	unix/gtkwin.c	/^void set_gtk_widget_background(GtkWidget *widget, const GdkColor *col)$/;"	f
set_icon	fuzzterm.c	/^void set_icon(void *frontend, char *t) { }$/;"	f
set_icon	unix/gtkwin.c	/^void set_icon(void *frontend, char *title)$/;"	f
set_icon	windows/window.c	/^void set_icon(void *frontend, char *title)$/;"	f
set_iconic	fuzzterm.c	/^void set_iconic(void *frontend, int iconic) { }$/;"	f
set_iconic	unix/gtkwin.c	/^void set_iconic(void *frontend, int iconic)$/;"	f
set_iconic	windows/window.c	/^void set_iconic(void *frontend, int iconic)$/;"	f
set_input_locale	windows/window.c	/^static void set_input_locale(HKL kl)$/;"	f	file:
set_raw_mouse_mode	fuzzterm.c	/^void set_raw_mouse_mode(void *frontend, int m) { }$/;"	f
set_raw_mouse_mode	unix/gtkwin.c	/^void set_raw_mouse_mode(void *frontend, int activate)$/;"	f
set_raw_mouse_mode	windows/window.c	/^void set_raw_mouse_mode(void *frontend, int activate)$/;"	f
set_sbar	fuzzterm.c	/^void set_sbar(void *frontend, int a, int b, int c) { }$/;"	f
set_sbar	unix/gtkwin.c	/^void set_sbar(void *frontend, int total, int start, int page)$/;"	f
set_sbar	windows/window.c	/^void set_sbar(void *frontend, int total, int start, int page)$/;"	f
set_title	fuzzterm.c	/^void set_title(void *frontend, char *t) { }$/;"	f
set_title	unix/gtkwin.c	/^void set_title(void *frontend, char *title)$/;"	f
set_title	windows/window.c	/^void set_title(void *frontend, char *title)$/;"	f
set_title_and_icon	unix/gtkwin.c	/^void set_title_and_icon(void *frontend, char *title, char *icon)$/;"	f
set_transient_window_pos	unix/gtkdlg.c	/^static void set_transient_window_pos(GtkWidget *parent, GtkWidget *child)$/;"	f	file:
set_window_background	unix/gtkwin.c	/^void set_window_background(struct gui_data *inst)$/;"	f
set_window_icon	unix/gtkwin.c	/^void set_window_icon(GtkWidget *window, const char *const *const *icon,$/;"	f
set_window_titles	unix/gtkwin.c	/^static void set_window_titles(struct gui_data *inst)$/;"	f	file:
set_zoomed	fuzzterm.c	/^void set_zoomed(void *frontend, int zoomed) { }$/;"	f
set_zoomed	unix/gtkwin.c	/^void set_zoomed(void *frontend, int zoomed)$/;"	f
set_zoomed	windows/window.c	/^void set_zoomed(void *frontend, int zoomed)$/;"	f
set_zorder	fuzzterm.c	/^void set_zorder(void *frontend, int top) { }$/;"	f
set_zorder	unix/gtkwin.c	/^void set_zorder(void *frontend, int top)$/;"	f
set_zorder	windows/window.c	/^void set_zorder(void *frontend, int top)$/;"	f
setbutton	config.c	/^    union control *valradio, *valbox, *setbutton, *listbox;$/;"	m	struct:ttymodes_data	typeref:union:ttymodes_data::	file:
setiv	ssh.h	/^    void (*setiv) (void *, unsigned char *key);	\/* for SSH-2 *\/$/;"	m	struct:ssh2_cipher
setkey	ssh.h	/^    void (*setkey) (void *, unsigned char *key);$/;"	m	struct:ssh_mac
setkey	ssh.h	/^    void (*setkey) (void *, unsigned char *key);\/* for SSH-2 *\/$/;"	m	struct:ssh2_cipher
settime	pscp.c	/^    int settime;		       \/* 1 if atime and mtime are filled *\/$/;"	m	struct:scp_sink_action	file:
setup	unix/gtkfont.c	/^    void (*setup)(unifont_drawctx *ctx, x11font_individual *xfi);$/;"	m	struct:x11font_drawfuncs	file:
setup	unix/uxpterm.c	/^void setup(int single)$/;"	f
setup	unix/uxputty.c	/^void setup(int single)$/;"	f
setup_config_box	config.c	/^void setup_config_box(struct controlbox *b, int midsession,$/;"	f
setup_fonts_ucs	unix/gtkwin.c	/^char *setup_fonts_ucs(struct gui_data *inst)$/;"	f
setup_gtk	unix/gtkask.c	/^static int setup_gtk(const char *display)$/;"	f	file:
setup_passphrases	cmdgen.c	/^void setup_passphrases(char *first, ...)$/;"	f
setup_utmp	unix/uxpty.c	/^static void setup_utmp(char *ttyname, char *location)$/;"	f	file:
setupbigedit1	windows/winpgen.c	/^static void setupbigedit1(HWND hwnd, int id, int idstatic, struct RSAKey *key)$/;"	f	file:
setupbigedit2	windows/winpgen.c	/^static void setupbigedit2(HWND hwnd, int id, int idstatic,$/;"	f	file:
sfree	contrib/cygtermd/malloc.c	/^void sfree(void *p) {$/;"	f
sfree	puttymem.h	18;"	d
sfree	puttymem.h	25;"	d
sfree	sshzlib.c	58;"	d	file:
sfree	tree234.c	41;"	d	file:
sfree	windows/winutils.c	17;"	d	file:
sftp_action_chmod	psftp.c	/^static int sftp_action_chmod(void *vctx, char *fname)$/;"	f	file:
sftp_action_mv	psftp.c	/^static int sftp_action_mv(void *vctx, char *srcfname)$/;"	f	file:
sftp_action_rm	psftp.c	/^static int sftp_action_rm(void *vctx, char *fname)$/;"	f	file:
sftp_action_rmdir	psftp.c	/^static int sftp_action_rmdir(void *vctx, char *dir)$/;"	f	file:
sftp_alloc_request	sftp.c	/^static struct sftp_request *sftp_alloc_request(void)$/;"	f	file:
sftp_begin_wildcard_matching	psftp.c	/^SftpWildcardMatcher *sftp_begin_wildcard_matching(char *name)$/;"	f
sftp_cleanup_request	sftp.c	/^void sftp_cleanup_request(void)$/;"	f
sftp_cmd_cd	psftp.c	/^int sftp_cmd_cd(struct sftp_command *cmd)$/;"	f
sftp_cmd_chmod	psftp.c	/^int sftp_cmd_chmod(struct sftp_command *cmd)$/;"	f
sftp_cmd_close	psftp.c	/^int sftp_cmd_close(struct sftp_command *cmd)$/;"	f
sftp_cmd_get	psftp.c	/^int sftp_cmd_get(struct sftp_command *cmd)$/;"	f
sftp_cmd_help	psftp.c	/^static int sftp_cmd_help(struct sftp_command *cmd)$/;"	f	file:
sftp_cmd_lcd	psftp.c	/^static int sftp_cmd_lcd(struct sftp_command *cmd)$/;"	f	file:
sftp_cmd_lookup	psftp.c	/^static struct sftp_cmd_lookup {$/;"	s	file:
sftp_cmd_lpwd	psftp.c	/^static int sftp_cmd_lpwd(struct sftp_command *cmd)$/;"	f	file:
sftp_cmd_ls	psftp.c	/^int sftp_cmd_ls(struct sftp_command *cmd)$/;"	f
sftp_cmd_mget	psftp.c	/^int sftp_cmd_mget(struct sftp_command *cmd)$/;"	f
sftp_cmd_mkdir	psftp.c	/^int sftp_cmd_mkdir(struct sftp_command *cmd)$/;"	f
sftp_cmd_mput	psftp.c	/^int sftp_cmd_mput(struct sftp_command *cmd)$/;"	f
sftp_cmd_mv	psftp.c	/^int sftp_cmd_mv(struct sftp_command *cmd)$/;"	f
sftp_cmd_null	psftp.c	/^int sftp_cmd_null(struct sftp_command *cmd)$/;"	f
sftp_cmd_open	psftp.c	/^static int sftp_cmd_open(struct sftp_command *cmd)$/;"	f	file:
sftp_cmd_pling	psftp.c	/^static int sftp_cmd_pling(struct sftp_command *cmd)$/;"	f	file:
sftp_cmd_put	psftp.c	/^int sftp_cmd_put(struct sftp_command *cmd)$/;"	f
sftp_cmd_pwd	psftp.c	/^int sftp_cmd_pwd(struct sftp_command *cmd)$/;"	f
sftp_cmd_quit	psftp.c	/^int sftp_cmd_quit(struct sftp_command *cmd)$/;"	f
sftp_cmd_reget	psftp.c	/^int sftp_cmd_reget(struct sftp_command *cmd)$/;"	f
sftp_cmd_reput	psftp.c	/^int sftp_cmd_reput(struct sftp_command *cmd)$/;"	f
sftp_cmd_rm	psftp.c	/^int sftp_cmd_rm(struct sftp_command *cmd)$/;"	f
sftp_cmd_rmdir	psftp.c	/^int sftp_cmd_rmdir(struct sftp_command *cmd)$/;"	f
sftp_cmd_unknown	psftp.c	/^int sftp_cmd_unknown(struct sftp_command *cmd)$/;"	f
sftp_command	psftp.c	/^struct sftp_command {$/;"	s	file:
sftp_context_chmod	psftp.c	/^struct sftp_context_chmod {$/;"	s	file:
sftp_context_mv	psftp.c	/^struct sftp_context_mv {$/;"	s	file:
sftp_data	contrib/logparse.pl	/^sub sftp_data {$/;"	s
sftp_find_request	sftp.c	/^struct sftp_request *sftp_find_request(struct sftp_packet *pktin)$/;"	f
sftp_finish_wildcard_matching	psftp.c	/^void sftp_finish_wildcard_matching(SftpWildcardMatcher *swcm)$/;"	f
sftp_general_get	psftp.c	/^int sftp_general_get(struct sftp_command *cmd, int restart, int multiple)$/;"	f
sftp_general_put	psftp.c	/^int sftp_general_put(struct sftp_command *cmd, int restart, int multiple)$/;"	f
sftp_get_file	psftp.c	/^int sftp_get_file(char *fname, char *outfname, int recurse, int restart)$/;"	f
sftp_getcmd	psftp.c	/^struct sftp_command *sftp_getcmd(FILE *fp, int mode, int modeflags)$/;"	f
sftp_logreply	contrib/logparse.pl	/^sub sftp_logreply {$/;"	s
sftp_logreq	contrib/logparse.pl	/^sub sftp_logreq {$/;"	s
sftp_lookup	psftp.c	/^} sftp_lookup[] = {$/;"	v	typeref:struct:sftp_cmd_lookup	file:
sftp_ls_compare	pscp.c	/^static int sftp_ls_compare(const void *av, const void *bv)$/;"	f	file:
sftp_name_compare	psftp.c	/^static int sftp_name_compare(const void *av, const void *bv)$/;"	f	file:
sftp_packet	sftp.c	/^struct sftp_packet {$/;"	s	file:
sftp_parse_attrs	contrib/logparse.pl	/^sub sftp_parse_attrs {$/;"	s
sftp_pkt_addattrs	sftp.c	/^static void sftp_pkt_addattrs(struct sftp_packet *pkt, struct fxp_attrs attrs)$/;"	f	file:
sftp_pkt_addbyte	sftp.c	/^static void sftp_pkt_addbyte(struct sftp_packet *pkt, unsigned char byte)$/;"	f	file:
sftp_pkt_adddata	sftp.c	/^static void sftp_pkt_adddata(struct sftp_packet *pkt,$/;"	f	file:
sftp_pkt_addstring	sftp.c	/^static void sftp_pkt_addstring(struct sftp_packet *pkt, const char *data)$/;"	f	file:
sftp_pkt_addstring_data	sftp.c	/^static void sftp_pkt_addstring_data(struct sftp_packet *pkt,$/;"	f	file:
sftp_pkt_addstring_start	sftp.c	/^static void sftp_pkt_addstring_start(struct sftp_packet *pkt)$/;"	f	file:
sftp_pkt_addstring_str	sftp.c	/^static void sftp_pkt_addstring_str(struct sftp_packet *pkt, const char *data)$/;"	f	file:
sftp_pkt_adduint32	sftp.c	/^static void sftp_pkt_adduint32(struct sftp_packet *pkt,$/;"	f	file:
sftp_pkt_adduint64	sftp.c	/^static void sftp_pkt_adduint64(struct sftp_packet *pkt, uint64 value)$/;"	f	file:
sftp_pkt_ensure	sftp.c	/^static void sftp_pkt_ensure(struct sftp_packet *pkt, int length)$/;"	f	file:
sftp_pkt_free	sftp.c	/^static void sftp_pkt_free(struct sftp_packet *pkt)$/;"	f	file:
sftp_pkt_getattrs	sftp.c	/^static int sftp_pkt_getattrs(struct sftp_packet *pkt, struct fxp_attrs *ret)$/;"	f	file:
sftp_pkt_getbyte	sftp.c	/^static int sftp_pkt_getbyte(struct sftp_packet *pkt, unsigned char *ret)$/;"	f	file:
sftp_pkt_getstring	sftp.c	/^static int sftp_pkt_getstring(struct sftp_packet *pkt,$/;"	f	file:
sftp_pkt_getuint32	sftp.c	/^static int sftp_pkt_getuint32(struct sftp_packet *pkt, unsigned long *ret)$/;"	f	file:
sftp_pkt_init	sftp.c	/^static struct sftp_packet *sftp_pkt_init(int pkt_type)$/;"	f	file:
sftp_put_file	psftp.c	/^int sftp_put_file(char *fname, char *outfname, int recurse, int restart)$/;"	f
sftp_recv	sftp.c	/^struct sftp_packet *sftp_recv(void)$/;"	f
sftp_recvdata	pscp.c	/^int sftp_recvdata(char *buf, int len)$/;"	f
sftp_recvdata	psftp.c	/^int sftp_recvdata(char *buf, int len)$/;"	f
sftp_register	sftp.c	/^void sftp_register(struct sftp_request *req)$/;"	f
sftp_reqcmp	sftp.c	/^static int sftp_reqcmp(void *av, void *bv)$/;"	f	file:
sftp_reqfind	sftp.c	/^static int sftp_reqfind(void *av, void *bv)$/;"	f	file:
sftp_request	sftp.c	/^struct sftp_request {$/;"	s	file:
sftp_requests	sftp.c	/^static tree234 *sftp_requests;$/;"	v	file:
sftp_send	sftp.c	/^int sftp_send(struct sftp_packet *pkt)$/;"	f
sftp_sendbuffer	pscp.c	/^int sftp_sendbuffer(void)$/;"	f
sftp_sendbuffer	psftp.c	/^int sftp_sendbuffer(void)$/;"	f
sftp_senddata	pscp.c	/^int sftp_senddata(char *buf, int len)$/;"	f
sftp_senddata	psftp.c	/^int sftp_senddata(char *buf, int len)$/;"	f
sftp_setup	contrib/logparse.pl	/^sub sftp_setup {$/;"	s
sftp_ssh_socket	windows/winsftp.c	/^static SOCKET sftp_ssh_socket = INVALID_SOCKET;$/;"	v	file:
sftp_wait_for_reply	pscp.c	/^struct sftp_packet *sftp_wait_for_reply(struct sftp_request *req)$/;"	f
sftp_wait_for_reply	psftp.c	/^struct sftp_packet *sftp_wait_for_reply(struct sftp_request *req)$/;"	f
sftp_wildcard_get_filename	psftp.c	/^char *sftp_wildcard_get_filename(SftpWildcardMatcher *swcm)$/;"	f
sha1_96_generate	sshsha.c	/^static void sha1_96_generate(void *handle, unsigned char *blk, int len,$/;"	f	file:
sha1_96_verify	sshsha.c	/^static int sha1_96_verify(void *handle, unsigned char *blk, int len,$/;"	f	file:
sha1_bytes	sshsha.c	/^static void sha1_bytes(void *handle, const void *p, int len)$/;"	f	file:
sha1_copy	sshsha.c	/^static void *sha1_copy(const void *vold)$/;"	f	file:
sha1_do_hmac	sshsha.c	/^static void sha1_do_hmac(void *handle, unsigned char *blk, int len,$/;"	f	file:
sha1_final	sshsha.c	/^static void sha1_final(void *handle, unsigned char *output)$/;"	f	file:
sha1_free	sshsha.c	/^static void sha1_free(void *handle)$/;"	f	file:
sha1_free_context	sshsha.c	/^static void sha1_free_context(void *handle)$/;"	f	file:
sha1_generate	sshsha.c	/^static void sha1_generate(void *handle, unsigned char *blk, int len,$/;"	f	file:
sha1_init	sshsha.c	/^static void *sha1_init(void)$/;"	f	file:
sha1_key	sshsha.c	/^static void sha1_key(void *handle, unsigned char *key)$/;"	f	file:
sha1_key_buggy	sshsha.c	/^static void sha1_key_buggy(void *handle, unsigned char *key)$/;"	f	file:
sha1_key_internal	sshsha.c	/^static void sha1_key_internal(void *handle, unsigned char *key, int len)$/;"	f	file:
sha1_make_context	sshsha.c	/^static void *sha1_make_context(void *cipher_ctx)$/;"	f	file:
sha1_verify	sshsha.c	/^static int sha1_verify(void *handle, unsigned char *blk, int len,$/;"	f	file:
sha256_bytes	sshsh256.c	/^static void sha256_bytes(void *handle, const void *p, int len)$/;"	f	file:
sha256_copy	sshsh256.c	/^static void *sha256_copy(const void *vold)$/;"	f	file:
sha256_do_hmac	sshsh256.c	/^static void sha256_do_hmac(void *handle, unsigned char *blk, int len,$/;"	f	file:
sha256_final	sshsh256.c	/^static void sha256_final(void *handle, unsigned char *output)$/;"	f	file:
sha256_free	sshsh256.c	/^static void sha256_free(void *handle)$/;"	f	file:
sha256_free_context	sshsh256.c	/^static void sha256_free_context(void *handle)$/;"	f	file:
sha256_generate	sshsh256.c	/^static void sha256_generate(void *handle, unsigned char *blk, int len,$/;"	f	file:
sha256_init	sshsh256.c	/^static void *sha256_init(void)$/;"	f	file:
sha256_key	sshsh256.c	/^static void sha256_key(void *handle, unsigned char *key)$/;"	f	file:
sha256_key_internal	sshsh256.c	/^static void sha256_key_internal(void *handle, unsigned char *key, int len)$/;"	f	file:
sha256_make_context	sshsh256.c	/^static void *sha256_make_context(void *cipher_ctx)$/;"	f	file:
sha256_verify	sshsh256.c	/^static int sha256_verify(void *handle, unsigned char *blk, int len,$/;"	f	file:
sha384_final	sshsh512.c	/^static void sha384_final(void *handle, unsigned char *output)$/;"	f	file:
sha384_init	sshsh512.c	/^static void *sha384_init(void)$/;"	f	file:
sha512_bytes	sshsh512.c	/^static void sha512_bytes(void *handle, const void *p, int len)$/;"	f	file:
sha512_copy	sshsh512.c	/^static void *sha512_copy(const void *vold)$/;"	f	file:
sha512_final	sshsh512.c	/^static void sha512_final(void *handle, unsigned char *output)$/;"	f	file:
sha512_free	sshsh512.c	/^static void sha512_free(void *handle)$/;"	f	file:
sha512_init	sshsh512.c	/^static void *sha512_init(void)$/;"	f	file:
sha512_mpint	sshdss.c	/^static void sha512_mpint(SHA512_State * s, Bignum b)$/;"	f	file:
sha512_mpint	sshrsa.c	/^static void sha512_mpint(SHA512_State * s, Bignum b)$/;"	f	file:
sha_mpint	sshdss.c	/^static void sha_mpint(SHA_State * s, Bignum b)$/;"	f	file:
shadowalways	unix/gtkfont.c	/^    int bold, shadowoffset, shadowalways;$/;"	m	struct:pangofont	file:
shadowalways	unix/gtkfont.c	/^    int wide, bold, shadowoffset, shadowalways;$/;"	m	struct:x11font	file:
shadowoffset	unix/gtkfont.c	/^    int bold, shadowoffset, shadowalways;$/;"	m	struct:pangofont	file:
shadowoffset	unix/gtkfont.c	/^    int wide, bold, shadowoffset, shadowalways;$/;"	m	struct:x11font	file:
shape_node	minibidi.c	/^} shape_node;$/;"	t	typeref:struct:__anon39	file:
shapetypes	minibidi.c	/^const shape_node shapetypes[] = {$/;"	v
share_activate	sshshare.c	/^void share_activate(void *state, const char *server_verstring)$/;"	f
share_add_channel	sshshare.c	/^static struct share_channel *share_add_channel$/;"	f	file:
share_add_forwarding	sshshare.c	/^static struct share_forwarding *share_add_forwarding$/;"	f	file:
share_add_halfchannel	sshshare.c	/^static struct share_halfchannel *share_add_halfchannel$/;"	f	file:
share_add_xchannel	sshshare.c	/^static struct share_xchannel *share_add_xchannel$/;"	f	file:
share_begin_cleanup	sshshare.c	/^static void share_begin_cleanup(struct ssh_sharing_connstate *cs)$/;"	f	file:
share_can_be_downstream	pscp.c	/^const int share_can_be_downstream = TRUE;$/;"	v
share_can_be_downstream	psftp.c	/^const int share_can_be_downstream = TRUE;$/;"	v
share_can_be_downstream	unix/uxplink.c	/^const int share_can_be_downstream = TRUE;$/;"	v
share_can_be_downstream	unix/uxputty.c	/^const int share_can_be_downstream = TRUE;$/;"	v
share_can_be_downstream	windows/window.c	/^const int share_can_be_downstream = TRUE;$/;"	v
share_can_be_downstream	windows/winplink.c	/^const int share_can_be_downstream = TRUE;$/;"	v
share_can_be_upstream	pscp.c	/^const int share_can_be_upstream = FALSE;$/;"	v
share_can_be_upstream	psftp.c	/^const int share_can_be_upstream = FALSE;$/;"	v
share_can_be_upstream	unix/uxplink.c	/^const int share_can_be_upstream = TRUE;$/;"	v
share_can_be_upstream	unix/uxputty.c	/^const int share_can_be_upstream = TRUE;$/;"	v
share_can_be_upstream	windows/window.c	/^const int share_can_be_upstream = TRUE;$/;"	v
share_can_be_upstream	windows/winplink.c	/^const int share_can_be_upstream = TRUE;$/;"	v
share_chan	ssh.h	/^    void *share_cs, *share_chan;$/;"	m	struct:X11FakeAuth
share_channel	sshshare.c	/^struct share_channel {$/;"	s	file:
share_channel_server_cmp	sshshare.c	/^static int share_channel_server_cmp(void *av, void *bv)$/;"	f	file:
share_channel_set_server_id	sshshare.c	/^static void share_channel_set_server_id(struct ssh_sharing_connstate *cs,$/;"	f	file:
share_channel_us_cmp	sshshare.c	/^static int share_channel_us_cmp(void *av, void *bv)$/;"	f	file:
share_closing	sshshare.c	/^static void share_closing(Plug plug, const char *error_msg, int error_code,$/;"	f	file:
share_connstate_cmp	sshshare.c	/^static int share_connstate_cmp(void *av, void *bv)$/;"	f	file:
share_connstate_free	sshshare.c	/^static void share_connstate_free(struct ssh_sharing_connstate *cs)$/;"	f	file:
share_cs	ssh.h	/^    void *share_cs, *share_chan;$/;"	m	struct:X11FakeAuth
share_ctx	ssh.c	/^    void *share_ctx;$/;"	m	struct:ssh_rportfwd	file:
share_dead_xchannel_respond	sshshare.c	/^void share_dead_xchannel_respond(struct ssh_sharing_connstate *cs,$/;"	f
share_disconnect	sshshare.c	/^static void share_disconnect(struct ssh_sharing_connstate *cs,$/;"	f	file:
share_find_channel_by_server	sshshare.c	/^static struct share_channel *share_find_channel_by_server$/;"	f	file:
share_find_channel_by_upstream	sshshare.c	/^static struct share_channel *share_find_channel_by_upstream$/;"	f	file:
share_find_forwarding	sshshare.c	/^static struct share_forwarding *share_find_forwarding$/;"	f	file:
share_find_halfchannel	sshshare.c	/^static struct share_halfchannel *share_find_halfchannel$/;"	f	file:
share_find_unused_id	sshshare.c	/^static unsigned share_find_unused_id$/;"	f	file:
share_find_xchannel_by_server	sshshare.c	/^static struct share_xchannel *share_find_xchannel_by_server$/;"	f	file:
share_find_xchannel_by_upstream	sshshare.c	/^static struct share_xchannel *share_find_xchannel_by_upstream$/;"	f	file:
share_forwarding	sshshare.c	/^struct share_forwarding {$/;"	s	file:
share_forwarding_cmp	sshshare.c	/^static int share_forwarding_cmp(void *av, void *bv)$/;"	f	file:
share_globreq	sshshare.c	/^struct share_globreq {$/;"	s	file:
share_got_pkt_from_downstream	sshshare.c	/^static void share_got_pkt_from_downstream(struct ssh_sharing_connstate *cs,$/;"	f	file:
share_got_pkt_from_server	sshshare.c	/^void share_got_pkt_from_server(void *csv, int type,$/;"	f
share_halfchannel	sshshare.c	/^struct share_halfchannel {$/;"	s	file:
share_halfchannel_cmp	sshshare.c	/^static int share_halfchannel_cmp(void *av, void *bv)$/;"	f	file:
share_listen_accepting	sshshare.c	/^static int share_listen_accepting(Plug plug,$/;"	f	file:
share_listen_closing	sshshare.c	/^static void share_listen_closing(Plug plug, const char *error_msg,$/;"	f	file:
share_ndownstreams	sshshare.c	/^int share_ndownstreams(void *state)$/;"	f
share_receive	sshshare.c	/^static void share_receive(Plug plug, int urgent, char *data, int len)$/;"	f	file:
share_remove_channel	sshshare.c	/^static void share_remove_channel(struct ssh_sharing_connstate *cs,$/;"	f	file:
share_remove_forwarding	sshshare.c	/^static void share_remove_forwarding(struct ssh_sharing_connstate *cs,$/;"	f	file:
share_remove_halfchannel	sshshare.c	/^static void share_remove_halfchannel(struct ssh_sharing_connstate *cs,$/;"	f	file:
share_remove_xchannel	sshshare.c	/^static void share_remove_xchannel(struct ssh_sharing_connstate *cs,$/;"	f	file:
share_send_verstring	sshshare.c	/^static void share_send_verstring(struct ssh_sharing_connstate *cs)$/;"	f	file:
share_sent	sshshare.c	/^static void share_sent(Plug plug, int bufsize)$/;"	f	file:
share_setup_x11_channel	sshshare.c	/^void share_setup_x11_channel(void *csv, void *chanv,$/;"	f
share_try_cleanup	sshshare.c	/^static void share_try_cleanup(struct ssh_sharing_connstate *cs)$/;"	f	file:
share_xchannel	sshshare.c	/^struct share_xchannel {$/;"	s	file:
share_xchannel_add_message	sshshare.c	/^struct share_xchannel_message *share_xchannel_add_message$/;"	f
share_xchannel_confirmation	sshshare.c	/^void share_xchannel_confirmation(struct ssh_sharing_connstate *cs,$/;"	f
share_xchannel_failure	sshshare.c	/^void share_xchannel_failure(struct ssh_sharing_connstate *cs,$/;"	f
share_xchannel_free	sshshare.c	/^static void share_xchannel_free(struct share_xchannel *xc)$/;"	f	file:
share_xchannel_message	sshshare.c	/^struct share_xchannel_message {$/;"	s	file:
share_xchannel_server_cmp	sshshare.c	/^static int share_xchannel_server_cmp(void *av, void *bv)$/;"	f	file:
share_xchannel_us_cmp	sshshare.c	/^static int share_xchannel_us_cmp(void *av, void *bv)$/;"	f	file:
sharedstatedir	Makefile	/^sharedstatedir = ${prefix}\/com$/;"	m
sharestate_free	sshshare.c	/^void sharestate_free(void *v)$/;"	f
sharing	ssh.c	/^	} sharing;$/;"	m	union:ssh_channel::__anon80	typeref:struct:ssh_channel::__anon80::ssh_sharing_channel	file:
shdata	contrib/cygtermd/telnet.c	/^    struct shell_data shdata;$/;"	m	struct:telnet_tag	typeref:struct:telnet_tag::shell_data	file:
shell32_module	windows/winstore.c	/^static HMODULE shell32_module = NULL;$/;"	v	file:
shell_data	contrib/cygtermd/telnet.h	/^struct shell_data {$/;"	s
shell_ok	contrib/cygtermd/telnet.c	/^    int shell_ok;$/;"	m	struct:telnet_tag	file:
shell_type	unix/uxpgnt.c	/^static enum { SHELL_AUTO, SHELL_SH, SHELL_CSH } shell_type = SHELL_AUTO;$/;"	v	typeref:enum:__anon123	file:
shortcut	dialog.h	/^	char shortcut;		       \/* keyboard shortcut *\/$/;"	m	struct:control::__anon21
shortcut	dialog.h	/^	char shortcut;		       \/* keyboard shortcut *\/$/;"	m	struct:control::__anon25
shortcut	dialog.h	/^	char shortcut;$/;"	m	struct:control::__anon22
shortcut	dialog.h	/^	char shortcut;$/;"	m	struct:control::__anon23
shortcut	dialog.h	/^	char shortcut;$/;"	m	struct:control::__anon24
shortcut	dialog.h	/^	char shortcut;$/;"	m	struct:control::__anon26
shortcut	dialog.h	/^	char shortcut;$/;"	m	struct:control::__anon28
shortcut_add	unix/gtkdlg.c	/^void shortcut_add(struct Shortcuts *scs, GtkWidget *labelw,$/;"	f
shortcut_escape	windows/winctrls.c	/^static char *shortcut_escape(const char *text, char shortcut)$/;"	f	file:
shortcut_highlight	unix/gtkdlg.c	/^static void shortcut_highlight(GtkWidget *labelw, int chr)$/;"	f	file:
shortcuts	dialog.h	/^	char *shortcuts;	       \/* `nbuttons' shortcuts; may be NULL *\/$/;"	m	struct:control::__anon22
shortcuts	unix/gtkdlg.c	/^    struct Shortcuts *shortcuts;$/;"	m	struct:dlgparam	typeref:struct:dlgparam::Shortcuts	file:
shortcuts	unix/gtkdlg.c	/^    struct Shortcuts shortcuts;$/;"	m	struct:selparam	typeref:struct:selparam::Shortcuts	file:
shortcuts	windows/winstuff.h	/^    char shortcuts[128];	       \/* track which shortcuts in use *\/$/;"	m	struct:dlgparam
shortcuts	windows/winstuff.h	/^    char shortcuts[MAX_SHORTCUTS_PER_CTRL];$/;"	m	struct:winctrl
shorthelp	psftp.c	/^    const char *shorthelp;$/;"	m	struct:sftp_cmd_lookup	file:
shost	ssh.c	/^    char *shost, *dhost;$/;"	m	struct:ssh_rportfwd	file:
show_help	windows/windlg.c	/^void show_help(HWND hwnd)$/;"	f
show_mouseptr	unix/gtkwin.c	/^static void show_mouseptr(struct gui_data *inst, int show)$/;"	f	file:
show_mouseptr	windows/window.c	/^static void show_mouseptr(int show)$/;"	f	file:
show_scrollbar	unix/gtkwin.c	/^static void show_scrollbar(struct gui_data *inst, gboolean visible)$/;"	f	file:
showabout	windows/windlg.c	/^void showabout(HWND hwnd)$/;"	f
showeventlog	unix/gtkdlg.c	/^void showeventlog(void *estuff, void *parentwin)$/;"	f
showeventlog	windows/windlg.c	/^void showeventlog(HWND hwnd)$/;"	f
showversion	cmdgen.c	/^void showversion(void)$/;"	f
shr	sshsh256.c	14;"	d	file:
shrB	sshsh512.c	23;"	d	file:
shrL	sshsh512.c	24;"	d	file:
shutdown_help	windows/winhelp.c	/^void shutdown_help(void)$/;"	f
sig_readdata	contrib/cygtermd/main.c	/^void sig_readdata(sel_rfd *rfd, void *data, size_t len)$/;"	f
sig_readerr	contrib/cygtermd/main.c	/^void sig_readerr(sel_rfd *rfd, int error)$/;"	f
sigchld	contrib/cygtermd/main.c	/^void sigchld(int signum)$/;"	f
sigchld	unix/uxpgnt.c	/^void sigchld(int signum)$/;"	f
sigchld_handler	unix/uxpty.c	/^static void sigchld_handler(int signum)$/;"	f	file:
sign	sign.sh	/^sign() {$/;"	f
sign	ssh.h	/^    unsigned char *(*sign) (void *key, const char *data, int datalen,$/;"	m	struct:ssh_signkey
sign_extra_ed25519	sshecc.c	/^const struct ecsign_extra sign_extra_ed25519 = {$/;"	v	typeref:struct:ecsign_extra
sign_extra_nistp256	sshecc.c	/^const struct ecsign_extra sign_extra_nistp256 = {$/;"	v	typeref:struct:ecsign_extra
sign_extra_nistp384	sshecc.c	/^const struct ecsign_extra sign_extra_nistp384 = {$/;"	v	typeref:struct:ecsign_extra
sign_extra_nistp521	sshecc.c	/^const struct ecsign_extra sign_extra_nistp521 = {$/;"	v	typeref:struct:ecsign_extra
signalg	ssh.h	/^    const struct ssh_signkey *signalg;$/;"	m	struct:ec_key	typeref:struct:ec_key::ssh_signkey
signalpipe	contrib/cygtermd/main.c	/^int signalpipe[2];$/;"	v
signalpipe	unix/uxpgnt.c	/^int signalpipe[2];$/;"	v
signalpipe	unix/uxplink.c	/^int signalpipe[2];$/;"	v
sigr	contrib/cygtermd/main.c	/^sel_rfd *netr, *ptyr, *sigr;$/;"	v
sigwinch	unix/uxplink.c	/^void sigwinch(int signum)$/;"	f
sin	unix/uxnet.c	/^    struct sockaddr_in sin;$/;"	m	union:sockaddr_union	typeref:struct:sockaddr_union::sockaddr_in	file:
sin6	unix/uxnet.c	/^    struct sockaddr_in6 sin6;$/;"	m	union:sockaddr_union	typeref:struct:sockaddr_union::sockaddr_in6	file:
single_pty	unix/uxpty.c	/^static Pty single_pty = NULL;$/;"	v	file:
sink	pscp.c	/^static void sink(const char *targ, const char *src)$/;"	f	file:
sixteen_bit	unix/gtkfont.c	/^    int sixteen_bit;$/;"	m	struct:x11font	file:
size	misc.c	/^    int len, size;$/;"	m	struct:strbuf	file:
size	pscp.c	/^    uint64 size;		       \/* file size (not ENDDIR) *\/$/;"	m	struct:scp_sink_action	file:
size	putty.h	/^    void (*size) (void *handle, int width, int height);$/;"	m	struct:backend_tag
size	sftp.h	/^    uint64 size;$/;"	m	struct:fxp_attrs
size	terminal.c	/^    int len, size;$/;"	m	struct:buf	file:
size	terminal.h	/^    int size;			       \/* number of allocated termchars$/;"	m	struct:termline
size	unix/gtkfont.c	/^    int size, flags;$/;"	m	struct:fontinfo	file:
size_changed	unix/gtkfont.c	/^static void size_changed(GtkTreeSelection *treeselection, gpointer data)$/;"	f	file:
size_entry	unix/gtkfont.c	/^    GtkWidget *family_list, *style_list, *size_entry, *size_list;$/;"	m	struct:unifontsel_internal	file:
size_entry_changed	unix/gtkfont.c	/^static void size_entry_changed(GtkEditable *ed, gpointer data)$/;"	f	file:
size_increment	unix/gtkfont.c	/^    char *(*size_increment)(unifont *font, int increment);$/;"	m	struct:unifont_vtable	file:
size_list	unix/gtkfont.c	/^    GtkWidget *family_list, *style_list, *size_entry, *size_list;$/;"	m	struct:unifontsel_internal	file:
size_model	unix/gtkfont.c	/^    GtkListStore *family_model, *style_model, *size_model;$/;"	m	struct:unifontsel_internal	file:
size_needed	ssh.c	/^    int size_needed, eof_needed;$/;"	m	struct:ssh_tag	file:
sizebuf	unix/uxagentc.c	/^    char sizebuf[4];$/;"	m	struct:agent_pending_query	file:
sizeindex	unix/gtkfont.c	/^    int familyindex, styleindex, sizeindex;$/;"	m	struct:fontinfo	file:
sk_addr_dup	unix/uxnet.c	/^SockAddr sk_addr_dup(SockAddr addr)$/;"	f
sk_addr_dup	windows/winnet.c	/^SockAddr sk_addr_dup(SockAddr addr)$/;"	f
sk_addr_error	unix/uxnet.c	/^const char *sk_addr_error(SockAddr addr)$/;"	f
sk_addr_error	windows/winnet.c	/^const char *sk_addr_error(SockAddr addr)$/;"	f
sk_addr_free	unix/uxnet.c	/^void sk_addr_free(SockAddr addr)$/;"	f
sk_addr_free	windows/winnet.c	/^void sk_addr_free(SockAddr addr)$/;"	f
sk_addr_needs_port	unix/uxnet.c	/^int sk_addr_needs_port(SockAddr addr)$/;"	f
sk_addr_needs_port	windows/winnet.c	/^int sk_addr_needs_port(SockAddr addr)$/;"	f
sk_addrcopy	unix/uxnet.c	/^void sk_addrcopy(SockAddr addr, char *buf)$/;"	f
sk_addrcopy	windows/winnet.c	/^void sk_addrcopy(SockAddr addr, char *buf)$/;"	f
sk_address_is_local	unix/uxnet.c	/^int sk_address_is_local(SockAddr addr)$/;"	f
sk_address_is_local	windows/winnet.c	/^int sk_address_is_local(SockAddr addr)$/;"	f
sk_address_is_special_local	unix/uxnet.c	/^int sk_address_is_special_local(SockAddr addr)$/;"	f
sk_address_is_special_local	windows/winnet.c	/^int sk_address_is_special_local(SockAddr addr)$/;"	f
sk_addrtype	unix/uxnet.c	/^int sk_addrtype(SockAddr addr)$/;"	f
sk_addrtype	windows/winnet.c	/^int sk_addrtype(SockAddr addr)$/;"	f
sk_cleanup	cmdgen.c	/^void sk_cleanup(void)$/;"	f
sk_cleanup	unix/uxnet.c	/^void sk_cleanup(void)$/;"	f
sk_cleanup	windows/winnet.c	/^void sk_cleanup(void)$/;"	f
sk_close	network.h	151;"	d
sk_error_close	errsock.c	/^static void sk_error_close(Socket s)$/;"	f	file:
sk_error_peer_info	errsock.c	/^static char *sk_error_peer_info(Socket s)$/;"	f	file:
sk_error_plug	errsock.c	/^static Plug sk_error_plug(Socket s, Plug p)$/;"	f	file:
sk_error_socket_error	errsock.c	/^static const char *sk_error_socket_error(Socket s)$/;"	f	file:
sk_extractaddr_tmp	unix/uxnet.c	/^static struct SockAddr_tag sk_extractaddr_tmp($/;"	f	file:
sk_extractaddr_tmp	windows/winnet.c	/^static struct SockAddr_tag sk_extractaddr_tmp($/;"	f	file:
sk_flush	network.h	155;"	d
sk_getaddr	unix/uxnet.c	/^void sk_getaddr(SockAddr addr, char *buf, int buflen)$/;"	f
sk_getaddr	windows/winnet.c	/^void sk_getaddr(SockAddr addr, char *buf, int buflen)$/;"	f
sk_getxdmdata	unix/uxnet.c	/^void *sk_getxdmdata(void *sock, int *lenp)$/;"	f
sk_getxdmdata	windows/winstuff.h	270;"	d
sk_handle_close	windows/winhsock.c	/^static void sk_handle_close(Socket s)$/;"	f	file:
sk_handle_flush	windows/winhsock.c	/^static void sk_handle_flush(Socket s)$/;"	f	file:
sk_handle_peer_info	windows/winhsock.c	/^static char *sk_handle_peer_info(Socket s)$/;"	f	file:
sk_handle_plug	windows/winhsock.c	/^static Plug sk_handle_plug(Socket s, Plug p)$/;"	f	file:
sk_handle_set_frozen	windows/winhsock.c	/^static void sk_handle_set_frozen(Socket s, int is_frozen)$/;"	f	file:
sk_handle_socket_error	windows/winhsock.c	/^static const char *sk_handle_socket_error(Socket s)$/;"	f	file:
sk_handle_write	windows/winhsock.c	/^static int sk_handle_write(Socket s, const char *data, int len)$/;"	f	file:
sk_handle_write_eof	windows/winhsock.c	/^static void sk_handle_write_eof(Socket s)$/;"	f	file:
sk_handle_write_oob	windows/winhsock.c	/^static int sk_handle_write_oob(Socket s, const char *data, int len)$/;"	f	file:
sk_hostname_is_local	unix/uxnet.c	/^int sk_hostname_is_local(const char *name)$/;"	f
sk_hostname_is_local	windows/winnet.c	/^int sk_hostname_is_local(const char *name)$/;"	f
sk_init	unix/uxnet.c	/^void sk_init(void)$/;"	f
sk_init	windows/winnet.c	/^void sk_init(void)$/;"	f
sk_localproxy_close	unix/uxproxy.c	/^static void sk_localproxy_close (Socket s)$/;"	f	file:
sk_localproxy_flush	unix/uxproxy.c	/^static void sk_localproxy_flush (Socket s)$/;"	f	file:
sk_localproxy_plug	unix/uxproxy.c	/^static Plug sk_localproxy_plug (Socket s, Plug p)$/;"	f	file:
sk_localproxy_set_frozen	unix/uxproxy.c	/^static void sk_localproxy_set_frozen (Socket s, int is_frozen)$/;"	f	file:
sk_localproxy_socket_error	unix/uxproxy.c	/^static const char * sk_localproxy_socket_error (Socket s)$/;"	f	file:
sk_localproxy_write	unix/uxproxy.c	/^static int sk_localproxy_write (Socket s, const char *data, int len)$/;"	f	file:
sk_localproxy_write_eof	unix/uxproxy.c	/^static void sk_localproxy_write_eof (Socket s)$/;"	f	file:
sk_localproxy_write_oob	unix/uxproxy.c	/^static int sk_localproxy_write_oob (Socket s, const char *data, int len)$/;"	f	file:
sk_namedpipe_addr	windows/winnet.c	/^SockAddr sk_namedpipe_addr(const char *pipename)$/;"	f
sk_namedpipeserver_close	windows/winnps.c	/^static void sk_namedpipeserver_close(Socket s)$/;"	f	file:
sk_namedpipeserver_peer_info	windows/winnps.c	/^static char *sk_namedpipeserver_peer_info(Socket s)$/;"	f	file:
sk_namedpipeserver_plug	windows/winnps.c	/^static Plug sk_namedpipeserver_plug(Socket s, Plug p)$/;"	f	file:
sk_namedpipeserver_socket_error	windows/winnps.c	/^static const char *sk_namedpipeserver_socket_error(Socket s)$/;"	f	file:
sk_namelookup	unix/uxnet.c	/^SockAddr sk_namelookup(const char *host, char **canonicalname, int address_family)$/;"	f
sk_namelookup	windows/winnet.c	/^SockAddr sk_namelookup(const char *host, char **canonicalname,$/;"	f
sk_new	unix/uxnet.c	/^Socket sk_new(SockAddr addr, int port, int privport, int oobinline,$/;"	f
sk_new	windows/winnet.c	/^Socket sk_new(SockAddr addr, int port, int privport, int oobinline,$/;"	f
sk_newlistener	unix/uxnet.c	/^Socket sk_newlistener(const char *srcaddr, int port, Plug plug,$/;"	f
sk_newlistener	windows/winnet.c	/^Socket sk_newlistener(const char *srcaddr, int port, Plug plug,$/;"	f
sk_nextaddr	unix/uxnet.c	/^static int sk_nextaddr(SockAddr addr, SockAddrStep *step)$/;"	f	file:
sk_nextaddr	windows/winnet.c	/^int sk_nextaddr(SockAddr addr, SockAddrStep *step)$/;"	f
sk_nonamelookup	unix/uxnet.c	/^SockAddr sk_nonamelookup(const char *host)$/;"	f
sk_nonamelookup	windows/winnet.c	/^SockAddr sk_nonamelookup(const char *host)$/;"	f
sk_peer_info	network.h	197;"	d
sk_plug	network.h	150;"	d
sk_proxy_close	proxy.c	/^static void sk_proxy_close (Socket s)$/;"	f	file:
sk_proxy_flush	proxy.c	/^static void sk_proxy_flush (Socket s)$/;"	f	file:
sk_proxy_plug	proxy.c	/^static Plug sk_proxy_plug (Socket s, Plug p)$/;"	f	file:
sk_proxy_set_frozen	proxy.c	/^static void sk_proxy_set_frozen (Socket s, int is_frozen)$/;"	f	file:
sk_proxy_socket_error	proxy.c	/^static const char * sk_proxy_socket_error (Socket s)$/;"	f	file:
sk_proxy_write	proxy.c	/^static int sk_proxy_write (Socket s, const char *data, int len)$/;"	f	file:
sk_proxy_write_eof	proxy.c	/^static void sk_proxy_write_eof (Socket s)$/;"	f	file:
sk_proxy_write_oob	proxy.c	/^static int sk_proxy_write_oob (Socket s, const char *data, int len)$/;"	f	file:
sk_set_frozen	network.h	190;"	d
sk_socket_error	network.h	171;"	d
sk_startup	windows/winnet.c	/^int sk_startup(int hi, int lo)$/;"	f
sk_tcp_accept	unix/uxnet.c	/^static Socket sk_tcp_accept(accept_ctx_t ctx, Plug plug)$/;"	f	file:
sk_tcp_accept	windows/winnet.c	/^static Socket sk_tcp_accept(accept_ctx_t ctx, Plug plug)$/;"	f	file:
sk_tcp_close	unix/uxnet.c	/^static void sk_tcp_close(Socket sock)$/;"	f	file:
sk_tcp_close	windows/winnet.c	/^static void sk_tcp_close(Socket sock)$/;"	f	file:
sk_tcp_flush	unix/uxnet.c	/^static void sk_tcp_flush(Socket s)$/;"	f	file:
sk_tcp_flush	windows/winnet.c	/^static void sk_tcp_flush(Socket s)$/;"	f	file:
sk_tcp_peer_info	unix/uxnet.c	/^static char *sk_tcp_peer_info(Socket sock)$/;"	f	file:
sk_tcp_peer_info	windows/winnet.c	/^static char *sk_tcp_peer_info(Socket sock)$/;"	f	file:
sk_tcp_plug	unix/uxnet.c	/^static Plug sk_tcp_plug(Socket sock, Plug p)$/;"	f	file:
sk_tcp_plug	windows/winnet.c	/^static Plug sk_tcp_plug(Socket sock, Plug p)$/;"	f	file:
sk_tcp_set_frozen	unix/uxnet.c	/^static void sk_tcp_set_frozen(Socket sock, int is_frozen)$/;"	f	file:
sk_tcp_set_frozen	windows/winnet.c	/^static void sk_tcp_set_frozen(Socket sock, int is_frozen)$/;"	f	file:
sk_tcp_socket_error	unix/uxnet.c	/^static const char *sk_tcp_socket_error(Socket sock)$/;"	f	file:
sk_tcp_socket_error	windows/winnet.c	/^static const char *sk_tcp_socket_error(Socket sock)$/;"	f	file:
sk_tcp_write	unix/uxnet.c	/^static int sk_tcp_write(Socket sock, const char *buf, int len)$/;"	f	file:
sk_tcp_write	windows/winnet.c	/^static int sk_tcp_write(Socket sock, const char *buf, int len)$/;"	f	file:
sk_tcp_write_eof	unix/uxnet.c	/^static void sk_tcp_write_eof(Socket sock)$/;"	f	file:
sk_tcp_write_eof	windows/winnet.c	/^static void sk_tcp_write_eof(Socket sock)$/;"	f	file:
sk_tcp_write_oob	unix/uxnet.c	/^static int sk_tcp_write_oob(Socket sock, const char *buf, int len)$/;"	f	file:
sk_tcp_write_oob	windows/winnet.c	/^static int sk_tcp_write_oob(Socket sock, const char *buf, int len)$/;"	f	file:
sk_write	network.h	152;"	d
sk_write_eof	network.h	154;"	d
sk_write_oob	network.h	153;"	d
skeyval	unix/uxstore.c	/^struct skeyval {$/;"	s	file:
sktree	unix/uxnet.c	/^static tree234 *sktree;$/;"	v	file:
sktree	windows/winnet.c	/^static tree234 *sktree;$/;"	v	file:
slave_fd	unix/uxpty.c	/^    int master_fd, slave_fd;$/;"	m	struct:pty_tag	file:
smArabic	charset/macenc.c	45;"	d	file:
smCentralEuroRoman	charset/macenc.c	55;"	d	file:
smCyrillic	charset/macenc.c	47;"	d	file:
smDevenagari	charset/macenc.c	48;"	d	file:
smEthiopic	charset/macenc.c	54;"	d	file:
smGujurati	charset/macenc.c	50;"	d	file:
smGurmukhi	charset/macenc.c	49;"	d	file:
smHebrew	charset/macenc.c	46;"	d	file:
smJapanese	charset/macenc.c	42;"	d	file:
smKorean	charset/macenc.c	44;"	d	file:
smRoman	charset/macenc.c	41;"	d	file:
smSimpChinese	charset/macenc.c	52;"	d	file:
smThai	charset/macenc.c	51;"	d	file:
smTibetan	charset/macenc.c	53;"	d	file:
smTradChinese	charset/macenc.c	43;"	d	file:
smalloc	contrib/cygtermd/malloc.c	/^void *smalloc(size_t size) {$/;"	f
smalloc	puttymem.h	14;"	d
smalloc	puttymem.h	21;"	d
smalloc	windows/winutils.c	15;"	d	file:
smallsigma0	sshsh256.c	19;"	d	file:
smallsigma0	sshsh512.c	45;"	d	file:
smallsigma1	sshsh256.c	20;"	d	file:
smallsigma1	sshsh512.c	47;"	d	file:
smemclr	misc.c	/^void smemclr(void *b, size_t n) {$/;"	f
smemclr	sshdes.c	/^void smemclr(void *p, size_t size) { memset(p, 0, size); }$/;"	f
smemclr	windows/winmisc.c	/^void smemclr(void *b, size_t n) {$/;"	f
smemeq	misc.c	/^int smemeq(const void *av, const void *bv, size_t len)$/;"	f
snew	contrib/cygtermd/malloc.h	38;"	d
snew	puttymem.h	46;"	d
snew	sshzlib.c	55;"	d	file:
snew	tree234.c	36;"	d	file:
snewn	contrib/cygtermd/malloc.h	44;"	d
snewn	puttymem.h	47;"	d
snewn	sshzlib.c	56;"	d	file:
snewn	tree234.c	37;"	d	file:
snmalloc	puttymem.h	15;"	d
snmalloc	puttymem.h	22;"	d
snrealloc	puttymem.h	17;"	d
snrealloc	puttymem.h	24;"	d
so_peercred	unix/uxpeer.c	/^int so_peercred(int fd, int *pid, int *uid, int *gid)$/;"	f
sock	sshshare.c	/^    Socket sock;                     \/* the Socket for this connection *\/$/;"	m	struct:ssh_sharing_connstate	file:
sockaddr_is_loopback	unix/uxnet.c	/^static int sockaddr_is_loopback(struct sockaddr *sa)$/;"	f	file:
sockaddr_union	unix/uxnet.c	/^union sockaddr_union {$/;"	u	file:
socket_error	network.h	/^    const char *(*socket_error) (Socket s);$/;"	m	struct:socket_function_table
socket_error_callback	unix/uxnet.c	/^static void socket_error_callback(void *vs)$/;"	f	file:
socket_error_callback	windows/winnet.c	/^static void socket_error_callback(void *vs)$/;"	f	file:
socket_function_table	network.h	/^struct socket_function_table {$/;"	s
socket_reselect_all	windows/winnet.c	/^void socket_reselect_all(void)$/;"	f
socket_writable	windows/winnet.c	/^extern int socket_writable(SOCKET skt)$/;"	f
socketname	unix/uxpgnt.c	/^char *socketname;$/;"	v
sockname	sshshare.c	/^    char *sockname;                  \/* the socket name, kept for cleanup *\/$/;"	m	struct:ssh_sharing_state	file:
socksbuf	portfwd.c	/^    char *socksbuf;$/;"	m	struct:PortForwarding	file:
sockslen	portfwd.c	/^    int sockslen, sockssize;$/;"	m	struct:PortForwarding	file:
sockssize	portfwd.c	/^    int sockslen, sockssize;$/;"	m	struct:PortForwarding	file:
source	pscp.c	/^static void source(const char *src)$/;"	f	file:
sourcebox	config.c	/^    union control *sourcebox, *destbox, *direction;$/;"	m	struct:portfwd_data	typeref:union:portfwd_data::control	file:
spacing	unix/gtkcols.h	/^    gint spacing;$/;"	m	struct:Columns_tag
spanner	icons/mkicon.py	/^def spanner(size):$/;"	f
spawn_cmd	windows/winpgnt.c	/^void spawn_cmd(const char *cmdline, const char *args, int show)$/;"	f
special	mkfiles.pl	/^sub special {$/;"	s
special	putty.h	/^    void (*special) (void *handle, Telnet_Special code);$/;"	m	struct:backend_tag
special_menuitem	unix/gtkwin.c	/^void special_menuitem(GtkMenuItem *item, gpointer data)$/;"	f
specials	ssh.c	/^    struct telnet_special *specials;$/;"	m	struct:ssh_tag	typeref:struct:ssh_tag::telnet_special	file:
specials	windows/window.c	/^static const struct telnet_special *specials = NULL;$/;"	v	typeref:struct:telnet_special	file:
specials_menu	windows/window.c	/^static HMENU specials_menu = NULL;$/;"	v	file:
specialsitem1	unix/gtkwin.c	/^    GtkWidget *menu, *specialsmenu, *specialsitem1, *specialsitem2,$/;"	m	struct:gui_data	file:
specialsitem2	unix/gtkwin.c	/^    GtkWidget *menu, *specialsmenu, *specialsitem1, *specialsitem2,$/;"	m	struct:gui_data	file:
specialsmenu	unix/gtkwin.c	/^    GtkWidget *menu, *specialsmenu, *specialsitem1, *specialsitem2,$/;"	m	struct:gui_data	file:
split_into_argv	windows/winutils.c	/^void split_into_argv(char *cmdline, int *argc, char ***argv,$/;"	f
splitline	mkfiles.pl	/^sub splitline {$/;"	s
sport	ssh.c	/^    unsigned sport, dport;$/;"	m	struct:ssh_portfwd	file:
sport	ssh.c	/^    unsigned sport, dport;$/;"	m	struct:ssh_rportfwd	file:
sportdesc	ssh.c	/^    char *sportdesc;$/;"	m	struct:ssh_rportfwd	file:
sqrt	testdata/bignum.py	/^def sqrt(n):$/;"	f
sqrthash	icons/mkicon.py	/^sqrthash = {}$/;"	v
srcdir	Makefile	/^srcdir = .$/;"	m
srcitem	windows/winstuff.h	/^    int srcitem;$/;"	m	struct:prefslist
srcpath	windows/winsftp.c	/^    char *srcpath;$/;"	m	struct:WildcardMatcher	file:
srealloc	contrib/cygtermd/malloc.c	/^void *srealloc(void *p, size_t size) {$/;"	f
srealloc	puttymem.h	16;"	d
srealloc	puttymem.h	23;"	d
srealloc	windows/winutils.c	16;"	d	file:
sresize	contrib/cygtermd/malloc.h	52;"	d
sresize	puttymem.h	48;"	d
sresize	sshzlib.c	57;"	d	file:
sresize	tree234.c	38;"	d	file:
sserv	ssh.c	/^    char *sserv, *dserv;$/;"	m	struct:ssh_portfwd	file:
ssh	ssh.c	/^    Ssh ssh;			       \/* pointer back to main context *\/$/;"	m	struct:ssh_channel	file:
ssh	sshshare.c	/^    Ssh ssh;                         \/* instance of the ssh backend *\/$/;"	m	struct:ssh_sharing_state	file:
ssh1_bignum_length	sshbn.c	/^int ssh1_bignum_length(Bignum bn)$/;"	f
ssh1_log_incoming_packet	ssh.c	/^static void ssh1_log_incoming_packet(Ssh ssh, struct Packet *pkt)$/;"	f	file:
ssh1_log_outgoing_packet	ssh.c	/^static void ssh1_log_outgoing_packet(Ssh ssh, struct Packet *pkt)$/;"	f	file:
ssh1_msg_channel_close	ssh.c	/^static void ssh1_msg_channel_close(Ssh ssh, struct Packet *pktin)$/;"	f	file:
ssh1_msg_channel_data	ssh.c	/^static void ssh1_msg_channel_data(Ssh ssh, struct Packet *pktin)$/;"	f	file:
ssh1_msg_channel_open_confirmation	ssh.c	/^static void ssh1_msg_channel_open_confirmation(Ssh ssh, struct Packet *pktin)$/;"	f	file:
ssh1_msg_channel_open_failure	ssh.c	/^static void ssh1_msg_channel_open_failure(Ssh ssh, struct Packet *pktin)$/;"	f	file:
ssh1_msg_debug	ssh.c	/^static void ssh1_msg_debug(Ssh ssh, struct Packet *pktin)$/;"	f	file:
ssh1_msg_disconnect	ssh.c	/^static void ssh1_msg_disconnect(Ssh ssh, struct Packet *pktin)$/;"	f	file:
ssh1_msg_port_open	ssh.c	/^static void ssh1_msg_port_open(Ssh ssh, struct Packet *pktin)$/;"	f	file:
ssh1_pkt_addmp	ssh.c	/^static void ssh1_pkt_addmp(struct Packet *pkt, Bignum b)$/;"	f	file:
ssh1_pkt_getmp	ssh.c	/^static Bignum ssh1_pkt_getmp(struct Packet *pkt)$/;"	f	file:
ssh1_pkt_getrsakey	ssh.c	/^static int ssh1_pkt_getrsakey(struct Packet *pkt, struct RSAKey *key,$/;"	f	file:
ssh1_pkt_init	ssh.c	/^static struct Packet *ssh1_pkt_init(int pkt_type)$/;"	f	file:
ssh1_pkt_type	ssh.c	/^static const char *ssh1_pkt_type(int type)$/;"	f	file:
ssh1_protocol	ssh.c	/^static void ssh1_protocol(Ssh ssh, const void *vin, int inlen,$/;"	f	file:
ssh1_protocol_setup	ssh.c	/^static void ssh1_protocol_setup(Ssh ssh)$/;"	f	file:
ssh1_pubkey_str	sshpubk.c	/^char *ssh1_pubkey_str(struct RSAKey *key)$/;"	f
ssh1_rdpkt	ssh.c	/^static struct Packet *ssh1_rdpkt(Ssh ssh, const unsigned char **data,$/;"	f	file:
ssh1_rdpkt_crstate	ssh.c	/^    int ssh1_rdpkt_crstate;$/;"	m	struct:ssh_tag	file:
ssh1_read_bignum	sshbn.c	/^int ssh1_read_bignum(const unsigned char *data, int len, Bignum * result)$/;"	f
ssh1_send_ttymode	ssh.c	/^static void ssh1_send_ttymode(void *data,$/;"	f	file:
ssh1_smsg_agent_open	ssh.c	/^static void ssh1_smsg_agent_open(Ssh ssh, struct Packet *pktin)$/;"	f	file:
ssh1_smsg_exit_status	ssh.c	/^static void ssh1_smsg_exit_status(Ssh ssh, struct Packet *pktin)$/;"	f	file:
ssh1_smsg_stdout_stderr_data	ssh.c	/^static void ssh1_smsg_stdout_stderr_data(Ssh ssh, struct Packet *pktin)$/;"	f	file:
ssh1_smsg_x11_open	ssh.c	/^static void ssh1_smsg_x11_open(Ssh ssh, struct Packet *pktin)$/;"	f	file:
ssh1_write_bignum	sshbn.c	/^int ssh1_write_bignum(void *data, Bignum bn)$/;"	f
ssh1_write_pubkey	sshpubk.c	/^void ssh1_write_pubkey(FILE *fp, struct RSAKey *key)$/;"	f
ssh2	windows/winpgen.c	/^    int ssh2;$/;"	m	struct:MainDlgState	file:
ssh2_3des	sshdes.c	/^const struct ssh2_ciphers ssh2_3des = {$/;"	v	typeref:struct:ssh2_ciphers
ssh2_add_sigblob	ssh.c	/^static void ssh2_add_sigblob(Ssh ssh, struct Packet *pkt,$/;"	f	file:
ssh2_aes	sshaes.c	/^const struct ssh2_ciphers ssh2_aes = {$/;"	v	typeref:struct:ssh2_ciphers
ssh2_arcfour	ssharcf.c	/^const struct ssh2_ciphers ssh2_arcfour = {$/;"	v	typeref:struct:ssh2_ciphers
ssh2_bare_connection_protocol	ssh.c	/^static void ssh2_bare_connection_protocol(Ssh ssh, const void *vin, int inlen,$/;"	f	file:
ssh2_bare_connection_protocol_setup	ssh.c	/^static void ssh2_bare_connection_protocol_setup(Ssh ssh)$/;"	f	file:
ssh2_bare_connection_rdpkt	ssh.c	/^static struct Packet *ssh2_bare_connection_rdpkt(Ssh ssh,$/;"	f	file:
ssh2_bare_rdpkt_crstate	ssh.c	/^    int ssh2_bare_rdpkt_crstate;$/;"	m	struct:ssh_tag	file:
ssh2_bignum_length	sshbn.c	/^int ssh2_bignum_length(Bignum bn)$/;"	f
ssh2_blowfish	sshblowf.c	/^const struct ssh2_ciphers ssh2_blowfish = {$/;"	v	typeref:struct:ssh2_ciphers
ssh2_ccp	sshccp.c	/^const struct ssh2_ciphers ssh2_ccp = {$/;"	v	typeref:struct:ssh2_ciphers
ssh2_chacha20_poly1305	sshccp.c	/^static const struct ssh2_cipher ssh2_chacha20_poly1305 = {$/;"	v	typeref:struct:ssh2_cipher	file:
ssh2_channel_check_close	ssh.c	/^static void ssh2_channel_check_close(struct ssh_channel *c)$/;"	f	file:
ssh2_channel_open_failure_error_text	ssh.c	/^static char *ssh2_channel_open_failure_error_text(struct Packet *pktin)$/;"	f	file:
ssh2_chanopen_init	ssh.c	/^static struct Packet *ssh2_chanopen_init(struct ssh_channel *c,$/;"	f	file:
ssh2_chanreq_init	ssh.c	/^static struct Packet *ssh2_chanreq_init(struct ssh_channel *c,$/;"	f	file:
ssh2_cipher	ssh.h	/^struct ssh2_cipher {$/;"	s
ssh2_ciphers	ssh.h	/^struct ssh2_ciphers {$/;"	s
ssh2_data_channel	ssh.c	/^	struct ssh2_data_channel {$/;"	s	union:ssh_channel::__anon78	file:
ssh2_des	sshdes.c	/^const struct ssh2_ciphers ssh2_des = {$/;"	v	typeref:struct:ssh2_ciphers
ssh2_disconnect_reasons	ssh.c	/^static const char *const ssh2_disconnect_reasons[] = {$/;"	v	file:
ssh2_fingerprint	sshpubk.c	/^char *ssh2_fingerprint(const struct ssh_signkey *alg, void *data)$/;"	f
ssh2_fingerprint_blob	sshpubk.c	/^char *ssh2_fingerprint_blob(const void *blob, int bloblen)$/;"	f
ssh2_handle_winadj_response	ssh.c	/^static void ssh2_handle_winadj_response(struct ssh_channel *c,$/;"	f	file:
ssh2_kexinit_addalg	ssh.c	/^static struct kexinit_algorithm *ssh2_kexinit_addalg(struct kexinit_algorithm$/;"	f	file:
ssh2_load_userkey	sshpubk.c	/^struct ssh2_userkey *ssh2_load_userkey(const Filename *filename,$/;"	f
ssh2_log_incoming_packet	ssh.c	/^static void ssh2_log_incoming_packet(Ssh ssh, struct Packet *pkt)$/;"	f	file:
ssh2_log_outgoing_packet	ssh.c	/^static void ssh2_log_outgoing_packet(Ssh ssh, struct Packet *pkt)$/;"	f	file:
ssh2_mkkey	ssh.c	/^static unsigned char *ssh2_mkkey(Ssh ssh, Bignum K, unsigned char *H,$/;"	f	file:
ssh2_mpint_fmt	ssh.c	/^static unsigned char *ssh2_mpint_fmt(Bignum b, int *len)$/;"	f	file:
ssh2_msg_authconn	ssh.c	/^static void ssh2_msg_authconn(Ssh ssh, struct Packet *pktin)$/;"	f	file:
ssh2_msg_channel_close	ssh.c	/^static void ssh2_msg_channel_close(Ssh ssh, struct Packet *pktin)$/;"	f	file:
ssh2_msg_channel_data	ssh.c	/^static void ssh2_msg_channel_data(Ssh ssh, struct Packet *pktin)$/;"	f	file:
ssh2_msg_channel_eof	ssh.c	/^static void ssh2_msg_channel_eof(Ssh ssh, struct Packet *pktin)$/;"	f	file:
ssh2_msg_channel_open	ssh.c	/^static void ssh2_msg_channel_open(Ssh ssh, struct Packet *pktin)$/;"	f	file:
ssh2_msg_channel_open_confirmation	ssh.c	/^static void ssh2_msg_channel_open_confirmation(Ssh ssh, struct Packet *pktin)$/;"	f	file:
ssh2_msg_channel_open_failure	ssh.c	/^static void ssh2_msg_channel_open_failure(Ssh ssh, struct Packet *pktin)$/;"	f	file:
ssh2_msg_channel_request	ssh.c	/^static void ssh2_msg_channel_request(Ssh ssh, struct Packet *pktin)$/;"	f	file:
ssh2_msg_channel_response	ssh.c	/^static void ssh2_msg_channel_response(Ssh ssh, struct Packet *pktin)$/;"	f	file:
ssh2_msg_channel_window_adjust	ssh.c	/^static void ssh2_msg_channel_window_adjust(Ssh ssh, struct Packet *pktin)$/;"	f	file:
ssh2_msg_debug	ssh.c	/^static void ssh2_msg_debug(Ssh ssh, struct Packet *pktin)$/;"	f	file:
ssh2_msg_disconnect	ssh.c	/^static void ssh2_msg_disconnect(Ssh ssh, struct Packet *pktin)$/;"	f	file:
ssh2_msg_global_request	ssh.c	/^static void ssh2_msg_global_request(Ssh ssh, struct Packet *pktin)$/;"	f	file:
ssh2_msg_something_unimplemented	ssh.c	/^static void ssh2_msg_something_unimplemented(Ssh ssh, struct Packet *pktin)$/;"	f	file:
ssh2_msg_transport	ssh.c	/^static void ssh2_msg_transport(Ssh ssh, struct Packet *pktin)$/;"	f	file:
ssh2_msg_unexpected	ssh.c	/^static void ssh2_msg_unexpected(Ssh ssh, struct Packet *pktin)$/;"	f	file:
ssh2_msg_userauth_banner	ssh.c	/^static void ssh2_msg_userauth_banner(Ssh ssh, struct Packet *pktin)$/;"	f	file:
ssh2_pkt_addbool	ssh.c	/^static void ssh2_pkt_addbool(struct Packet *pkt, unsigned char value)$/;"	f	file:
ssh2_pkt_addbyte	ssh.c	2275;"	d	file:
ssh2_pkt_adddata	ssh.c	2274;"	d	file:
ssh2_pkt_addmp	ssh.c	/^static void ssh2_pkt_addmp(struct Packet *pkt, Bignum b)$/;"	f	file:
ssh2_pkt_addstring	ssh.c	2280;"	d	file:
ssh2_pkt_addstring_commasep	ssh.c	/^static void ssh2_pkt_addstring_commasep(struct Packet *pkt, const char *data)$/;"	f	file:
ssh2_pkt_addstring_data	ssh.c	2279;"	d	file:
ssh2_pkt_addstring_start	ssh.c	2277;"	d	file:
ssh2_pkt_addstring_str	ssh.c	2278;"	d	file:
ssh2_pkt_adduint32	ssh.c	2276;"	d	file:
ssh2_pkt_construct	ssh.c	/^static int ssh2_pkt_construct(Ssh ssh, struct Packet *pkt)$/;"	f	file:
ssh2_pkt_defer	ssh.c	/^static void ssh2_pkt_defer(Ssh ssh, struct Packet *pkt)$/;"	f	file:
ssh2_pkt_defer_noqueue	ssh.c	/^static void ssh2_pkt_defer_noqueue(Ssh ssh, struct Packet *pkt, int noignore)$/;"	f	file:
ssh2_pkt_ensure	ssh.c	2273;"	d	file:
ssh2_pkt_getbool	ssh.c	/^static int ssh2_pkt_getbool(struct Packet *pkt)$/;"	f	file:
ssh2_pkt_getmp	ssh.c	/^static Bignum ssh2_pkt_getmp(struct Packet *pkt)$/;"	f	file:
ssh2_pkt_init	ssh.c	/^static struct Packet *ssh2_pkt_init(int pkt_type)$/;"	f	file:
ssh2_pkt_queue	ssh.c	/^static void ssh2_pkt_queue(Ssh ssh, struct Packet *pkt)$/;"	f	file:
ssh2_pkt_queuesend	ssh.c	/^static void ssh2_pkt_queuesend(Ssh ssh)$/;"	f	file:
ssh2_pkt_send	ssh.c	/^static void ssh2_pkt_send(Ssh ssh, struct Packet *pkt)$/;"	f	file:
ssh2_pkt_send_noqueue	ssh.c	/^static void ssh2_pkt_send_noqueue(Ssh ssh, struct Packet *pkt)$/;"	f	file:
ssh2_pkt_send_with_padding	ssh.c	/^static void ssh2_pkt_send_with_padding(Ssh ssh, struct Packet *pkt,$/;"	f	file:
ssh2_pkt_type	ssh.c	/^static const char *ssh2_pkt_type(Pkt_KCtx pkt_kctx, Pkt_ACtx pkt_actx,$/;"	f	file:
ssh2_poly1305	sshccp.c	/^static const struct ssh_mac ssh2_poly1305 = {$/;"	v	typeref:struct:ssh_mac	file:
ssh2_protocol	ssh.c	/^static void ssh2_protocol(Ssh ssh, const void *vin, int inlen,$/;"	f	file:
ssh2_protocol_setup	ssh.c	/^static void ssh2_protocol_setup(Ssh ssh)$/;"	f	file:
ssh2_pubkey_openssh_str	sshpubk.c	/^char *ssh2_pubkey_openssh_str(struct ssh2_userkey *key)$/;"	f
ssh2_pubkey_openssh_str_internal	sshpubk.c	/^static char *ssh2_pubkey_openssh_str_internal(const char *comment,$/;"	f	file:
ssh2_queue_chanreq_handler	ssh.c	/^static void ssh2_queue_chanreq_handler(struct ssh_channel *c,$/;"	f	file:
ssh2_rdpkt	ssh.c	/^static struct Packet *ssh2_rdpkt(Ssh ssh, const unsigned char **data,$/;"	f	file:
ssh2_rdpkt_crstate	ssh.c	/^    int ssh2_rdpkt_crstate;$/;"	m	struct:ssh_tag	file:
ssh2_read_mpint	import.c	/^static int ssh2_read_mpint(void *data, int len, struct mpint_pos *ret)$/;"	f	file:
ssh2_response_authconn	ssh.c	/^static void ssh2_response_authconn(struct ssh_channel *c, struct Packet *pktin,$/;"	f	file:
ssh2_save_userkey	sshpubk.c	/^int ssh2_save_userkey(const Filename *filename, struct ssh2_userkey *key,$/;"	f
ssh2_send_ttymode	ssh.c	/^static void ssh2_send_ttymode(void *data,$/;"	f	file:
ssh2_set_window	ssh.c	/^static void ssh2_set_window(struct ssh_channel *c, int newwin)$/;"	f	file:
ssh2_setup_agent	ssh.c	/^static void ssh2_setup_agent(struct ssh_channel *c, struct Packet *pktin,$/;"	f	file:
ssh2_setup_env	ssh.c	/^static void ssh2_setup_env(struct ssh_channel *c, struct Packet *pktin,$/;"	f	file:
ssh2_setup_pty	ssh.c	/^static void ssh2_setup_pty(struct ssh_channel *c, struct Packet *pktin,$/;"	f	file:
ssh2_setup_x11	ssh.c	/^static void ssh2_setup_x11(struct ssh_channel *c, struct Packet *pktin,$/;"	f	file:
ssh2_timer	ssh.c	/^static void ssh2_timer(void *ctx, unsigned long now)$/;"	f	file:
ssh2_try_send	ssh.c	/^static int ssh2_try_send(struct ssh_channel *c)$/;"	f	file:
ssh2_try_send_and_unthrottle	ssh.c	/^static void ssh2_try_send_and_unthrottle(Ssh ssh, struct ssh_channel *c)$/;"	f	file:
ssh2_userkey	ssh.h	/^struct ssh2_userkey {$/;"	s
ssh2_userkey_encrypted	sshpubk.c	/^int ssh2_userkey_encrypted(const Filename *filename, char **commentptr)$/;"	f
ssh2_userkey_loadpub	sshpubk.c	/^unsigned char *ssh2_userkey_loadpub(const Filename *filename, char **algorithm,$/;"	f
ssh2_write_pubkey	sshpubk.c	/^void ssh2_write_pubkey(FILE *fp, const char *comment,$/;"	f
ssh2_wrong_passphrase	sshpubk.c	/^struct ssh2_userkey ssh2_wrong_passphrase = {$/;"	v	typeref:struct:ssh2_userkey
ssh2key	windows/winpgen.c	/^    struct ssh2_userkey ssh2key;$/;"	m	struct:MainDlgState	typeref:struct:MainDlgState::ssh2_userkey	file:
ssh2keys	pageant.c	/^static tree234 *rsakeys, *ssh2keys;$/;"	v	file:
ssh_3des	sshdes.c	/^const struct ssh_cipher ssh_3des = {$/;"	v	typeref:struct:ssh_cipher
ssh_3des_ssh2	sshdes.c	/^static const struct ssh2_cipher ssh_3des_ssh2 = {$/;"	v	typeref:struct:ssh2_cipher	file:
ssh_3des_ssh2_ctr	sshdes.c	/^static const struct ssh2_cipher ssh_3des_ssh2_ctr = {$/;"	v	typeref:struct:ssh2_cipher	file:
ssh_aes128	sshaes.c	/^static const struct ssh2_cipher ssh_aes128 = {$/;"	v	typeref:struct:ssh2_cipher	file:
ssh_aes128_ctr	sshaes.c	/^static const struct ssh2_cipher ssh_aes128_ctr = {$/;"	v	typeref:struct:ssh2_cipher	file:
ssh_aes192	sshaes.c	/^static const struct ssh2_cipher ssh_aes192 = {$/;"	v	typeref:struct:ssh2_cipher	file:
ssh_aes192_ctr	sshaes.c	/^static const struct ssh2_cipher ssh_aes192_ctr = {$/;"	v	typeref:struct:ssh2_cipher	file:
ssh_aes256	sshaes.c	/^static const struct ssh2_cipher ssh_aes256 = {$/;"	v	typeref:struct:ssh2_cipher	file:
ssh_aes256_ctr	sshaes.c	/^static const struct ssh2_cipher ssh_aes256_ctr = {$/;"	v	typeref:struct:ssh2_cipher	file:
ssh_agent_callback	ssh.c	/^static void ssh_agent_callback(void *sshv, void *reply, int replylen)$/;"	f	file:
ssh_agent_channel	ssh.c	/^	struct ssh_agent_channel {$/;"	s	union:ssh_channel::__anon80	file:
ssh_agent_channel_data	ssh.c	/^static int ssh_agent_channel_data(struct ssh_channel *c, char *data,$/;"	f	file:
ssh_agent_forwarding_permitted	ssh.c	/^int ssh_agent_forwarding_permitted(Ssh ssh)$/;"	f
ssh_agentf_callback	ssh.c	/^static void ssh_agentf_callback(void *cv, void *reply, int replylen)$/;"	f	file:
ssh_agentf_got_response	ssh.c	/^static void ssh_agentf_got_response(struct ssh_channel *c,$/;"	f	file:
ssh_agentf_try_forward	ssh.c	/^static void ssh_agentf_try_forward(struct ssh_channel *c)$/;"	f	file:
ssh_alloc_sharing_channel	ssh.c	/^unsigned ssh_alloc_sharing_channel(Ssh ssh, void *sharing_ctx)$/;"	f
ssh_alloc_sharing_rportfwd	ssh.c	/^int ssh_alloc_sharing_rportfwd(Ssh ssh, const char *shost, int sport,$/;"	f
ssh_arcfour128_ssh2	ssharcf.c	/^const struct ssh2_cipher ssh_arcfour128_ssh2 = {$/;"	v	typeref:struct:ssh2_cipher
ssh_arcfour256_ssh2	ssharcf.c	/^const struct ssh2_cipher ssh_arcfour256_ssh2 = {$/;"	v	typeref:struct:ssh2_cipher
ssh_backend	ssh.c	/^Backend ssh_backend = {$/;"	v
ssh_blowfish_ssh1	sshblowf.c	/^const struct ssh_cipher ssh_blowfish_ssh1 = {$/;"	v	typeref:struct:ssh_cipher
ssh_blowfish_ssh2	sshblowf.c	/^static const struct ssh2_cipher ssh_blowfish_ssh2 = {$/;"	v	typeref:struct:ssh2_cipher	file:
ssh_blowfish_ssh2_ctr	sshblowf.c	/^static const struct ssh2_cipher ssh_blowfish_ssh2_ctr = {$/;"	v	typeref:struct:ssh2_cipher	file:
ssh_cache_conf_values	ssh.c	/^static void ssh_cache_conf_values(Ssh ssh)$/;"	f	file:
ssh_cfg_info	ssh.c	/^static int ssh_cfg_info(void *handle)$/;"	f	file:
ssh_channel	ssh.c	/^struct ssh_channel {$/;"	s	file:
ssh_channel_close_local	ssh.c	/^static void ssh_channel_close_local(struct ssh_channel *c, char const *reason)$/;"	f	file:
ssh_channel_data	ssh.c	/^static int ssh_channel_data(struct ssh_channel *c, int is_stderr,$/;"	f	file:
ssh_channel_destroy	ssh.c	/^static void ssh_channel_destroy(struct ssh_channel *c)$/;"	f	file:
ssh_channel_got_eof	ssh.c	/^static void ssh_channel_got_eof(struct ssh_channel *c)$/;"	f	file:
ssh_channel_init	ssh.c	/^static void ssh_channel_init(struct ssh_channel *c)$/;"	f	file:
ssh_channel_msg	ssh.c	/^static struct ssh_channel *ssh_channel_msg(Ssh ssh, struct Packet *pktin)$/;"	f	file:
ssh_channel_try_eof	ssh.c	/^static void ssh_channel_try_eof(struct ssh_channel *c)$/;"	f	file:
ssh_channel_unthrottle	ssh.c	/^static void ssh_channel_unthrottle(struct ssh_channel *c, int bufsize)$/;"	f	file:
ssh_channelcmp	ssh.c	/^static int ssh_channelcmp(void *av, void *bv)$/;"	f	file:
ssh_channelfind	ssh.c	/^static int ssh_channelfind(void *av, void *bv)$/;"	f	file:
ssh_check_termination	ssh.c	/^static void ssh_check_termination(Ssh ssh)$/;"	f	file:
ssh_cipher	ssh.h	/^struct ssh_cipher {$/;"	s
ssh_closing	ssh.c	/^static void ssh_closing(Plug plug, const char *error_msg, int error_code,$/;"	f	file:
ssh_comp_none	ssh.c	/^const static struct ssh_compress ssh_comp_none = {$/;"	v	typeref:struct:ssh_compress	file:
ssh_comp_none_block	ssh.c	/^static int ssh_comp_none_block(void *handle, unsigned char *block, int len,$/;"	f	file:
ssh_comp_none_cleanup	ssh.c	/^static void ssh_comp_none_cleanup(void *handle)$/;"	f	file:
ssh_comp_none_disable	ssh.c	/^static int ssh_comp_none_disable(void *handle)$/;"	f	file:
ssh_comp_none_init	ssh.c	/^static void *ssh_comp_none_init(void)$/;"	f	file:
ssh_compress	ssh.h	/^struct ssh_compress {$/;"	s
ssh_connected	ssh.c	/^static int ssh_connected(void *handle)$/;"	f	file:
ssh_connection_sharing_init	sshshare.c	/^Socket ssh_connection_sharing_init(const char *host, int port,$/;"	f
ssh_connshare_log	ssh.c	/^void ssh_connshare_log(Ssh ssh, int event, const char *logtext,$/;"	f
ssh_delete_sharing_channel	ssh.c	/^void ssh_delete_sharing_channel(Ssh ssh, unsigned localid)$/;"	f
ssh_des	sshdes.c	/^const struct ssh_cipher ssh_des = {$/;"	v	typeref:struct:ssh_cipher
ssh_des_ssh2	sshdes.c	/^static const struct ssh2_cipher ssh_des_ssh2 = {$/;"	v	typeref:struct:ssh2_cipher	file:
ssh_des_sshcom_ssh2	sshdes.c	/^static const struct ssh2_cipher ssh_des_sshcom_ssh2 = {$/;"	v	typeref:struct:ssh2_cipher	file:
ssh_detect_bugs	ssh.c	/^static void ssh_detect_bugs(Ssh ssh, char *vstring)$/;"	f	file:
ssh_dialog_callback	ssh.c	/^static void ssh_dialog_callback(void *sshv, int ret)$/;"	f	file:
ssh_diffiehellman_gex	sshdh.c	/^const struct ssh_kexes ssh_diffiehellman_gex = {$/;"	v	typeref:struct:ssh_kexes
ssh_diffiehellman_gex_sha1	sshdh.c	/^static const struct ssh_kex ssh_diffiehellman_gex_sha1 = {$/;"	v	typeref:struct:ssh_kex	file:
ssh_diffiehellman_gex_sha256	sshdh.c	/^static const struct ssh_kex ssh_diffiehellman_gex_sha256 = {$/;"	v	typeref:struct:ssh_kex	file:
ssh_diffiehellman_group1	sshdh.c	/^const struct ssh_kexes ssh_diffiehellman_group1 = {$/;"	v	typeref:struct:ssh_kexes
ssh_diffiehellman_group14	sshdh.c	/^const struct ssh_kexes ssh_diffiehellman_group14 = {$/;"	v	typeref:struct:ssh_kexes
ssh_diffiehellman_group14_sha1	sshdh.c	/^static const struct ssh_kex ssh_diffiehellman_group14_sha1 = {$/;"	v	typeref:struct:ssh_kex	file:
ssh_diffiehellman_group1_sha1	sshdh.c	/^static const struct ssh_kex ssh_diffiehellman_group1_sha1 = {$/;"	v	typeref:struct:ssh_kex	file:
ssh_disconnect	ssh.c	/^static void ssh_disconnect(Ssh ssh, const char *client_reason,$/;"	f	file:
ssh_do_close	ssh.c	/^static int ssh_do_close(Ssh ssh, int notify_exit)$/;"	f	file:
ssh_dss	sshdss.c	/^const struct ssh_signkey ssh_dss = {$/;"	v	typeref:struct:ssh_signkey
ssh_ec_kex_curve25519	sshecc.c	/^static const struct ssh_kex ssh_ec_kex_curve25519 = {$/;"	v	typeref:struct:ssh_kex	file:
ssh_ec_kex_nistp256	sshecc.c	/^static const struct ssh_kex ssh_ec_kex_nistp256 = {$/;"	v	typeref:struct:ssh_kex	file:
ssh_ec_kex_nistp384	sshecc.c	/^static const struct ssh_kex ssh_ec_kex_nistp384 = {$/;"	v	typeref:struct:ssh_kex	file:
ssh_ec_kex_nistp521	sshecc.c	/^static const struct ssh_kex ssh_ec_kex_nistp521 = {$/;"	v	typeref:struct:ssh_kex	file:
ssh_ecdh_kex	sshecc.c	/^const struct ssh_kexes ssh_ecdh_kex = {$/;"	v	typeref:struct:ssh_kexes
ssh_ecdhkex_curve_textname	sshecc.c	/^const char *ssh_ecdhkex_curve_textname(const struct ssh_kex *kex)$/;"	f
ssh_ecdhkex_freekey	sshecc.c	/^void ssh_ecdhkex_freekey(void *key)$/;"	f
ssh_ecdhkex_getkey	sshecc.c	/^Bignum ssh_ecdhkex_getkey(void *key, char *remoteKey, int remoteKeyLen)$/;"	f
ssh_ecdhkex_getpublic	sshecc.c	/^char *ssh_ecdhkex_getpublic(void *key, int *len)$/;"	f
ssh_ecdhkex_newkey	sshecc.c	/^void *ssh_ecdhkex_newkey(const struct ssh_kex *kex)$/;"	f
ssh_ecdsa_ed25519	sshecc.c	/^const struct ssh_signkey ssh_ecdsa_ed25519 = {$/;"	v	typeref:struct:ssh_signkey
ssh_ecdsa_nistp256	sshecc.c	/^const struct ssh_signkey ssh_ecdsa_nistp256 = {$/;"	v	typeref:struct:ssh_signkey
ssh_ecdsa_nistp384	sshecc.c	/^const struct ssh_signkey ssh_ecdsa_nistp384 = {$/;"	v	typeref:struct:ssh_signkey
ssh_ecdsa_nistp521	sshecc.c	/^const struct ssh_signkey ssh_ecdsa_nistp521 = {$/;"	v	typeref:struct:ssh_signkey
ssh_fallback_cmd	ssh.c	/^extern int ssh_fallback_cmd(void *handle)$/;"	f
ssh_fix_verstring	ssh.c	/^static void ssh_fix_verstring(char *str)$/;"	f	file:
ssh_free	ssh.c	/^static void ssh_free(void *handle)$/;"	f	file:
ssh_free_packet	ssh.c	/^static void ssh_free_packet(struct Packet *pkt)$/;"	f	file:
ssh_get_specials	ssh.c	/^static const struct telnet_special *ssh_get_specials(void *handle)$/;"	f	file:
ssh_gotdata	ssh.c	/^static void ssh_gotdata(Ssh ssh, const unsigned char *data, int datalen)$/;"	f	file:
ssh_gotdata_crstate	ssh.c	/^    int ssh_gotdata_crstate;$/;"	m	struct:ssh_tag	file:
ssh_gss_cleanup	sshnogss.c	/^void ssh_gss_cleanup(struct ssh_gss_liblist *list)$/;"	f
ssh_gss_cleanup	unix/uxgss.c	/^void ssh_gss_cleanup(struct ssh_gss_liblist *list)$/;"	f
ssh_gss_cleanup	windows/wingss.c	/^void ssh_gss_cleanup(struct ssh_gss_liblist *list)$/;"	f
ssh_gss_init	windows/wingss.c	/^void ssh_gss_init(void)$/;"	f
ssh_gss_liblist	sshgss.h	/^struct ssh_gss_liblist {$/;"	s
ssh_gss_library	sshgss.h	/^struct ssh_gss_library {$/;"	s
ssh_gss_setup	sshnogss.c	/^struct ssh_gss_liblist *ssh_gss_setup(Conf *conf)$/;"	f
ssh_gss_setup	unix/uxgss.c	/^struct ssh_gss_liblist *ssh_gss_setup(Conf *conf)$/;"	f
ssh_gss_setup	windows/wingss.c	/^struct ssh_gss_liblist *ssh_gss_setup(Conf *conf)$/;"	f
ssh_gssapi_acquire_cred	sshgssc.c	/^static Ssh_gss_stat ssh_gssapi_acquire_cred(struct ssh_gss_library *lib,$/;"	f	file:
ssh_gssapi_bind_fns	sshgssc.c	/^void ssh_gssapi_bind_fns(struct ssh_gss_library *lib)$/;"	f
ssh_gssapi_display_status	sshgssc.c	/^static Ssh_gss_stat ssh_gssapi_display_status(struct ssh_gss_library *lib,$/;"	f	file:
ssh_gssapi_free_mic	sshgssc.c	/^static Ssh_gss_stat ssh_gssapi_free_mic(struct ssh_gss_library *lib,$/;"	f	file:
ssh_gssapi_free_tok	sshgssc.c	/^static Ssh_gss_stat ssh_gssapi_free_tok(struct ssh_gss_library *lib,$/;"	f	file:
ssh_gssapi_get_mic	sshgssc.c	/^static Ssh_gss_stat ssh_gssapi_get_mic(struct ssh_gss_library *lib,$/;"	f	file:
ssh_gssapi_import_name	sshgssc.c	/^static Ssh_gss_stat ssh_gssapi_import_name(struct ssh_gss_library *lib,$/;"	f	file:
ssh_gssapi_indicate_mech	sshgssc.c	/^static Ssh_gss_stat ssh_gssapi_indicate_mech(struct ssh_gss_library *lib,$/;"	f	file:
ssh_gssapi_init	sshgssc.c	/^int ssh_gssapi_init(void)$/;"	f
ssh_gssapi_init_sec_context	sshgssc.c	/^static Ssh_gss_stat ssh_gssapi_init_sec_context(struct ssh_gss_library *lib,$/;"	f	file:
ssh_gssapi_release_cred	sshgssc.c	/^static Ssh_gss_stat ssh_gssapi_release_cred(struct ssh_gss_library *lib,$/;"	f	file:
ssh_gssapi_release_name	sshgssc.c	/^static Ssh_gss_stat ssh_gssapi_release_name(struct ssh_gss_library *lib,$/;"	f	file:
ssh_hash	ssh.h	/^struct ssh_hash {$/;"	s
ssh_hmac_md5	sshmd5.c	/^const struct ssh_mac ssh_hmac_md5 = {$/;"	v	typeref:struct:ssh_mac
ssh_hmac_sha1	sshsha.c	/^const struct ssh_mac ssh_hmac_sha1 = {$/;"	v	typeref:struct:ssh_mac
ssh_hmac_sha1_96	sshsha.c	/^const struct ssh_mac ssh_hmac_sha1_96 = {$/;"	v	typeref:struct:ssh_mac
ssh_hmac_sha1_96_buggy	sshsha.c	/^const struct ssh_mac ssh_hmac_sha1_96_buggy = {$/;"	v	typeref:struct:ssh_mac
ssh_hmac_sha1_buggy	sshsha.c	/^const struct ssh_mac ssh_hmac_sha1_buggy = {$/;"	v	typeref:struct:ssh_mac
ssh_hmac_sha256	sshsh256.c	/^const struct ssh_mac ssh_hmac_sha256 = {$/;"	v	typeref:struct:ssh_mac
ssh_hostport_setup	ssh.c	/^static void ssh_hostport_setup(const char *host, int port, Conf *conf,$/;"	f	file:
ssh_init	ssh.c	/^static const char *ssh_init(void *frontend_handle, void **backend_handle,$/;"	f	file:
ssh_is_simple	ssh.c	/^static int ssh_is_simple(Ssh ssh)$/;"	f	file:
ssh_kex	ssh.h	/^struct ssh_kex {$/;"	s
ssh_kexes	ssh.h	/^struct ssh_kexes {$/;"	s
ssh_ldisc	ssh.c	/^static int ssh_ldisc(void *handle, int option)$/;"	f	file:
ssh_mac	ssh.h	/^struct ssh_mac {$/;"	s
ssh_msg_ignore	ssh.c	/^static void ssh_msg_ignore(Ssh ssh, struct Packet *pktin)$/;"	f	file:
ssh_new_packet	ssh.c	/^static struct Packet *ssh_new_packet(void)$/;"	f	file:
ssh_pfd_channel	ssh.c	/^	struct ssh_pfd_channel {$/;"	s	union:ssh_channel::__anon80	file:
ssh_pkt_addbyte	ssh.c	/^static void ssh_pkt_addbyte(struct Packet *pkt, unsigned char byte)$/;"	f	file:
ssh_pkt_adddata	ssh.c	/^static void ssh_pkt_adddata(struct Packet *pkt, const void *data, int len)$/;"	f	file:
ssh_pkt_addstring	ssh.c	/^static void ssh_pkt_addstring(struct Packet *pkt, const char *data)$/;"	f	file:
ssh_pkt_addstring_data	ssh.c	/^static void ssh_pkt_addstring_data(struct Packet *pkt, const char *data,$/;"	f	file:
ssh_pkt_addstring_start	ssh.c	/^static void ssh_pkt_addstring_start(struct Packet *pkt)$/;"	f	file:
ssh_pkt_addstring_str	ssh.c	/^static void ssh_pkt_addstring_str(struct Packet *pkt, const char *data)$/;"	f	file:
ssh_pkt_adduint32	ssh.c	/^static void ssh_pkt_adduint32(struct Packet *pkt, unsigned long value)$/;"	f	file:
ssh_pkt_defersend	ssh.c	/^static void ssh_pkt_defersend(Ssh ssh)$/;"	f	file:
ssh_pkt_ensure	ssh.c	/^static void ssh_pkt_ensure(struct Packet *pkt, int length)$/;"	f	file:
ssh_pkt_getdata	ssh.c	/^static void *ssh_pkt_getdata(struct Packet *pkt, int length)$/;"	f	file:
ssh_pkt_getstring	ssh.c	/^static void ssh_pkt_getstring(struct Packet *pkt, char **p, int *length)$/;"	f	file:
ssh_pkt_getuint32	ssh.c	/^static unsigned long ssh_pkt_getuint32(struct Packet *pkt)$/;"	f	file:
ssh_pkt_type	ssh.c	/^static const char *ssh_pkt_type(Ssh ssh, int type)$/;"	f	file:
ssh_portcmp	ssh.c	/^static int ssh_portcmp(void *av, void *bv)$/;"	f	file:
ssh_portfwd	ssh.c	/^struct ssh_portfwd {$/;"	s	file:
ssh_process_incoming_data	ssh.c	/^static void ssh_process_incoming_data(Ssh ssh,$/;"	f	file:
ssh_process_queued_incoming_data	ssh.c	/^static void ssh_process_queued_incoming_data(Ssh ssh)$/;"	f	file:
ssh_provide_ldisc	ssh.c	/^static void ssh_provide_ldisc(void *handle, void *ldisc)$/;"	f	file:
ssh_provide_logctx	ssh.c	/^static void ssh_provide_logctx(void *handle, void *logctx)$/;"	f	file:
ssh_queue_handler	ssh.c	/^static void ssh_queue_handler(Ssh ssh, int msg1, int msg2,$/;"	f	file:
ssh_queue_incoming_data	ssh.c	/^static void ssh_queue_incoming_data(Ssh ssh,$/;"	f	file:
ssh_queueing_handler	ssh.c	/^static void ssh_queueing_handler(Ssh ssh, struct Packet *pktin)$/;"	f	file:
ssh_receive	ssh.c	/^static void ssh_receive(Plug plug, int urgent, char *data, int len)$/;"	f	file:
ssh_reconfig	ssh.c	/^static void ssh_reconfig(void *handle, Conf *conf)$/;"	f	file:
ssh_return_exitcode	ssh.c	/^static int ssh_return_exitcode(void *handle)$/;"	f	file:
ssh_rijndael_lysator	sshaes.c	/^static const struct ssh2_cipher ssh_rijndael_lysator = {$/;"	v	typeref:struct:ssh2_cipher	file:
ssh_rportcmp_ssh1	ssh.c	/^static int ssh_rportcmp_ssh1(void *av, void *bv)$/;"	f	file:
ssh_rportcmp_ssh2	ssh.c	/^static int ssh_rportcmp_ssh2(void *av, void *bv)$/;"	f	file:
ssh_rportfwd	ssh.c	/^struct ssh_rportfwd {$/;"	s	file:
ssh_rportfwd_succfail	ssh.c	/^static void ssh_rportfwd_succfail(Ssh ssh, struct Packet *pktin, void *ctx)$/;"	f	file:
ssh_rsa	sshrsa.c	/^const struct ssh_signkey ssh_rsa = {$/;"	v	typeref:struct:ssh_signkey
ssh_rsa_kex	sshrsa.c	/^const struct ssh_kexes ssh_rsa_kex = {$/;"	v	typeref:struct:ssh_kexes
ssh_rsa_kex_sha1	sshrsa.c	/^static const struct ssh_kex ssh_rsa_kex_sha1 = {$/;"	v	typeref:struct:ssh_kex	file:
ssh_rsa_kex_sha256	sshrsa.c	/^static const struct ssh_kex ssh_rsa_kex_sha256 = {$/;"	v	typeref:struct:ssh_kex	file:
ssh_rsa_key_blob	contrib/encodelib.py	/^def ssh_rsa_key_blob(modulus, exponent):$/;"	f
ssh_rsa_signature_blob	contrib/encodelib.py	/^def ssh_rsa_signature_blob(signature):$/;"	f
ssh_rsakex_encrypt	sshrsa.c	/^void ssh_rsakex_encrypt(const struct ssh_hash *h, unsigned char *in, int inlen,$/;"	f
ssh_rsakex_freekey	sshrsa.c	/^void ssh_rsakex_freekey(void *key)$/;"	f
ssh_rsakex_klen	sshrsa.c	/^int ssh_rsakex_klen(void *key)$/;"	f
ssh_rsakex_newkey	sshrsa.c	/^void *ssh_rsakex_newkey(char *data, int len)$/;"	f
ssh_scp_init	pscp.c	/^static void ssh_scp_init(void)$/;"	f	file:
ssh_scp_recv	pscp.c	/^static int ssh_scp_recv(unsigned char *buf, int len)$/;"	f	file:
ssh_send	ssh.c	/^static int ssh_send(void *handle, const char *buf, int len)$/;"	f	file:
ssh_send_channel_data	ssh.c	/^static int ssh_send_channel_data(struct ssh_channel *c, const char *buf,$/;"	f	file:
ssh_send_packet_from_downstream	ssh.c	/^void ssh_send_packet_from_downstream(Ssh ssh, unsigned id, int type,$/;"	f
ssh_send_port_open	ssh.c	/^void ssh_send_port_open(void *channel, const char *hostname, int port,$/;"	f
ssh_send_verstring	ssh.c	/^static void ssh_send_verstring(Ssh ssh, const char *protoname, char *svers)$/;"	f	file:
ssh_sendbuffer	ssh.c	/^static int ssh_sendbuffer(void *handle)$/;"	f	file:
ssh_sendok	ssh.c	/^static int ssh_sendok(void *handle)$/;"	f	file:
ssh_sent	ssh.c	/^static void ssh_sent(Plug plug, int bufsize)$/;"	f	file:
ssh_set_frozen	ssh.c	/^static void ssh_set_frozen(Ssh ssh, int frozen)$/;"	f	file:
ssh_setup_portfwd	ssh.c	/^static void ssh_setup_portfwd(Ssh ssh, Conf *conf)$/;"	f	file:
ssh_sftp_do_select	unix/uxsftp.c	/^static int ssh_sftp_do_select(int include_stdin, int no_fds_ok)$/;"	f	file:
ssh_sftp_get_cmdline	unix/uxsftp.c	/^char *ssh_sftp_get_cmdline(const char *prompt, int no_fds_ok)$/;"	f
ssh_sftp_get_cmdline	windows/winsftp.c	/^char *ssh_sftp_get_cmdline(const char *prompt, int no_fds_ok)$/;"	f
ssh_sftp_loop_iteration	unix/uxsftp.c	/^int ssh_sftp_loop_iteration(void)$/;"	f
ssh_sftp_loop_iteration	windows/winsftp.c	/^int ssh_sftp_loop_iteration(void)$/;"	f
ssh_sha1	sshsha.c	/^const struct ssh_hash ssh_sha1 = {$/;"	v	typeref:struct:ssh_hash
ssh_sha256	sshsh256.c	/^const struct ssh_hash ssh_sha256 = {$/;"	v	typeref:struct:ssh_hash
ssh_sha384	sshsh512.c	/^const struct ssh_hash ssh_sha384 = {$/;"	v	typeref:struct:ssh_hash
ssh_sha512	sshsh512.c	/^const struct ssh_hash ssh_sha512 = {$/;"	v	typeref:struct:ssh_hash
ssh_share_sockname	sshshare.c	/^char *ssh_share_sockname(const char *host, int port, Conf *conf)$/;"	f
ssh_share_test_for_upstream	sshshare.c	/^int ssh_share_test_for_upstream(const char *host, int port, Conf *conf)$/;"	f
ssh_sharing_add_x11_display	ssh.c	/^struct X11FakeAuth *ssh_sharing_add_x11_display(Ssh ssh, int authtype,$/;"	f
ssh_sharing_channel	ssh.c	/^	struct ssh_sharing_channel {$/;"	s	union:ssh_channel::__anon80	file:
ssh_sharing_connstate	sshshare.c	/^struct ssh_sharing_connstate {$/;"	s	file:
ssh_sharing_downstream_connected	ssh.c	/^void ssh_sharing_downstream_connected(Ssh ssh, unsigned id,$/;"	f
ssh_sharing_downstream_disconnected	ssh.c	/^void ssh_sharing_downstream_disconnected(Ssh ssh, unsigned id)$/;"	f
ssh_sharing_global_request_response	ssh.c	/^static void ssh_sharing_global_request_response(Ssh ssh, struct Packet *pktin,$/;"	f	file:
ssh_sharing_logf	ssh.c	/^void ssh_sharing_logf(Ssh ssh, unsigned id, const char *logfmt, ...)$/;"	f
ssh_sharing_queue_global_request	ssh.c	/^void ssh_sharing_queue_global_request(Ssh ssh, void *share_ctx)$/;"	f
ssh_sharing_remove_x11_display	ssh.c	/^void ssh_sharing_remove_x11_display(Ssh ssh, struct X11FakeAuth *auth)$/;"	f
ssh_sharing_state	sshshare.c	/^struct ssh_sharing_state {$/;"	s	file:
ssh_signkey	ssh.h	/^struct ssh_signkey {$/;"	s
ssh_signkey_with_user_pref_id	ssh.c	/^struct ssh_signkey_with_user_pref_id {$/;"	s	file:
ssh_size	ssh.c	/^static void ssh_size(void *handle, int width, int height)$/;"	f	file:
ssh_socket_log	ssh.c	/^static void ssh_socket_log(Plug plug, int type, SockAddr addr, int port,$/;"	f	file:
ssh_special	ssh.c	/^static void ssh_special(void *handle, Telnet_Special code)$/;"	f	file:
ssh_sspi_acquire_cred	windows/wingss.c	/^static Ssh_gss_stat ssh_sspi_acquire_cred(struct ssh_gss_library *lib,$/;"	f	file:
ssh_sspi_bind_fns	windows/wingss.c	/^static void ssh_sspi_bind_fns(struct ssh_gss_library *lib)$/;"	f	file:
ssh_sspi_display_status	windows/wingss.c	/^static Ssh_gss_stat ssh_sspi_display_status(struct ssh_gss_library *lib,$/;"	f	file:
ssh_sspi_free_mic	windows/wingss.c	/^static Ssh_gss_stat ssh_sspi_free_mic(struct ssh_gss_library *lib,$/;"	f	file:
ssh_sspi_free_tok	windows/wingss.c	/^static Ssh_gss_stat ssh_sspi_free_tok(struct ssh_gss_library *lib,$/;"	f	file:
ssh_sspi_get_mic	windows/wingss.c	/^static Ssh_gss_stat ssh_sspi_get_mic(struct ssh_gss_library *lib,$/;"	f	file:
ssh_sspi_import_name	windows/wingss.c	/^static Ssh_gss_stat ssh_sspi_import_name(struct ssh_gss_library *lib,$/;"	f	file:
ssh_sspi_indicate_mech	windows/wingss.c	/^static Ssh_gss_stat ssh_sspi_indicate_mech(struct ssh_gss_library *lib,$/;"	f	file:
ssh_sspi_init_sec_context	windows/wingss.c	/^static Ssh_gss_stat ssh_sspi_init_sec_context(struct ssh_gss_library *lib,$/;"	f	file:
ssh_sspi_release_cred	windows/wingss.c	/^static Ssh_gss_stat ssh_sspi_release_cred(struct ssh_gss_library *lib,$/;"	f	file:
ssh_sspi_release_name	windows/wingss.c	/^static Ssh_gss_stat ssh_sspi_release_name(struct ssh_gss_library *lib,$/;"	f	file:
ssh_tag	ssh.c	/^struct ssh_tag {$/;"	s	file:
ssh_test_for_upstream	ssh.c	/^static int ssh_test_for_upstream(const char *host, int port, Conf *conf)$/;"	f	file:
ssh_throttle_all	ssh.c	/^static void ssh_throttle_all(Ssh ssh, int enable, int bufsize)$/;"	f	file:
ssh_throttle_conn	ssh.c	/^static void ssh_throttle_conn(Ssh ssh, int adjust)$/;"	f	file:
ssh_tty_parse_boolean	ssh.c	/^static unsigned int ssh_tty_parse_boolean(char *s)$/;"	f	file:
ssh_tty_parse_specchar	ssh.c	/^static unsigned int ssh_tty_parse_specchar(char *s)$/;"	f	file:
ssh_ttymode	ssh.c	/^static const struct ssh_ttymode {$/;"	s	file:
ssh_ttymodes	ssh.c	/^} ssh_ttymodes[] = {$/;"	v	typeref:struct:ssh_ttymode	file:
ssh_unthrottle	ssh.c	/^static void ssh_unthrottle(void *handle, int bufsize)$/;"	f	file:
ssh_version	pageant.h	/^    int ssh_version;$/;"	m	struct:pageant_pubkey
ssh_versioncmp	ssh.c	/^static int ssh_versioncmp(const char *a, const char *b)$/;"	f	file:
ssh_x11_channel	ssh.c	/^	struct ssh_x11_channel {$/;"	s	union:ssh_channel::__anon80	file:
ssh_zlib	sshzlib.c	/^const struct ssh_compress ssh_zlib = {$/;"	v	typeref:struct:ssh_compress
sshbug_handler	config.c	/^static void sshbug_handler(union control *ctrl, void *dlg,$/;"	f	file:
sshcom_encrypted	import.c	/^int sshcom_encrypted(const Filename *filename, char **comment)$/;"	f
sshcom_key	import.c	/^struct sshcom_key {$/;"	s	file:
sshcom_put_mpint	import.c	/^static int sshcom_put_mpint(void *target, void *data, int len)$/;"	f	file:
sshcom_read	import.c	/^struct ssh2_userkey *sshcom_read(const Filename *filename, char *passphrase,$/;"	f
sshcom_read_mpint	import.c	/^static int sshcom_read_mpint(void *data, int len, struct mpint_pos *ret)$/;"	f	file:
sshcom_write	import.c	/^int sshcom_write(const Filename *filename, struct ssh2_userkey *key,$/;"	f
sshfwd_get_conf	ssh.c	/^Conf *sshfwd_get_conf(struct ssh_channel *c)$/;"	f
sshfwd_get_conf	unix/uxpgnt.c	/^Conf *sshfwd_get_conf(struct ssh_channel *c) { return NULL; }$/;"	f
sshfwd_unclean_close	ssh.c	/^void sshfwd_unclean_close(struct ssh_channel *c, const char *err)$/;"	f
sshfwd_unclean_close	unix/uxpgnt.c	/^void sshfwd_unclean_close(struct ssh_channel *c, const char *err) { }$/;"	f
sshfwd_unthrottle	ssh.c	/^void sshfwd_unthrottle(struct ssh_channel *c, int bufsize)$/;"	f
sshfwd_unthrottle	unix/uxpgnt.c	/^void sshfwd_unthrottle(struct ssh_channel *c, int bufsize) {}$/;"	f
sshfwd_write	ssh.c	/^int sshfwd_write(struct ssh_channel *c, char *buf, int len)$/;"	f
sshfwd_write	unix/uxpgnt.c	/^int sshfwd_write(struct ssh_channel *c, char *data, int len) { return 0; }$/;"	f
sshfwd_write_eof	ssh.c	/^void sshfwd_write_eof(struct ssh_channel *c)$/;"	f
sshfwd_write_eof	unix/uxpgnt.c	/^void sshfwd_write_eof(struct ssh_channel *c) { }$/;"	f
sshfwd_x11_is_local	ssh.c	/^void sshfwd_x11_is_local(struct ssh_channel *c)$/;"	f
sshfwd_x11_is_local	unix/uxpgnt.c	/^void sshfwd_x11_is_local(struct ssh_channel *c) {}$/;"	f
sshfwd_x11_sharing_handover	ssh.c	/^void sshfwd_x11_sharing_handover(struct ssh_channel *c,$/;"	f
sshfwd_x11_sharing_handover	unix/uxpgnt.c	/^void sshfwd_x11_sharing_handover(struct ssh_channel *c,$/;"	f
sshnames	doc/AppendixF.html	/^<h1><a name="sshnames"><\/a><a name="AF"><\/a>Appendix F: SSH-2 names specified for PuTTY<\/h1>$/;"	a
sshnames-channel	doc/AppendixF.html	/^<h2><a name="sshnames-channel"><\/a><a name="SF.1"><\/a>F.1 Connection protocol channel request names<\/h2>$/;"	a
sshnames-encrypt	doc/AppendixF.html	/^<h2><a name="sshnames-encrypt"><\/a><a name="SF.3"><\/a>F.3 Encryption algorithm names<\/h2>$/;"	a
sshnames-kex	doc/AppendixF.html	/^<h2><a name="sshnames-kex"><\/a><a name="SF.2"><\/a>F.2 Key exchange method names<\/h2>$/;"	a
sshver	version.c	/^const char sshver[] = SSHVER;$/;"	v
start	import.c	/^struct mpint_pos { void *start; int bytes; };$/;"	m	struct:mpint_pos	file:
start	ssh.h	/^    void (*start) (void *);$/;"	m	struct:ssh_mac
start_backend	unix/gtkwin.c	/^static void start_backend(struct gui_data *inst)$/;"	f	file:
start_backend	windows/window.c	/^static void start_backend(void)$/;"	f	file:
startpoint	windows/winpgen.c	/^	unsigned startpoint, total;$/;"	m	struct:progress::__anon138	file:
startup	unix/gtkapp.c	/^static void startup(GApplication *app, gpointer user_data)$/;"	f	file:
state	contrib/cygtermd/telnet.c	/^    } state;$/;"	m	struct:telnet_tag	typeref:enum:telnet_tag::__anon14	file:
state	logging.c	/^    enum { L_CLOSED, L_OPENING, L_OPEN, L_ERROR } state;$/;"	m	struct:LogContext	typeref:enum:LogContext::__anon36	file:
state	proxy.h	/^    int state; \/* proxy states greater than 0 are implementation$/;"	m	struct:Socket_proxy_tag
state	ssh.c	/^    } state;$/;"	m	struct:ssh_tag	typeref:enum:ssh_tag::__anon82	file:
state	sshccp.c	/^    uint32 state[16];$/;"	m	struct:chacha20	file:
state	sshshare.c	/^    int state;$/;"	m	struct:share_channel	file:
state	sshzlib.c	/^    } state;$/;"	m	struct:zlib_decompress_ctx	typeref:enum:zlib_decompress_ctx::__anon103	file:
state	telnet.c	/^    } state;$/;"	m	struct:telnet_tag	typeref:enum:telnet_tag::__anon107	file:
static2btn	windows/winctrls.c	/^void static2btn(struct ctlpos *cp, char *stext, int sid,$/;"	f
staticbtn	windows/winctrls.c	/^void staticbtn(struct ctlpos *cp, char *stext, int sid,$/;"	f
staticcombo	windows/winctrls.c	/^void staticcombo(struct ctlpos *cp, char *stext,$/;"	f
staticddl	windows/winctrls.c	/^void staticddl(struct ctlpos *cp, char *stext,$/;"	f
staticddlbig	windows/winctrls.c	/^void staticddlbig(struct ctlpos *cp, char *stext,$/;"	f
staticdisttable	sshzlib.c	/^    struct zlib_table *staticlentable, *staticdisttable;$/;"	m	struct:zlib_decompress_ctx	typeref:struct:zlib_decompress_ctx::	file:
staticedit	windows/winctrls.c	/^void staticedit(struct ctlpos *cp, char *stext,$/;"	f
staticedit_internal	windows/winctrls.c	/^static void staticedit_internal(struct ctlpos *cp, char *stext,$/;"	f	file:
staticlentable	sshzlib.c	/^    struct zlib_table *staticlentable, *staticdisttable;$/;"	m	struct:zlib_decompress_ctx	typeref:struct:zlib_decompress_ctx::zlib_table	file:
staticpassedit	windows/winctrls.c	/^void staticpassedit(struct ctlpos *cp, char *stext,$/;"	f
statictext	windows/winctrls.c	/^void statictext(struct ctlpos *cp, char *text, int lines, int id)$/;"	f
staticwrap	windows/winctrls.c	/^char *staticwrap(struct ctlpos *cp, HWND hwnd, char *text, int *lines)$/;"	f
statistics	pscp.c	/^static int statistics = 1;$/;"	v	file:
status	ssh.c	/^    enum { DESTROY, KEEP, CREATE } status;$/;"	m	struct:ssh_portfwd	typeref:enum:ssh_portfwd::__anon81	file:
stderr_H	windows/winhsock.c	/^    HANDLE send_H, recv_H, stderr_H;$/;"	m	struct:Socket_handle_tag	file:
stderr_data	unix/uxplink.c	/^bufchain stdout_data, stderr_data;$/;"	v
stderr_h	windows/winhsock.c	/^    struct handle *send_h, *recv_h, *stderr_h;$/;"	m	struct:Socket_handle_tag	typeref:struct:Socket_handle_tag::	file:
stderr_handle	windows/winplink.c	/^struct handle *stdin_handle, *stdout_handle, *stderr_handle;$/;"	v	typeref:struct:
stderr_is_a_tty	unix/uxcons.c	/^static int stderr_is_a_tty;$/;"	v	file:
stderr_tty_init	unix/uxcons.c	/^void stderr_tty_init()$/;"	f
stderrdata	windows/winhsock.c	/^    bufchain stderrdata;$/;"	m	struct:Socket_handle_tag	file:
stdin_gotdata	windows/winplink.c	/^int stdin_gotdata(struct handle *h, void *data, int len)$/;"	f
stdin_handle	windows/winplink.c	/^struct handle *stdin_handle, *stdout_handle, *stderr_handle;$/;"	v	typeref:struct:handle
stdout_data	unix/uxplink.c	/^bufchain stdout_data, stderr_data;$/;"	v
stdout_handle	windows/winplink.c	/^struct handle *stdin_handle, *stdout_handle, *stderr_handle;$/;"	v	typeref:struct:
stdouterr_sent	windows/winplink.c	/^void stdouterr_sent(struct handle *h, int new_backlog)$/;"	f
step	unix/uxnet.c	/^    SockAddrStep step;$/;"	m	struct:Socket_tag	file:
step	windows/winnet.c	/^    SockAddrStep step;$/;"	m	struct:Socket_tag	file:
stir_pending	sshrand.c	/^    int stir_pending;$/;"	m	struct:RandPool	file:
stmt	contrib/make1305.py	/^    def stmt(self, stmt, needed=False):$/;"	m	class:CodegenTarget
stopped	charset/fromucs.c	/^    int stopped;$/;"	m	struct:charset_emit_param	file:
stopped	charset/toucs.c	/^    int stopped;$/;"	m	struct:unicode_emit_param	file:
storage	unix/uxnet.c	/^    struct sockaddr_storage storage;$/;"	m	union:sockaddr_union	typeref:struct:sockaddr_union::sockaddr_storage	file:
store_cutbuffer	unix/gtkwin.c	/^static void store_cutbuffer(char * ptr, int len)$/;"	f	file:
store_host_key	unix/uxstore.c	/^void store_host_key(const char *hostname, int port,$/;"	f
store_host_key	windows/winstore.c	/^void store_host_key(const char *hostname, int port,$/;"	f
str	contrib/logparse.pl	/^sub str {$/;"	s
strbuf	misc.c	/^struct strbuf {$/;"	s	file:
strbuf	misc.h	/^typedef struct strbuf strbuf;$/;"	t	typeref:struct:strbuf
strbuf_catf	misc.c	/^void strbuf_catf(strbuf *buf, const char *fmt, ...)$/;"	f
strbuf_catfv	misc.c	/^void strbuf_catfv(strbuf *buf, const char *fmt, va_list ap)$/;"	f
strbuf_free	misc.c	/^void strbuf_free(strbuf *buf)$/;"	f
strbuf_new	misc.c	/^strbuf *strbuf_new(void)$/;"	f
strbuf_str	misc.c	/^char *strbuf_str(strbuf *buf)$/;"	f
strbuf_to_str	misc.c	/^char *strbuf_to_str(strbuf *buf)$/;"	f
strendswith	misc.c	/^int strendswith(const char *s, const char *t)$/;"	f
stricmp	unix/unix.h	212;"	d
stricmp	windows/winstuff.h	103;"	d
stricmp	windows/winstuff.h	108;"	d
string	contrib/encodelib.py	/^def string(s):$/;"	f
string	contrib/kh2reg.py	/^import string$/;"	i
string	contrib/make1305.py	/^import string$/;"	i
string	unix/osxlaunch.c	/^    const char *string;$/;"	m	struct:node	file:
string	unix/uxpgnt.c	/^    const char *string;$/;"	m	struct:key_find_ctx	file:
string_width	unix/gtkmisc.c	/^int string_width(const char *text)$/;"	f
stringescape	contrib/logparse.pl	/^sub stringescape {$/;"	s
stringlit	licence.pl	/^sub stringlit {$/;"	s
strings	tree234.c	/^char *strings[] = {$/;"	v
stringval	conf.c	/^	char *stringval;$/;"	m	union:value::__anon10	file:
strip_crlf	import.c	/^void strip_crlf(char *str)$/;"	f
stripslashes	unix/uxsftp.c	/^char *stripslashes(const char *str, int local)$/;"	f
stripslashes	windows/winsftp.c	/^char *stripslashes(const char *str, int local)$/;"	f
strnicmp	unix/unix.h	211;"	d
strnicmp	windows/winstuff.h	104;"	d
strnicmp	windows/winstuff.h	109;"	d
strnullcasecmp	unix/gtkfont.c	/^static int strnullcasecmp(const char *a, const char *b)$/;"	f	file:
strstartswith	misc.c	/^int strstartswith(const char *s, const char *t)$/;"	f
strtolong	contrib/kh2reg.py	/^def strtolong(s):$/;"	f
strtolong_le	contrib/kh2reg.py	/^def strtolong_le(s):$/;"	f
struct	contrib/encodelib.py	/^import struct, random$/;"	i
struct	contrib/kh2reg.py	/^import struct$/;"	i
struct	icons/macicon.py	/^import struct$/;"	i
style	unix/gtkfont.c	/^    char *family, *charset, *style, *stylekey;$/;"	m	struct:fontinfo	file:
style_changed	unix/gtkfont.c	/^static void style_changed(GtkTreeSelection *treeselection, gpointer data)$/;"	f	file:
style_list	unix/gtkfont.c	/^    GtkWidget *family_list, *style_list, *size_entry, *size_list;$/;"	m	struct:unifontsel_internal	file:
style_model	unix/gtkfont.c	/^    GtkListStore *family_model, *style_model, *size_model;$/;"	m	struct:unifontsel_internal	file:
styleindex	unix/gtkfont.c	/^    int familyindex, styleindex, sizeindex;$/;"	m	struct:fontinfo	file:
stylekey	unix/gtkfont.c	/^    char *family, *charset, *style, *stylekey;$/;"	m	struct:fontinfo	file:
su	unix/uxnet.c	/^    struct sockaddr_un su;$/;"	m	union:sockaddr_union	typeref:struct:sockaddr_union::sockaddr_un	file:
sub_socket	proxy.h	/^    Socket sub_socket;$/;"	m	struct:Socket_proxy_tag
subdir	Makefile	/^subdir = .$/;"	m
subkeytypes	conf.c	/^static int subkeytypes[] = { CONFIG_OPTIONS(CONF_SUBKEYTYPE_DEF) };$/;"	v	file:
subprocess	icons/macicon.py	/^import subprocess$/;"	i
subround	sshmd5.c	19;"	d	file:
superfamily	unix/uxnet.c	/^    enum { UNRESOLVED, UNIX, IP } superfamily;$/;"	m	struct:SockAddr_tag	typeref:enum:SockAddr_tag::__anon120	file:
surface	unix/gtkfont.c	/^    cairo_surface_t *surface;$/;"	m	struct:cairo_cached_glyph	file:
surface	unix/gtkwin.c	/^    cairo_surface_t *surface;$/;"	m	struct:gui_data	file:
swap_screen	terminal.c	/^static void swap_screen(Terminal *term, int which, int reset, int keep_cur_pos)$/;"	f	file:
sym	sshzlib.c	/^    int sym, hlit, hdist, hclen, lenptr, lenextrabits, lenaddon, len,$/;"	m	struct:zlib_decompress_ctx	file:
sys	contrib/encodelib.py	/^    import sys$/;"	i
sys	contrib/kh2reg.py	/^import sys$/;"	i
sys	contrib/make1305.py	/^import sys$/;"	i
sys	contrib/samplekex.py	/^import sys, random$/;"	i
sys	icons/macicon.py	/^import sys$/;"	i
sys	icons/mkicon.py	/^import sys$/;"	i
sys	testdata/bignum.py	/^import sys$/;"	i
sys_cursor	fuzzterm.c	/^void sys_cursor(void *frontend, int x, int y) { }$/;"	f
sys_cursor	unix/gtkwin.c	/^void sys_cursor(void *frontend, int x, int y)$/;"	f
sys_cursor	windows/window.c	/^void sys_cursor(void *frontend, int x, int y)$/;"	f
sys_cursor_update	windows/window.c	/^static void sys_cursor_update(void)$/;"	f	file:
sysbox	icons/mkicon.py	/^def sysbox(size, out={}):$/;"	f
sysconfdir	Makefile	/^sysconfdir = ${prefix}\/etc$/;"	m
systopalette	windows/window.c	/^static void systopalette(void)$/;"	f	file:
systray_menu	windows/winpgnt.c	/^static HMENU systray_menu, session_menu;$/;"	v	file:
sysvermin	charset/macenc.c	/^    int sysvermin;$/;"	m	struct:__anon2	file:
t_gss_delete_sec_context	pgssapi.h	/^typedef OM_uint32 (GSS_CC *t_gss_delete_sec_context)$/;"	t
t_gss_display_status	pgssapi.h	/^typedef OM_uint32 (GSS_CC *t_gss_display_status)$/;"	t
t_gss_get_mic	pgssapi.h	/^typedef OM_uint32 (GSS_CC *t_gss_get_mic)$/;"	t
t_gss_import_name	pgssapi.h	/^typedef OM_uint32 (GSS_CC *t_gss_import_name)$/;"	t
t_gss_init_sec_context	pgssapi.h	/^typedef OM_uint32 (GSS_CC *t_gss_init_sec_context)$/;"	t
t_gss_release_buffer	pgssapi.h	/^typedef OM_uint32 (GSS_CC *t_gss_release_buffer)$/;"	t
t_gss_release_cred	pgssapi.h	/^typedef OM_uint32 (GSS_CC *t_gss_release_cred)$/;"	t
t_gss_release_name	pgssapi.h	/^typedef OM_uint32 (GSS_CC *t_gss_release_name)$/;"	t
t_ssh_gss_acquire_cred	sshgss.h	/^typedef Ssh_gss_stat (*t_ssh_gss_acquire_cred)(struct ssh_gss_library *lib,$/;"	t
t_ssh_gss_display_status	sshgss.h	/^typedef Ssh_gss_stat (*t_ssh_gss_display_status)(struct ssh_gss_library *lib,$/;"	t
t_ssh_gss_free_mic	sshgss.h	/^typedef Ssh_gss_stat (*t_ssh_gss_free_mic)(struct ssh_gss_library *lib,$/;"	t
t_ssh_gss_free_tok	sshgss.h	/^typedef Ssh_gss_stat (*t_ssh_gss_free_tok)(struct ssh_gss_library *lib,$/;"	t
t_ssh_gss_get_mic	sshgss.h	/^typedef Ssh_gss_stat (*t_ssh_gss_get_mic)(struct ssh_gss_library *lib,$/;"	t
t_ssh_gss_import_name	sshgss.h	/^typedef Ssh_gss_stat (*t_ssh_gss_import_name)(struct ssh_gss_library *lib,$/;"	t
t_ssh_gss_indicate_mech	sshgss.h	/^typedef Ssh_gss_stat (*t_ssh_gss_indicate_mech)(struct ssh_gss_library *lib,$/;"	t
t_ssh_gss_init_sec_context	sshgss.h	/^typedef Ssh_gss_stat (*t_ssh_gss_init_sec_context)$/;"	t
t_ssh_gss_release_cred	sshgss.h	/^typedef Ssh_gss_stat (*t_ssh_gss_release_cred)(struct ssh_gss_library *lib,$/;"	t
t_ssh_gss_release_name	sshgss.h	/^typedef Ssh_gss_stat (*t_ssh_gss_release_name)(struct ssh_gss_library *lib,$/;"	t
tabdelay	dialog.h	/^	int tabdelay;$/;"	m	struct:control::__anon18
tabdelay	dialog.h	/^    } tabdelay;$/;"	m	union:control	typeref:struct:control::__anon19
table	sshzlib.c	/^    struct zlib_tableentry *table;$/;"	m	struct:zlib_table	typeref:struct:zlib_table::zlib_tableentry	file:
taborder	unix/gtkcols.h	/^    GList *taborder;		       \/* this just holds GtkWidgets *\/$/;"	m	struct:Columns_tag
tabs	terminal.h	/^    unsigned char *tabs;$/;"	m	struct:terminal_tag
tail	contrib/cygtermd/sel.c	/^    struct bufchain_granule *head, *tail;$/;"	m	struct:bufchain_tag	typeref:struct:bufchain_tag::	file:
tail	misc.h	/^    struct bufchain_granule *head, *tail;$/;"	m	struct:bufchain_tag	typeref:struct:bufchain_tag::
tail	sftp.c	/^    struct req *head, *tail;$/;"	m	struct:fxp_xfer	typeref:struct:fxp_xfer::	file:
tardir	Makefile	/^	tardir=$(distdir) && $(am__tar) | BZIP2=$${BZIP2--9} bzip2 -c >$(distdir).tar.bz2$/;"	m
tardir	Makefile	/^	tardir=$(distdir) && $(am__tar) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).tar.gz$/;"	m
tardir	Makefile	/^	tardir=$(distdir) && $(am__tar) | XZ_OPT=$${XZ_OPT--e} xz -c >$(distdir).tar.xz$/;"	m
tardir	Makefile	/^	tardir=$(distdir) && $(am__tar) | compress -c >$(distdir).tar.Z$/;"	m
tardir	Makefile	/^	tardir=$(distdir) && $(am__tar) | lzip -c $${LZIP_OPT--9} >$(distdir).tar.lz$/;"	m
target	unix/gtkfont.h	/^            GdkDrawable *target;$/;"	m	struct:unifont_drawctx::__anon127::__anon128
target	wildcard.c	/^    const char *target;$/;"	m	struct:test	file:
target_alias	Makefile	/^target_alias = $/;"	m
targetshouldbedirectory	pscp.c	/^static int targetshouldbedirectory = 0;$/;"	v	file:
tblink_pending	terminal.h	/^    int tblink_pending, cblink_pending;$/;"	m	struct:terminal_tag
tblinker	terminal.h	/^    int tblinker;		       \/* When the blinking text is on *\/$/;"	m	struct:terminal_tag
tcp_fn_table	unix/uxnet.c	/^static struct socket_function_table tcp_fn_table = {$/;"	v	typeref:struct:socket_function_table	file:
tell_char	pscp.c	/^static void tell_char(FILE *stream, char c)$/;"	f	file:
tell_str	pscp.c	/^static void tell_str(FILE *stream, const char *str)$/;"	f	file:
tell_user	pscp.c	/^static void tell_user(FILE *stream, const char *fmt, ...)$/;"	f	file:
telnet	contrib/cygtermd/main.c	/^Telnet telnet;$/;"	v
telnet_backend	telnet.c	/^Backend telnet_backend = {$/;"	v
telnet_cfg_info	telnet.c	/^static int telnet_cfg_info(void *handle)$/;"	f	file:
telnet_closing	telnet.c	/^static void telnet_closing(Plug plug, const char *error_msg, int error_code,$/;"	f	file:
telnet_connected	telnet.c	/^static int telnet_connected(void *handle)$/;"	f	file:
telnet_enum	contrib/cygtermd/telnet.c	100;"	d	file:
telnet_enum	contrib/cygtermd/telnet.c	102;"	d	file:
telnet_enum	telnet.c	96;"	d	file:
telnet_enum	telnet.c	98;"	d	file:
telnet_exitcode	telnet.c	/^static int telnet_exitcode(void *handle)$/;"	f	file:
telnet_free	contrib/cygtermd/telnet.c	/^void telnet_free(Telnet telnet)$/;"	f
telnet_free	telnet.c	/^static void telnet_free(void *handle)$/;"	f	file:
telnet_from_net	contrib/cygtermd/telnet.c	/^void telnet_from_net(Telnet telnet, char *buf, int len)$/;"	f
telnet_from_pty	contrib/cygtermd/telnet.c	/^void telnet_from_pty(Telnet telnet, char *buf, int len)$/;"	f
telnet_get_specials	telnet.c	/^static const struct telnet_special *telnet_get_specials(void *handle)$/;"	f	file:
telnet_init	telnet.c	/^static const char *telnet_init(void *frontend_handle, void **backend_handle,$/;"	f	file:
telnet_keyboard	ldisc.h	/^    int telnet_keyboard, telnet_newline, protocol, localecho, localedit;$/;"	m	struct:ldisc_tag
telnet_ldisc	telnet.c	/^static int telnet_ldisc(void *handle, int option)$/;"	f	file:
telnet_log	telnet.c	/^static void telnet_log(Plug plug, int type, SockAddr addr, int port,$/;"	f	file:
telnet_new	contrib/cygtermd/telnet.c	/^Telnet telnet_new(sel_wfd *net, sel_wfd *pty)$/;"	f
telnet_newline	ldisc.h	/^    int telnet_keyboard, telnet_newline, protocol, localecho, localedit;$/;"	m	struct:ldisc_tag
telnet_provide_ldisc	telnet.c	/^static void telnet_provide_ldisc(void *handle, void *ldisc)$/;"	f	file:
telnet_provide_logctx	telnet.c	/^static void telnet_provide_logctx(void *handle, void *logctx)$/;"	f	file:
telnet_receive	telnet.c	/^static void telnet_receive(Plug plug, int urgent, char *data, int len)$/;"	f	file:
telnet_reconfig	telnet.c	/^static void telnet_reconfig(void *handle, Conf *conf)$/;"	f	file:
telnet_send	telnet.c	/^static int telnet_send(void *handle, const char *buf, int len)$/;"	f	file:
telnet_sendbuffer	telnet.c	/^static int telnet_sendbuffer(void *handle)$/;"	f	file:
telnet_sendok	telnet.c	/^static int telnet_sendok(void *handle)$/;"	f	file:
telnet_sent	telnet.c	/^static void telnet_sent(Plug plug, int bufsize)$/;"	f	file:
telnet_shell_ok	contrib/cygtermd/telnet.c	/^int telnet_shell_ok(Telnet telnet, struct shell_data *shdata)$/;"	f
telnet_size	telnet.c	/^static void telnet_size(void *handle, int width, int height)$/;"	f	file:
telnet_special	putty.h	/^struct telnet_special {$/;"	s
telnet_special	telnet.c	/^static void telnet_special(void *handle, Telnet_Special code)$/;"	f	file:
telnet_str	contrib/cygtermd/telnet.c	120;"	d	file:
telnet_str	contrib/cygtermd/telnet.c	126;"	d	file:
telnet_str	telnet.c	118;"	d	file:
telnet_str	telnet.c	124;"	d	file:
telnet_tag	contrib/cygtermd/telnet.c	/^struct telnet_tag {$/;"	s	file:
telnet_tag	telnet.c	/^typedef struct telnet_tag {$/;"	s	file:
telnet_unthrottle	telnet.c	/^static void telnet_unthrottle(void *handle, int backlog)$/;"	f	file:
telopt	contrib/cygtermd/telnet.c	/^static char *telopt(int opt)$/;"	f	file:
telopt	telnet.c	/^static const char *telopt(int opt)$/;"	f	file:
temporary	terminal.h	/^    int temporary;		       \/* TRUE if decompressed from scrollback *\/$/;"	m	struct:termline
tempsblines	terminal.h	/^    int tempsblines;		       \/* number of lines of .scrollback that$/;"	m	struct:terminal_tag
term	ldisc.h	/^    Terminal *term;$/;"	m	struct:ldisc_tag
term	testback.c	/^    Terminal *term;$/;"	m	struct:loop_state	file:
term	unix/gtkwin.c	/^    Terminal *term;$/;"	m	struct:gui_data	file:
term	windows/winstuff.h	/^GLOBAL Terminal *term;$/;"	v
term_bidi_cache_hit	terminal.c	/^static int term_bidi_cache_hit(Terminal *term, int line,$/;"	f	file:
term_bidi_cache_store	terminal.c	/^static void term_bidi_cache_store(Terminal *term, int line, termchar *lbefore,$/;"	f	file:
term_bidi_line	terminal.c	/^static termchar *term_bidi_line(Terminal *term, struct termline *ldata,$/;"	f	file:
term_clrsb	terminal.c	/^void term_clrsb(Terminal *term)$/;"	f
term_copy_stuff_from_conf	terminal.c	/^void term_copy_stuff_from_conf(Terminal *term)$/;"	f
term_copyall	terminal.c	/^void term_copyall(Terminal *term)$/;"	f
term_data	terminal.c	/^int term_data(Terminal *term, int is_stderr, const char *data, int len)$/;"	f
term_data_untrusted	terminal.c	/^int term_data_untrusted(Terminal *term, const char *data, int len)$/;"	f
term_deselect	terminal.c	/^void term_deselect(Terminal *term)$/;"	f
term_do_paste	terminal.c	/^void term_do_paste(Terminal *term)$/;"	f
term_echoing	terminal.h	/^    int term_echoing;		       \/* Does terminal want local echo? *\/$/;"	m	struct:terminal_tag
term_editing	terminal.h	/^    int term_editing;		       \/* Does terminal want local edit? *\/$/;"	m	struct:terminal_tag
term_free	terminal.c	/^void term_free(Terminal *term)$/;"	f
term_get_ttymode	terminal.c	/^char *term_get_ttymode(Terminal *term, const char *mode)$/;"	f
term_get_userpass_input	terminal.c	/^int term_get_userpass_input(Terminal *term, prompts_t *p,$/;"	f
term_height	rlogin.c	/^    int term_width, term_height;$/;"	m	struct:rlogin_tag	file:
term_height	ssh.c	/^    int term_width, term_height;$/;"	m	struct:ssh_tag	file:
term_height	telnet.c	/^    int term_width, term_height;$/;"	m	struct:telnet_tag	file:
term_height	unix/uxpty.c	/^    int term_width, term_height;$/;"	m	struct:pty_tag	file:
term_init	terminal.c	/^Terminal *term_init(Conf *myconf, struct unicode_data *ucsdata,$/;"	f
term_invalidate	terminal.c	/^void term_invalidate(Terminal *term)$/;"	f
term_ldisc	terminal.c	/^int term_ldisc(Terminal *term, int option)$/;"	f
term_ldisc	unix/uxplink.c	/^int term_ldisc(Terminal *term, int mode)$/;"	f
term_ldisc	windows/winplink.c	/^int term_ldisc(Terminal *term, int mode)$/;"	f
term_mouse	terminal.c	/^void term_mouse(Terminal *term, Mouse_Button braw, Mouse_Button bcooked,$/;"	f
term_nopaste	noterm.c	/^void term_nopaste(Terminal *term)$/;"	f
term_nopaste	terminal.c	/^void term_nopaste(Terminal *term)$/;"	f
term_out	terminal.c	/^static void term_out(Terminal *term)$/;"	f	file:
term_paint	terminal.c	/^void term_paint(Terminal *term, Context ctx,$/;"	f
term_paste_callback	terminal.c	/^static void term_paste_callback(void *vterm)$/;"	f	file:
term_print_finish	terminal.c	/^static void term_print_finish(Terminal *term)$/;"	f	file:
term_print_flush	terminal.c	/^static void term_print_flush(Terminal *term)$/;"	f	file:
term_print_setup	terminal.c	/^static void term_print_setup(Terminal *term, char *printer)$/;"	f	file:
term_provide_logctx	terminal.c	/^void term_provide_logctx(Terminal *term, void *logctx)$/;"	f
term_provide_resize_fn	terminal.c	/^void term_provide_resize_fn(Terminal *term,$/;"	f
term_pwron	terminal.c	/^void term_pwron(Terminal *term, int clear)$/;"	f
term_reconfig	terminal.c	/^void term_reconfig(Terminal *term, Conf *conf)$/;"	f
term_reset_cblink	terminal.c	/^static void term_reset_cblink(Terminal *term)$/;"	f	file:
term_schedule_cblink	terminal.c	/^static void term_schedule_cblink(Terminal *term)$/;"	f	file:
term_schedule_tblink	terminal.c	/^static void term_schedule_tblink(Terminal *term)$/;"	f	file:
term_schedule_update	terminal.c	/^static void term_schedule_update(Terminal *term)$/;"	f	file:
term_schedule_vbell	terminal.c	/^static void term_schedule_vbell(Terminal *term, int already_started,$/;"	f	file:
term_scroll	terminal.c	/^void term_scroll(Terminal *term, int rel, int where)$/;"	f
term_scroll_to_selection	terminal.c	/^void term_scroll_to_selection(Terminal *term, int which_end)$/;"	f
term_seen_key_event	terminal.c	/^void term_seen_key_event(Terminal *term)$/;"	f
term_set_focus	terminal.c	/^void term_set_focus(Terminal *term, int has_focus)$/;"	f
term_size	terminal.c	/^void term_size(Terminal *term, int newrows, int newcols, int newsavelines)$/;"	f
term_timer	terminal.c	/^static void term_timer(void *ctx, unsigned long now)$/;"	f	file:
term_update	terminal.c	/^void term_update(Terminal *term)$/;"	f
term_userpass_state	terminal.c	/^struct term_userpass_state {$/;"	s	file:
term_width	rlogin.c	/^    int term_width, term_height;$/;"	m	struct:rlogin_tag	file:
term_width	ssh.c	/^    int term_width, term_height;$/;"	m	struct:ssh_tag	file:
term_width	telnet.c	/^    int term_width, term_height;$/;"	m	struct:telnet_tag	file:
term_width	unix/uxpty.c	/^    int term_width, term_height;$/;"	m	struct:pty_tag	file:
termchar	terminal.h	/^struct termchar {$/;"	s
termchar	terminal.h	/^typedef struct termchar termchar;$/;"	t	typeref:struct:termchar
termchars_equal	terminal.c	/^static int termchars_equal(termchar *a, termchar *b)$/;"	f	file:
termchars_equal_override	terminal.c	/^static int termchars_equal_override(termchar *a, termchar *b,$/;"	f	file:
terminal_tag	terminal.h	/^struct terminal_tag {$/;"	s
termline	terminal.h	/^struct termline {$/;"	s
termline	terminal.h	/^typedef struct termline termline;$/;"	t	typeref:struct:termline
termstate	terminal.h	/^    } termstate;$/;"	m	struct:terminal_tag	typeref:enum:terminal_tag::__anon110
termtype	contrib/cygtermd/telnet.h	/^    char *termtype;$/;"	m	struct:shell_data
test	cmdgen.c	/^void test(int retval, ...)$/;"	f
test	icons/mkicon.py	/^            test = 1$/;"	v
test	wildcard.c	/^struct test {$/;"	s	file:
test_for_upstream	putty.h	/^    int (*test_for_upstream)(const char *host, int port, Conf *conf);$/;"	m	struct:backend_tag
test_wildcard	unix/uxsftp.c	/^int test_wildcard(const char *name, int cmdline)$/;"	f
test_wildcard	windows/winsftp.c	/^int test_wildcard(const char *name, int cmdline)$/;"	f
testbn_DEPENDENCIES	Makefile	/^testbn_DEPENDENCIES = libversion.a$/;"	m
testbn_LDADD	Makefile	/^testbn_LDADD = libversion.a$/;"	m
testbn_OBJECTS	Makefile	/^testbn_OBJECTS = $(am_testbn_OBJECTS)$/;"	m
testbn_SOURCES	Makefile	/^testbn_SOURCES = conf.c misc.c sshbn.c testbn.c tree234.c unix\/uxmisc.c \\$/;"	m
testrun	icons/mkicon.py	/^def testrun(func, fname):$/;"	f
text	contrib/make1305.py	/^    def text(self):$/;"	m	class:CodegenTarget
text	dialog.h	/^    } text;$/;"	m	union:control	typeref:struct:control::__anon20
text	unix/gtkdlg.c	/^    GtkWidget *text;	      \/* for text *\/$/;"	m	struct:uctrl	file:
text	windows/winctrls.c	/^struct radio { char *text; int id; };$/;"	m	struct:radio	file:
text	windows/winmisc.c	/^    char *text;$/;"	m	struct:errstring	file:
text	windows/winnet.c	/^    char *text;$/;"	m	struct:errstring	file:
text_name	ssh.h	/^    const char *text_name;$/;"	m	struct:ssh2_cipher
text_name	ssh.h	/^    const char *text_name;$/;"	m	struct:ssh_cipher
text_name	ssh.h	/^    const char *text_name;$/;"	m	struct:ssh_compress
text_name	ssh.h	/^    const char *text_name;$/;"	m	struct:ssh_hash
text_name	ssh.h	/^    const char *text_name;$/;"	m	struct:ssh_mac
textbuf	terminal.c	/^    wchar_t *textbuf;	    \/* buffer for copied text *\/$/;"	m	struct:__anon108	file:
textcursor	unix/gtkwin.c	/^    GdkCursor *rawcursor, *textcursor, *blankcursor, *waitcursor, *currcursor;$/;"	m	struct:gui_data	file:
textname	ssh.h	/^    const char *name, *textname;$/;"	m	struct:ec_curve
textptr	terminal.c	/^    wchar_t *textptr;	    \/* = textbuf + bufpos (current insertion point) *\/$/;"	m	struct:__anon108	file:
textsig	unix/gtkdlg.c	/^    guint textsig;$/;"	m	struct:uctrl	file:
the_inst	unix/gtkmain.c	/^static struct gui_data *the_inst;$/;"	v	typeref:struct:gui_data	file:
throttle_override	portfwd.c	/^    int throttled, throttle_override;$/;"	m	struct:PortForwarding	file:
throttle_override	x11fwd.c	/^    int throttled, throttle_override;$/;"	m	struct:X11Connection	file:
throttle_state	ssh.c	/^	    enum { THROTTLED, UNTHROTTLING, UNTHROTTLED } throttle_state;$/;"	m	struct:ssh_channel::__anon78::ssh2_data_channel	typeref:enum:ssh_channel::__anon78::ssh2_data_channel::__anon79	file:
throttled	portfwd.c	/^    int throttled, throttle_override;$/;"	m	struct:PortForwarding	file:
throttled	x11fwd.c	/^    int throttled, throttle_override;$/;"	m	struct:X11Connection	file:
throttled_all	ssh.c	/^    int throttled_all;$/;"	m	struct:ssh_tag	file:
throttling_conn	ssh.c	/^    int throttling_conn;$/;"	m	struct:ssh_channel	file:
ticks	terminal.h	/^    unsigned long ticks;$/;"	m	struct:beeptime
time	x11fwd.c	/^    unsigned int time;$/;"	m	struct:XDMSeen	file:
time_to_die	unix/uxpgnt.c	/^static int time_to_die = FALSE;$/;"	v	file:
timer	timing.c	/^struct timer {$/;"	s	file:
timer_change_notify	fuzzterm.c	/^void timer_change_notify(unsigned long next) { }$/;"	f
timer_change_notify	unix/gtkcomm.c	/^void timer_change_notify(unsigned long next)$/;"	f
timer_change_notify	unix/uxcons.c	/^void timer_change_notify(unsigned long next)$/;"	f
timer_change_notify	windows/wincons.c	/^void timer_change_notify(unsigned long next)$/;"	f
timer_change_notify	windows/window.c	/^void timer_change_notify(unsigned long next)$/;"	f
timer_contexts	timing.c	/^static tree234 *timer_contexts = NULL;$/;"	v	file:
timer_fn_t	putty.h	/^typedef void (*timer_fn_t)(void *ctx, unsigned long now);$/;"	t
timer_id	unix/gtkcomm.c	/^static guint timer_id = 0;$/;"	v	file:
timer_trigger	unix/gtkcomm.c	/^static gint timer_trigger(gpointer data)$/;"	f	file:
timers	timing.c	/^static tree234 *timers = NULL;$/;"	v	file:
timing_last_clock	timing.c	/^unsigned long timing_last_clock(void)$/;"	f
timing_next_time	windows/window.c	/^static long timing_next_time;$/;"	v	file:
tip_bg	windows/sizetip.c	/^static COLORREF tip_bg;$/;"	v	file:
tip_class	windows/sizetip.c	/^static ATOM tip_class = 0;$/;"	v	file:
tip_enabled	windows/sizetip.c	/^static int tip_enabled = 0;$/;"	v	file:
tip_font	windows/sizetip.c	/^static HFONT tip_font;$/;"	v	file:
tip_text	windows/sizetip.c	/^static COLORREF tip_text;$/;"	v	file:
tip_wnd	windows/sizetip.c	/^static HWND tip_wnd = NULL;$/;"	v	file:
title	dialog.h	/^	char *title;$/;"	m	struct:control::__anon26
to_cmd	unix/uxproxy.c	/^    int to_cmd, from_cmd, cmd_err;     \/* fds *\/$/;"	m	struct:Socket_localproxy_tag	file:
to_read	ssh.c	/^    long len, pad, biglen, to_read;$/;"	m	struct:rdpkt1_state_tag	file:
to_server	putty.h	/^    int to_server;$/;"	m	struct:__anon67
toggle_mode	terminal.c	/^static void toggle_mode(Terminal *term, int mode, int query, int state)$/;"	f	file:
toint	misc.c	/^int toint(unsigned u)$/;"	f
tolocal	pscp.c	/^static void tolocal(int argc, char *argv[])$/;"	f	file:
top_build_prefix	Makefile	/^top_build_prefix = $/;"	m
top_builddir	Makefile	/^top_builddir = .$/;"	m
top_distdir	Makefile	/^top_distdir = $(distdir)$/;"	m
top_srcdir	Makefile	/^top_srcdir = .$/;"	m
toplevel	unix/gtkdlg.c	/^    GtkWidget *toplevel;$/;"	m	struct:uctrl	file:
toplevel_callback_fn_t	putty.h	/^typedef void (*toplevel_callback_fn_t)(void *ctx);$/;"	t
toplevel_callback_idle_id	unix/gtkcomm.c	/^static guint toplevel_callback_idle_id;$/;"	v	file:
toplevel_callback_notify_fn_t	putty.h	/^typedef void (*toplevel_callback_notify_fn_t)(void *frontend);$/;"	t
toplevel_callback_pending	callback.c	/^int toplevel_callback_pending(void)$/;"	f
topline	terminal.h	/^    int topline; \/* Top line of scroll region. *\/$/;"	m	struct:scrollregion
topy	icons/mkicon.py	/^def topy(canvas):$/;"	f
toremote	pscp.c	/^static void toremote(int argc, char *argv[])$/;"	f	file:
total	windows/winpgen.c	/^	unsigned startpoint, total;$/;"	m	struct:progress::__anon138	file:
total	windows/winpgen.c	/^    unsigned total, divisor, range;$/;"	m	struct:progress	file:
total_errs	charset/utf8.c	/^int total_errs = 0;$/;"	v
transform	Makefile	/^transform = $(program_transform_name)$/;"	m
transform	release.pl	/^sub transform {$/;"	s
transform_jumplist_registry	windows/winstore.c	/^static int transform_jumplist_registry$/;"	f	file:
translate	ssh.c	192;"	d	file:
translate	ssh.c	293;"	d	file:
translate_button	unix/gtkwin.c	/^static Mouse_Button translate_button(Mouse_Button button)$/;"	f	file:
translate_button	windows/window.c	/^static Mouse_Button translate_button(Mouse_Button button)$/;"	f	file:
translatea	ssh.c	194;"	d	file:
translatec	ssh.c	294;"	d	file:
translatek	ssh.c	193;"	d	file:
tree	conf.c	/^    tree234 *tree;$/;"	m	struct:conf_tag	file:
tree	tree234.c	/^tree234 *tree;$/;"	v
tree234	tree234.h	/^typedef struct tree234_Tag tree234;$/;"	t	typeref:struct:tree234_Tag
tree234_Tag	tree234.c	/^struct tree234_Tag {$/;"	s	file:
tree_focus	unix/gtkdlg.c	/^gint tree_focus(GtkContainer *container, GtkDirectionType direction,$/;"	f
tree_grab_focus	unix/gtkdlg.c	/^static int tree_grab_focus(struct dlgparam *dp)$/;"	f	file:
tree_key_press	unix/gtkdlg.c	/^int tree_key_press(GtkWidget *widget, GdkEventKey *event, gpointer data)$/;"	f
treedepth	tree234.c	/^    int treedepth;$/;"	m	struct:__anon114	file:
treeitem	unix/gtkdlg.c	/^    GtkWidget *treeitem;$/;"	m	struct:selparam	file:
treeitem_sel	unix/gtkdlg.c	/^static void treeitem_sel(GtkItem *item, gpointer data)$/;"	f	file:
treeitems	unix/gtkdlg.c	/^    GtkWidget *currtreeitem, **treeitems;$/;"	m	struct:dlgparam	file:
treepath	unix/gtkdlg.c	/^    GtkTreePath *treepath;$/;"	m	struct:selparam	file:
treeselection_changed	unix/gtkdlg.c	/^static void treeselection_changed(GtkTreeSelection *treeselection,$/;"	f	file:
treeview	unix/gtkdlg.c	/^    GtkWidget *treeview;      \/* for listbox (GTK2), droplist+combo (>=2.4) *\/$/;"	m	struct:uctrl	file:
treeview	windows/windlg.c	/^    HWND treeview;$/;"	m	struct:treeview_faff	file:
treeview_faff	windows/windlg.c	/^struct treeview_faff {$/;"	s	file:
treeview_insert	windows/windlg.c	/^static HTREEITEM treeview_insert(struct treeview_faff *faff,$/;"	f	file:
treeview_map_event	unix/gtkdlg.c	/^void treeview_map_event(GtkWidget *tree, gpointer data)$/;"	f
tried_shgetfolderpath	windows/winstore.c	/^static int tried_shgetfolderpath = FALSE;$/;"	v	file:
try_connect	unix/uxnet.c	/^static int try_connect(Actual_Socket sock)$/;"	f	file:
try_connect	windows/winnet.c	/^static DWORD try_connect(Actual_Socket sock)$/;"	f	file:
try_grab_fn_t	unix/gtkask.c	/^typedef int (try_grab_fn_t)(struct askpass_ctx *ctx);$/;"	t	file:
try_grab_keyboard	unix/gtkask.c	/^static int try_grab_keyboard(struct askpass_ctx *ctx)$/;"	f	file:
try_output	unix/uxplink.c	/^int try_output(int is_stderr)$/;"	f
try_random_seed	windows/winstore.c	/^static int try_random_seed(char const *path, int action, HANDLE *ret)$/;"	f	file:
try_scp	pscp.c	/^static int try_scp = 1;$/;"	v	file:
try_send	unix/uxnet.c	/^void try_send(Actual_Socket s)$/;"	f
try_send	windows/winnet.c	/^void try_send(Actual_Socket s)$/;"	f
try_sftp	pscp.c	/^static int try_sftp = 1;$/;"	v	file:
tty_life_timer	unix/uxpgnt.c	/^static void tty_life_timer(void *ctx, unsigned long now)$/;"	f	file:
ttymodes	settings.c	/^const char *const ttymodes[] = {$/;"	v
ttymodes_data	config.c	/^struct ttymodes_data {$/;"	s	file:
ttymodes_handler	config.c	/^static void ttymodes_handler(union control *ctrl, void *dlg,$/;"	f	file:
ttype_done	contrib/cygtermd/telnet.c	/^    int old_environ_done, new_environ_done, ttype_done;$/;"	m	struct:telnet_tag	file:
type	dialog.h	/^	int type;$/;"	m	struct:control::__anon18
type	minibidi.c	/^    char type;$/;"	m	struct:__anon39	file:
type	putty.h	/^    int type;$/;"	m	struct:logblank_t
type	sftp.c	/^    int type;$/;"	m	struct:sftp_packet	file:
type	ssh.c	/^    enum { TTY_OP_CHAR, TTY_OP_BOOL } type;$/;"	m	struct:ssh_ttymode	typeref:enum:ssh_ttymode::__anon75	file:
type	ssh.c	/^    int type;		    \/* only used for incoming packets *\/$/;"	m	struct:Packet	file:
type	ssh.c	/^    int type;$/;"	m	struct:ssh_channel	file:
type	ssh.c	/^    int type;$/;"	m	struct:ssh_portfwd	file:
type	ssh.h	/^    enum { EC_WEIERSTRASS, EC_MONTGOMERY, EC_EDWARDS } type;$/;"	m	struct:ec_curve	typeref:enum:ec_curve::__anon90
type	sshshare.c	/^    int type;$/;"	m	struct:share_globreq	file:
type	sshshare.c	/^    int type;$/;"	m	struct:share_xchannel_message	file:
type	unix/gtkfont.h	/^    } type;$/;"	m	struct:unifont_drawctx	typeref:enum:unifont_drawctx::__anon126
type	windows/winhandl.c	/^    HandleType type;$/;"	m	struct:handle	file:
typecheck	windows/winjump.c	358;"	d	file:
u	conf.c	/^    } u;$/;"	m	struct:value	typeref:union:value::__anon10	file:
u	ssh.c	/^    } u;$/;"	m	struct:kexinit_algorithm	typeref:union:kexinit_algorithm::__anon83	file:
u	ssh.c	/^    } u;$/;"	m	struct:ssh_channel	typeref:union:ssh_channel::__anon80	file:
u	sshgss.h	/^    } u;$/;"	m	struct:ssh_gss_library	typeref:union:ssh_gss_library::__anon89
u	unix/gtkfont.c	/^    struct unifont u;$/;"	m	struct:multifont	typeref:struct:multifont::unifont	file:
u	unix/gtkfont.c	/^    struct unifont u;$/;"	m	struct:pangofont	typeref:struct:pangofont::unifont	file:
u	unix/gtkfont.c	/^    struct unifont u;$/;"	m	struct:x11font	typeref:struct:x11font::unifont	file:
u	unix/gtkfont.c	/^    unifontsel u;$/;"	m	struct:unifontsel_internal	file:
u	unix/gtkfont.h	/^    } u;$/;"	m	struct:unifont_drawctx	typeref:union:unifont_drawctx::__anon127
u	windows/winhandl.c	/^    } u;$/;"	m	struct:handle	typeref:union:handle::__anon148	file:
uc	unix/gtkdlg.c	/^    struct uctrl *uc;$/;"	m	struct:Shortcut	typeref:struct:Shortcut::uctrl	file:
uc	unix/gtkdlg.c	/^    struct uctrl *uc;$/;"	m	struct:draglist_valchange_ctx	typeref:struct:draglist_valchange_ctx::uctrl	file:
uchar	sshcrcda.c	/^typedef unsigned char uchar;$/;"	t	file:
ucs2sbcs	charset/internal.h	/^    unsigned char ucs2sbcs[256];$/;"	m	struct:sbcs_data
ucsdata	terminal.h	/^    struct unicode_data *ucsdata;$/;"	m	struct:terminal_tag	typeref:struct:terminal_tag::unicode_data
ucsdata	unix/gtkwin.c	/^    struct unicode_data ucsdata;$/;"	m	struct:gui_data	typeref:struct:gui_data::unicode_data	file:
ucsdata	windows/window.c	/^static struct unicode_data ucsdata;$/;"	v	typeref:struct:unicode_data	file:
uctrl	unix/gtkdlg.c	/^struct uctrl {$/;"	s	file:
uctrl_cmp_byctrl	unix/gtkdlg.c	/^static int uctrl_cmp_byctrl(void *av, void *bv)$/;"	f	file:
uctrl_cmp_byctrl_find	unix/gtkdlg.c	/^static int uctrl_cmp_byctrl_find(void *av, void *bv)$/;"	f	file:
uctrl_cmp_bywidget	unix/gtkdlg.c	/^static int uctrl_cmp_bywidget(void *av, void *bv)$/;"	f	file:
uctrl_cmp_bywidget_find	unix/gtkdlg.c	/^static int uctrl_cmp_bywidget_find(void *av, void *bv)$/;"	f	file:
uctx	unix/gtkwin.c	/^    unifont_drawctx uctx;$/;"	m	struct:draw_ctx	file:
udp	doc/AppendixD.html	/^<h1><a name="udp"><\/a><a name="AD"><\/a>Appendix D: PuTTY hacking guide<\/h1>$/;"	a
udp-640x480	doc/AppendixD.html	/^<h2><a name="udp-640x480"><\/a><a name="SD.10"><\/a>D.10 640&#215;480 friendliness in configuration panels<\/h2>$/;"	a
udp-compile-once	doc/AppendixD.html	/^<h2><a name="udp-compile-once"><\/a><a name="SD.13"><\/a>D.13 Single compilation of each source file<\/h2>$/;"	a
udp-globals	doc/AppendixD.html	/^<h2><a name="udp-globals"><\/a><a name="SD.3"><\/a>D.3 Multiple sessions per process on some platforms<\/h2>$/;"	a
udp-keystrokes	doc/AppendixD.html	/^<h2><a name="udp-keystrokes"><\/a><a name="SD.9"><\/a>D.9 Keystrokes sent to the server wherever possible<\/h2>$/;"	a
udp-makefiles-auto	doc/AppendixD.html	/^<h2><a name="udp-makefiles-auto"><\/a><a name="SD.11"><\/a>D.11 Automatically generated <code>Makefile<\/code>s<\/h2>$/;"	a
udp-multi-backend	doc/AppendixD.html	/^<h2><a name="udp-multi-backend"><\/a><a name="SD.2"><\/a>D.2 Multiple backends treated equally<\/h2>$/;"	a
udp-multi-compiler	doc/AppendixD.html	/^<h2><a name="udp-multi-compiler"><\/a><a name="SD.6"><\/a>D.6 Independence of specific compiler<\/h2>$/;"	a
udp-perfection	doc/AppendixD.html	/^<h2><a name="udp-perfection"><\/a><a name="SD.14"><\/a>D.14 Do as we say, not as we do<\/h2>$/;"	a
udp-portability	doc/AppendixD.html	/^<h2><a name="udp-portability"><\/a><a name="SD.1"><\/a>D.1 Cross-OS portability<\/h2>$/;"	a
udp-pure-c	doc/AppendixD.html	/^<h2><a name="udp-pure-c"><\/a><a name="SD.4"><\/a>D.4 C, not C++<\/h2>$/;"	a
udp-security	doc/AppendixD.html	/^<h2><a name="udp-security"><\/a><a name="SD.5"><\/a>D.5 Security-conscious coding<\/h2>$/;"	a
udp-single-threaded	doc/AppendixD.html	/^<h2><a name="udp-single-threaded"><\/a><a name="SD.8"><\/a>D.8 Single-threaded code<\/h2>$/;"	a
udp-small	doc/AppendixD.html	/^<h2><a name="udp-small"><\/a><a name="SD.7"><\/a>D.7 Small code size<\/h2>$/;"	a
udp-ssh-coroutines	doc/AppendixD.html	/^<h2><a name="udp-ssh-coroutines"><\/a><a name="SD.12"><\/a>D.12 Coroutines in <code>ssh.c<\/code><\/h2>$/;"	a
ui_set_key_type	windows/winpgen.c	/^void ui_set_key_type(HWND hwnd, struct MainDlgState *state, int button)$/;"	f
ui_set_state	windows/winpgen.c	/^void ui_set_state(HWND hwnd, struct MainDlgState *state, int status)$/;"	f
ui_update_key_type_ctrls	windows/winpgen.c	/^void ui_update_key_type_ctrls(HWND hwnd)$/;"	f
uid	sftp.h	/^    unsigned long uid;$/;"	m	struct:fxp_attrs
uint16	sshcrcda.c	/^typedef unsigned short uint16;$/;"	t	file:
uint32	contrib/encodelib.py	/^def uint32(u):$/;"	f
uint32	ssh.h	/^typedef unsigned int uint32;$/;"	t
uint32	unix/unix.h	/^typedef uint32_t uint32; \/* C99: uint32_t defined in stdint.h *\/$/;"	t
uint32	windows/winstuff.h	/^typedef unsigned int uint32; \/* int is 32-bits on Win32 and Win64. *\/$/;"	t
uint64	contrib/encodelib.py	/^def uint64(u):$/;"	f
uint64	int64.h	/^} uint64;$/;"	t	typeref:struct:__anon35
uint64_add	int64.c	/^uint64 uint64_add(uint64 x, uint64 y)$/;"	f
uint64_add32	int64.c	/^uint64 uint64_add32(uint64 x, unsigned long y)$/;"	f
uint64_compare	int64.c	/^int uint64_compare(uint64 x, uint64 y)$/;"	f
uint64_decimal	int64.c	/^void uint64_decimal(uint64 x, char *buffer)$/;"	f
uint64_div10	int64.c	/^uint64 uint64_div10(uint64 x, int *remainder)$/;"	f
uint64_from_decimal	int64.c	/^uint64 uint64_from_decimal(char *str)$/;"	f
uint64_make	int64.c	/^uint64 uint64_make(unsigned long hi, unsigned long lo)$/;"	f
uint64_shift_left	int64.c	/^uint64 uint64_shift_left(uint64 x, int shift)$/;"	f
uint64_shift_right	int64.c	/^uint64 uint64_shift_right(uint64 x, int shift)$/;"	f
uint64_subtract	int64.c	/^uint64 uint64_subtract(uint64 x, uint64 y)$/;"	f
uint64_to_double	int64.c	/^double uint64_to_double(uint64 x)$/;"	f
uncert_hostkeys	ssh.c	/^    int uncert_hostkeys[lenof(hostkey_algs)];$/;"	m	struct:ssh_tag	file:
uncomplen	sshzlib.c	/^    int uncomplen;$/;"	m	struct:zlib_decompress_ctx	file:
und_mode	windows/window.c	/^} und_mode;$/;"	v	typeref:enum:__anon137	file:
uni_tbl	putty.h	/^    char **uni_tbl;$/;"	m	struct:unicode_data
unicode	unix/xkeysym.c	/^    unsigned short unicode;$/;"	m	struct:keysym	file:
unicode_data	putty.h	/^struct unicode_data {$/;"	s
unicode_emit	charset/toucs.c	/^static void unicode_emit(void *ctx, long int output)$/;"	f	file:
unicode_emit_param	charset/toucs.c	/^struct unicode_emit_param {$/;"	s	file:
unifont	unix/gtkfont.h	/^typedef struct unifont {$/;"	s
unifont	unix/gtkfont.h	/^} unifont;$/;"	t	typeref:struct:unifont
unifont_create	unix/gtkfont.c	/^unifont *unifont_create(GtkWidget *widget, const char *name, int wide,$/;"	f
unifont_destroy	unix/gtkfont.c	/^void unifont_destroy(unifont *font)$/;"	f
unifont_do_prefix	unix/gtkfont.c	/^static const char *unifont_do_prefix(const char *name, int *start, int *end)$/;"	f	file:
unifont_draw_combining	unix/gtkfont.c	/^void unifont_draw_combining(unifont_drawctx *ctx, unifont *font,$/;"	f
unifont_draw_func_t	unix/gtkfont.c	/^typedef void (*unifont_draw_func_t)(unifont_drawctx *ctx, unifont *font,$/;"	t	file:
unifont_draw_text	unix/gtkfont.c	/^void unifont_draw_text(unifont_drawctx *ctx, unifont *font,$/;"	f
unifont_drawctx	unix/gtkfont.h	/^typedef struct unifont_drawctx {$/;"	s
unifont_drawctx	unix/gtkfont.h	/^} unifont_drawctx;$/;"	t	typeref:struct:unifont_drawctx
unifont_size_increment	unix/gtkfont.c	/^char *unifont_size_increment(unifont *font, int increment)$/;"	f
unifont_types	unix/gtkfont.c	/^static const struct unifont_vtable *unifont_types[] = {$/;"	v	typeref:struct:unifont_vtable	file:
unifont_vtable	unix/gtkfont.c	/^struct unifont_vtable {$/;"	s	file:
unifontsel	unix/gtkfont.h	/^typedef struct unifontsel {$/;"	s
unifontsel	unix/gtkfont.h	/^} unifontsel;$/;"	t	typeref:struct:unifontsel
unifontsel_add_entry	unix/gtkfont.c	/^static void unifontsel_add_entry(void *ctx, const char *realfontname,$/;"	f	file:
unifontsel_button_toggled	unix/gtkfont.c	/^static void unifontsel_button_toggled(GtkToggleButton *tb, gpointer data)$/;"	f	file:
unifontsel_configure_area	unix/gtkfont.c	/^static gint unifontsel_configure_area(GtkWidget *widget,$/;"	f	file:
unifontsel_default_sizes	unix/gtkfont.c	/^static const int unifontsel_default_sizes[] = { 10, 12, 14, 16, 20, 24, 32 };$/;"	v	file:
unifontsel_deselect	unix/gtkfont.c	/^static void unifontsel_deselect(unifontsel_internal *fs)$/;"	f	file:
unifontsel_destroy	unix/gtkfont.c	/^void unifontsel_destroy(unifontsel *fontsel)$/;"	f
unifontsel_draw_area	unix/gtkfont.c	/^static gint unifontsel_draw_area(GtkWidget *widget, cairo_t *cr, gpointer data)$/;"	f	file:
unifontsel_draw_preview_text	unix/gtkfont.c	/^static void unifontsel_draw_preview_text(unifontsel_internal *fs)$/;"	f	file:
unifontsel_draw_preview_text_inner	unix/gtkfont.c	/^static void unifontsel_draw_preview_text_inner(unifont_drawctx *dctx,$/;"	f	file:
unifontsel_expose_area	unix/gtkfont.c	/^static gint unifontsel_expose_area(GtkWidget *widget, GdkEventExpose *event,$/;"	f	file:
unifontsel_get_name	unix/gtkfont.c	/^char *unifontsel_get_name(unifontsel *fontsel)$/;"	f
unifontsel_internal	unix/gtkfont.c	/^typedef struct unifontsel_internal {$/;"	s	file:
unifontsel_internal	unix/gtkfont.c	/^} unifontsel_internal;$/;"	t	typeref:struct:unifontsel_internal	file:
unifontsel_new	unix/gtkfont.c	/^unifontsel *unifontsel_new(const char *wintitle)$/;"	f
unifontsel_select_font	unix/gtkfont.c	/^static void unifontsel_select_font(unifontsel_internal *fs,$/;"	f	file:
unifontsel_set_filter_buttons	unix/gtkfont.c	/^static void unifontsel_set_filter_buttons(unifontsel_internal *fs)$/;"	f	file:
unifontsel_set_name	unix/gtkfont.c	/^void unifontsel_set_name(unifontsel *fontsel, const char *fontname)$/;"	f
unifontsel_setup_familylist	unix/gtkfont.c	/^static void unifontsel_setup_familylist(unifontsel_internal *fs)$/;"	f	file:
unifontsel_setup_sizelist	unix/gtkfont.c	/^static void unifontsel_setup_sizelist(unifontsel_internal *fs,$/;"	f	file:
unifontsel_setup_stylelist	unix/gtkfont.c	/^static void unifontsel_setup_stylelist(unifontsel_internal *fs,$/;"	f	file:
unitab_ctrl	putty.h	/^    unsigned char unitab_ctrl[256];$/;"	m	struct:unicode_data
unitab_font	putty.h	/^    wchar_t unitab_font[256];$/;"	m	struct:unicode_data
unitab_line	putty.h	/^    wchar_t unitab_line[256];$/;"	m	struct:unicode_data
unitab_oemcp	putty.h	/^    wchar_t unitab_oemcp[256];$/;"	m	struct:unicode_data
unitab_scoacs	putty.h	/^    wchar_t unitab_scoacs[256];$/;"	m	struct:unicode_data
unitab_xterm	putty.h	/^    wchar_t unitab_xterm[256];$/;"	m	struct:unicode_data
unitab_xterm_std	windows/winucs.c	/^static const WCHAR unitab_xterm_std[32] = {$/;"	v	file:
unix_add_keyfile	unix/uxpgnt.c	/^static int unix_add_keyfile(const char *filename_str)$/;"	f	file:
unix_setup_config_box	unix/uxcfg.c	/^void unix_setup_config_box(struct controlbox *b, int midsession, int protocol)$/;"	f
unix_sock_addr	unix/uxnet.c	/^SockAddr unix_sock_addr(const char *path)$/;"	f
unixdomain	ssh.h	/^    int unixdomain;$/;"	m	struct:X11Display
unixsocketpath	ssh.h	/^    char *unixsocketpath;$/;"	m	struct:X11Display
unlineptr	terminal.c	/^static void unlineptr(termline *line)$/;"	f	file:
unmungestr	unix/uxstore.c	/^static char *unmungestr(const char *in)$/;"	f	file:
unmungestr	windows/winpgnt.c	/^static void unmungestr(char *in, char *out, int outlen)$/;"	f	file:
unmungestr	windows/winstore.c	/^static void unmungestr(const char *in, char *out, int outlen)$/;"	f	file:
unthrottle	putty.h	/^    void (*unthrottle) (void *handle, int);$/;"	m	struct:backend_tag
upbid	windows/winstuff.h	/^    int listid, upbid, dnbid;$/;"	m	struct:prefslist
update_for_intended_size	unix/gtkfont.c	/^static fontinfo *update_for_intended_size(unifontsel_internal *fs,$/;"	f	file:
update_jumplist_from_registry	windows/winjump.c	/^static void update_jumplist_from_registry(void)$/;"	f	file:
update_mouse_pointer	windows/window.c	/^static void update_mouse_pointer(void)$/;"	f	file:
update_mouseptr	unix/gtkwin.c	/^static void update_mouseptr(struct gui_data *inst)$/;"	f	file:
update_savedsess_menu	unix/gtkwin.c	/^static void update_savedsess_menu(GtkMenuItem *menuitem, gpointer data)$/;"	f	file:
update_savedsess_menu	windows/window.c	/^static void update_savedsess_menu(void)$/;"	f	file:
update_sbar	terminal.c	/^static void update_sbar(Terminal *term)$/;"	f	file:
update_sessions	windows/winpgnt.c	/^static void update_sessions(void)$/;"	f	file:
update_specials_menu	unix/gtkwin.c	/^void update_specials_menu(void *frontend)$/;"	f
update_specials_menu	unix/uxcons.c	/^void update_specials_menu(void *frontend)$/;"	f
update_specials_menu	windows/wincons.c	/^void update_specials_menu(void *frontend)$/;"	f
update_specials_menu	windows/window.c	/^void update_specials_menu(void *frontend)$/;"	f
uploading	pscp.c	/^static int uploading = 0;$/;"	v	file:
upstream_id	sshshare.c	/^    unsigned downstream_id, upstream_id, server_id;$/;"	m	struct:share_channel	file:
upstream_id	sshshare.c	/^    unsigned upstream_id, server_id;$/;"	m	struct:share_xchannel	file:
urxvt_extended_mouse	terminal.h	/^    int urxvt_extended_mouse;$/;"	m	struct:terminal_tag
usage	cmdgen.c	/^void usage(int standalone)$/;"	f
usage	pscp.c	/^static void usage(void)$/;"	f	file:
usage	psftp.c	/^static void usage(void)$/;"	f	file:
usage	release.pl	/^sub usage {$/;"	s
usage	unix/uxpgnt.c	/^static void usage(void)$/;"	f	file:
usage	unix/uxplink.c	/^static void usage(void)$/;"	f	file:
usage	windows/winplink.c	/^static void usage(void)$/;"	f	file:
use_bce	terminal.h	/^    int use_bce;		       \/* Use Background coloured erase *\/$/;"	m	struct:terminal_tag
use_event_log	unix/uxpterm.c	/^const int use_event_log = 0;	       \/* pterm doesn't need it *\/$/;"	v
use_event_log	unix/uxputty.c	/^const int use_event_log = 1, new_session = 1, saved_sessions = 1;$/;"	v
use_pty_argv	unix/uxpterm.c	/^const int use_pty_argv = TRUE;$/;"	v
use_pty_argv	unix/uxputty.c	/^const int use_pty_argv = FALSE;$/;"	v
user_data	unix/gtkfont.h	/^    void *user_data;		       \/* settable by the user *\/$/;"	m	struct:unifontsel
user_response	ssh.c	/^    int user_response;$/;"	m	struct:ssh_tag	file:
userdata	sftp.c	/^    void *userdata;$/;"	m	struct:sftp_request	file:
userdata	sshzlib.c	/^    void *userdata;$/;"	m	struct:LZ77Context	file:
username	ssh.c	/^    char *username;$/;"	m	struct:ssh_tag	file:
usersid	windows/winsecur.c	/^static PSID worldsid, networksid, usersid;$/;"	v	file:
using	doc/Chapter3.html	/^<h1><a name="using"><\/a><a name="C3"><\/a>Chapter 3: Using PuTTY<\/h1>$/;"	a
using-changesettings	doc/Chapter3.html	/^<h4><a name="using-changesettings"><\/a><a name="S3.1.3.4"><\/a>3.1.3.4 <a name="i64"><\/a>Changing your session settings<\/h4>$/;"	a
using-cleanup	doc/Chapter3.html	/^<h3><a name="using-cleanup"><\/a><a name="S3.8.2"><\/a>3.8.2 <a name="i118"><\/a><code>-cleanup<\/code><\/h3>$/;"	a
using-cmdline	doc/Chapter3.html	/^<h2><a name="using-cmdline"><\/a><a name="S3.8"><\/a>3.8 The PuTTY command line<\/h2>$/;"	a
using-cmdline-agent	doc/Chapter3.html	/^<h4><a name="using-cmdline-agent"><\/a><a name="S3.8.3.10"><\/a>3.8.3.10 <a name="i156"><\/a><code>-A<\/code> and <a name="i157"><\/a><code>-a<\/code>: control <a name="i158"><\/a>agent forwarding<\/h4>$/;"	a
using-cmdline-agentauth	doc/Chapter3.html	/^<h4><a name="using-cmdline-agentauth"><\/a><a name="S3.8.3.9"><\/a>3.8.3.9 <a name="i153"><\/a><code>-agent<\/code> and <a name="i154"><\/a><code>-noagent<\/code>: control use of Pageant for authentication<\/h4>$/;"	a
using-cmdline-compress	doc/Chapter3.html	/^<h4><a name="using-cmdline-compress"><\/a><a name="S3.8.3.15"><\/a>3.8.3.15 <a name="i170"><\/a><code>-C<\/code>: enable <a name="i171"><\/a>compression<\/h4>$/;"	a
using-cmdline-hostkey	doc/Chapter3.html	/^<h4><a name="using-cmdline-hostkey"><\/a><a name="S3.8.3.20"><\/a>3.8.3.20 <a name="i189"><\/a><code>-hostkey<\/code>: <a name="i190"><\/a>manually specify an expected host key<\/h4>$/;"	a
using-cmdline-identity	doc/Chapter3.html	/^<h4><a name="using-cmdline-identity"><\/a><a name="S3.8.3.18"><\/a>3.8.3.18 <a name="i182"><\/a><code>-i<\/code>: specify an SSH <a name="i183"><\/a>private key<\/h4>$/;"	a
using-cmdline-ipversion	doc/Chapter3.html	/^<h4><a name="using-cmdline-ipversion"><\/a><a name="S3.8.3.17"><\/a>3.8.3.17 <a name="i177"><\/a><code>-4<\/code> and <a name="i178"><\/a><code>-6<\/code>: specify an <a name="i179"><\/a>Internet protocol version<\/h4>$/;"	a
using-cmdline-l	doc/Chapter3.html	/^<h4><a name="using-cmdline-l"><\/a><a name="S3.8.3.4"><\/a>3.8.3.4 <a name="i134"><\/a><code>-l<\/code>: specify a <a name="i135"><\/a>login name<\/h4>$/;"	a
using-cmdline-load	doc/Chapter3.html	/^<h4><a name="using-cmdline-load"><\/a><a name="S3.8.3.1"><\/a>3.8.3.1 <a name="i122"><\/a><code>-load<\/code>: load a saved session<\/h4>$/;"	a
using-cmdline-loghost	doc/Chapter3.html	/^<h4><a name="using-cmdline-loghost"><\/a><a name="S3.8.3.19"><\/a>3.8.3.19 <a name="i186"><\/a><code>-loghost<\/code>: specify a <a name="i187"><\/a>logical host name<\/h4>$/;"	a
using-cmdline-m	doc/Chapter3.html	/^<h4><a name="using-cmdline-m"><\/a><a name="S3.8.3.6"><\/a>3.8.3.6 <a name="i144"><\/a><code>-m<\/code>: <a name="i145"><\/a>read a remote command or script from a file<\/h4>$/;"	a
using-cmdline-ncmode	doc/Chapter3.html	/^<h4><a name="using-cmdline-ncmode"><\/a><a name="S3.8.3.14"><\/a>3.8.3.14 <a name="i168"><\/a><code>-nc<\/code>: make a <a name="i169"><\/a>remote network connection in place of a remote shell or command<\/h4>$/;"	a
using-cmdline-noshell	doc/Chapter3.html	/^<h4><a name="using-cmdline-noshell"><\/a><a name="S3.8.3.13"><\/a>3.8.3.13 <a name="i166"><\/a><code>-N<\/code>: suppress starting a <a name="i167"><\/a>shell or command<\/h4>$/;"	a
using-cmdline-p	doc/Chapter3.html	/^<h4><a name="using-cmdline-p"><\/a><a name="S3.8.3.7"><\/a>3.8.3.7 <a name="i149"><\/a><code>-P<\/code>: specify a <a name="i150"><\/a>port number<\/h4>$/;"	a
using-cmdline-pgpfp	doc/Chapter3.html	/^<h4><a name="using-cmdline-pgpfp"><\/a><a name="S3.8.3.21"><\/a>3.8.3.21 <a name="i192"><\/a><code>-pgpfp<\/code>: display <a name="i193"><\/a>PGP key fingerprints<\/h4>$/;"	a
using-cmdline-portfwd	doc/Chapter3.html	/^<h4><a name="using-cmdline-portfwd"><\/a><a name="S3.8.3.5"><\/a>3.8.3.5 <a name="i136"><\/a><code>-L<\/code>, <a name="i137"><\/a><code>-R<\/code> and <a name="i138"><\/a><code>-D<\/code>: set up <a name="i139"><\/a>port forwardings<\/h4>$/;"	a
using-cmdline-protocol	doc/Chapter3.html	/^<h4><a name="using-cmdline-protocol"><\/a><a name="S3.8.3.2"><\/a>3.8.3.2 Selecting a protocol: <code>-ssh<\/code>, <code>-telnet<\/code>, <code>-rlogin<\/code>, <code>-raw<\/code> <code>-serial<\/code><\/h4>$/;"	a
using-cmdline-proxycmd	doc/Chapter3.html	/^<h4><a name="using-cmdline-proxycmd"><\/a><a name="S3.8.3.24"><\/a>3.8.3.24 <a name="i201"><\/a><code>-proxycmd<\/code>: specify a local proxy command<\/h4>$/;"	a
using-cmdline-pty	doc/Chapter3.html	/^<h4><a name="using-cmdline-pty"><\/a><a name="S3.8.3.12"><\/a>3.8.3.12 <a name="i163"><\/a><code>-t<\/code> and <a name="i164"><\/a><code>-T<\/code>: control <a name="i165"><\/a>pseudo-terminal allocation<\/h4>$/;"	a
using-cmdline-pw	doc/Chapter3.html	/^<h4><a name="using-cmdline-pw"><\/a><a name="S3.8.3.8"><\/a>3.8.3.8 <a name="i151"><\/a><code>-pw<\/code>: specify a <a name="i152"><\/a>password<\/h4>$/;"	a
using-cmdline-restrict-acl	doc/Chapter3.html	/^<h4><a name="using-cmdline-restrict-acl"><\/a><a name="S3.8.3.25"><\/a>3.8.3.25 <a name="i203"><\/a><code>-restrict-acl<\/code>: restrict the <a name="i204"><\/a>Windows process ACL<\/h4>$/;"	a
using-cmdline-sercfg	doc/Chapter3.html	/^<h4><a name="using-cmdline-sercfg"><\/a><a name="S3.8.3.22"><\/a>3.8.3.22 <a name="i195"><\/a><code>-sercfg<\/code>: specify serial port <a name="i196"><\/a>configuration<\/h4>$/;"	a
using-cmdline-session	doc/Chapter3.html	/^<h3><a name="using-cmdline-session"><\/a><a name="S3.8.1"><\/a>3.8.1 Starting a session from the command line<\/h3>$/;"	a
using-cmdline-sshlog	doc/Chapter3.html	/^<h4><a name="using-cmdline-sshlog"><\/a><a name="S3.8.3.23"><\/a>3.8.3.23 <a name="i197"><\/a><code>-sessionlog<\/code>, <a name="i198"><\/a><code>-sshlog<\/code>, <a name="i199"><\/a><code>-sshrawlog<\/code>: specify session logging<\/h4>$/;"	a
using-cmdline-sshprot	doc/Chapter3.html	/^<h4><a name="using-cmdline-sshprot"><\/a><a name="S3.8.3.16"><\/a>3.8.3.16 <a name="i172"><\/a><code>-1<\/code> and <a name="i173"><\/a><code>-2<\/code>: specify an <a name="i174"><\/a>SSH protocol version<\/h4>$/;"	a
using-cmdline-v	doc/Chapter3.html	/^<h4><a name="using-cmdline-v"><\/a><a name="S3.8.3.3"><\/a>3.8.3.3 <a name="i132"><\/a><code>-v<\/code>: increase verbosity<\/h4>$/;"	a
using-cmdline-x11	doc/Chapter3.html	/^<h4><a name="using-cmdline-x11"><\/a><a name="S3.8.3.11"><\/a>3.8.3.11 <a name="i160"><\/a><code>-X<\/code> and <a name="i161"><\/a><code>-x<\/code>: control <a name="i162"><\/a>X11 forwarding<\/h4>$/;"	a
using-copyall	doc/Chapter3.html	/^<h4><a name="using-copyall"><\/a><a name="S3.1.3.5"><\/a>3.1.3.5 <a name="i66"><\/a>Copy All to Clipboard<\/h4>$/;"	a
using-eventlog	doc/Chapter3.html	/^<h4><a name="using-eventlog"><\/a><a name="S3.1.3.1"><\/a>3.1.3.1 The PuTTY <a name="i31"><\/a>Event Log<\/h4>$/;"	a
using-fullscreen	doc/Chapter3.html	/^<h4><a name="using-fullscreen"><\/a><a name="S3.1.3.7"><\/a>3.1.3.7 <a name="i73"><\/a>Full screen mode<\/h4>$/;"	a
using-general-opts	doc/Chapter3.html	/^<h3><a name="using-general-opts"><\/a><a name="S3.8.3"><\/a>3.8.3 Standard command-line options<\/h3>$/;"	a
using-logging	doc/Chapter3.html	/^<h2><a name="using-logging"><\/a><a name="S3.2"><\/a>3.2 Creating a <a name="i75"><\/a>log file of your <a name="i76"><\/a>session<\/h2>$/;"	a
using-newsession	doc/Chapter3.html	/^<h4><a name="using-newsession"><\/a><a name="S3.1.3.3"><\/a>3.1.3.3 Starting new sessions<\/h4>$/;"	a
using-port-forwarding	doc/Chapter3.html	/^<h2><a name="using-port-forwarding"><\/a><a name="S3.5"><\/a>3.5 Using <a name="i86"><\/a>port forwarding in SSH<\/h2>$/;"	a
using-rawprot	doc/Chapter3.html	/^<h2><a name="using-rawprot"><\/a><a name="S3.6"><\/a>3.6 Making <a name="i101"><\/a>raw TCP connections<\/h2>$/;"	a
using-scrollback	doc/Chapter3.html	/^<h3><a name="using-scrollback"><\/a><a name="S3.1.2"><\/a>3.1.2 <a name="i21"><\/a>Scrolling the screen back<\/h3>$/;"	a
using-selection	doc/Chapter3.html	/^<h3><a name="using-selection"><\/a><a name="S3.1.1"><\/a>3.1.1 Copying and pasting text<\/h3>$/;"	a
using-serial	doc/Chapter3.html	/^<h2><a name="using-serial"><\/a><a name="S3.7"><\/a>3.7 Connecting to a local serial line<\/h2>$/;"	a
using-session	doc/Chapter3.html	/^<h2><a name="using-session"><\/a><a name="S3.1"><\/a>3.1 During your session<\/h2>$/;"	a
using-specials	doc/Chapter3.html	/^<h4><a name="using-specials"><\/a><a name="S3.1.3.2"><\/a>3.1.3.2 <a name="i33"><\/a>Special commands<\/h4>$/;"	a
using-sysmenu	doc/Chapter3.html	/^<h3><a name="using-sysmenu"><\/a><a name="S3.1.3"><\/a>3.1.3 The <a name="i28"><\/a>System menu<\/h3>$/;"	a
using-translation	doc/Chapter3.html	/^<h2><a name="using-translation"><\/a><a name="S3.3"><\/a>3.3 Altering your <a name="i78"><\/a>character set configuration<\/h2>$/;"	a
using-x-forwarding	doc/Chapter3.html	/^<h2><a name="using-x-forwarding"><\/a><a name="S3.4"><\/a>3.4 Using <a name="i81"><\/a>X11 forwarding in SSH<\/h2>$/;"	a
using_sftp	pscp.c	/^static int using_sftp = 0;$/;"	v	file:
utf	terminal.h	/^    int utf;			       \/* Are we in toggleable UTF-8 mode? *\/$/;"	m	struct:terminal_tag
utf8_emit	charset/utf8.c	/^void utf8_emit(void *ctx, long output)$/;"	f
utf8_read_test	charset/utf8.c	/^void utf8_read_test(int line, char *input, int inlen, ...)$/;"	f
utf8_string_atom	unix/gtkwin.c	/^GdkAtom compound_text_atom, utf8_string_atom;$/;"	v
utf8_write_test	charset/utf8.c	/^void utf8_write_test(int line, const long *input, int inlen, ...)$/;"	f
utf_char	terminal.h	/^    int utf_char;		       \/* and what is it so far. *\/$/;"	m	struct:terminal_tag
utf_size	terminal.h	/^    int utf_size;		       \/* The size of the UTF character. *\/$/;"	m	struct:terminal_tag
utf_state	terminal.h	/^    int utf_state;		       \/* Is there a pending UTF-8 character *\/$/;"	m	struct:terminal_tag
utmp_entry	unix/uxpty.c	/^static struct utmpx utmp_entry;$/;"	v	typeref:struct:utmpx	file:
uxsel_callback_fn	unix/unix.h	/^typedef void (*uxsel_callback_fn)(int fd, int event);$/;"	t
uxsel_del	unix/uxsel.c	/^void uxsel_del(int fd)$/;"	f
uxsel_fd_cmp	unix/uxsel.c	/^static int uxsel_fd_cmp(void *av, void *bv)$/;"	f	file:
uxsel_fd_findcmp	unix/uxsel.c	/^static int uxsel_fd_findcmp(void *av, void *bv)$/;"	f	file:
uxsel_id	unix/gtkcomm.c	/^struct uxsel_id {$/;"	s	file:
uxsel_id	unix/unix.h	/^typedef struct uxsel_id uxsel_id;$/;"	t	typeref:struct:uxsel_id
uxsel_init	unix/uxsel.c	/^void uxsel_init(void)$/;"	f
uxsel_input_add	unix/gtkcomm.c	/^uxsel_id *uxsel_input_add(int fd, int rwx) {$/;"	f
uxsel_input_add	unix/uxpgnt.c	/^uxsel_id *uxsel_input_add(int fd, int rwx) { return NULL; }$/;"	f
uxsel_input_add	unix/uxplink.c	/^uxsel_id *uxsel_input_add(int fd, int rwx) { return NULL; }$/;"	f
uxsel_input_add	unix/uxsftp.c	/^uxsel_id *uxsel_input_add(int fd, int rwx) { return NULL; }$/;"	f
uxsel_input_remove	unix/gtkcomm.c	/^void uxsel_input_remove(uxsel_id *id) {$/;"	f
uxsel_input_remove	unix/uxpgnt.c	/^void uxsel_input_remove(uxsel_id *id) { }$/;"	f
uxsel_input_remove	unix/uxplink.c	/^void uxsel_input_remove(uxsel_id *id) { }$/;"	f
uxsel_input_remove	unix/uxsftp.c	/^void uxsel_input_remove(uxsel_id *id) { }$/;"	f
uxsel_set	unix/uxsel.c	/^void uxsel_set(int fd, int rwx, uxsel_callback_fn callback)$/;"	f
uxsel_tell	unix/uxnet.c	/^static void uxsel_tell(Actual_Socket s)$/;"	f	file:
v	putty.h	/^    int v;$/;"	m	struct:keyvalwhere
v	ssh.c	/^    } v;$/;"	m	struct:ssh_channel	typeref:union:ssh_channel::__anon78	file:
v1_cipher_ctx	ssh.c	/^    void *v1_cipher_ctx;$/;"	m	struct:ssh_tag	file:
v1_compressing	ssh.c	/^    int v1_compressing;$/;"	m	struct:ssh_tag	file:
v1_local_protoflags	ssh.c	/^    int v1_local_protoflags;$/;"	m	struct:ssh_tag	file:
v1_remote_protoflags	ssh.c	/^    int v1_remote_protoflags;$/;"	m	struct:ssh_tag	file:
v1_stdout_throttling	ssh.c	/^    int v1_stdout_throttling;$/;"	m	struct:ssh_tag	file:
v2	ssh.c	/^	} v2;$/;"	m	union:ssh_channel::__anon78	typeref:struct:ssh_channel::__anon78::ssh2_data_channel	file:
v2_outgoing_sequence	ssh.c	/^    unsigned long v2_outgoing_sequence;$/;"	m	struct:ssh_tag	file:
v2_session_id	ssh.c	/^    unsigned char v2_session_id[SSH2_KEX_MAX_HASH_LEN];$/;"	m	struct:ssh_tag	file:
v2_session_id_len	ssh.c	/^    int v2_session_id_len;$/;"	m	struct:ssh_tag	file:
v_c	ssh.c	/^    char *v_c, *v_s;$/;"	m	struct:ssh_tag	file:
v_s	ssh.c	/^    char *v_c, *v_s;$/;"	m	struct:ssh_tag	file:
val2key	settings.c	/^static const char *val2key(const struct keyvalwhere *mapping,$/;"	f	file:
valbox	config.c	/^    union control *valradio, *valbox, *setbutton, *listbox;$/;"	m	struct:ttymodes_data	typeref:union:ttymodes_data::	file:
valbox	config.c	/^    union control *varbox, *valbox, *addbutton, *rembutton, *listbox;$/;"	m	struct:environ_data	typeref:union:environ_data::	file:
validate_manual_hostkey	misc.c	/^int validate_manual_hostkey(char *key)$/;"	f
valradio	config.c	/^    union control *valradio, *valbox, *setbutton, *listbox;$/;"	m	struct:ttymodes_data	typeref:union:ttymodes_data::control	file:
value	cmdline.c	/^    char *p, *value;$/;"	m	struct:cmdline_saved_param	file:
value	conf.c	/^    struct value value;$/;"	m	struct:conf_entry	typeref:struct:conf_entry::value	file:
value	conf.c	/^struct value {$/;"	s	file:
value	pgssapi.h	/^    void *value;$/;"	m	struct:gss_buffer_desc_struct
value	unix/uxstore.c	/^    const char *value;$/;"	m	struct:skeyval	file:
valuetypes	conf.c	/^static int valuetypes[] = { CONFIG_OPTIONS(CONF_VALUETYPE_DEF) };$/;"	v	file:
varbox	config.c	/^    union control *varbox, *valbox, *addbutton, *rembutton, *listbox;$/;"	m	struct:environ_data	typeref:union:environ_data::control	file:
variable	unix/gtkfont.c	/^    int variable;$/;"	m	struct:x11font	file:
variable_pitch_handler	windows/wincfg.c	/^static void variable_pitch_handler(union control *ctrl, void *dlg,$/;"	f	file:
vbell_end	terminal.h	/^    long vbell_end;$/;"	m	struct:terminal_tag
ver	version.c	/^const char ver[] = TEXTVER;$/;"	v
verBreton	charset/macenc.c	70;"	d	file:
verBulgaria	charset/macenc.c	67;"	d	file:
verCroatia	charset/macenc.c	66;"	d	file:
verFaroeIsl	charset/macenc.c	62;"	d	file:
verGreece	charset/macenc.c	57;"	d	file:
verIceland	charset/macenc.c	58;"	d	file:
verIran	charset/macenc.c	63;"	d	file:
verIrishGaelicScript	charset/macenc.c	73;"	d	file:
verManxGaelic	charset/macenc.c	69;"	d	file:
verNunavut	charset/macenc.c	71;"	d	file:
verRomania	charset/macenc.c	61;"	d	file:
verRussia	charset/macenc.c	64;"	d	file:
verScottishGaelic	charset/macenc.c	68;"	d	file:
verSlovenian	charset/macenc.c	65;"	d	file:
verTurkey	charset/macenc.c	59;"	d	file:
verWelsh	charset/macenc.c	72;"	d	file:
verYugoCroatian	charset/macenc.c	60;"	d	file:
verbose	pscp.c	/^static int verbose = 0;$/;"	v	file:
verbose	psftp.c	/^static int verbose = 0;$/;"	v	file:
verbosely	mksrcarc.sh	/^verbosely() {$/;"	f
verified	x11fwd.c	/^    int verified;$/;"	m	struct:X11Connection	file:
verify	ssh.h	/^    int (*verify) (void *, unsigned char *blk, int len, unsigned long seq);$/;"	m	struct:ssh_mac
verify	tree234.c	/^void verify(void)$/;"	f
verify_host_key	unix/uxstore.c	/^int verify_host_key(const char *hostname, int port,$/;"	f
verify_host_key	windows/winstore.c	/^int verify_host_key(const char *hostname, int port,$/;"	f
verify_ssh_host_key	unix/gtkdlg.c	/^int verify_ssh_host_key(void *frontend, char *host, int port,$/;"	f
verify_ssh_host_key	unix/uxcons.c	/^int verify_ssh_host_key(void *frontend, char *host, int port,$/;"	f
verify_ssh_host_key	windows/wincons.c	/^int verify_ssh_host_key(void *frontend, char *host, int port,$/;"	f
verify_ssh_host_key	windows/windlg.c	/^int verify_ssh_host_key(void *frontend, char *host, int port,$/;"	f
verify_ssh_manual_host_key	ssh.c	/^int verify_ssh_manual_host_key(Ssh ssh, const char *fingerprint,$/;"	f
verifysig	ssh.h	/^    int (*verifysig) (void *key, const char *sig, int siglen,$/;"	m	struct:ssh_signkey
verresult	ssh.h	/^    int (*verresult) (void *, unsigned char const *);$/;"	m	struct:ssh_mac
version	pscp.c	/^void version(void)$/;"	f
version	psftp.c	/^static void version(void)$/;"	f	file:
version	ssh.c	/^    int version;$/;"	m	struct:ssh_tag	file:
version	unix/gtkmain.c	/^static void version(FILE *fp) {$/;"	f	file:
version	unix/uxpgnt.c	/^static void version(void)$/;"	f	file:
version	unix/uxplink.c	/^static void version(void)$/;"	f	file:
version	windows/winplink.c	/^static void version(void)$/;"	f	file:
vet_filename	unix/uxsftp.c	/^int vet_filename(const char *name)$/;"	f
vet_filename	windows/winsftp.c	/^int vet_filename(const char *name)$/;"	f
visually_acknowledge_keypress	unix/gtkask.c	/^static void visually_acknowledge_keypress(struct askpass_ctx *ctx)$/;"	f	file:
vorpal_sword	version.c	/^enum { vorpal_sword = 1 \/ (sizeof(sshver) <= 40) };$/;"	e	enum:__anon131	file:
vrel	putty.h	/^    int vrel;$/;"	m	struct:keyvalwhere
vscii	windows/winucs.c	/^static const wchar_t vscii[] = {$/;"	v	file:
vsnprintf	misc.c	415;"	d	file:
vt	unix/gtkfont.h	/^    const struct unifont_vtable *vt;$/;"	m	struct:unifont	typeref:struct:unifont::unifont_vtable
vt52_bold	terminal.h	/^    int vt52_bold;		       \/* Force bold on non-bold colours *\/$/;"	m	struct:terminal_tag
vt52_mode	terminal.h	/^    int app_cursor_keys, app_keypad_keys, vt52_mode;$/;"	m	struct:terminal_tag
vtmode	windows/window.c	/^int vtmode;$/;"	v
w	ssh.h	/^        struct ec_wcurve w;$/;"	m	union:ec_curve::__anon91	typeref:struct:ec_curve::__anon91::ec_wcurve
w	sshccp.c	/^    BignumInt w[NWORDS];$/;"	m	struct:bigval	file:
w	unix/gtkcols.h	/^    gint x, y, w, h;           \/* used during an individual size computation *\/$/;"	m	struct:ColumnsChild_tag
wParam	windows/window.c	/^    WPARAM wParam;$/;"	m	struct:wm_netevent_params	file:
waitcursor	unix/gtkwin.c	/^    GdkCursor *rawcursor, *textcursor, *blankcursor, *waitcursor, *currcursor;$/;"	m	struct:gui_data	file:
want_fallback	unix/gtkfont.h	/^    int want_fallback;$/;"	m	struct:unifont
want_reply	sshshare.c	/^    int want_reply;$/;"	m	struct:share_globreq	file:
warn	contrib/kh2reg.py	/^def warn(s):$/;"	f
warn	ssh.c	/^	    int warn;$/;"	m	struct:kexinit_algorithm::__anon83::__anon84	file:
warn	ssh.c	/^	    int warn;$/;"	m	struct:kexinit_algorithm::__anon83::__anon86	file:
warn	ssh.c	/^            int warn;$/;"	m	struct:kexinit_algorithm::__anon83::__anon85	file:
was_zoomed	windows/window.c	/^static int was_zoomed = 0;$/;"	v	file:
watch_id	unix/gtkcomm.c	/^    guint watch_id;$/;"	m	struct:uxsel_id	file:
wc	minibidi.c	/^    unsigned int origwc, wc;$/;"	m	struct:bidi_char	file:
wc	putty.h	/^    unsigned int origwc, wc;$/;"	m	struct:bidi_char
wcFrom	terminal.h	/^    bidi_char *wcFrom, *wcTo;$/;"	m	struct:terminal_tag
wcFromTo_size	terminal.h	/^    int wcFromTo_size;$/;"	m	struct:terminal_tag
wcTo	terminal.h	/^    bidi_char *wcFrom, *wcTo;$/;"	m	struct:terminal_tag
wc_error	wildcard.c	/^const char *wc_error(int value)$/;"	f
wc_match	wildcard.c	/^int wc_match(const char *wildcard, const char *target)$/;"	f
wc_match_fragment	wildcard.c	/^static int wc_match_fragment(const char **fragment, const char **target)$/;"	f	file:
wc_to_mb	unix/uxucs.c	/^int wc_to_mb(int codepage, int flags, const wchar_t *wcstr, int wclen,$/;"	f
wc_to_mb	windows/winucs.c	/^int wc_to_mb(int codepage, int flags, const wchar_t *wcstr, int wclen,$/;"	f
wc_unescape	wildcard.c	/^int wc_unescape(char *output, const char *wildcard)$/;"	f
whead	contrib/cygtermd/sel.c	/^    sel_wfd *whead, *wtail;$/;"	m	struct:sel	file:
wheel_accumulator	windows/window.c	/^static int wheel_accumulator = 0;$/;"	v	file:
when_set	pinger.c	/^    unsigned long when_set, next;$/;"	m	struct:pinger_tag	file:
when_set	timing.c	/^    unsigned long when_set;$/;"	m	struct:timer	file:
where	putty.h	/^    int where;$/;"	m	struct:keyvalwhere
which-one	doc/Chapter1.html	/^<h2><a name="which-one"><\/a><a name="S1.2"><\/a>1.2 How do SSH, Telnet and Rlogin differ?<\/h2>$/;"	a
wide	unix/gtkfont.c	/^    int wide, bold, shadowoffset, shadowalways;$/;"	m	struct:x11font	file:
widget	unix/gtkcols.h	/^    GtkWidget *widget;$/;"	m	struct:ColumnsChild_tag
widget	unix/gtkdlg.c	/^    GtkWidget *widget;$/;"	m	struct:Shortcut	file:
widget	unix/gtkfont.c	/^    GtkWidget *widget;$/;"	m	struct:pangofont	file:
widget	unix/gtkfont.h	/^            GtkWidget *widget;$/;"	m	struct:unifont_drawctx::__anon127::__anon129
widget_dim_fn_t	unix/gtkcols.c	/^typedef gint (*widget_dim_fn_t)(ColumnsChild *child);$/;"	t	file:
widget_focus	unix/gtkdlg.c	/^static gboolean widget_focus(GtkWidget *widget, GdkEventFocus *event,$/;"	f	file:
width	terminal.h	/^    int width;$/;"	m	struct:bidi_cache_entry
width	unix/gtkask.c	/^    int width, height, current;$/;"	m	struct:drawing_area_ctx	file:
width	unix/gtkfont.c	/^    int (*width)(unifont_drawctx *ctx, x11font_individual *xfi,$/;"	m	struct:x11font_drawfuncs	file:
width	unix/gtkfont.h	/^    int width, height, ascent, descent;$/;"	m	struct:unifont
width	unix/gtkwin.c	/^    int width, height;$/;"	m	struct:gui_data	file:
width	windows/winstuff.h	/^    int ypos, width;$/;"	m	struct:ctlpos
widthcache	unix/gtkfont.c	/^    int *widthcache;$/;"	m	struct:pangofont	file:
wildcard	pscp.c	/^    char *wildcard;$/;"	m	struct:scp_sftp_dirstack	file:
wildcard	psftp.c	/^    char *wildcard, *prefix;$/;"	m	struct:SftpWildcardMatcher	file:
wildcard	wildcard.c	/^    const char *wildcard;$/;"	m	struct:test	file:
wildcard_get_filename	unix/uxsftp.c	/^char *wildcard_get_filename(WildcardMatcher *dir) {$/;"	f
wildcard_get_filename	windows/winsftp.c	/^char *wildcard_get_filename(WildcardMatcher *dir)$/;"	f
wildcard_iterate	psftp.c	/^int wildcard_iterate(char *filename, int (*func)(void *, char *), void *ctx)$/;"	f
win	sshzlib.c	/^    struct WindowEntry win[WINSIZE];$/;"	m	struct:LZ77InternalContext	typeref:struct:LZ77InternalContext::WindowEntry	file:
winSsh_gss_ctx	windows/wingss.c	/^typedef struct winSsh_gss_ctx {$/;"	s	file:
winSsh_gss_ctx	windows/wingss.c	/^} winSsh_gss_ctx;$/;"	t	typeref:struct:winSsh_gss_ctx	file:
win_actions	unix/gtkapp.c	/^static const GActionEntry win_actions[] = {$/;"	v	file:
win_add_keyfile	windows/winpgnt.c	/^static void win_add_keyfile(Filename *filename)$/;"	f	file:
win_key_press	unix/gtkdlg.c	/^int win_key_press(GtkWidget *widget, GdkEventKey *event, gpointer data)$/;"	f
win_setup_config_box	windows/wincfg.c	/^void win_setup_config_box(struct controlbox *b, HWND *hwndp, int has_help,$/;"	f
win_strerror	windows/winmisc.c	/^const char *win_strerror(int error)$/;"	f
wincrypt_module	windows/winnoise.c	/^static HMODULE wincrypt_module = NULL;$/;"	v	file:
winctrl	windows/winstuff.h	/^struct winctrl {$/;"	s
winctrl_add	windows/winctrls.c	/^void winctrl_add(struct winctrls *wc, struct winctrl *c)$/;"	f
winctrl_add_shortcuts	windows/winctrls.c	/^void winctrl_add_shortcuts(struct dlgparam *dp, struct winctrl *c)$/;"	f
winctrl_cleanup	windows/winctrls.c	/^void winctrl_cleanup(struct winctrls *wc)$/;"	f
winctrl_cmp_byctrl	windows/winctrls.c	/^static int winctrl_cmp_byctrl(void *av, void *bv)$/;"	f	file:
winctrl_cmp_byctrl_find	windows/winctrls.c	/^static int winctrl_cmp_byctrl_find(void *av, void *bv)$/;"	f	file:
winctrl_cmp_byid	windows/winctrls.c	/^static int winctrl_cmp_byid(void *av, void *bv)$/;"	f	file:
winctrl_cmp_byid_find	windows/winctrls.c	/^static int winctrl_cmp_byid_find(void *av, void *bv)$/;"	f	file:
winctrl_context_help	windows/winctrls.c	/^int winctrl_context_help(struct dlgparam *dp, HWND hwnd, int id)$/;"	f
winctrl_findbyctrl	windows/winctrls.c	/^struct winctrl *winctrl_findbyctrl(struct winctrls *wc, union control *ctrl)$/;"	f
winctrl_findbyid	windows/winctrls.c	/^struct winctrl *winctrl_findbyid(struct winctrls *wc, int id)$/;"	f
winctrl_findbyindex	windows/winctrls.c	/^struct winctrl *winctrl_findbyindex(struct winctrls *wc, int index)$/;"	f
winctrl_handle_command	windows/winctrls.c	/^int winctrl_handle_command(struct dlgparam *dp, UINT msg,$/;"	f
winctrl_init	windows/winctrls.c	/^void winctrl_init(struct winctrls *wc)$/;"	f
winctrl_layout	windows/winctrls.c	/^void winctrl_layout(struct dlgparam *dp, struct winctrls *wc,$/;"	f
winctrl_rem_shortcuts	windows/winctrls.c	/^void winctrl_rem_shortcuts(struct dlgparam *dp, struct winctrl *c)$/;"	f
winctrl_remove	windows/winctrls.c	/^void winctrl_remove(struct winctrls *wc, struct winctrl *c)$/;"	f
winctrl_set_focus	windows/winctrls.c	/^static void winctrl_set_focus(union control *ctrl, struct dlgparam *dp,$/;"	f	file:
winctrls	windows/winstuff.h	/^struct winctrls {$/;"	s
window	sshshare.c	/^    int window;$/;"	m	struct:share_xchannel	file:
window	sshzlib.c	/^    unsigned char window[WINSIZE];$/;"	m	struct:zlib_decompress_ctx	file:
window	unix/gtkdlg.c	/^    GtkWidget *parentwin, *window;$/;"	m	struct:eventlog_stuff	file:
window	unix/gtkdlg.c	/^    GtkWidget *window, *cancelbutton;$/;"	m	struct:dlgparam	file:
window	unix/gtkfont.h	/^    GtkWindow *window;$/;"	m	struct:unifontsel
window	unix/gtkwin.c	/^    GtkWidget *window, *area, *sbar;$/;"	m	struct:gui_data	file:
window_border	unix/gtkwin.c	/^    int window_border;$/;"	m	struct:gui_data	file:
window_destroy	unix/gtkdlg.c	/^static void window_destroy(GtkWidget *widget, gpointer data)$/;"	f	file:
window_name	windows/window.c	/^static char *window_name, *icon_name;$/;"	v	file:
window_update_pending	terminal.h	/^    int window_update_pending;$/;"	m	struct:terminal_tag
winmungestr	contrib/kh2reg.py	/^def winmungestr(s):$/;"	f
winpos	sshzlib.c	/^    int winpos;$/;"	m	struct:LZ77InternalContext	file:
winpos	sshzlib.c	/^    int winpos;$/;"	m	struct:zlib_decompress_ctx	file:
winsock2_module	windows/winnet.c	/^static HMODULE winsock2_module = NULL;$/;"	v	file:
winsock_error_string	windows/winnet.c	/^const char *winsock_error_string(int error)$/;"	f
winsock_module	windows/winnet.c	/^static HMODULE winsock_module = NULL;$/;"	v	file:
wintitle	unix/gtkwin.c	/^    char *wintitle;$/;"	m	struct:gui_data	file:
wintitle	windows/winstuff.h	/^    char *wintitle;		       \/* title of actual window *\/$/;"	m	struct:dlgparam
wm_mousewheel	windows/window.c	/^static UINT wm_mousewheel = WM_MOUSEWHEEL;$/;"	v	file:
wm_netevent_callback	windows/window.c	/^static void wm_netevent_callback(void *vctx)$/;"	f	file:
wm_netevent_params	windows/window.c	/^struct wm_netevent_params {$/;"	s	file:
wmap	settings.c	/^static void wmap(void *handle, char const *outkey, Conf *conf, int primary,$/;"	f	file:
word32	ssh.h	/^typedef uint32 word32;$/;"	t
wordness	terminal.h	/^    short wordness[256];$/;"	m	struct:terminal_tag
words	psftp.c	/^    char **words;$/;"	m	struct:sftp_command	file:
wordssize	psftp.c	/^    int nwords, wordssize;$/;"	m	struct:sftp_command	file:
wordtype	terminal.c	/^static int wordtype(Terminal *term, int uc)$/;"	f	file:
worldsid	windows/winsecur.c	/^static PSID worldsid, networksid, usersid;$/;"	v	file:
wprefs	settings.c	/^static void wprefs(void *sesskey, const char *name,$/;"	f	file:
wrap	terminal.h	/^    int wrap, wrapnext;		       \/* wrap flags *\/$/;"	m	struct:terminal_tag
wrap_send_port_open	portfwd.c	/^static void wrap_send_port_open(void *channel, const char *hostname, int port,$/;"	f	file:
wrapnext	terminal.h	/^    int wrap, wrapnext;		       \/* wrap flags *\/$/;"	m	struct:terminal_tag
writable	unix/uxnet.c	/^    int writable;$/;"	m	struct:Socket_tag	file:
writable	windows/winnet.c	/^    int writable;$/;"	m	struct:Socket_tag	file:
write	charset/internal.h	/^    void (*write)(charset_spec const *charset, long int input_chr,$/;"	m	struct:charset_spec
write	network.h	/^    int (*write) (Socket s, const char *data, int len);$/;"	m	struct:socket_function_table
write_aclip	windows/window.c	/^void write_aclip(void *frontend, char *data, int len, int must_deselect)$/;"	f
write_bigval	contrib/make1305.py	/^    def write_bigval(self, name, val):$/;"	m	class:CodegenTarget
write_clip	fuzzterm.c	/^void write_clip(void *frontend, wchar_t *a, int *b, int c, int d) { }$/;"	f
write_clip	unix/gtkwin.c	/^void write_clip(void *frontend, wchar_t *data, int *attr, int len,$/;"	f
write_clip	windows/window.c	/^void write_clip(void *frontend, wchar_t * data, int *attr, int len, int must_deselect)$/;"	f
write_eof	network.h	/^    void (*write_eof) (Socket s);$/;"	m	struct:socket_function_table
write_oob	network.h	/^    int (*write_oob) (Socket s, const char *data, int len);$/;"	m	struct:socket_function_table
write_random_seed	unix/uxstore.c	/^void write_random_seed(void *data, int len)$/;"	f
write_random_seed	windows/winstore.c	/^void write_random_seed(void *data, int len)$/;"	f
write_sbcs	charset/sbcs.c	/^void write_sbcs(charset_spec const *charset, long int input_chr,$/;"	f
write_setting_filename	unix/uxstore.c	/^void write_setting_filename(void *handle, const char *name, Filename *result)$/;"	f
write_setting_filename	windows/winstore.c	/^void write_setting_filename(void *handle, const char *name, Filename *result)$/;"	f
write_setting_fontspec	unix/uxstore.c	/^void write_setting_fontspec(void *handle, const char *name, FontSpec *fs)$/;"	f
write_setting_fontspec	windows/winstore.c	/^void write_setting_fontspec(void *handle, const char *name, FontSpec *font)$/;"	f
write_setting_i	unix/uxstore.c	/^void write_setting_i(void *handle, const char *key, int value)$/;"	f
write_setting_i	windows/winstore.c	/^void write_setting_i(void *handle, const char *key, int value)$/;"	f
write_setting_s	unix/uxstore.c	/^void write_setting_s(void *handle, const char *key, const char *value)$/;"	f
write_setting_s	windows/winstore.c	/^void write_setting_s(void *handle, const char *key, const char *value)$/;"	f
write_to_file	unix/uxsftp.c	/^int write_to_file(WFile *f, void *buffer, int length)$/;"	f
write_to_file	windows/winsftp.c	/^int write_to_file(WFile *f, void *buffer, int length)$/;"	f
write_utf8	charset/utf8.c	/^void write_utf8(charset_spec const *charset, long int input_chr,$/;"	f
writeerr	contrib/cygtermd/sel.c	/^    sel_writeerr_fn_t writeerr;$/;"	m	struct:sel_wfd	file:
writeerr	windows/winhandl.c	/^    int writeerr;		       \/* return value from WriteFile *\/$/;"	m	struct:handle_output	file:
written	contrib/cygtermd/sel.c	/^    sel_written_fn_t written;$/;"	m	struct:sel_wfd	file:
wsadata	windows/winnet.c	/^static WSADATA wsadata;$/;"	v	file:
wship6_module	windows/winnet.c	/^static HMODULE wship6_module = NULL;$/;"	v	file:
wtail	contrib/cygtermd/sel.c	/^    sel_wfd *whead, *wtail;$/;"	m	struct:sel	file:
x	ssh.h	/^    Bignum p, q, g, y, x;$/;"	m	struct:dss_key
x	ssh.h	/^    Bignum x, y;$/;"	m	struct:ec_point
x	sshdh.c	/^    Bignum x, e, p, q, qmask, g;$/;"	m	struct:dh_ctx	file:
x	terminal.h	/^    int y, x;$/;"	m	struct:__anon109
x	unix/gtkcols.h	/^    gint x, y, w, h;           \/* used during an individual size computation *\/$/;"	m	struct:ColumnsChild_tag
x11	ssh.c	/^	} x11;$/;"	m	union:ssh_channel::__anon80	typeref:struct:ssh_channel::__anon80::ssh_x11_channel	file:
x11_alloc_subfont	unix/gtkfont.c	/^static void x11_alloc_subfont(struct x11font *xfont, int sfid)$/;"	f	file:
x11_auth_data	sshshare.c	/^    char *x11_auth_data;$/;"	m	struct:share_channel	file:
x11_auth_datalen	sshshare.c	/^    int x11_auth_datalen;$/;"	m	struct:share_channel	file:
x11_auth_proto	sshshare.c	/^    int x11_auth_proto;$/;"	m	struct:share_channel	file:
x11_auth_upstream	sshshare.c	/^    struct X11FakeAuth *x11_auth_upstream;$/;"	m	struct:share_channel	typeref:struct:share_channel::X11FakeAuth	file:
x11_authcmp	x11fwd.c	/^int x11_authcmp(void *av, void *bv)$/;"	f
x11_authnames	x11fwd.c	/^const char *const x11_authnames[] = {$/;"	v
x11_char_struct	unix/gtkfont.c	/^static const XCharStruct *x11_char_struct($/;"	f	file:
x11_close	x11fwd.c	/^void x11_close(struct X11Connection *xconn)$/;"	f
x11_closing	unix/uxpgnt.c	/^static void x11_closing(Plug plug, const char *error_msg, int error_code,$/;"	f	file:
x11_closing	x11fwd.c	/^static void x11_closing(Plug plug, const char *error_msg, int error_code,$/;"	f	file:
x11_dehexify	x11fwd.c	/^void *x11_dehexify(const char *hex, int *outlen)$/;"	f
x11_err_to_ignore	unix/x11misc.c	/^struct x11_err_to_ignore {$/;"	s	file:
x11_error_handler	unix/x11misc.c	/^static int x11_error_handler(Display *thisdisp, XErrorEvent *err)$/;"	f	file:
x11_font_has_glyph	unix/gtkfont.c	/^static int x11_font_has_glyph($/;"	f	file:
x11_font_width	unix/gtkfont.c	/^static int x11_font_width(XFontStruct *xfs, int sixteen_bit)$/;"	f	file:
x11_free_display	x11fwd.c	/^void x11_free_display(struct X11Display *disp)$/;"	f
x11_free_fake_auth	x11fwd.c	/^void x11_free_fake_auth(struct X11FakeAuth *auth)$/;"	f
x11_get_auth_from_authfile	x11fwd.c	/^void x11_get_auth_from_authfile(struct X11Display *disp,$/;"	f
x11_get_screen_number	x11fwd.c	/^int x11_get_screen_number(char *display)$/;"	f
x11_guess_derived_font_name	unix/gtkfont.c	/^static char *x11_guess_derived_font_name(XFontStruct *xfs, int bold, int wide)$/;"	f	file:
x11_identify_auth_proto	x11fwd.c	/^int x11_identify_auth_proto(const char *protoname)$/;"	f
x11_ignore_error	unix/x11misc.c	/^void x11_ignore_error(Display *disp, unsigned char errcode)$/;"	f
x11_init	x11fwd.c	/^struct X11Connection *x11_init(tree234 *authtree, void *c,$/;"	f
x11_invent_fake_auth	x11fwd.c	/^struct X11FakeAuth *x11_invent_fake_auth(tree234 *authtree, int authtype)$/;"	f
x11_log	unix/uxpgnt.c	/^static void x11_log(Plug p, int type, SockAddr addr, int port,$/;"	f	file:
x11_log	x11fwd.c	/^static void x11_log(Plug p, int type, SockAddr addr, int port,$/;"	f	file:
x11_make_greeting	x11fwd.c	/^void *x11_make_greeting(int endian, int protomajor, int protominor,$/;"	f
x11_one_shot	sshshare.c	/^    int x11_one_shot;$/;"	m	struct:share_channel	file:
x11_override_throttle	x11fwd.c	/^void x11_override_throttle(struct X11Connection *xconn, int enable)$/;"	f
x11_parse_ip	x11fwd.c	/^static int x11_parse_ip(const char *addr_string, unsigned long *ip)$/;"	f	file:
x11_receive	unix/uxpgnt.c	/^static void x11_receive(Plug plug, int urgent, char *data, int len) {}$/;"	f	file:
x11_receive	x11fwd.c	/^static void x11_receive(Plug plug, int urgent, char *data, int len)$/;"	f	file:
x11_send	x11fwd.c	/^int x11_send(struct X11Connection *xconn, char *data, int len)$/;"	f
x11_send_eof	x11fwd.c	/^void x11_send_eof(struct X11Connection *xconn)$/;"	f
x11_send_init_error	x11fwd.c	/^static void x11_send_init_error(struct X11Connection *xconn,$/;"	f	file:
x11_sent	unix/uxpgnt.c	/^static void x11_sent(Plug plug, int bufsize) {}$/;"	f	file:
x11_sent	x11fwd.c	/^static void x11_sent(Plug plug, int bufsize)$/;"	f	file:
x11_setup_display	x11fwd.c	/^struct X11Display *x11_setup_display(const char *display, Conf *conf)$/;"	f
x11_unthrottle	x11fwd.c	/^void x11_unthrottle(struct X11Connection *xconn)$/;"	f
x11_verify	x11fwd.c	/^static const char *x11_verify(unsigned long peer_ip, int peer_port,$/;"	f	file:
x11auth	ssh.c	/^    struct X11FakeAuth *x11auth;$/;"	m	struct:ssh_tag	typeref:struct:ssh_tag::X11FakeAuth	file:
x11authtree	ssh.c	/^    tree234 *x11authtree;$/;"	m	struct:ssh_tag	file:
x11disp	ssh.c	/^    struct X11Display *x11disp;$/;"	m	struct:ssh_tag	typeref:struct:ssh_tag::X11Display	file:
x11font	unix/gtkfont.c	/^struct x11font {$/;"	s	file:
x11font_cairo_cache_glyph	unix/gtkfont.c	/^static void x11font_cairo_cache_glyph(x11font_individual *xfi, int glyphindex)$/;"	f	file:
x11font_cairo_draw_16	unix/gtkfont.c	/^static void x11font_cairo_draw_16(unifont_drawctx *ctx,$/;"	f	file:
x11font_cairo_draw_8	unix/gtkfont.c	/^static void x11font_cairo_draw_8(unifont_drawctx *ctx,$/;"	f	file:
x11font_cairo_draw_glyph	unix/gtkfont.c	/^static void x11font_cairo_draw_glyph(unifont_drawctx *ctx,$/;"	f	file:
x11font_cairo_setup	unix/gtkfont.c	/^static void x11font_cairo_setup(unifont_drawctx *ctx, x11font_individual *xfi)$/;"	f	file:
x11font_canonify_fontname	unix/gtkfont.c	/^static char *x11font_canonify_fontname(GtkWidget *widget, const char *name,$/;"	f	file:
x11font_create	unix/gtkfont.c	/^static unifont *x11font_create(GtkWidget *widget, const char *name,$/;"	f	file:
x11font_destroy	unix/gtkfont.c	/^static void x11font_destroy(unifont *font)$/;"	f	file:
x11font_draw_combining	unix/gtkfont.c	/^static void x11font_draw_combining(unifont_drawctx *ctx, unifont *font,$/;"	f	file:
x11font_draw_text	unix/gtkfont.c	/^static void x11font_draw_text(unifont_drawctx *ctx, unifont *font,$/;"	f	file:
x11font_drawfuncs	unix/gtkfont.c	/^static const struct x11font_drawfuncs x11font_drawfuncs[2*DRAWTYPE_NTYPES] = {$/;"	v	typeref:struct:x11font_drawfuncs	file:
x11font_drawfuncs	unix/gtkfont.c	/^struct x11font_drawfuncs {$/;"	s	file:
x11font_enum_fonts	unix/gtkfont.c	/^static void x11font_enum_fonts(GtkWidget *widget,$/;"	f	file:
x11font_gdk_draw_16	unix/gtkfont.c	/^static void x11font_gdk_draw_16(unifont_drawctx *ctx,$/;"	f	file:
x11font_gdk_draw_8	unix/gtkfont.c	/^static void x11font_gdk_draw_8(unifont_drawctx *ctx,$/;"	f	file:
x11font_gdk_setup	unix/gtkfont.c	/^static void x11font_gdk_setup(unifont_drawctx *ctx, x11font_individual *xfi)$/;"	f	file:
x11font_has_glyph	unix/gtkfont.c	/^static int x11font_has_glyph(unifont *font, wchar_t glyph)$/;"	f	file:
x11font_individual	unix/gtkfont.c	/^typedef struct x11font_individual {$/;"	s	file:
x11font_individual	unix/gtkfont.c	/^} x11font_individual;$/;"	t	typeref:struct:x11font_individual	file:
x11font_really_draw_text	unix/gtkfont.c	/^static void x11font_really_draw_text(const struct x11font_drawfuncs *dfns,$/;"	f	file:
x11font_scale_fontname	unix/gtkfont.c	/^static char *x11font_scale_fontname(GtkWidget *widget, const char *name,$/;"	f	file:
x11font_size_increment	unix/gtkfont.c	/^static char *x11font_size_increment(unifont *font, int increment)$/;"	f	file:
x11font_vtable	unix/gtkfont.c	/^static const struct unifont_vtable x11font_vtable = {$/;"	v	typeref:struct:unifont_vtable	file:
x11font_width_16	unix/gtkfont.c	/^static int x11font_width_16(unifont_drawctx *ctx, x11font_individual *xfi,$/;"	f	file:
x11font_width_8	unix/gtkfont.c	/^static int x11font_width_8(unifont_drawctx *ctx, x11font_individual *xfi,$/;"	f	file:
xEOF	contrib/cygtermd/telnet.c	42;"	d	file:
xEOF	telnet.c	38;"	d	file:
x_get_default	cmdgen.c	/^char *x_get_default(const char *key)$/;"	f
x_get_default	fuzzterm.c	/^char *x_get_default(const char *key)$/;"	f
x_get_default	unix/gtkapp.c	/^char *x_get_default(const char *key) { return NULL; }$/;"	f
x_get_default	unix/gtkmain.c	/^char *x_get_default(const char *key)$/;"	f
x_get_default	unix/uxpgnt.c	/^char *x_get_default(const char *key) { return NULL; }$/;"	f
x_get_default	unix/uxplink.c	/^char *x_get_default(const char *key)$/;"	f
x_get_default	unix/uxsftp.c	/^char *x_get_default(const char *key)$/;"	f
xa1_firstblock	ssh.h	/^    unsigned char *xa1_firstblock;$/;"	m	struct:X11FakeAuth
xchannels_by_server	sshshare.c	/^    tree234 *xchannels_by_server; \/* stores 'struct share_xchannel' *\/$/;"	m	struct:ssh_sharing_connstate	file:
xchannels_by_us	sshshare.c	/^    tree234 *xchannels_by_us;     \/* stores 'struct share_xchannel' *\/$/;"	m	struct:ssh_sharing_connstate	file:
xconn	ssh.c	/^	    struct X11Connection *xconn;$/;"	m	struct:ssh_channel::__anon80::ssh_x11_channel	typeref:struct:ssh_channel::__anon80::ssh_x11_channel::X11Connection	file:
xdmseen	ssh.h	/^    tree234 *xdmseen;$/;"	m	struct:X11FakeAuth
xdmseen_cmp	x11fwd.c	/^static int xdmseen_cmp(void *a, void *b)$/;"	f	file:
xencs	charset/xenc.c	/^} xencs[] = {$/;"	v	typeref:struct:__anon1	file:
xfer_cleanup	sftp.c	/^void xfer_cleanup(struct fxp_xfer *xfer)$/;"	f
xfer_done	sftp.c	/^int xfer_done(struct fxp_xfer *xfer)$/;"	f
xfer_download_data	sftp.c	/^int xfer_download_data(struct fxp_xfer *xfer, void **buf, int *len)$/;"	f
xfer_download_gotpkt	sftp.c	/^int xfer_download_gotpkt(struct fxp_xfer *xfer, struct sftp_packet *pktin)$/;"	f
xfer_download_init	sftp.c	/^struct fxp_xfer *xfer_download_init(struct fxp_handle *fh, uint64 offset)$/;"	f
xfer_download_queue	sftp.c	/^void xfer_download_queue(struct fxp_xfer *xfer)$/;"	f
xfer_init	sftp.c	/^static struct fxp_xfer *xfer_init(struct fxp_handle *fh, uint64 offset)$/;"	f	file:
xfer_set_error	sftp.c	/^void xfer_set_error(struct fxp_xfer *xfer)$/;"	f
xfer_upload_data	sftp.c	/^void xfer_upload_data(struct fxp_xfer *xfer, char *buffer, int len)$/;"	f
xfer_upload_gotpkt	sftp.c	/^int xfer_upload_gotpkt(struct fxp_xfer *xfer, struct sftp_packet *pktin)$/;"	f
xfer_upload_init	sftp.c	/^struct fxp_xfer *xfer_upload_init(struct fxp_handle *fh, uint64 offset)$/;"	f
xfer_upload_ready	sftp.c	/^int xfer_upload_ready(struct fxp_xfer *xfer)$/;"	f
xfs	unix/gtkfont.c	/^    XFontStruct *xfs;$/;"	m	struct:x11font_individual	file:
xlat_uskbd2cyrllic	windows/winucs.c	/^wchar_t xlat_uskbd2cyrllic(int ch)$/;"	f
xlatlognam	logging.c	/^static Filename *xlatlognam(Filename *src, char *hostname, int port,$/;"	f	file:
xlfd_decompose	unix/gtkfont.c	/^static struct xlfd_decomposed *xlfd_decompose(const char *xlfd)$/;"	f	file:
xlfd_decomposed	unix/gtkfont.c	/^struct xlfd_decomposed {$/;"	s	file:
xlfd_recompose	unix/gtkfont.c	/^static char *xlfd_recompose(const struct xlfd_decomposed *dec)$/;"	f	file:
xoff	windows/winstuff.h	/^    int xoff;$/;"	m	struct:ctlpos
xor	sshsh512.c	27;"	d	file:
xpos	unix/gtkwin.c	/^    int xpos, ypos, gotpos, gravity;$/;"	m	struct:gui_data	file:
xrmtree	unix/uxstore.c	/^static tree234 *xrmtree = NULL;$/;"	v	file:
xterm_256_colour	terminal.h	/^    int xterm_256_colour;$/;"	m	struct:terminal_tag
xterm_extended_mouse	terminal.h	/^    int xterm_extended_mouse;$/;"	m	struct:terminal_tag
xterm_mouse	terminal.h	/^    int xterm_mouse;		       \/* send mouse messages to host *\/$/;"	m	struct:terminal_tag
xybolt	icons/mkicon.py	/^def xybolt(c1, c2, size, boltoffx=0, boltoffy=0, aux={}):$/;"	f
y	ssh.h	/^    Bignum p, q, g, y, x;$/;"	m	struct:dss_key
y	ssh.h	/^    Bignum x, y;$/;"	m	struct:ec_point
y	terminal.h	/^    int y, x;$/;"	m	struct:__anon109
y	unix/gtkcols.h	/^    gint x, y, w, h;           \/* used during an individual size computation *\/$/;"	m	struct:ColumnsChild_tag
yellowpix	icons/mkicon.py	/^    def yellowpix(value):$/;"	f
you-what	doc/Chapter1.html	/^<h2><a name="you-what"><\/a><a name="S1.1"><\/a>1.1 What are SSH, Telnet and Rlogin?<\/h2>$/;"	a
ypos	unix/gtkwin.c	/^    int xpos, ypos, gotpos, gravity;$/;"	m	struct:gui_data	file:
ypos	windows/winstuff.h	/^    int ypos, width;$/;"	m	struct:ctlpos
z	ssh.h	/^    Bignum z;  \/* Jacobian denominator *\/$/;"	m	struct:ec_point
zlib_compress_block	sshzlib.c	/^int zlib_compress_block(void *handle, unsigned char *block, int len,$/;"	f
zlib_compress_cleanup	sshzlib.c	/^void zlib_compress_cleanup(void *handle)$/;"	f
zlib_compress_init	sshzlib.c	/^void *zlib_compress_init(void)$/;"	f
zlib_decompress_block	sshzlib.c	/^int zlib_decompress_block(void *handle, unsigned char *block, int len,$/;"	f
zlib_decompress_cleanup	sshzlib.c	/^void zlib_decompress_cleanup(void *handle)$/;"	f
zlib_decompress_ctx	sshzlib.c	/^struct zlib_decompress_ctx {$/;"	s	file:
zlib_decompress_init	sshzlib.c	/^void *zlib_decompress_init(void)$/;"	f
zlib_disable_compression	sshzlib.c	/^static int zlib_disable_compression(void *handle)$/;"	f	file:
zlib_emit_char	sshzlib.c	/^static void zlib_emit_char(struct zlib_decompress_ctx *dctx, int c)$/;"	f	file:
zlib_freetable	sshzlib.c	/^static int zlib_freetable(struct zlib_table **ztab)$/;"	f	file:
zlib_huflookup	sshzlib.c	/^static int zlib_huflookup(unsigned long *bitsp, int *nbitsp,$/;"	f	file:
zlib_literal	sshzlib.c	/^static void zlib_literal(struct LZ77Context *ectx, unsigned char c)$/;"	f	file:
zlib_match	sshzlib.c	/^static void zlib_match(struct LZ77Context *ectx, int distance, int len)$/;"	f	file:
zlib_mkonetab	sshzlib.c	/^static struct zlib_table *zlib_mkonetab(int *codes, unsigned char *lengths,$/;"	f	file:
zlib_mktable	sshzlib.c	/^static struct zlib_table *zlib_mktable(unsigned char *lengths,$/;"	f	file:
zlib_table	sshzlib.c	/^struct zlib_table {$/;"	s	file:
zlib_tableentry	sshzlib.c	/^struct zlib_tableentry {$/;"	s	file:
